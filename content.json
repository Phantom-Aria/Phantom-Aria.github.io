{"meta":{"title":"我的小破站","subtitle":"","description":"","author":null,"url":"http://www.shelven.com","root":"/"},"pages":[{"title":"","date":"2022-04-09T14:14:36.602Z","updated":"2022-04-09T14:14:36.598Z","comments":true,"path":"404.html","permalink":"http://www.shelven.com/404.html","excerpt":"","text":"404 访问的页面走丢了！(⊙_⊙) 可能是输入地址有误或该地址已被删除 如果确认地址无误，请踢我一脚马上来改 TAT"},{"title":"","date":"2022-04-13T13:37:18.783Z","updated":"2022-04-13T13:37:18.770Z","comments":true,"path":"about/index.html","permalink":"http://www.shelven.com/about/index.html","excerpt":"","text":"感谢小伙伴的来访！ 小破站尚在搭建中，有好的想法请留言~ 本站成立的初衷是记录本人学习笔记，以及整合各种有用的生信网站和工具，方便查阅和学习。本人是前端小白指bug越修越多,如果本站有bug请留言，非常感谢!各位dalao高抬贵手，请不要DDOS攻击_(:з」∠)_"},{"title":"所有分类","date":"2022-04-13T09:37:32.168Z","updated":"2022-04-13T09:37:32.164Z","comments":true,"path":"categories/index.html","permalink":"http://www.shelven.com/categories/index.html","excerpt":"","text":"没有你感兴趣的？0.0 请留言提出你的宝贵意见~"},{"title":"","date":"2023-09-21T15:24:38.252Z","updated":"2023-09-21T15:24:36.000Z","comments":false,"path":"history/index.html","permalink":"http://www.shelven.com/history/index.html","excerpt":"","text":"2023-9-21 更新日志：bug修复 修复留言系统不提醒的bug 2023-9-18 更新日志：新建栏目 新建友链栏目，欢迎交换友链！ 2023-2-23 更新日志：修复bug 修复文章分类页和热门标签页跳转错误bug 2023-1-14 更新日志：修复bug和栏目更新 修复评论区显示错误bug 更新生信网站导航栏目 2022-12-11 更新日志：修复bug和栏目优化 本地创建API，修复看板娘显示bug 迁移资源，修复本站响应时间过长bug 优化底部播放器，解决两个播放器播放不同步问题 2022-12-4 更新日志：栏目新增和优化 新增网址导航栏人工智能板块 优化文章显示方式，修复摘要显示bug 2022-11-29 更新日志：栏目优化 优化结绳栏目，笔记全部归档 2022-09-17 更新日志：评论系统更换 由于不可抗力因素原评论系统数据已无法恢复，今后将吸取教训做好备份 评论系统重新部署到Vercel，本站不再部署任何项目到腾讯云开发 2022-05-24 更新日志：图床迁移 本站图床已全部迁移至本地服务器，出于稳定性考虑不再使用jsdelivr 优化和新增网址导航栏内容 2022-05-18 更新日志：新增栏目 新增网址导航栏目，优化导航栏 2022-04-29 更新日志：图床迁移 github图床已挂，2022年4月29日之后本站图床将逐渐迁移本地 2022-04-19 更新日志：图床迁移 优化相册栏目 背景图片图床迁移至本地 2022-04-18 更新日志：新增栏目 新增相册栏目 2022-04-16 更新日志：看板娘优化 看板娘模块显示优化 2022-04-15 更新日志：页面优化 网站页脚优化 2022-04-14 更新日志：bug修复 修复文章永久链接中文乱码bug，已更改永久链接格式 修复部分页面强制重新加载bug，修改了部分pjax代码 修复aplayer播放器切换页面后中断播放bug，同上 2022-04-13 更新日志：bug修复和CDN加速 修复主页轮播图片空白bug，修改了部分parallax代码，已优化图片加载方式 本站已加入又拍云联盟，站点已进行CDN加速 小破站正式对外开放！ 2022-04-12 更新日志：服务器迁移 服务器迁移至本地 本站已绑定www.shelven.com域名 本站已安装SSL安全证书 2022-04-11 更新日志：界面优化 添加pjax插件，优化部分页面加载速度 百度统计维护，5月31日恢复接入 bug:暂时无法全站无刷新加载 2022-04-10 更新日志：功能添加 添加rss订阅功能 新增结绳栏目 新增站内搜索功能 接入百度统计 2022-04-09 更新日志：功能添加 新增live2D看板娘模块 接入腾讯云开发和twikoo评论系统 启用MFA，新增留言提醒和QQ邮箱头像抓取功能 2022-04-08 更新日志：页面美化 更改鼠标样式 更改侧边栏配置 新增网页加载条 2022-04-07 更新日志：页面美化和功能更新 重设导航栏 重设封面 更改右键菜单功能 2022-04-06 更新日志：功能添加 添加背景音乐功能，接入aplayer播放器 添加网站统计访客数功能，接入LeanCloud 添加文章字数统计功能 2022-04-05 更新日志：页面美化 导航栏设计和美化 卡片添加透明度 优化主题背景图片 2022-04-04 更新日志：小破站成立啦！ 使用Hexo框架，volantis主题搭建网站 github建库，代码托管 建立图床，使用jsDelivr进行CDN加速"},{"title":"","date":"2023-07-04T10:04:18.318Z","updated":"2023-07-04T10:04:16.000Z","comments":true,"path":"more/404.html","permalink":"http://www.shelven.com/more/404.html","excerpt":"","text":"404 访问的页面走丢了！(⊙_⊙) 可能是输入地址有误或该地址已被删除 如果确认地址无误，请踢我一脚马上来改 TAT"},{"title":"","date":"2022-04-13T07:44:09.805Z","updated":"2022-04-13T07:44:09.801Z","comments":true,"path":"mylist/index.html","permalink":"http://www.shelven.com/mylist/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2022-04-13T09:37:59.531Z","updated":"2022-04-13T09:37:59.527Z","comments":true,"path":"tags/index.html","permalink":"http://www.shelven.com/tags/index.html","excerpt":"","text":"没有你感兴趣的？0.0 请留言提出你的宝贵意见~"},{"title":"壁纸分享(点击查看大图)","date":"2022-04-19T06:40:53.941Z","updated":"2022-04-19T06:40:53.937Z","comments":true,"path":"photo/index.html","permalink":"http://www.shelven.com/photo/index.html","excerpt":"","text":""},{"title":"实时微博热搜榜","date":"2022-04-27T18:04:09.706Z","updated":"2022-04-27T18:04:09.701Z","comments":true,"path":"weibo/index.html","permalink":"http://www.shelven.com/weibo/index.html","excerpt":"","text":""},{"title":"","date":"2022-12-01T15:33:37.918Z","updated":"2022-12-01T15:33:36.000Z","comments":true,"path":"Bioinformatics/index.html","permalink":"http://www.shelven.com/Bioinformatics/index.html","excerpt":"生信网站快速导航 本页面暂时无法使用站内搜索 绝对不是我懒得改代码 搜索请直接使用ctrl + F","text":"生信网站快速导航 本页面暂时无法使用站内搜索 绝对不是我懒得改代码 搜索请直接使用ctrl + F 交换友链请参照下列格式并留言 名字|name: Phantom链接地址|link: http://www.shelven.com/头像地址|avatar: https://www.shelven.com/tuchuang/avatar.jpg描述|desc: 博学而笃志，切问而近思"},{"title":"","date":"2023-09-18T10:44:51.793Z","updated":"2023-09-18T10:44:49.000Z","comments":true,"path":"AI/index.html","permalink":"http://www.shelven.com/AI/index.html","excerpt":"人工智能快速导航 和前面生信网站导航一样，暂时无法使用站内搜索 这一页收藏机器学习和人工智能相关网站","text":"人工智能快速导航 和前面生信网站导航一样，暂时无法使用站内搜索 这一页收藏机器学习和人工智能相关网站 人工智能常用文档PyTorch相关 Github仓库 PyTorch官网 PyTorch中文文档 OpenCV相关 Github仓库 OpenCV官网 OpenCV中文论坛 OpenCV官方文档 Numpy相关 Github仓库 Numpy官网 Numpy官方文档 Pandas相关 Github仓库 Pandas中文官网 Matplotlib相关 Github仓库 Matplotlib官网 Matplotlib中文文档 常用软件源 清华大学开源软件镜像站 阿里巴巴开源镜像站 豆瓣镜像源 北京外国语大学开源软件镜像站 算力平台 Colaboratory（推荐） Kaggle（推荐） 深度学习雾计算平台 矩池云 数据集各种类型的数据存储库 Kaggle Datasets Google Dataset Search Papers With Code DatasetList 格物钛 飞桨AI Studio 计算机视觉（CV）相关 ImageNet MNIST IMDB-WIKI VisualData 自然语言处理（NLP）相关 M-AILABS Speech Dataset LJ Speech Dataset LibriSpeech ASR corpus 标贝中文标准女声音库 人工智能竞赛网站 Kaggle 和鲸社区 DataFountain 华为云开发者大赛 阿里云天池 交换友链请参照下列格式并留言 名字|name: Phantom链接地址|link: http://www.shelven.com/头像地址|avatar: https://www.shelven.com/tuchuang/avatar.jpg描述|desc: 博学而笃志，切问而近思"},{"title":"","date":"2023-09-22T12:35:54.203Z","updated":"2023-09-22T12:35:53.000Z","comments":true,"path":"Friends/index.html","permalink":"http://www.shelven.com/Friends/index.html","excerpt":"友链 专门开了一个网址栏用来放友链，欢迎一起交流学习~ 请按照下方样式留言，本人检查无误后会加进来哒 Phantom博学而笃志，切问而近思酷小呵爱分享的酷小呵","text":"友链 专门开了一个网址栏用来放友链，欢迎一起交流学习~ 请按照下方样式留言，本人检查无误后会加进来哒 Phantom博学而笃志，切问而近思酷小呵爱分享的酷小呵 交换友链请参照下列格式并留言 名字|name: Phantom链接地址|link: http://www.shelven.com/头像地址|avatar: https://www.shelven.com/tuchuang/avatar.jpg页面截图|screenshot: https://www.shelven.com/tuchuang/screen.jpg描述|desc: 博学而笃志，切问而近思"},{"title":"","date":"2023-10-06T09:03:17.795Z","updated":"2023-10-06T06:57:37.000Z","comments":true,"path":"mypage/css/app.5388e39c.css","permalink":"http://www.shelven.com/mypage/css/app.5388e39c.css","excerpt":"","text":"label[data-v-670c0e2e] { cursor: pointer; line-height: 1.2; display: block } form[data-v-670c0e2e] input { font-family: Courier New, Courier, monospace } [data-v-670c0e2e] .um-config-dialog { max-width: 90%; width: 40em } [data-v-701d8fe2] .um-edit-dialog { max-width: 90%; width: 30em } .unselectable { -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none } .btn-like, .edit-item i, .music-cover i { cursor: pointer } .btn-like:active, .edit-item i:active, .music-cover i:active { -webkit-transform: translateY(2px); transform: translateY(2px) } .mt-0 { margin-top: 0 !important } .mb-0 { margin-bottom: 0 !important } .ml-0 { margin-left: 0 !important } .mr-0 { margin-right: 0 !important } .m-0 { margin: 0 !important } .pt-0 { padding-top: 0 !important } .pb-0 { padding-bottom: 0 !important } .pl-0 { padding-left: 0 !important } .pr-0 { padding-right: 0 !important } .p-0 { padding: 0 !important } .mt-1 { margin-top: 5px !important } .mb-1 { margin-bottom: 5px !important } .ml-1 { margin-left: 5px !important } .mr-1 { margin-right: 5px !important } .m-1 { margin: 5px !important } .pt-1 { padding-top: 5px !important } .pb-1 { padding-bottom: 5px !important } .pl-1 { padding-left: 5px !important } .pr-1 { padding-right: 5px !important } .p-1 { padding: 5px !important } .mt-2 { margin-top: 10px !important } .mb-2 { margin-bottom: 10px !important } .ml-2 { margin-left: 10px !important } .mr-2 { margin-right: 10px !important } .m-2 { margin: 10px !important } .pt-2 { padding-top: 10px !important } .pb-2 { padding-bottom: 10px !important } .pl-2 { padding-left: 10px !important } .pr-2 { padding-right: 10px !important } .p-2 { padding: 10px !important } .mt-3 { margin-top: 15px !important } .mb-3 { margin-bottom: 15px !important } .ml-3 { margin-left: 15px !important } .mr-3 { margin-right: 15px !important } .m-3 { margin: 15px !important } .pt-3 { padding-top: 15px !important } .pb-3 { padding-bottom: 15px !important } .pl-3 { padding-left: 15px !important } .pr-3 { padding-right: 15px !important } .p-3 { padding: 15px !important } .mt-4 { margin-top: 20px !important } .mb-4 { margin-bottom: 20px !important } .ml-4 { margin-left: 20px !important } .mr-4 { margin-right: 20px !important } .m-4 { margin: 20px !important } .pt-4 { padding-top: 20px !important } .pb-4 { padding-bottom: 20px !important } .pl-4 { padding-left: 20px !important } .pr-4 { padding-right: 20px !important } .p-4 { padding: 20px !important } .mt-5 { margin-top: 25px !important } .mb-5 { margin-bottom: 25px !important } .ml-5 { margin-left: 25px !important } .mr-5 { margin-right: 25px !important } .m-5 { margin: 25px !important } .pt-5 { padding-top: 25px !important } .pb-5 { padding-bottom: 25px !important } .pl-5 { padding-left: 25px !important } .pr-5 { padding-right: 25px !important } .p-5 { padding: 25px !important } .mt-6 { margin-top: 30px !important } .mb-6 { margin-bottom: 30px !important } .ml-6 { margin-left: 30px !important } .mr-6 { margin-right: 30px !important } .m-6 { margin: 30px !important } .pt-6 { padding-top: 30px !important } .pb-6 { padding-bottom: 30px !important } .pl-6 { padding-left: 30px !important } .pr-6 { padding-right: 30px !important } .p-6 { padding: 30px !important } .mt-7 { margin-top: 35px !important } .mb-7 { margin-bottom: 35px !important } .ml-7 { margin-left: 35px !important } .mr-7 { margin-right: 35px !important } .m-7 { margin: 35px !important } .pt-7 { padding-top: 35px !important } .pb-7 { padding-bottom: 35px !important } .pl-7 { padding-left: 35px !important } .pr-7 { padding-right: 35px !important } .p-7 { padding: 35px !important } .mt-8 { margin-top: 40px !important } .mb-8 { margin-bottom: 40px !important } .ml-8 { margin-left: 40px !important } .mr-8 { margin-right: 40px !important } .m-8 { margin: 40px !important } .pt-8 { padding-top: 40px !important } .pb-8 { padding-bottom: 40px !important } .pl-8 { padding-left: 40px !important } .pr-8 { padding-right: 40px !important } .p-8 { padding: 40px !important } .el-checkbox.is-bordered { border-radius: 6px } .el-checkbox.is-bordered:hover { border-color: #409eff } .el-checkbox.is-bordered:hover .el-checkbox__label { color: #409eff } .el-checkbox.is-bordered .el-checkbox__input.is-focus .el-checkbox__inner { border-color: #dcdfe6 } .el-checkbox.is-bordered.is-checked { background-color: #409eff } .el-checkbox.is-bordered.is-checked .el-checkbox__label { color: #fff } .el-checkbox.is-bordered.is-checked .el-checkbox__inner { border-color: #fff; background-color: #fff } .el-checkbox.is-bordered.is-checked .el-checkbox__inner:after { border-color: #409eff } .el-button { border-radius: 6px } .el-upload-dragger:hover { background-color: rgba(64, 158, 255, .1) } .el-upload__tip { text-align: center; color: #999 } .el-dialog { border-radius: 5px } .el-dialog.el-dialog--center .el-dialog__body { padding: 25px 25px 15px } .el-dialog.el-dialog--center .el-dialog__footer { padding: 10px 20px 30px } @media(prefers-color-scheme:dark) { .el-radio__label { color: #e6e6e6 } .el-radio__input { color: #999 } .el-radio__input .el-radio__inner { border-color: #404040; background-color: #333 } .el-radio.is-checked .el-radio__inner { background-color: #409eff } .el-radio.is-checked .el-radio__label { font-weight: 700 } .el-checkbox.is-bordered { border-color: #404040; color: #e6e6e6; background-color: #333 } .el-checkbox.is-bordered .el-checkbox__inner { background-color: #4d4d4d; border-color: #8c8c8c } .el-checkbox.is-bordered:hover { border-color: #8c8c8c } .el-checkbox.is-bordered:hover .el-checkbox__inner { background-color: #4d4d4d; border-color: #8c8c8c } .el-checkbox.is-bordered:hover .el-checkbox__label { color: #999 } .el-checkbox.is-bordered.is-checked { background-color: #409eff } .el-checkbox.is-bordered.is-checked .el-checkbox__inner { border-color: #fff } .el-checkbox.is-bordered.is-checked .el-checkbox__label { color: #fff; font-weight: 700 } .el-checkbox.is-bordered.is-checked:hover { border-color: #409eff } .el-checkbox.is-bordered.is-checked:hover .el-checkbox__inner { background-color: #fff } .el-button { background-color: #333; border-color: #404040; color: #e6e6e6 } .el-button:active { -webkit-transform: translateY(2px); transform: translateY(2px) } .el-button--default.is-plain { background-color: #333 } .el-button--default.is-plain:hover { background-color: #409eff; border-color: #409eff; color: #fff } .el-button--default.is-circle { background-color: #215285; border-color: #215285 } .el-button--default.is-circle:hover { background-color: #409eff; border-color: #409eff; color: #fff } .el-button--success.is-plain { background-color: #333 } .el-button--success.is-plain:hover { background-color: #85ce61; border-color: #85ce61; color: #fff } .el-button--success.is-circle { background-color: #455c3a; border-color: #455c3a } .el-button--success.is-circle:hover { background-color: #85ce61; border-color: #85ce61; color: #fff } .el-button--danger.is-plain { border-color: #404040; background-color: #333 } .el-button--danger.is-plain:hover { background-color: #f56c6c; border-color: #f56c6c } .el-button--danger.is-circle { background-color: #893f3f; border-color: #893f3f } .el-button--danger.is-circle:hover { background-color: #f56c6c; border-color: #f56c6c; color: #fff } .el-upload__tip { color: #999 } .el-upload-dragger { background-color: #212121; border-color: #404040 } .el-upload-dragger .el-upload__text { color: #999 } .el-upload-dragger:hover { background: #2e2e2e; border-color: #8c8c8c } .el-table { background-color: #212121 } .el-table:before { content: none } .el-table__header th { border-bottom-color: #404040 !important } .el-table th.el-table__cell { background-color: #2e2e2e; color: #999 } .el-table td { border-bottom-color: #404040 !important } .el-table tr { background-color: #212121; color: #e6e6e6 } .el-table tr:hover td { background-color: #2e2e2e !important } .el-notification { background-color: #4d4d4d; border-color: #404040 } .el-notification__title { color: #fff } .el-notification__content { color: #999 } .el-dialog { background-color: #262626 } .el-dialog .el-dialog__body, .el-dialog .el-dialog__header .el-dialog__title { color: #e6e6e6 } .el-dialog .el-dialog__body .el-input .el-input__inner { border-color: #404040; color: #e6e6e6; background-color: #333 } .el-dialog .el-dialog__body .el-input .el-input__count .el-input__count-inner { background-color: transparent } .el-dialog .item-desc { color: #999 } } body { margin: 0; padding: 0; border: 0; -webkit-box-sizing: border-box; box-sizing: border-box; font-family: PingFang SC, 微软雅黑, Helvetica Neue, Helvetica, Hiragino Sans GB, Microsoft YaHei, Arial, sans-serif; font-size: 14px; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale } #app { text-align: center; color: #2c3e50; padding: 30px } #app-control, .table-content, audio { margin-top: 20px } .music-cover { margin-bottom: 20px; display: -webkit-box; display: -ms-flexbox; display: flex; -webkit-box-pack: center; -ms-flex-pack: center; justify-content: center; -webkit-box-align: center; -ms-flex-align: center; align-items: center; -webkit-box-orient: vertical; -webkit-box-direction: normal; -ms-flex-flow: column nowrap; flex-flow: column nowrap } .music-cover i { margin-top: 10px } .music-cover i:hover { color: #409eff } .music-cover .el-image { padding: 5px; border-radius: 5px; border: 1px solid #dcdfe6; width: 150px; height: 150px } .edit-item { display: -webkit-box; display: -ms-flexbox; display: flex; -webkit-box-pack: start; -ms-flex-pack: start; justify-content: flex-start; -webkit-box-align: center; -ms-flex-align: center; align-items: center } .edit-item .label { font-weight: 700; width: 80px; text-align: right; -ms-flex-negative: 0; flex-shrink: 0 } .edit-item .value { padding: 5px 0; height: 20px; line-height: 20px; margin-left: 10px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis } .edit-item .input { margin-left: 10px } .edit-item .input input { font-family: inherit; height: 30px; line-height: 20px; border-radius: 0; border: none; border-bottom: 1px solid #dcdfe6; padding: 5px 5px } .edit-item i { margin-left: 10px } .edit-item i:hover { color: #409eff } .tip { margin-top: 20px; color: #999; font-size: 12px } .tip a { color: inherit } #app-footer { margin-top: 40px; text-align: center; color: #777; line-height: 1.3; font-size: 12px } #app-footer a { padding-left: .2rem; padding-right: .2rem; color: #5e5e5e } #app-footer a:hover { color: #409eff } .update-info { border-radius: 8px; overflow: hidden; border: 1px solid #dcdfe6; margin: 10px 0 } .update-info .update-title { font-size: 13px; padding: 3px 10px; background-color: #dcdfe6 } .update-info .update-content { font-size: 12px; line-height: 1.5; padding: 5px 8px } @media(prefers-color-scheme:dark) { #app { color: #999 } body { background-color: #1a1a1a } .music-cover i:hover { color: #409eff } .music-cover .el-image { border: 1px solid #404040 } .edit-item .input input { background-color: transparent !important; border-bottom: 1px solid #404040 } .edit-item i:hover { color: #409eff } #app-footer a { color: #a6a6a6 } #app-footer a:hover { color: #409eff } .update-info { border: 1px solid #333 !important } .update-info .update-title { color: #e6e6e6; background-color: #333 !important } .update-info .update-content { color: #999; padding: 10px } }"},{"title":"","date":"2023-10-06T09:03:18.309Z","updated":"2023-10-06T06:58:16.000Z","comments":true,"path":"mypage/css/chunk-vendors.094863c6.css","permalink":"http://www.shelven.com/mypage/css/chunk-vendors.094863c6.css","excerpt":"","text":".el-button, .el-input__inner { -webkit-appearance: none; outline: 0 } .el-message-box, .el-popup-parent--hidden { overflow: hidden } .el-message-box { display: inline-block; width: 420px; padding-bottom: 10px; vertical-align: middle; background-color: #fff; border-radius: 4px; border: 1px solid #ebeef5; font-size: 18px; -webkit-box-shadow: 0 2px 12px 0 rgba(0, 0, 0, .1); box-shadow: 0 2px 12px 0 rgba(0, 0, 0, .1); text-align: left; -webkit-backface-visibility: hidden; backface-visibility: hidden } .el-message-box__wrapper { position: fixed; top: 0; bottom: 0; left: 0; right: 0; text-align: center } .el-message-box__wrapper:after { content: \"\"; display: inline-block; height: 100%; width: 0; vertical-align: middle } .el-message-box__header { position: relative; padding: 15px 15px 10px } .el-message-box__title { padding-left: 0; margin-bottom: 0; font-size: 18px; line-height: 1; color: #303133 } .el-message-box__headerbtn { position: absolute; top: 15px; right: 15px; padding: 0; border: none; outline: 0; background: 0 0; font-size: 16px; cursor: pointer } .el-message-box__headerbtn .el-message-box__close { color: #909399 } .el-message-box__headerbtn:focus .el-message-box__close, .el-message-box__headerbtn:hover .el-message-box__close { color: #409eff } .el-message-box__content { padding: 10px 15px; color: #606266; font-size: 14px } .el-message-box__container { position: relative } .el-message-box__input { padding-top: 15px } .el-message-box__input input.invalid, .el-message-box__input input.invalid:focus { border-color: #f56c6c } .el-message-box__status { position: absolute; top: 50%; -webkit-transform: translateY(-50%); transform: translateY(-50%); font-size: 24px !important } .el-message-box__status:before { padding-left: 1px } .el-message-box__status+.el-message-box__message { padding-left: 36px; padding-right: 12px } .el-message-box__status.el-icon-success { color: #67c23a } .el-message-box__status.el-icon-info { color: #909399 } .el-message-box__status.el-icon-warning { color: #e6a23c } .el-message-box__status.el-icon-error { color: #f56c6c } .el-message-box__message { margin: 0 } .el-message-box__message p { margin: 0; line-height: 24px } .el-message-box__errormsg { color: #f56c6c; font-size: 12px; min-height: 18px; margin-top: 2px } .el-message-box__btns { padding: 5px 15px 0; text-align: right } .el-message-box__btns button:nth-child(2) { margin-left: 10px } .el-message-box__btns-reverse { -webkit-box-orient: horizontal; -webkit-box-direction: reverse; -ms-flex-direction: row-reverse; flex-direction: row-reverse } .el-message-box--center { padding-bottom: 30px } .el-message-box--center .el-message-box__header { padding-top: 30px } .el-message-box--center .el-message-box__title { position: relative; display: -webkit-box; display: -ms-flexbox; display: flex; -webkit-box-align: center; -ms-flex-align: center; align-items: center; -webkit-box-pack: center; -ms-flex-pack: center; justify-content: center } .el-message-box--center .el-message-box__status { position: relative; top: auto; padding-right: 5px; text-align: center; -webkit-transform: translateY(-1px); transform: translateY(-1px) } .el-message-box--center .el-message-box__message { margin-left: 0 } .el-message-box--center .el-message-box__btns, .el-message-box--center .el-message-box__content { text-align: center } .el-message-box--center .el-message-box__content { padding-left: 27px; padding-right: 27px } .msgbox-fade-enter-active { -webkit-animation: msgbox-fade-in .3s; animation: msgbox-fade-in .3s } .msgbox-fade-leave-active { -webkit-animation: msgbox-fade-out .3s; animation: msgbox-fade-out .3s } @-webkit-keyframes msgbox-fade-in { 0% { -webkit-transform: translate3d(0, -20px, 0); transform: translate3d(0, -20px, 0); opacity: 0 } to { -webkit-transform: translateZ(0); transform: translateZ(0); opacity: 1 } } @keyframes msgbox-fade-in { 0% { -webkit-transform: translate3d(0, -20px, 0); transform: translate3d(0, -20px, 0); opacity: 0 } to { -webkit-transform: translateZ(0); transform: translateZ(0); opacity: 1 } } @-webkit-keyframes msgbox-fade-out { 0% { -webkit-transform: translateZ(0); transform: translateZ(0); opacity: 1 } to { -webkit-transform: translate3d(0, -20px, 0); transform: translate3d(0, -20px, 0); opacity: 0 } } @keyframes msgbox-fade-out { 0% { -webkit-transform: translateZ(0); transform: translateZ(0); opacity: 1 } to { -webkit-transform: translate3d(0, -20px, 0); transform: translate3d(0, -20px, 0); opacity: 0 } } .el-fade-in-enter, .el-fade-in-leave-active, .el-fade-in-linear-enter, .el-fade-in-linear-leave, .el-fade-in-linear-leave-active, .fade-in-linear-enter, .fade-in-linear-leave, .fade-in-linear-leave-active { opacity: 0 } .el-fade-in-linear-enter-active, .el-fade-in-linear-leave-active, .fade-in-linear-enter-active, .fade-in-linear-leave-active { -webkit-transition: opacity .2s linear; transition: opacity .2s linear } .el-fade-in-enter-active, .el-fade-in-leave-active, .el-zoom-in-center-enter-active, .el-zoom-in-center-leave-active { -webkit-transition: all .3s cubic-bezier(.55, 0, .1, 1); transition: all .3s cubic-bezier(.55, 0, .1, 1) } .el-zoom-in-center-enter, .el-zoom-in-center-leave-active { opacity: 0; -webkit-transform: scaleX(0); transform: scaleX(0) } .el-zoom-in-top-enter-active, .el-zoom-in-top-leave-active { opacity: 1; -webkit-transform: scaleY(1); transform: scaleY(1); -webkit-transition: opacity .3s cubic-bezier(.23, 1, .32, 1), -webkit-transform .3s cubic-bezier(.23, 1, .32, 1); transition: opacity .3s cubic-bezier(.23, 1, .32, 1), -webkit-transform .3s cubic-bezier(.23, 1, .32, 1); transition: transform .3s cubic-bezier(.23, 1, .32, 1), opacity .3s cubic-bezier(.23, 1, .32, 1); transition: transform .3s cubic-bezier(.23, 1, .32, 1), opacity .3s cubic-bezier(.23, 1, .32, 1), -webkit-transform .3s cubic-bezier(.23, 1, .32, 1); -webkit-transform-origin: center top; transform-origin: center top } .el-zoom-in-top-enter, .el-zoom-in-top-leave-active { opacity: 0; -webkit-transform: scaleY(0); transform: scaleY(0) } .el-zoom-in-bottom-enter-active, .el-zoom-in-bottom-leave-active { opacity: 1; -webkit-transform: scaleY(1); transform: scaleY(1); -webkit-transition: opacity .3s cubic-bezier(.23, 1, .32, 1), -webkit-transform .3s cubic-bezier(.23, 1, .32, 1); transition: opacity .3s cubic-bezier(.23, 1, .32, 1), -webkit-transform .3s cubic-bezier(.23, 1, .32, 1); transition: transform .3s cubic-bezier(.23, 1, .32, 1), opacity .3s cubic-bezier(.23, 1, .32, 1); transition: transform .3s cubic-bezier(.23, 1, .32, 1), opacity .3s cubic-bezier(.23, 1, .32, 1), -webkit-transform .3s cubic-bezier(.23, 1, .32, 1); -webkit-transform-origin: center bottom; transform-origin: center bottom } .el-zoom-in-bottom-enter, .el-zoom-in-bottom-leave-active { opacity: 0; -webkit-transform: scaleY(0); transform: scaleY(0) } .el-zoom-in-left-enter-active, .el-zoom-in-left-leave-active { opacity: 1; -webkit-transform: scale(1); transform: scale(1); -webkit-transition: opacity .3s cubic-bezier(.23, 1, .32, 1), -webkit-transform .3s cubic-bezier(.23, 1, .32, 1); transition: opacity .3s cubic-bezier(.23, 1, .32, 1), -webkit-transform .3s cubic-bezier(.23, 1, .32, 1); transition: transform .3s cubic-bezier(.23, 1, .32, 1), opacity .3s cubic-bezier(.23, 1, .32, 1); transition: transform .3s cubic-bezier(.23, 1, .32, 1), opacity .3s cubic-bezier(.23, 1, .32, 1), -webkit-transform .3s cubic-bezier(.23, 1, .32, 1); -webkit-transform-origin: top left; transform-origin: top left } .el-zoom-in-left-enter, .el-zoom-in-left-leave-active { opacity: 0; -webkit-transform: scale(.45); transform: scale(.45) } .collapse-transition { -webkit-transition: height .3s ease-in-out, padding-top .3s ease-in-out, padding-bottom .3s ease-in-out; transition: height .3s ease-in-out, padding-top .3s ease-in-out, padding-bottom .3s ease-in-out } .horizontal-collapse-transition { -webkit-transition: width .3s ease-in-out, padding-left .3s ease-in-out, padding-right .3s ease-in-out; transition: width .3s ease-in-out, padding-left .3s ease-in-out, padding-right .3s ease-in-out } .el-list-enter-active, .el-list-leave-active { -webkit-transition: all 1s; transition: all 1s } .el-list-enter, .el-list-leave-active { opacity: 0; -webkit-transform: translateY(-30px); transform: translateY(-30px) } .el-opacity-transition { -webkit-transition: opacity .3s cubic-bezier(.55, 0, .1, 1); transition: opacity .3s cubic-bezier(.55, 0, .1, 1) } .el-notification { display: -webkit-box; display: -ms-flexbox; display: flex; width: 330px; padding: 14px 26px 14px 13px; border-radius: 8px; -webkit-box-sizing: border-box; box-sizing: border-box; border: 1px solid #ebeef5; position: fixed; background-color: #fff; -webkit-box-shadow: 0 2px 12px 0 rgba(0, 0, 0, .1); box-shadow: 0 2px 12px 0 rgba(0, 0, 0, .1); -webkit-transition: opacity .3s, left .3s, right .3s, top .4s, bottom .3s, -webkit-transform .3s; transition: opacity .3s, left .3s, right .3s, top .4s, bottom .3s, -webkit-transform .3s; transition: opacity .3s, transform .3s, left .3s, right .3s, top .4s, bottom .3s; transition: opacity .3s, transform .3s, left .3s, right .3s, top .4s, bottom .3s, -webkit-transform .3s; overflow: hidden } .el-notification.right { right: 16px } .el-notification.left { left: 16px } .el-notification__group { margin-left: 13px; margin-right: 8px } .el-notification__title { font-weight: 700; font-size: 16px; color: #303133; margin: 0 } .el-notification__content { font-size: 14px; line-height: 21px; margin: 6px 0 0; color: #606266; text-align: justify } .el-notification__content p { margin: 0 } .el-notification__icon { height: 24px; width: 24px; font-size: 24px } .el-notification__closeBtn { position: absolute; top: 18px; right: 15px; cursor: pointer; color: #909399; font-size: 16px } .el-notification__closeBtn:hover { color: #606266 } .el-notification .el-icon-success { color: #67c23a } .el-notification .el-icon-error { color: #f56c6c } .el-notification .el-icon-info { color: #909399 } .el-notification .el-icon-warning { color: #e6a23c } .el-notification-fade-enter.right { right: 0; -webkit-transform: translateX(100%); transform: translateX(100%) } .el-notification-fade-enter.left { left: 0; -webkit-transform: translateX(-100%); transform: translateX(-100%) } .el-notification-fade-leave-active { opacity: 0 } .el-progress-bar, .el-progress-bar__inner:after, .el-progress-bar__innerText { display: inline-block; vertical-align: middle } .el-radio, .el-radio--medium.is-bordered .el-radio__label { font-size: 14px } .el-radio, .el-radio__input { white-space: nowrap; line-height: 1; outline: 0 } .el-radio, .el-radio__inner, .el-radio__input { position: relative; display: inline-block } .el-radio { color: #606266; font-weight: 500; cursor: pointer; margin-right: 30px; -moz-user-select: none; -webkit-user-select: none; -ms-user-select: none } .el-radio.is-bordered { padding: 12px 20px 0 10px; border-radius: 4px; border: 1px solid #dcdfe6; -webkit-box-sizing: border-box; box-sizing: border-box; height: 40px } .el-radio.is-bordered.is-checked { border-color: #409eff } .el-radio.is-bordered.is-disabled { cursor: not-allowed; border-color: #ebeef5 } .el-radio__input.is-disabled .el-radio__inner, .el-radio__input.is-disabled.is-checked .el-radio__inner { background-color: #f5f7fa; border-color: #e4e7ed } .el-radio.is-bordered+.el-radio.is-bordered { margin-left: 10px } .el-radio--medium.is-bordered { padding: 10px 20px 0 10px; border-radius: 4px; height: 36px } .el-radio--mini.is-bordered .el-radio__label, .el-radio--small.is-bordered .el-radio__label { font-size: 12px } .el-radio--medium.is-bordered .el-radio__inner { height: 14px; width: 14px } .el-radio--small.is-bordered { padding: 8px 15px 0 10px; border-radius: 3px; height: 32px } .el-radio--small.is-bordered .el-radio__inner { height: 12px; width: 12px } .el-radio--mini.is-bordered { padding: 6px 15px 0 10px; border-radius: 3px; height: 28px } .el-radio--mini.is-bordered .el-radio__inner { height: 12px; width: 12px } .el-radio:last-child { margin-right: 0 } .el-radio__input { cursor: pointer; vertical-align: middle } .el-radio__input.is-disabled .el-radio__inner { cursor: not-allowed } .el-radio__input.is-disabled .el-radio__inner:after { cursor: not-allowed; background-color: #f5f7fa } .el-radio__input.is-disabled .el-radio__inner+.el-radio__label { cursor: not-allowed } .el-radio__input.is-disabled.is-checked .el-radio__inner:after { background-color: #c0c4cc } .el-radio__input.is-disabled+span.el-radio__label { color: #c0c4cc; cursor: not-allowed } .el-radio__input.is-checked .el-radio__inner { border-color: #409eff; background: #409eff } .el-radio__input.is-checked .el-radio__inner:after { -webkit-transform: translate(-50%, -50%) scale(1); transform: translate(-50%, -50%) scale(1) } .el-radio__input.is-checked+.el-radio__label { color: #409eff } .el-radio__input.is-focus .el-radio__inner { border-color: #409eff } .el-radio__inner { border: 1px solid #dcdfe6; border-radius: 100%; width: 14px; height: 14px; background-color: #fff; cursor: pointer; -webkit-box-sizing: border-box; box-sizing: border-box } .el-radio__inner:hover { border-color: #409eff } .el-radio__inner:after { width: 4px; height: 4px; border-radius: 100%; background-color: #fff; content: \"\"; position: absolute; left: 50%; top: 50%; -webkit-transform: translate(-50%, -50%) scale(0); transform: translate(-50%, -50%) scale(0); -webkit-transition: -webkit-transform .15s ease-in; transition: -webkit-transform .15s ease-in; transition: transform .15s ease-in; transition: transform .15s ease-in, -webkit-transform .15s ease-in } .el-radio__original { opacity: 0; outline: 0; position: absolute; z-index: -1; top: 0; left: 0; right: 0; bottom: 0; margin: 0 } .el-radio:focus:not(.is-focus):not(:active):not(.is-disabled) .el-radio__inner { -webkit-box-shadow: 0 0 2px 2px #409eff; box-shadow: 0 0 2px 2px #409eff } .el-radio__label { font-size: 14px; padding-left: 10px } .el-checkbox-button__inner, .el-checkbox__input { white-space: nowrap; vertical-align: middle; outline: 0 } .el-checkbox { white-space: nowrap } .el-upload-cover__title, .el-upload-list__item-name { overflow: hidden; text-overflow: ellipsis; white-space: nowrap } .el-progress { position: relative; line-height: 1 } .el-progress__text { font-size: 14px; color: #606266; display: inline-block; vertical-align: middle; margin-left: 10px; line-height: 1 } .el-progress__text i { vertical-align: middle; display: block } .el-progress--circle, .el-progress--dashboard { display: inline-block } .el-progress--circle .el-progress__text, .el-progress--dashboard .el-progress__text { position: absolute; top: 50%; left: 0; width: 100%; text-align: center; margin: 0; -webkit-transform: translateY(-50%); transform: translateY(-50%) } .el-progress--circle .el-progress__text i, .el-progress--dashboard .el-progress__text i { vertical-align: middle; display: inline-block } .el-progress--without-text .el-progress__text { display: none } .el-progress--without-text .el-progress-bar { padding-right: 0; margin-right: 0; display: block } .el-progress--text-inside .el-progress-bar { padding-right: 0; margin-right: 0 } .el-progress.is-success .el-progress-bar__inner { background-color: #67c23a } .el-progress.is-success .el-progress__text { color: #67c23a } .el-progress.is-warning .el-progress-bar__inner { background-color: #e6a23c } .el-progress.is-warning .el-progress__text { color: #e6a23c } .el-progress.is-exception .el-progress-bar__inner { background-color: #f56c6c } .el-progress.is-exception .el-progress__text { color: #f56c6c } .el-progress-bar { padding-right: 50px; display: inline-block; vertical-align: middle; width: 100%; margin-right: -55px; -webkit-box-sizing: border-box; box-sizing: border-box } .el-upload--picture-card, .el-upload-dragger { -webkit-box-sizing: border-box; cursor: pointer } .el-progress-bar__outer { height: 6px; border-radius: 100px; background-color: #ebeef5; overflow: hidden; position: relative; vertical-align: middle } .el-progress-bar__inner { position: absolute; left: 0; top: 0; height: 100%; background-color: #409eff; text-align: right; border-radius: 100px; line-height: 1; white-space: nowrap; -webkit-transition: width .6s ease; transition: width .6s ease } .el-progress-bar__inner:after { display: inline-block; content: \"\"; height: 100%; vertical-align: middle } .el-progress-bar__innerText { display: inline-block; vertical-align: middle; color: #fff; font-size: 12px; margin: 0 5px } @-webkit-keyframes progress { 0% { background-position: 0 0 } to { background-position: 32px 0 } } @keyframes progress { 0% { background-position: 0 0 } to { background-position: 32px 0 } } .el-upload { display: inline-block; text-align: center; cursor: pointer; outline: 0 } .el-upload__input { display: none } .el-upload__tip { font-size: 12px; color: #606266; margin-top: 7px } .el-upload iframe { position: absolute; z-index: -1; top: 0; left: 0; opacity: 0; filter: alpha(opacity=0) } .el-upload--picture-card { background-color: #fbfdff; border: 1px dashed #c0ccda; border-radius: 6px; -webkit-box-sizing: border-box; box-sizing: border-box; width: 148px; height: 148px; line-height: 146px; vertical-align: top } .el-upload--picture-card i { font-size: 28px; color: #8c939d } .el-upload--picture-card:hover, .el-upload:focus { border-color: #409eff; color: #409eff } .el-upload:focus .el-upload-dragger { border-color: #409eff } .el-upload-dragger { background-color: #fff; border: 1px dashed #d9d9d9; border-radius: 6px; -webkit-box-sizing: border-box; box-sizing: border-box; width: 360px; height: 180px; text-align: center; position: relative; overflow: hidden } .el-upload-dragger .el-icon-upload { font-size: 67px; color: #c0c4cc; margin: 40px 0 16px; line-height: 50px } .el-upload-dragger+.el-upload__tip { text-align: center } .el-upload-dragger~.el-upload__files { border-top: 1px solid #dcdfe6; margin-top: 7px; padding-top: 5px } .el-upload-dragger .el-upload__text { color: #606266; font-size: 14px; text-align: center } .el-upload-dragger .el-upload__text em { color: #409eff; font-style: normal } .el-upload-dragger:hover { border-color: #409eff } .el-upload-dragger.is-dragover { background-color: rgba(32, 159, 255, .06); border: 2px dashed #409eff } .el-upload-list { margin: 0; padding: 0; list-style: none } .el-upload-list__item { -webkit-transition: all .5s cubic-bezier(.55, 0, .1, 1); transition: all .5s cubic-bezier(.55, 0, .1, 1); font-size: 14px; color: #606266; line-height: 1.8; margin-top: 5px; position: relative; -webkit-box-sizing: border-box; box-sizing: border-box; border-radius: 4px; width: 100% } .el-upload-list__item .el-progress { position: absolute; top: 20px; width: 100% } .el-upload-list__item .el-progress__text { position: absolute; right: 0; top: -13px } .el-upload-list__item .el-progress-bar { margin-right: 0; padding-right: 0 } .el-upload-list__item:first-child { margin-top: 10px } .el-upload-list__item .el-icon-upload-success { color: #67c23a } .el-upload-list__item .el-icon-close { display: none; position: absolute; top: 5px; right: 5px; cursor: pointer; opacity: .75; color: #606266 } .el-upload-list__item .el-icon-close:hover { opacity: 1 } .el-upload-list__item .el-icon-close-tip { display: none; position: absolute; top: 5px; right: 5px; font-size: 12px; cursor: pointer; opacity: 1; color: #409eff } .el-upload-list__item:hover { background-color: #f5f7fa } .el-upload-list__item:hover .el-icon-close { display: inline-block } .el-upload-list__item:hover .el-progress__text { display: none } .el-upload-list__item.is-success .el-upload-list__item-status-label { display: block } .el-upload-list__item.is-success .el-upload-list__item-name:focus, .el-upload-list__item.is-success .el-upload-list__item-name:hover { color: #409eff; cursor: pointer } .el-upload-list__item.is-success:focus:not(:hover) .el-icon-close-tip { display: inline-block } .el-upload-list__item.is-success:active, .el-upload-list__item.is-success:not(.focusing):focus { outline-width: 0 } .el-upload-list__item.is-success:active .el-icon-close-tip, .el-upload-list__item.is-success:focus .el-upload-list__item-status-label, .el-upload-list__item.is-success:hover .el-upload-list__item-status-label, .el-upload-list__item.is-success:not(.focusing):focus .el-icon-close-tip { display: none } .el-upload-list.is-disabled .el-upload-list__item:hover .el-upload-list__item-status-label { display: block } .el-upload-list__item-name { color: #606266; display: block; margin-right: 40px; padding-left: 4px; -webkit-transition: color .3s; transition: color .3s } .el-upload-list__item-name [class^=el-icon] { height: 100%; margin-right: 7px; color: #909399; line-height: inherit } .el-upload-list__item-status-label { position: absolute; right: 5px; top: 0; line-height: inherit; display: none } .el-upload-list__item-delete { position: absolute; right: 10px; top: 0; font-size: 12px; color: #606266; display: none } .el-upload-list__item-delete:hover { color: #409eff } .el-upload-list--picture-card { margin: 0; display: inline; vertical-align: top } .el-upload-list--picture-card .el-upload-list__item { overflow: hidden; background-color: #fff; border: 1px solid #c0ccda; border-radius: 6px; -webkit-box-sizing: border-box; box-sizing: border-box; width: 148px; height: 148px; margin: 0 8px 8px 0; display: inline-block } .el-upload-list--picture-card .el-upload-list__item .el-icon-check, .el-upload-list--picture-card .el-upload-list__item .el-icon-circle-check { color: #fff } .el-upload-list--picture-card .el-upload-list__item .el-icon-close, .el-upload-list--picture-card .el-upload-list__item:hover .el-upload-list__item-status-label { display: none } .el-upload-list--picture-card .el-upload-list__item:hover .el-progress__text { display: block } .el-upload-list--picture-card .el-upload-list__item-name { display: none } .el-upload-list--picture-card .el-upload-list__item-thumbnail { width: 100%; height: 100% } .el-upload-list--picture-card .el-upload-list__item-status-label { position: absolute; right: -15px; top: -6px; width: 40px; height: 24px; background: #13ce66; text-align: center; -webkit-transform: rotate(45deg); transform: rotate(45deg); -webkit-box-shadow: 0 0 1pc 1px rgba(0, 0, 0, .2); box-shadow: 0 0 1pc 1px rgba(0, 0, 0, .2) } .el-upload-list--picture-card .el-upload-list__item-status-label i { font-size: 12px; margin-top: 11px; -webkit-transform: rotate(-45deg); transform: rotate(-45deg) } .el-upload-list--picture-card .el-upload-list__item-actions { position: absolute; width: 100%; height: 100%; left: 0; top: 0; cursor: default; text-align: center; color: #fff; opacity: 0; font-size: 20px; background-color: rgba(0, 0, 0, .5); -webkit-transition: opacity .3s; transition: opacity .3s } .el-upload-list--picture-card .el-upload-list__item-actions:after { display: inline-block; content: \"\"; height: 100%; vertical-align: middle } .el-upload-list--picture-card .el-upload-list__item-actions span { display: none; cursor: pointer } .el-upload-list--picture-card .el-upload-list__item-actions span+span { margin-left: 15px } .el-upload-list--picture-card .el-upload-list__item-actions .el-upload-list__item-delete { position: static; font-size: inherit; color: inherit } .el-upload-list--picture-card .el-upload-list__item-actions:hover { opacity: 1 } .el-upload-list--picture-card .el-upload-list__item-actions:hover span { display: inline-block } .el-upload-list--picture-card .el-progress { top: 50%; left: 50%; -webkit-transform: translate(-50%, -50%); transform: translate(-50%, -50%); bottom: auto; width: 126px } .el-upload-list--picture-card .el-progress .el-progress__text { top: 50% } .el-upload-list--picture .el-upload-list__item { overflow: hidden; z-index: 0; background-color: #fff; border: 1px solid #c0ccda; border-radius: 6px; -webkit-box-sizing: border-box; box-sizing: border-box; margin-top: 10px; padding: 10px 10px 10px 90px; height: 92px } .el-upload-list--picture .el-upload-list__item .el-icon-check, .el-upload-list--picture .el-upload-list__item .el-icon-circle-check { color: #fff } .el-upload-list--picture .el-upload-list__item:hover .el-upload-list__item-status-label { background: 0 0; -webkit-box-shadow: none; box-shadow: none; top: -2px; right: -12px } .el-upload-list--picture .el-upload-list__item:hover .el-progress__text { display: block } .el-upload-list--picture .el-upload-list__item.is-success .el-upload-list__item-name { line-height: 70px; margin-top: 0 } .el-upload-list--picture .el-upload-list__item.is-success .el-upload-list__item-name i { display: none } .el-upload-list--picture .el-upload-list__item-thumbnail { vertical-align: middle; display: inline-block; width: 70px; height: 70px; float: left; position: relative; z-index: 1; margin-left: -80px; background-color: #fff } .el-upload-list--picture .el-upload-list__item-name { display: block; margin-top: 20px } .el-upload-list--picture .el-upload-list__item-name i { font-size: 70px; line-height: 1; position: absolute; left: 9px; top: 10px } .el-upload-list--picture .el-upload-list__item-status-label { position: absolute; right: -17px; top: -7px; width: 46px; height: 26px; background: #13ce66; text-align: center; -webkit-transform: rotate(45deg); transform: rotate(45deg); -webkit-box-shadow: 0 1px 1px #ccc; box-shadow: 0 1px 1px #ccc } .el-upload-list--picture .el-upload-list__item-status-label i { font-size: 12px; margin-top: 12px; -webkit-transform: rotate(-45deg); transform: rotate(-45deg) } .el-upload-list--picture .el-progress { position: relative; top: -7px } .el-upload-cover { position: absolute; left: 0; top: 0; width: 100%; height: 100%; overflow: hidden; z-index: 10; cursor: default } .el-upload-cover:after { display: inline-block; content: \"\"; height: 100%; vertical-align: middle } .el-upload-cover img { display: block; width: 100%; height: 100% } .el-upload-cover__label { position: absolute; right: -15px; top: -6px; width: 40px; height: 24px; background: #13ce66; text-align: center; -webkit-transform: rotate(45deg); transform: rotate(45deg); -webkit-box-shadow: 0 0 1pc 1px rgba(0, 0, 0, .2); box-shadow: 0 0 1pc 1px rgba(0, 0, 0, .2) } .el-upload-cover__label i { font-size: 12px; margin-top: 11px; -webkit-transform: rotate(-45deg); transform: rotate(-45deg); color: #fff } .el-upload-cover__progress { display: inline-block; vertical-align: middle; position: static; width: 243px } .el-upload-cover__progress+.el-upload__inner { opacity: 0 } .el-upload-cover__content { position: absolute; top: 0; left: 0; width: 100%; height: 100% } .el-upload-cover__interact { position: absolute; bottom: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, .72); text-align: center } .el-upload-cover__interact .btn { display: inline-block; color: #fff; font-size: 14px; cursor: pointer; vertical-align: middle; -webkit-transition: opacity .3s cubic-bezier(.23, 1, .32, 1), -webkit-transform .3s cubic-bezier(.23, 1, .32, 1); transition: opacity .3s cubic-bezier(.23, 1, .32, 1), -webkit-transform .3s cubic-bezier(.23, 1, .32, 1); transition: transform .3s cubic-bezier(.23, 1, .32, 1), opacity .3s cubic-bezier(.23, 1, .32, 1); transition: transform .3s cubic-bezier(.23, 1, .32, 1), opacity .3s cubic-bezier(.23, 1, .32, 1), -webkit-transform .3s cubic-bezier(.23, 1, .32, 1); margin-top: 60px } .el-upload-cover__interact .btn span { opacity: 0; -webkit-transition: opacity .15s linear; transition: opacity .15s linear } .el-upload-cover__interact .btn:not(:first-child) { margin-left: 35px } .el-upload-cover__interact .btn:hover { -webkit-transform: translateY(-13px); transform: translateY(-13px) } .el-upload-cover__interact .btn:hover span { opacity: 1 } .el-upload-cover__interact .btn i { color: #fff; display: block; font-size: 24px; line-height: inherit; margin: 0 auto 5px } .el-upload-cover__title { position: absolute; bottom: 0; left: 0; background-color: #fff; height: 36px; width: 100%; font-weight: 400; text-align: left; padding: 0 10px; margin: 0; line-height: 36px; font-size: 14px; color: #303133 } .el-upload-cover+.el-upload__inner { opacity: 0; position: relative; z-index: 1 } .el-col-pull-0, .el-col-pull-1, .el-col-pull-2, .el-col-pull-3, .el-col-pull-4, .el-col-pull-5, .el-col-pull-6, .el-col-pull-7, .el-col-pull-8, .el-col-pull-9, .el-col-pull-10, .el-col-pull-11, .el-col-pull-13, .el-col-pull-14, .el-col-pull-15, .el-col-pull-16, .el-col-pull-17, .el-col-pull-18, .el-col-pull-19, .el-col-pull-20, .el-col-pull-21, .el-col-pull-22, .el-col-pull-23, .el-col-pull-24, .el-col-push-0, .el-col-push-1, .el-col-push-2, .el-col-push-3, .el-col-push-4, .el-col-push-5, .el-col-push-6, .el-col-push-7, .el-col-push-8, .el-col-push-9, .el-col-push-10, .el-col-push-11, .el-col-push-12, .el-col-push-13, .el-col-push-14, .el-col-push-15, .el-col-push-16, .el-col-push-17, .el-col-push-18, .el-col-push-19, .el-col-push-20, .el-col-push-21, .el-col-push-22, .el-col-push-23, .el-col-push-24 { position: relative } [class*=el-col-] { float: left; -webkit-box-sizing: border-box; box-sizing: border-box } .el-col-0 { display: none; width: 0 } .el-col-offset-0 { margin-left: 0 } .el-col-pull-0 { right: 0 } .el-col-push-0 { left: 0 } .el-col-1 { width: 4.16667% } .el-col-offset-1 { margin-left: 4.16667% } .el-col-pull-1 { right: 4.16667% } .el-col-push-1 { left: 4.16667% } .el-col-2 { width: 8.33333% } .el-col-offset-2 { margin-left: 8.33333% } .el-col-pull-2 { right: 8.33333% } .el-col-push-2 { left: 8.33333% } .el-col-3 { width: 12.5% } .el-col-offset-3 { margin-left: 12.5% } .el-col-pull-3 { right: 12.5% } .el-col-push-3 { left: 12.5% } .el-col-4 { width: 16.66667% } .el-col-offset-4 { margin-left: 16.66667% } .el-col-pull-4 { right: 16.66667% } .el-col-push-4 { left: 16.66667% } .el-col-5 { width: 20.83333% } .el-col-offset-5 { margin-left: 20.83333% } .el-col-pull-5 { right: 20.83333% } .el-col-push-5 { left: 20.83333% } .el-col-6 { width: 25% } .el-col-offset-6 { margin-left: 25% } .el-col-pull-6 { right: 25% } .el-col-push-6 { left: 25% } .el-col-7 { width: 29.16667% } .el-col-offset-7 { margin-left: 29.16667% } .el-col-pull-7 { right: 29.16667% } .el-col-push-7 { left: 29.16667% } .el-col-8 { width: 33.33333% } .el-col-offset-8 { margin-left: 33.33333% } .el-col-pull-8 { right: 33.33333% } .el-col-push-8 { left: 33.33333% } .el-col-9 { width: 37.5% } .el-col-offset-9 { margin-left: 37.5% } .el-col-pull-9 { right: 37.5% } .el-col-push-9 { left: 37.5% } .el-col-10 { width: 41.66667% } .el-col-offset-10 { margin-left: 41.66667% } .el-col-pull-10 { right: 41.66667% } .el-col-push-10 { left: 41.66667% } .el-col-11 { width: 45.83333% } .el-col-offset-11 { margin-left: 45.83333% } .el-col-pull-11 { right: 45.83333% } .el-col-push-11 { left: 45.83333% } .el-col-12 { width: 50% } .el-col-offset-12 { margin-left: 50% } .el-col-pull-12 { position: relative; right: 50% } .el-col-push-12 { left: 50% } .el-col-13 { width: 54.16667% } .el-col-offset-13 { margin-left: 54.16667% } .el-col-pull-13 { right: 54.16667% } .el-col-push-13 { left: 54.16667% } .el-col-14 { width: 58.33333% } .el-col-offset-14 { margin-left: 58.33333% } .el-col-pull-14 { right: 58.33333% } .el-col-push-14 { left: 58.33333% } .el-col-15 { width: 62.5% } .el-col-offset-15 { margin-left: 62.5% } .el-col-pull-15 { right: 62.5% } .el-col-push-15 { left: 62.5% } .el-col-16 { width: 66.66667% } .el-col-offset-16 { margin-left: 66.66667% } .el-col-pull-16 { right: 66.66667% } .el-col-push-16 { left: 66.66667% } .el-col-17 { width: 70.83333% } .el-col-offset-17 { margin-left: 70.83333% } .el-col-pull-17 { right: 70.83333% } .el-col-push-17 { left: 70.83333% } .el-col-18 { width: 75% } .el-col-offset-18 { margin-left: 75% } .el-col-pull-18 { right: 75% } .el-col-push-18 { left: 75% } .el-col-19 { width: 79.16667% } .el-col-offset-19 { margin-left: 79.16667% } .el-col-pull-19 { right: 79.16667% } .el-col-push-19 { left: 79.16667% } .el-col-20 { width: 83.33333% } .el-col-offset-20 { margin-left: 83.33333% } .el-col-pull-20 { right: 83.33333% } .el-col-push-20 { left: 83.33333% } .el-col-21 { width: 87.5% } .el-col-offset-21 { margin-left: 87.5% } .el-col-pull-21 { right: 87.5% } .el-col-push-21 { left: 87.5% } .el-col-22 { width: 91.66667% } .el-col-offset-22 { margin-left: 91.66667% } .el-col-pull-22 { right: 91.66667% } .el-col-push-22 { left: 91.66667% } .el-col-23 { width: 95.83333% } .el-col-offset-23 { margin-left: 95.83333% } .el-col-pull-23 { right: 95.83333% } .el-col-push-23 { left: 95.83333% } .el-col-24 { width: 100% } .el-col-offset-24 { margin-left: 100% } .el-col-pull-24 { right: 100% } .el-col-push-24 { left: 100% } @media only screen and (max-width:767px) { .el-col-xs-0 { display: none; width: 0 } .el-col-xs-offset-0 { margin-left: 0 } .el-col-xs-pull-0 { position: relative; right: 0 } .el-col-xs-push-0 { position: relative; left: 0 } .el-col-xs-1 { width: 4.16667% } .el-col-xs-offset-1 { margin-left: 4.16667% } .el-col-xs-pull-1 { position: relative; right: 4.16667% } .el-col-xs-push-1 { position: relative; left: 4.16667% } .el-col-xs-2 { width: 8.33333% } .el-col-xs-offset-2 { margin-left: 8.33333% } .el-col-xs-pull-2 { position: relative; right: 8.33333% } .el-col-xs-push-2 { position: relative; left: 8.33333% } .el-col-xs-3 { width: 12.5% } .el-col-xs-offset-3 { margin-left: 12.5% } .el-col-xs-pull-3 { position: relative; right: 12.5% } .el-col-xs-push-3 { position: relative; left: 12.5% } .el-col-xs-4 { width: 16.66667% } .el-col-xs-offset-4 { margin-left: 16.66667% } .el-col-xs-pull-4 { position: relative; right: 16.66667% } .el-col-xs-push-4 { position: relative; left: 16.66667% } .el-col-xs-5 { width: 20.83333% } .el-col-xs-offset-5 { margin-left: 20.83333% } .el-col-xs-pull-5 { position: relative; right: 20.83333% } .el-col-xs-push-5 { position: relative; left: 20.83333% } .el-col-xs-6 { width: 25% } .el-col-xs-offset-6 { margin-left: 25% } .el-col-xs-pull-6 { position: relative; right: 25% } .el-col-xs-push-6 { position: relative; left: 25% } .el-col-xs-7 { width: 29.16667% } .el-col-xs-offset-7 { margin-left: 29.16667% } .el-col-xs-pull-7 { position: relative; right: 29.16667% } .el-col-xs-push-7 { position: relative; left: 29.16667% } .el-col-xs-8 { width: 33.33333% } .el-col-xs-offset-8 { margin-left: 33.33333% } .el-col-xs-pull-8 { position: relative; right: 33.33333% } .el-col-xs-push-8 { position: relative; left: 33.33333% } .el-col-xs-9 { width: 37.5% } .el-col-xs-offset-9 { margin-left: 37.5% } .el-col-xs-pull-9 { position: relative; right: 37.5% } .el-col-xs-push-9 { position: relative; left: 37.5% } .el-col-xs-10 { width: 41.66667% } .el-col-xs-offset-10 { margin-left: 41.66667% } .el-col-xs-pull-10 { position: relative; right: 41.66667% } .el-col-xs-push-10 { position: relative; left: 41.66667% } .el-col-xs-11 { width: 45.83333% } .el-col-xs-offset-11 { margin-left: 45.83333% } .el-col-xs-pull-11 { position: relative; right: 45.83333% } .el-col-xs-push-11 { position: relative; left: 45.83333% } .el-col-xs-12 { width: 50% } .el-col-xs-offset-12 { margin-left: 50% } .el-col-xs-pull-12 { position: relative; right: 50% } .el-col-xs-push-12 { position: relative; left: 50% } .el-col-xs-13 { width: 54.16667% } .el-col-xs-offset-13 { margin-left: 54.16667% } .el-col-xs-pull-13 { position: relative; right: 54.16667% } .el-col-xs-push-13 { position: relative; left: 54.16667% } .el-col-xs-14 { width: 58.33333% } .el-col-xs-offset-14 { margin-left: 58.33333% } .el-col-xs-pull-14 { position: relative; right: 58.33333% } .el-col-xs-push-14 { position: relative; left: 58.33333% } .el-col-xs-15 { width: 62.5% } .el-col-xs-offset-15 { margin-left: 62.5% } .el-col-xs-pull-15 { position: relative; right: 62.5% } .el-col-xs-push-15 { position: relative; left: 62.5% } .el-col-xs-16 { width: 66.66667% } .el-col-xs-offset-16 { margin-left: 66.66667% } .el-col-xs-pull-16 { position: relative; right: 66.66667% } .el-col-xs-push-16 { position: relative; left: 66.66667% } .el-col-xs-17 { width: 70.83333% } .el-col-xs-offset-17 { margin-left: 70.83333% } .el-col-xs-pull-17 { position: relative; right: 70.83333% } .el-col-xs-push-17 { position: relative; left: 70.83333% } .el-col-xs-18 { width: 75% } .el-col-xs-offset-18 { margin-left: 75% } .el-col-xs-pull-18 { position: relative; right: 75% } .el-col-xs-push-18 { position: relative; left: 75% } .el-col-xs-19 { width: 79.16667% } .el-col-xs-offset-19 { margin-left: 79.16667% } .el-col-xs-pull-19 { position: relative; right: 79.16667% } .el-col-xs-push-19 { position: relative; left: 79.16667% } .el-col-xs-20 { width: 83.33333% } .el-col-xs-offset-20 { margin-left: 83.33333% } .el-col-xs-pull-20 { position: relative; right: 83.33333% } .el-col-xs-push-20 { position: relative; left: 83.33333% } .el-col-xs-21 { width: 87.5% } .el-col-xs-offset-21 { margin-left: 87.5% } .el-col-xs-pull-21 { position: relative; right: 87.5% } .el-col-xs-push-21 { position: relative; left: 87.5% } .el-col-xs-22 { width: 91.66667% } .el-col-xs-offset-22 { margin-left: 91.66667% } .el-col-xs-pull-22 { position: relative; right: 91.66667% } .el-col-xs-push-22 { position: relative; left: 91.66667% } .el-col-xs-23 { width: 95.83333% } .el-col-xs-offset-23 { margin-left: 95.83333% } .el-col-xs-pull-23 { position: relative; right: 95.83333% } .el-col-xs-push-23 { position: relative; left: 95.83333% } .el-col-xs-24 { width: 100% } .el-col-xs-offset-24 { margin-left: 100% } .el-col-xs-pull-24 { position: relative; right: 100% } .el-col-xs-push-24 { position: relative; left: 100% } } @media only screen and (min-width:768px) { .el-col-sm-0 { display: none; width: 0 } .el-col-sm-offset-0 { margin-left: 0 } .el-col-sm-pull-0 { position: relative; right: 0 } .el-col-sm-push-0 { position: relative; left: 0 } .el-col-sm-1 { width: 4.16667% } .el-col-sm-offset-1 { margin-left: 4.16667% } .el-col-sm-pull-1 { position: relative; right: 4.16667% } .el-col-sm-push-1 { position: relative; left: 4.16667% } .el-col-sm-2 { width: 8.33333% } .el-col-sm-offset-2 { margin-left: 8.33333% } .el-col-sm-pull-2 { position: relative; right: 8.33333% } .el-col-sm-push-2 { position: relative; left: 8.33333% } .el-col-sm-3 { width: 12.5% } .el-col-sm-offset-3 { margin-left: 12.5% } .el-col-sm-pull-3 { position: relative; right: 12.5% } .el-col-sm-push-3 { position: relative; left: 12.5% } .el-col-sm-4 { width: 16.66667% } .el-col-sm-offset-4 { margin-left: 16.66667% } .el-col-sm-pull-4 { position: relative; right: 16.66667% } .el-col-sm-push-4 { position: relative; left: 16.66667% } .el-col-sm-5 { width: 20.83333% } .el-col-sm-offset-5 { margin-left: 20.83333% } .el-col-sm-pull-5 { position: relative; right: 20.83333% } .el-col-sm-push-5 { position: relative; left: 20.83333% } .el-col-sm-6 { width: 25% } .el-col-sm-offset-6 { margin-left: 25% } .el-col-sm-pull-6 { position: relative; right: 25% } .el-col-sm-push-6 { position: relative; left: 25% } .el-col-sm-7 { width: 29.16667% } .el-col-sm-offset-7 { margin-left: 29.16667% } .el-col-sm-pull-7 { position: relative; right: 29.16667% } .el-col-sm-push-7 { position: relative; left: 29.16667% } .el-col-sm-8 { width: 33.33333% } .el-col-sm-offset-8 { margin-left: 33.33333% } .el-col-sm-pull-8 { position: relative; right: 33.33333% } .el-col-sm-push-8 { position: relative; left: 33.33333% } .el-col-sm-9 { width: 37.5% } .el-col-sm-offset-9 { margin-left: 37.5% } .el-col-sm-pull-9 { position: relative; right: 37.5% } .el-col-sm-push-9 { position: relative; left: 37.5% } .el-col-sm-10 { width: 41.66667% } .el-col-sm-offset-10 { margin-left: 41.66667% } .el-col-sm-pull-10 { position: relative; right: 41.66667% } .el-col-sm-push-10 { position: relative; left: 41.66667% } .el-col-sm-11 { width: 45.83333% } .el-col-sm-offset-11 { margin-left: 45.83333% } .el-col-sm-pull-11 { position: relative; right: 45.83333% } .el-col-sm-push-11 { position: relative; left: 45.83333% } .el-col-sm-12 { width: 50% } .el-col-sm-offset-12 { margin-left: 50% } .el-col-sm-pull-12 { position: relative; right: 50% } .el-col-sm-push-12 { position: relative; left: 50% } .el-col-sm-13 { width: 54.16667% } .el-col-sm-offset-13 { margin-left: 54.16667% } .el-col-sm-pull-13 { position: relative; right: 54.16667% } .el-col-sm-push-13 { position: relative; left: 54.16667% } .el-col-sm-14 { width: 58.33333% } .el-col-sm-offset-14 { margin-left: 58.33333% } .el-col-sm-pull-14 { position: relative; right: 58.33333% } .el-col-sm-push-14 { position: relative; left: 58.33333% } .el-col-sm-15 { width: 62.5% } .el-col-sm-offset-15 { margin-left: 62.5% } .el-col-sm-pull-15 { position: relative; right: 62.5% } .el-col-sm-push-15 { position: relative; left: 62.5% } .el-col-sm-16 { width: 66.66667% } .el-col-sm-offset-16 { margin-left: 66.66667% } .el-col-sm-pull-16 { position: relative; right: 66.66667% } .el-col-sm-push-16 { position: relative; left: 66.66667% } .el-col-sm-17 { width: 70.83333% } .el-col-sm-offset-17 { margin-left: 70.83333% } .el-col-sm-pull-17 { position: relative; right: 70.83333% } .el-col-sm-push-17 { position: relative; left: 70.83333% } .el-col-sm-18 { width: 75% } .el-col-sm-offset-18 { margin-left: 75% } .el-col-sm-pull-18 { position: relative; right: 75% } .el-col-sm-push-18 { position: relative; left: 75% } .el-col-sm-19 { width: 79.16667% } .el-col-sm-offset-19 { margin-left: 79.16667% } .el-col-sm-pull-19 { position: relative; right: 79.16667% } .el-col-sm-push-19 { position: relative; left: 79.16667% } .el-col-sm-20 { width: 83.33333% } .el-col-sm-offset-20 { margin-left: 83.33333% } .el-col-sm-pull-20 { position: relative; right: 83.33333% } .el-col-sm-push-20 { position: relative; left: 83.33333% } .el-col-sm-21 { width: 87.5% } .el-col-sm-offset-21 { margin-left: 87.5% } .el-col-sm-pull-21 { position: relative; right: 87.5% } .el-col-sm-push-21 { position: relative; left: 87.5% } .el-col-sm-22 { width: 91.66667% } .el-col-sm-offset-22 { margin-left: 91.66667% } .el-col-sm-pull-22 { position: relative; right: 91.66667% } .el-col-sm-push-22 { position: relative; left: 91.66667% } .el-col-sm-23 { width: 95.83333% } .el-col-sm-offset-23 { margin-left: 95.83333% } .el-col-sm-pull-23 { position: relative; right: 95.83333% } .el-col-sm-push-23 { position: relative; left: 95.83333% } .el-col-sm-24 { width: 100% } .el-col-sm-offset-24 { margin-left: 100% } .el-col-sm-pull-24 { position: relative; right: 100% } .el-col-sm-push-24 { position: relative; left: 100% } } @media only screen and (min-width:992px) { .el-col-md-0 { display: none; width: 0 } .el-col-md-offset-0 { margin-left: 0 } .el-col-md-pull-0 { position: relative; right: 0 } .el-col-md-push-0 { position: relative; left: 0 } .el-col-md-1 { width: 4.16667% } .el-col-md-offset-1 { margin-left: 4.16667% } .el-col-md-pull-1 { position: relative; right: 4.16667% } .el-col-md-push-1 { position: relative; left: 4.16667% } .el-col-md-2 { width: 8.33333% } .el-col-md-offset-2 { margin-left: 8.33333% } .el-col-md-pull-2 { position: relative; right: 8.33333% } .el-col-md-push-2 { position: relative; left: 8.33333% } .el-col-md-3 { width: 12.5% } .el-col-md-offset-3 { margin-left: 12.5% } .el-col-md-pull-3 { position: relative; right: 12.5% } .el-col-md-push-3 { position: relative; left: 12.5% } .el-col-md-4 { width: 16.66667% } .el-col-md-offset-4 { margin-left: 16.66667% } .el-col-md-pull-4 { position: relative; right: 16.66667% } .el-col-md-push-4 { position: relative; left: 16.66667% } .el-col-md-5 { width: 20.83333% } .el-col-md-offset-5 { margin-left: 20.83333% } .el-col-md-pull-5 { position: relative; right: 20.83333% } .el-col-md-push-5 { position: relative; left: 20.83333% } .el-col-md-6 { width: 25% } .el-col-md-offset-6 { margin-left: 25% } .el-col-md-pull-6 { position: relative; right: 25% } .el-col-md-push-6 { position: relative; left: 25% } .el-col-md-7 { width: 29.16667% } .el-col-md-offset-7 { margin-left: 29.16667% } .el-col-md-pull-7 { position: relative; right: 29.16667% } .el-col-md-push-7 { position: relative; left: 29.16667% } .el-col-md-8 { width: 33.33333% } .el-col-md-offset-8 { margin-left: 33.33333% } .el-col-md-pull-8 { position: relative; right: 33.33333% } .el-col-md-push-8 { position: relative; left: 33.33333% } .el-col-md-9 { width: 37.5% } .el-col-md-offset-9 { margin-left: 37.5% } .el-col-md-pull-9 { position: relative; right: 37.5% } .el-col-md-push-9 { position: relative; left: 37.5% } .el-col-md-10 { width: 41.66667% } .el-col-md-offset-10 { margin-left: 41.66667% } .el-col-md-pull-10 { position: relative; right: 41.66667% } .el-col-md-push-10 { position: relative; left: 41.66667% } .el-col-md-11 { width: 45.83333% } .el-col-md-offset-11 { margin-left: 45.83333% } .el-col-md-pull-11 { position: relative; right: 45.83333% } .el-col-md-push-11 { position: relative; left: 45.83333% } .el-col-md-12 { width: 50% } .el-col-md-offset-12 { margin-left: 50% } .el-col-md-pull-12 { position: relative; right: 50% } .el-col-md-push-12 { position: relative; left: 50% } .el-col-md-13 { width: 54.16667% } .el-col-md-offset-13 { margin-left: 54.16667% } .el-col-md-pull-13 { position: relative; right: 54.16667% } .el-col-md-push-13 { position: relative; left: 54.16667% } .el-col-md-14 { width: 58.33333% } .el-col-md-offset-14 { margin-left: 58.33333% } .el-col-md-pull-14 { position: relative; right: 58.33333% } .el-col-md-push-14 { position: relative; left: 58.33333% } .el-col-md-15 { width: 62.5% } .el-col-md-offset-15 { margin-left: 62.5% } .el-col-md-pull-15 { position: relative; right: 62.5% } .el-col-md-push-15 { position: relative; left: 62.5% } .el-col-md-16 { width: 66.66667% } .el-col-md-offset-16 { margin-left: 66.66667% } .el-col-md-pull-16 { position: relative; right: 66.66667% } .el-col-md-push-16 { position: relative; left: 66.66667% } .el-col-md-17 { width: 70.83333% } .el-col-md-offset-17 { margin-left: 70.83333% } .el-col-md-pull-17 { position: relative; right: 70.83333% } .el-col-md-push-17 { position: relative; left: 70.83333% } .el-col-md-18 { width: 75% } .el-col-md-offset-18 { margin-left: 75% } .el-col-md-pull-18 { position: relative; right: 75% } .el-col-md-push-18 { position: relative; left: 75% } .el-col-md-19 { width: 79.16667% } .el-col-md-offset-19 { margin-left: 79.16667% } .el-col-md-pull-19 { position: relative; right: 79.16667% } .el-col-md-push-19 { position: relative; left: 79.16667% } .el-col-md-20 { width: 83.33333% } .el-col-md-offset-20 { margin-left: 83.33333% } .el-col-md-pull-20 { position: relative; right: 83.33333% } .el-col-md-push-20 { position: relative; left: 83.33333% } .el-col-md-21 { width: 87.5% } .el-col-md-offset-21 { margin-left: 87.5% } .el-col-md-pull-21 { position: relative; right: 87.5% } .el-col-md-push-21 { position: relative; left: 87.5% } .el-col-md-22 { width: 91.66667% } .el-col-md-offset-22 { margin-left: 91.66667% } .el-col-md-pull-22 { position: relative; right: 91.66667% } .el-col-md-push-22 { position: relative; left: 91.66667% } .el-col-md-23 { width: 95.83333% } .el-col-md-offset-23 { margin-left: 95.83333% } .el-col-md-pull-23 { position: relative; right: 95.83333% } .el-col-md-push-23 { position: relative; left: 95.83333% } .el-col-md-24 { width: 100% } .el-col-md-offset-24 { margin-left: 100% } .el-col-md-pull-24 { position: relative; right: 100% } .el-col-md-push-24 { position: relative; left: 100% } } @media only screen and (min-width:1200px) { .el-col-lg-0 { display: none; width: 0 } .el-col-lg-offset-0 { margin-left: 0 } .el-col-lg-pull-0 { position: relative; right: 0 } .el-col-lg-push-0 { position: relative; left: 0 } .el-col-lg-1 { width: 4.16667% } .el-col-lg-offset-1 { margin-left: 4.16667% } .el-col-lg-pull-1 { position: relative; right: 4.16667% } .el-col-lg-push-1 { position: relative; left: 4.16667% } .el-col-lg-2 { width: 8.33333% } .el-col-lg-offset-2 { margin-left: 8.33333% } .el-col-lg-pull-2 { position: relative; right: 8.33333% } .el-col-lg-push-2 { position: relative; left: 8.33333% } .el-col-lg-3 { width: 12.5% } .el-col-lg-offset-3 { margin-left: 12.5% } .el-col-lg-pull-3 { position: relative; right: 12.5% } .el-col-lg-push-3 { position: relative; left: 12.5% } .el-col-lg-4 { width: 16.66667% } .el-col-lg-offset-4 { margin-left: 16.66667% } .el-col-lg-pull-4 { position: relative; right: 16.66667% } .el-col-lg-push-4 { position: relative; left: 16.66667% } .el-col-lg-5 { width: 20.83333% } .el-col-lg-offset-5 { margin-left: 20.83333% } .el-col-lg-pull-5 { position: relative; right: 20.83333% } .el-col-lg-push-5 { position: relative; left: 20.83333% } .el-col-lg-6 { width: 25% } .el-col-lg-offset-6 { margin-left: 25% } .el-col-lg-pull-6 { position: relative; right: 25% } .el-col-lg-push-6 { position: relative; left: 25% } .el-col-lg-7 { width: 29.16667% } .el-col-lg-offset-7 { margin-left: 29.16667% } .el-col-lg-pull-7 { position: relative; right: 29.16667% } .el-col-lg-push-7 { position: relative; left: 29.16667% } .el-col-lg-8 { width: 33.33333% } .el-col-lg-offset-8 { margin-left: 33.33333% } .el-col-lg-pull-8 { position: relative; right: 33.33333% } .el-col-lg-push-8 { position: relative; left: 33.33333% } .el-col-lg-9 { width: 37.5% } .el-col-lg-offset-9 { margin-left: 37.5% } .el-col-lg-pull-9 { position: relative; right: 37.5% } .el-col-lg-push-9 { position: relative; left: 37.5% } .el-col-lg-10 { width: 41.66667% } .el-col-lg-offset-10 { margin-left: 41.66667% } .el-col-lg-pull-10 { position: relative; right: 41.66667% } .el-col-lg-push-10 { position: relative; left: 41.66667% } .el-col-lg-11 { width: 45.83333% } .el-col-lg-offset-11 { margin-left: 45.83333% } .el-col-lg-pull-11 { position: relative; right: 45.83333% } .el-col-lg-push-11 { position: relative; left: 45.83333% } .el-col-lg-12 { width: 50% } .el-col-lg-offset-12 { margin-left: 50% } .el-col-lg-pull-12 { position: relative; right: 50% } .el-col-lg-push-12 { position: relative; left: 50% } .el-col-lg-13 { width: 54.16667% } .el-col-lg-offset-13 { margin-left: 54.16667% } .el-col-lg-pull-13 { position: relative; right: 54.16667% } .el-col-lg-push-13 { position: relative; left: 54.16667% } .el-col-lg-14 { width: 58.33333% } .el-col-lg-offset-14 { margin-left: 58.33333% } .el-col-lg-pull-14 { position: relative; right: 58.33333% } .el-col-lg-push-14 { position: relative; left: 58.33333% } .el-col-lg-15 { width: 62.5% } .el-col-lg-offset-15 { margin-left: 62.5% } .el-col-lg-pull-15 { position: relative; right: 62.5% } .el-col-lg-push-15 { position: relative; left: 62.5% } .el-col-lg-16 { width: 66.66667% } .el-col-lg-offset-16 { margin-left: 66.66667% } .el-col-lg-pull-16 { position: relative; right: 66.66667% } .el-col-lg-push-16 { position: relative; left: 66.66667% } .el-col-lg-17 { width: 70.83333% } .el-col-lg-offset-17 { margin-left: 70.83333% } .el-col-lg-pull-17 { position: relative; right: 70.83333% } .el-col-lg-push-17 { position: relative; left: 70.83333% } .el-col-lg-18 { width: 75% } .el-col-lg-offset-18 { margin-left: 75% } .el-col-lg-pull-18 { position: relative; right: 75% } .el-col-lg-push-18 { position: relative; left: 75% } .el-col-lg-19 { width: 79.16667% } .el-col-lg-offset-19 { margin-left: 79.16667% } .el-col-lg-pull-19 { position: relative; right: 79.16667% } .el-col-lg-push-19 { position: relative; left: 79.16667% } .el-col-lg-20 { width: 83.33333% } .el-col-lg-offset-20 { margin-left: 83.33333% } .el-col-lg-pull-20 { position: relative; right: 83.33333% } .el-col-lg-push-20 { position: relative; left: 83.33333% } .el-col-lg-21 { width: 87.5% } .el-col-lg-offset-21 { margin-left: 87.5% } .el-col-lg-pull-21 { position: relative; right: 87.5% } .el-col-lg-push-21 { position: relative; left: 87.5% } .el-col-lg-22 { width: 91.66667% } .el-col-lg-offset-22 { margin-left: 91.66667% } .el-col-lg-pull-22 { position: relative; right: 91.66667% } .el-col-lg-push-22 { position: relative; left: 91.66667% } .el-col-lg-23 { width: 95.83333% } .el-col-lg-offset-23 { margin-left: 95.83333% } .el-col-lg-pull-23 { position: relative; right: 95.83333% } .el-col-lg-push-23 { position: relative; left: 95.83333% } .el-col-lg-24 { width: 100% } .el-col-lg-offset-24 { margin-left: 100% } .el-col-lg-pull-24 { position: relative; right: 100% } .el-col-lg-push-24 { position: relative; left: 100% } } @media only screen and (min-width:1920px) { .el-col-xl-0 { display: none; width: 0 } .el-col-xl-offset-0 { margin-left: 0 } .el-col-xl-pull-0 { position: relative; right: 0 } .el-col-xl-push-0 { position: relative; left: 0 } .el-col-xl-1 { width: 4.16667% } .el-col-xl-offset-1 { margin-left: 4.16667% } .el-col-xl-pull-1 { position: relative; right: 4.16667% } .el-col-xl-push-1 { position: relative; left: 4.16667% } .el-col-xl-2 { width: 8.33333% } .el-col-xl-offset-2 { margin-left: 8.33333% } .el-col-xl-pull-2 { position: relative; right: 8.33333% } .el-col-xl-push-2 { position: relative; left: 8.33333% } .el-col-xl-3 { width: 12.5% } .el-col-xl-offset-3 { margin-left: 12.5% } .el-col-xl-pull-3 { position: relative; right: 12.5% } .el-col-xl-push-3 { position: relative; left: 12.5% } .el-col-xl-4 { width: 16.66667% } .el-col-xl-offset-4 { margin-left: 16.66667% } .el-col-xl-pull-4 { position: relative; right: 16.66667% } .el-col-xl-push-4 { position: relative; left: 16.66667% } .el-col-xl-5 { width: 20.83333% } .el-col-xl-offset-5 { margin-left: 20.83333% } .el-col-xl-pull-5 { position: relative; right: 20.83333% } .el-col-xl-push-5 { position: relative; left: 20.83333% } .el-col-xl-6 { width: 25% } .el-col-xl-offset-6 { margin-left: 25% } .el-col-xl-pull-6 { position: relative; right: 25% } .el-col-xl-push-6 { position: relative; left: 25% } .el-col-xl-7 { width: 29.16667% } .el-col-xl-offset-7 { margin-left: 29.16667% } .el-col-xl-pull-7 { position: relative; right: 29.16667% } .el-col-xl-push-7 { position: relative; left: 29.16667% } .el-col-xl-8 { width: 33.33333% } .el-col-xl-offset-8 { margin-left: 33.33333% } .el-col-xl-pull-8 { position: relative; right: 33.33333% } .el-col-xl-push-8 { position: relative; left: 33.33333% } .el-col-xl-9 { width: 37.5% } .el-col-xl-offset-9 { margin-left: 37.5% } .el-col-xl-pull-9 { position: relative; right: 37.5% } .el-col-xl-push-9 { position: relative; left: 37.5% } .el-col-xl-10 { width: 41.66667% } .el-col-xl-offset-10 { margin-left: 41.66667% } .el-col-xl-pull-10 { position: relative; right: 41.66667% } .el-col-xl-push-10 { position: relative; left: 41.66667% } .el-col-xl-11 { width: 45.83333% } .el-col-xl-offset-11 { margin-left: 45.83333% } .el-col-xl-pull-11 { position: relative; right: 45.83333% } .el-col-xl-push-11 { position: relative; left: 45.83333% } .el-col-xl-12 { width: 50% } .el-col-xl-offset-12 { margin-left: 50% } .el-col-xl-pull-12 { position: relative; right: 50% } .el-col-xl-push-12 { position: relative; left: 50% } .el-col-xl-13 { width: 54.16667% } .el-col-xl-offset-13 { margin-left: 54.16667% } .el-col-xl-pull-13 { position: relative; right: 54.16667% } .el-col-xl-push-13 { position: relative; left: 54.16667% } .el-col-xl-14 { width: 58.33333% } .el-col-xl-offset-14 { margin-left: 58.33333% } .el-col-xl-pull-14 { position: relative; right: 58.33333% } .el-col-xl-push-14 { position: relative; left: 58.33333% } .el-col-xl-15 { width: 62.5% } .el-col-xl-offset-15 { margin-left: 62.5% } .el-col-xl-pull-15 { position: relative; right: 62.5% } .el-col-xl-push-15 { position: relative; left: 62.5% } .el-col-xl-16 { width: 66.66667% } .el-col-xl-offset-16 { margin-left: 66.66667% } .el-col-xl-pull-16 { position: relative; right: 66.66667% } .el-col-xl-push-16 { position: relative; left: 66.66667% } .el-col-xl-17 { width: 70.83333% } .el-col-xl-offset-17 { margin-left: 70.83333% } .el-col-xl-pull-17 { position: relative; right: 70.83333% } .el-col-xl-push-17 { position: relative; left: 70.83333% } .el-col-xl-18 { width: 75% } .el-col-xl-offset-18 { margin-left: 75% } .el-col-xl-pull-18 { position: relative; right: 75% } .el-col-xl-push-18 { position: relative; left: 75% } .el-col-xl-19 { width: 79.16667% } .el-col-xl-offset-19 { margin-left: 79.16667% } .el-col-xl-pull-19 { position: relative; right: 79.16667% } .el-col-xl-push-19 { position: relative; left: 79.16667% } .el-col-xl-20 { width: 83.33333% } .el-col-xl-offset-20 { margin-left: 83.33333% } .el-col-xl-pull-20 { position: relative; right: 83.33333% } .el-col-xl-push-20 { position: relative; left: 83.33333% } .el-col-xl-21 { width: 87.5% } .el-col-xl-offset-21 { margin-left: 87.5% } .el-col-xl-pull-21 { position: relative; right: 87.5% } .el-col-xl-push-21 { position: relative; left: 87.5% } .el-col-xl-22 { width: 91.66667% } .el-col-xl-offset-22 { margin-left: 91.66667% } .el-col-xl-pull-22 { position: relative; right: 91.66667% } .el-col-xl-push-22 { position: relative; left: 91.66667% } .el-col-xl-23 { width: 95.83333% } .el-col-xl-offset-23 { margin-left: 95.83333% } .el-col-xl-pull-23 { position: relative; right: 95.83333% } .el-col-xl-push-23 { position: relative; left: 95.83333% } .el-col-xl-24 { width: 100% } .el-col-xl-offset-24 { margin-left: 100% } .el-col-xl-pull-24 { position: relative; right: 100% } .el-col-xl-push-24 { position: relative; left: 100% } } .el-row { position: relative; -webkit-box-sizing: border-box; box-sizing: border-box } .el-row:after, .el-row:before { display: table; content: \"\" } .el-row:after { clear: both } .el-row--flex { display: -webkit-box; display: -ms-flexbox; display: flex } .el-row--flex:after, .el-row--flex:before { display: none } .el-row--flex.is-justify-center { -webkit-box-pack: center; -ms-flex-pack: center; justify-content: center } .el-row--flex.is-justify-end { -webkit-box-pack: end; -ms-flex-pack: end; justify-content: flex-end } .el-row--flex.is-justify-space-between { -webkit-box-pack: justify; -ms-flex-pack: justify; justify-content: space-between } .el-row--flex.is-justify-space-around { -ms-flex-pack: distribute; justify-content: space-around } .el-row--flex.is-align-top { -webkit-box-align: start; -ms-flex-align: start; align-items: flex-start } .el-row--flex.is-align-middle { -webkit-box-align: center; -ms-flex-align: center; align-items: center } .el-row--flex.is-align-bottom { -webkit-box-align: end; -ms-flex-align: end; align-items: flex-end } @font-face { font-family: element-icons; src: url(../fonts/element-icons.535877f5.woff) format(\"woff\"), url(../fonts/element-icons.732389de.ttf) format(\"truetype\"); font-weight: 400; font-display: \"auto\"; font-style: normal } [class*=\" el-icon-\"], [class^=el-icon-] { font-family: element-icons !important; speak: none; font-style: normal; font-weight: 400; font-variant: normal; text-transform: none; line-height: 1; vertical-align: baseline; display: inline-block; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale } .el-icon-ice-cream-round:before { content: \"\\e6a0\" } .el-icon-ice-cream-square:before { content: \"\\e6a3\" } .el-icon-lollipop:before { content: \"\\e6a4\" } .el-icon-potato-strips:before { content: \"\\e6a5\" } .el-icon-milk-tea:before { content: \"\\e6a6\" } .el-icon-ice-drink:before { content: \"\\e6a7\" } .el-icon-ice-tea:before { content: \"\\e6a9\" } .el-icon-coffee:before { content: \"\\e6aa\" } .el-icon-orange:before { content: \"\\e6ab\" } .el-icon-pear:before { content: \"\\e6ac\" } .el-icon-apple:before { content: \"\\e6ad\" } .el-icon-cherry:before { content: \"\\e6ae\" } .el-icon-watermelon:before { content: \"\\e6af\" } .el-icon-grape:before { content: \"\\e6b0\" } .el-icon-refrigerator:before { content: \"\\e6b1\" } .el-icon-goblet-square-full:before { content: \"\\e6b2\" } .el-icon-goblet-square:before { content: \"\\e6b3\" } .el-icon-goblet-full:before { content: \"\\e6b4\" } .el-icon-goblet:before { content: \"\\e6b5\" } .el-icon-cold-drink:before { content: \"\\e6b6\" } .el-icon-coffee-cup:before { content: \"\\e6b8\" } .el-icon-water-cup:before { content: \"\\e6b9\" } .el-icon-hot-water:before { content: \"\\e6ba\" } .el-icon-ice-cream:before { content: \"\\e6bb\" } .el-icon-dessert:before { content: \"\\e6bc\" } .el-icon-sugar:before { content: \"\\e6bd\" } .el-icon-tableware:before { content: \"\\e6be\" } .el-icon-burger:before { content: \"\\e6bf\" } .el-icon-knife-fork:before { content: \"\\e6c1\" } .el-icon-fork-spoon:before { content: \"\\e6c2\" } .el-icon-chicken:before { content: \"\\e6c3\" } .el-icon-food:before { content: \"\\e6c4\" } .el-icon-dish-1:before { content: \"\\e6c5\" } .el-icon-dish:before { content: \"\\e6c6\" } .el-icon-moon-night:before { content: \"\\e6ee\" } .el-icon-moon:before { content: \"\\e6f0\" } .el-icon-cloudy-and-sunny:before { content: \"\\e6f1\" } .el-icon-partly-cloudy:before { content: \"\\e6f2\" } .el-icon-cloudy:before { content: \"\\e6f3\" } .el-icon-sunny:before { content: \"\\e6f6\" } .el-icon-sunset:before { content: \"\\e6f7\" } .el-icon-sunrise-1:before { content: \"\\e6f8\" } .el-icon-sunrise:before { content: \"\\e6f9\" } .el-icon-heavy-rain:before { content: \"\\e6fa\" } .el-icon-lightning:before { content: \"\\e6fb\" } .el-icon-light-rain:before { content: \"\\e6fc\" } .el-icon-wind-power:before { content: \"\\e6fd\" } .el-icon-baseball:before { content: \"\\e712\" } .el-icon-soccer:before { content: \"\\e713\" } .el-icon-football:before { content: \"\\e715\" } .el-icon-basketball:before { content: \"\\e716\" } .el-icon-ship:before { content: \"\\e73f\" } .el-icon-truck:before { content: \"\\e740\" } .el-icon-bicycle:before { content: \"\\e741\" } .el-icon-mobile-phone:before { content: \"\\e6d3\" } .el-icon-service:before { content: \"\\e6d4\" } .el-icon-key:before { content: \"\\e6e2\" } .el-icon-unlock:before { content: \"\\e6e4\" } .el-icon-lock:before { content: \"\\e6e5\" } .el-icon-watch:before { content: \"\\e6fe\" } .el-icon-watch-1:before { content: \"\\e6ff\" } .el-icon-timer:before { content: \"\\e702\" } .el-icon-alarm-clock:before { content: \"\\e703\" } .el-icon-map-location:before { content: \"\\e704\" } .el-icon-delete-location:before { content: \"\\e705\" } .el-icon-add-location:before { content: \"\\e706\" } .el-icon-location-information:before { content: \"\\e707\" } .el-icon-location-outline:before { content: \"\\e708\" } .el-icon-location:before { content: \"\\e79e\" } .el-icon-place:before { content: \"\\e709\" } .el-icon-discover:before { content: \"\\e70a\" } .el-icon-first-aid-kit:before { content: \"\\e70b\" } .el-icon-trophy-1:before { content: \"\\e70c\" } .el-icon-trophy:before { content: \"\\e70d\" } .el-icon-medal:before { content: \"\\e70e\" } .el-icon-medal-1:before { content: \"\\e70f\" } .el-icon-stopwatch:before { content: \"\\e710\" } .el-icon-mic:before { content: \"\\e711\" } .el-icon-copy-document:before { content: \"\\e718\" } .el-icon-full-screen:before { content: \"\\e719\" } .el-icon-switch-button:before { content: \"\\e71b\" } .el-icon-aim:before { content: \"\\e71c\" } .el-icon-crop:before { content: \"\\e71d\" } .el-icon-odometer:before { content: \"\\e71e\" } .el-icon-time:before { content: \"\\e71f\" } .el-icon-bangzhu:before { content: \"\\e724\" } .el-icon-close-notification:before { content: \"\\e726\" } .el-icon-microphone:before { content: \"\\e727\" } .el-icon-turn-off-microphone:before { content: \"\\e728\" } .el-icon-position:before { content: \"\\e729\" } .el-icon-postcard:before { content: \"\\e72a\" } .el-icon-message:before { content: \"\\e72b\" } .el-icon-chat-line-square:before { content: \"\\e72d\" } .el-icon-chat-dot-square:before { content: \"\\e72e\" } .el-icon-chat-dot-round:before { content: \"\\e72f\" } .el-icon-chat-square:before { content: \"\\e730\" } .el-icon-chat-line-round:before { content: \"\\e731\" } .el-icon-chat-round:before { content: \"\\e732\" } .el-icon-set-up:before { content: \"\\e733\" } .el-icon-turn-off:before { content: \"\\e734\" } .el-icon-open:before { content: \"\\e735\" } .el-icon-connection:before { content: \"\\e736\" } .el-icon-link:before { content: \"\\e737\" } .el-icon-cpu:before { content: \"\\e738\" } .el-icon-thumb:before { content: \"\\e739\" } .el-icon-female:before { content: \"\\e73a\" } .el-icon-male:before { content: \"\\e73b\" } .el-icon-guide:before { content: \"\\e73c\" } .el-icon-news:before { content: \"\\e73e\" } .el-icon-price-tag:before { content: \"\\e744\" } .el-icon-discount:before { content: \"\\e745\" } .el-icon-wallet:before { content: \"\\e747\" } .el-icon-coin:before { content: \"\\e748\" } .el-icon-money:before { content: \"\\e749\" } .el-icon-bank-card:before { content: \"\\e74a\" } .el-icon-box:before { content: \"\\e74b\" } .el-icon-present:before { content: \"\\e74c\" } .el-icon-sell:before { content: \"\\e6d5\" } .el-icon-sold-out:before { content: \"\\e6d6\" } .el-icon-shopping-bag-2:before { content: \"\\e74d\" } .el-icon-shopping-bag-1:before { content: \"\\e74e\" } .el-icon-shopping-cart-2:before { content: \"\\e74f\" } .el-icon-shopping-cart-1:before { content: \"\\e750\" } .el-icon-shopping-cart-full:before { content: \"\\e751\" } .el-icon-smoking:before { content: \"\\e752\" } .el-icon-no-smoking:before { content: \"\\e753\" } .el-icon-house:before { content: \"\\e754\" } .el-icon-table-lamp:before { content: \"\\e755\" } .el-icon-school:before { content: \"\\e756\" } .el-icon-office-building:before { content: \"\\e757\" } .el-icon-toilet-paper:before { content: \"\\e758\" } .el-icon-notebook-2:before { content: \"\\e759\" } .el-icon-notebook-1:before { content: \"\\e75a\" } .el-icon-files:before { content: \"\\e75b\" } .el-icon-collection:before { content: \"\\e75c\" } .el-icon-receiving:before { content: \"\\e75d\" } .el-icon-suitcase-1:before { content: \"\\e760\" } .el-icon-suitcase:before { content: \"\\e761\" } .el-icon-film:before { content: \"\\e763\" } .el-icon-collection-tag:before { content: \"\\e765\" } .el-icon-data-analysis:before { content: \"\\e766\" } .el-icon-pie-chart:before { content: \"\\e767\" } .el-icon-data-board:before { content: \"\\e768\" } .el-icon-data-line:before { content: \"\\e76d\" } .el-icon-reading:before { content: \"\\e769\" } .el-icon-magic-stick:before { content: \"\\e76a\" } .el-icon-coordinate:before { content: \"\\e76b\" } .el-icon-mouse:before { content: \"\\e76c\" } .el-icon-brush:before { content: \"\\e76e\" } .el-icon-headset:before { content: \"\\e76f\" } .el-icon-umbrella:before { content: \"\\e770\" } .el-icon-scissors:before { content: \"\\e771\" } .el-icon-mobile:before { content: \"\\e773\" } .el-icon-attract:before { content: \"\\e774\" } .el-icon-monitor:before { content: \"\\e775\" } .el-icon-search:before { content: \"\\e778\" } .el-icon-takeaway-box:before { content: \"\\e77a\" } .el-icon-paperclip:before { content: \"\\e77d\" } .el-icon-printer:before { content: \"\\e77e\" } .el-icon-document-add:before { content: \"\\e782\" } .el-icon-document:before { content: \"\\e785\" } .el-icon-document-checked:before { content: \"\\e786\" } .el-icon-document-copy:before { content: \"\\e787\" } .el-icon-document-delete:before { content: \"\\e788\" } .el-icon-document-remove:before { content: \"\\e789\" } .el-icon-tickets:before { content: \"\\e78b\" } .el-icon-folder-checked:before { content: \"\\e77f\" } .el-icon-folder-delete:before { content: \"\\e780\" } .el-icon-folder-remove:before { content: \"\\e781\" } .el-icon-folder-add:before { content: \"\\e783\" } .el-icon-folder-opened:before { content: \"\\e784\" } .el-icon-folder:before { content: \"\\e78a\" } .el-icon-edit-outline:before { content: \"\\e764\" } .el-icon-edit:before { content: \"\\e78c\" } .el-icon-date:before { content: \"\\e78e\" } .el-icon-c-scale-to-original:before { content: \"\\e7c6\" } .el-icon-view:before { content: \"\\e6ce\" } .el-icon-loading:before { content: \"\\e6cf\" } .el-icon-rank:before { content: \"\\e6d1\" } .el-icon-sort-down:before { content: \"\\e7c4\" } .el-icon-sort-up:before { content: \"\\e7c5\" } .el-icon-sort:before { content: \"\\e6d2\" } .el-icon-finished:before { content: \"\\e6cd\" } .el-icon-refresh-left:before { content: \"\\e6c7\" } .el-icon-refresh-right:before { content: \"\\e6c8\" } .el-icon-refresh:before { content: \"\\e6d0\" } .el-icon-video-play:before { content: \"\\e7c0\" } .el-icon-video-pause:before { content: \"\\e7c1\" } .el-icon-d-arrow-right:before { content: \"\\e6dc\" } .el-icon-d-arrow-left:before { content: \"\\e6dd\" } .el-icon-arrow-up:before { content: \"\\e6e1\" } .el-icon-arrow-down:before { content: \"\\e6df\" } .el-icon-arrow-right:before { content: \"\\e6e0\" } .el-icon-arrow-left:before { content: \"\\e6de\" } .el-icon-top-right:before { content: \"\\e6e7\" } .el-icon-top-left:before { content: \"\\e6e8\" } .el-icon-top:before { content: \"\\e6e6\" } .el-icon-bottom:before { content: \"\\e6eb\" } .el-icon-right:before { content: \"\\e6e9\" } .el-icon-back:before { content: \"\\e6ea\" } .el-icon-bottom-right:before { content: \"\\e6ec\" } .el-icon-bottom-left:before { content: \"\\e6ed\" } .el-icon-caret-top:before { content: \"\\e78f\" } .el-icon-caret-bottom:before { content: \"\\e790\" } .el-icon-caret-right:before { content: \"\\e791\" } .el-icon-caret-left:before { content: \"\\e792\" } .el-icon-d-caret:before { content: \"\\e79a\" } .el-icon-share:before { content: \"\\e793\" } .el-icon-menu:before { content: \"\\e798\" } .el-icon-s-grid:before { content: \"\\e7a6\" } .el-icon-s-check:before { content: \"\\e7a7\" } .el-icon-s-data:before { content: \"\\e7a8\" } .el-icon-s-opportunity:before { content: \"\\e7aa\" } .el-icon-s-custom:before { content: \"\\e7ab\" } .el-icon-s-claim:before { content: \"\\e7ad\" } .el-icon-s-finance:before { content: \"\\e7ae\" } .el-icon-s-comment:before { content: \"\\e7af\" } .el-icon-s-flag:before { content: \"\\e7b0\" } .el-icon-s-marketing:before { content: \"\\e7b1\" } .el-icon-s-shop:before { content: \"\\e7b4\" } .el-icon-s-open:before { content: \"\\e7b5\" } .el-icon-s-management:before { content: \"\\e7b6\" } .el-icon-s-ticket:before { content: \"\\e7b7\" } .el-icon-s-release:before { content: \"\\e7b8\" } .el-icon-s-home:before { content: \"\\e7b9\" } .el-icon-s-promotion:before { content: \"\\e7ba\" } .el-icon-s-operation:before { content: \"\\e7bb\" } .el-icon-s-unfold:before { content: \"\\e7bc\" } .el-icon-s-fold:before { content: \"\\e7a9\" } .el-icon-s-platform:before { content: \"\\e7bd\" } .el-icon-s-order:before { content: \"\\e7be\" } .el-icon-s-cooperation:before { content: \"\\e7bf\" } .el-icon-bell:before { content: \"\\e725\" } .el-icon-message-solid:before { content: \"\\e799\" } .el-icon-video-camera:before { content: \"\\e772\" } .el-icon-video-camera-solid:before { content: \"\\e796\" } .el-icon-camera:before { content: \"\\e779\" } .el-icon-camera-solid:before { content: \"\\e79b\" } .el-icon-download:before { content: \"\\e77c\" } .el-icon-upload2:before { content: \"\\e77b\" } .el-icon-upload:before { content: \"\\e7c3\" } .el-icon-picture-outline-round:before { content: \"\\e75f\" } .el-icon-picture-outline:before { content: \"\\e75e\" } .el-icon-picture:before { content: \"\\e79f\" } .el-icon-close:before { content: \"\\e6db\" } .el-icon-check:before { content: \"\\e6da\" } .el-icon-plus:before { content: \"\\e6d9\" } .el-icon-minus:before { content: \"\\e6d8\" } .el-icon-help:before { content: \"\\e73d\" } .el-icon-s-help:before { content: \"\\e7b3\" } .el-icon-circle-close:before { content: \"\\e78d\" } .el-icon-circle-check:before { content: \"\\e720\" } .el-icon-circle-plus-outline:before { content: \"\\e723\" } .el-icon-remove-outline:before { content: \"\\e722\" } .el-icon-zoom-out:before { content: \"\\e776\" } .el-icon-zoom-in:before { content: \"\\e777\" } .el-icon-error:before { content: \"\\e79d\" } .el-icon-success:before { content: \"\\e79c\" } .el-icon-circle-plus:before { content: \"\\e7a0\" } .el-icon-remove:before { content: \"\\e7a2\" } .el-icon-info:before { content: \"\\e7a1\" } .el-icon-question:before { content: \"\\e7a4\" } .el-icon-warning-outline:before { content: \"\\e6c9\" } .el-icon-warning:before { content: \"\\e7a3\" } .el-icon-goods:before { content: \"\\e7c2\" } .el-icon-s-goods:before { content: \"\\e7b2\" } .el-icon-star-off:before { content: \"\\e717\" } .el-icon-star-on:before { content: \"\\e797\" } .el-icon-more-outline:before { content: \"\\e6cc\" } .el-icon-more:before { content: \"\\e794\" } .el-icon-phone-outline:before { content: \"\\e6cb\" } .el-icon-phone:before { content: \"\\e795\" } .el-icon-user:before { content: \"\\e6e3\" } .el-icon-user-solid:before { content: \"\\e7a5\" } .el-icon-setting:before { content: \"\\e6ca\" } .el-icon-s-tools:before { content: \"\\e7ac\" } .el-icon-delete:before { content: \"\\e6d7\" } .el-icon-delete-solid:before { content: \"\\e7c9\" } .el-icon-eleme:before { content: \"\\e7c7\" } .el-icon-platform-eleme:before { content: \"\\e7ca\" } .el-icon-loading { -webkit-animation: rotating 2s linear infinite; animation: rotating 2s linear infinite } .el-icon--right { margin-left: 5px } .el-icon--left { margin-right: 5px } @-webkit-keyframes rotating { 0% { -webkit-transform: rotate(0); transform: rotate(0) } to { -webkit-transform: rotate(1turn); transform: rotate(1turn) } } @keyframes rotating { 0% { -webkit-transform: rotate(0); transform: rotate(0) } to { -webkit-transform: rotate(1turn); transform: rotate(1turn) } } .el-container { display: -webkit-box; display: -ms-flexbox; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; -ms-flex-direction: row; flex-direction: row; -webkit-box-flex: 1; -ms-flex: 1; flex: 1; -ms-flex-preferred-size: auto; flex-basis: auto; -webkit-box-sizing: border-box; box-sizing: border-box; min-width: 0 } .el-container.is-vertical { -webkit-box-orient: vertical; -webkit-box-direction: normal; -ms-flex-direction: column; flex-direction: column } .el-footer { padding: 0 20px; -ms-flex-negative: 0; flex-shrink: 0 } .el-footer, .el-main { -webkit-box-sizing: border-box; box-sizing: border-box } .el-main { display: block; -webkit-box-flex: 1; -ms-flex: 1; flex: 1; -ms-flex-preferred-size: auto; flex-basis: auto; overflow: auto; padding: 20px } .el-checkbox-button__inner, .el-tag { -webkit-box-sizing: border-box; white-space: nowrap } .el-checkbox-button__inner { -moz-user-select: none; -webkit-user-select: none; -ms-user-select: none } .el-table-column--selection .cell { padding-left: 14px; padding-right: 14px } .el-table-filter { border: 1px solid #ebeef5; border-radius: 2px; background-color: #fff; -webkit-box-shadow: 0 2px 12px 0 rgba(0, 0, 0, .1); box-shadow: 0 2px 12px 0 rgba(0, 0, 0, .1); -webkit-box-sizing: border-box; box-sizing: border-box; margin: 2px 0 } .el-table-filter__list { padding: 5px 0; margin: 0; list-style: none; min-width: 100px } .el-table-filter__list-item { line-height: 36px; padding: 0 10px; cursor: pointer; font-size: 14px } .el-table-filter__list-item:hover { background-color: #ecf5ff; color: #66b1ff } .el-table-filter__list-item.is-active { background-color: #409eff; color: #fff } .el-table-filter__content { min-width: 100px } .el-table-filter__bottom { border-top: 1px solid #ebeef5; padding: 8px } .el-table-filter__bottom button { background: 0 0; border: none; color: #606266; cursor: pointer; font-size: 13px; padding: 0 3px } .el-table-filter__bottom button:hover { color: #409eff } .el-table-filter__bottom button:focus { outline: 0 } .el-table-filter__bottom button.is-disabled { color: #c0c4cc; cursor: not-allowed } .el-table-filter__wrap { max-height: 280px } .el-table-filter__checkbox-group { padding: 10px } .el-table-filter__checkbox-group label.el-checkbox { display: block; margin-right: 5px; margin-bottom: 8px; margin-left: 5px } .el-table-filter__checkbox-group .el-checkbox:last-child { margin-bottom: 0 } .el-checkbox, .el-checkbox__input { display: inline-block; position: relative; white-space: nowrap } .el-table, .el-table__append-wrapper { overflow: hidden } .el-table--hidden, .el-table .el-table__cell.is-hidden>* { visibility: hidden } .el-checkbox { color: #606266; font-weight: 500; font-size: 14px; cursor: pointer; user-select: none; margin-right: 30px } .el-checkbox, .el-checkbox-button__inner, .el-table th.el-table__cell { -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none } .el-checkbox.is-bordered { padding: 9px 20px 9px 10px; border-radius: 4px; border: 1px solid #dcdfe6; -webkit-box-sizing: border-box; box-sizing: border-box; line-height: normal; height: 40px } .el-checkbox.is-bordered.is-checked { border-color: #409eff } .el-checkbox.is-bordered.is-disabled { border-color: #ebeef5; cursor: not-allowed } .el-checkbox.is-bordered+.el-checkbox.is-bordered { margin-left: 10px } .el-checkbox.is-bordered.el-checkbox--medium { padding: 7px 20px 7px 10px; border-radius: 4px; height: 36px } .el-checkbox.is-bordered.el-checkbox--medium .el-checkbox__label { line-height: 17px; font-size: 14px } .el-checkbox.is-bordered.el-checkbox--medium .el-checkbox__inner { height: 14px; width: 14px } .el-checkbox.is-bordered.el-checkbox--small { padding: 5px 15px 5px 10px; border-radius: 3px; height: 32px } .el-checkbox.is-bordered.el-checkbox--small .el-checkbox__label { line-height: 15px; font-size: 12px } .el-checkbox.is-bordered.el-checkbox--small .el-checkbox__inner { height: 12px; width: 12px } .el-checkbox.is-bordered.el-checkbox--small .el-checkbox__inner:after { height: 6px; width: 2px } .el-checkbox.is-bordered.el-checkbox--mini { padding: 3px 15px 3px 10px; border-radius: 3px; height: 28px } .el-checkbox.is-bordered.el-checkbox--mini .el-checkbox__label { line-height: 12px; font-size: 12px } .el-checkbox.is-bordered.el-checkbox--mini .el-checkbox__inner { height: 12px; width: 12px } .el-checkbox.is-bordered.el-checkbox--mini .el-checkbox__inner:after { height: 6px; width: 2px } .el-checkbox__input { cursor: pointer; outline: 0; line-height: 1; vertical-align: middle } .el-checkbox__input.is-disabled .el-checkbox__inner { background-color: #edf2fc; border-color: #dcdfe6; cursor: not-allowed } .el-checkbox__input.is-disabled .el-checkbox__inner:after { cursor: not-allowed; border-color: #c0c4cc } .el-checkbox__input.is-disabled .el-checkbox__inner+.el-checkbox__label { cursor: not-allowed } .el-checkbox__input.is-disabled.is-checked .el-checkbox__inner { background-color: #f2f6fc; border-color: #dcdfe6 } .el-checkbox__input.is-disabled.is-checked .el-checkbox__inner:after { border-color: #c0c4cc } .el-checkbox__input.is-disabled.is-indeterminate .el-checkbox__inner { background-color: #f2f6fc; border-color: #dcdfe6 } .el-checkbox__input.is-disabled.is-indeterminate .el-checkbox__inner:before { background-color: #c0c4cc; border-color: #c0c4cc } .el-checkbox__input.is-checked .el-checkbox__inner, .el-checkbox__input.is-indeterminate .el-checkbox__inner { background-color: #409eff; border-color: #409eff } .el-checkbox__input.is-disabled+span.el-checkbox__label { color: #c0c4cc; cursor: not-allowed } .el-checkbox__input.is-checked .el-checkbox__inner:after { -webkit-transform: rotate(45deg) scaleY(1); transform: rotate(45deg) scaleY(1) } .el-checkbox__input.is-checked+.el-checkbox__label { color: #409eff } .el-checkbox__input.is-focus .el-checkbox__inner { border-color: #409eff } .el-checkbox__input.is-indeterminate .el-checkbox__inner:before { content: \"\"; position: absolute; display: block; background-color: #fff; height: 2px; -webkit-transform: scale(.5); transform: scale(.5); left: 0; right: 0; top: 5px } .el-checkbox__input.is-indeterminate .el-checkbox__inner:after { display: none } .el-checkbox__inner { display: inline-block; position: relative; border: 1px solid #dcdfe6; border-radius: 2px; -webkit-box-sizing: border-box; box-sizing: border-box; width: 14px; height: 14px; background-color: #fff; z-index: 1; -webkit-transition: border-color .25s cubic-bezier(.71, -.46, .29, 1.46), background-color .25s cubic-bezier(.71, -.46, .29, 1.46); transition: border-color .25s cubic-bezier(.71, -.46, .29, 1.46), background-color .25s cubic-bezier(.71, -.46, .29, 1.46) } .el-checkbox__inner:hover { border-color: #409eff } .el-checkbox__inner:after { -webkit-box-sizing: content-box; box-sizing: content-box; content: \"\"; border: 1px solid #fff; border-left: 0; border-top: 0; height: 7px; left: 4px; position: absolute; top: 1px; -webkit-transform: rotate(45deg) scaleY(0); transform: rotate(45deg) scaleY(0); width: 3px; -webkit-transition: -webkit-transform .15s ease-in .05s; transition: -webkit-transform .15s ease-in .05s; transition: transform .15s ease-in .05s; transition: transform .15s ease-in .05s, -webkit-transform .15s ease-in .05s; -webkit-transform-origin: center; transform-origin: center } .el-checkbox__original { opacity: 0; outline: 0; position: absolute; margin: 0; width: 0; height: 0; z-index: -1 } .el-checkbox-button, .el-checkbox-button__inner { position: relative; display: inline-block } .el-checkbox__label { display: inline-block; padding-left: 10px; line-height: 19px; font-size: 14px } .el-checkbox:last-of-type { margin-right: 0 } .el-checkbox-button__inner { line-height: 1; font-weight: 500; white-space: nowrap; vertical-align: middle; cursor: pointer; background: #fff; border: 1px solid #dcdfe6; border-left: 0; color: #606266; -webkit-appearance: none; text-align: center; -webkit-box-sizing: border-box; box-sizing: border-box; outline: 0; margin: 0; -webkit-transition: all .3s cubic-bezier(.645, .045, .355, 1); transition: all .3s cubic-bezier(.645, .045, .355, 1); padding: 12px 20px; font-size: 14px; border-radius: 0 } .el-checkbox-button__inner.is-round { padding: 12px 20px } .el-checkbox-button__inner:hover { color: #409eff } .el-checkbox-button__inner [class*=el-icon-] { line-height: .9 } .el-checkbox-button__inner [class*=el-icon-]+span { margin-left: 5px } .el-checkbox-button__original { opacity: 0; outline: 0; position: absolute; margin: 0; z-index: -1 } .el-checkbox-button.is-checked .el-checkbox-button__inner { color: #fff; background-color: #409eff; border-color: #409eff; -webkit-box-shadow: -1px 0 0 0 #8cc5ff; box-shadow: -1px 0 0 0 #8cc5ff } .el-checkbox-button.is-checked:first-child .el-checkbox-button__inner { border-left-color: #409eff } .el-checkbox-button.is-disabled .el-checkbox-button__inner { color: #c0c4cc; cursor: not-allowed; background-image: none; background-color: #fff; border-color: #ebeef5; -webkit-box-shadow: none; box-shadow: none } .el-checkbox-button.is-disabled:first-child .el-checkbox-button__inner { border-left-color: #ebeef5 } .el-checkbox-button:first-child .el-checkbox-button__inner { border-left: 1px solid #dcdfe6; border-radius: 4px 0 0 4px; -webkit-box-shadow: none !important; box-shadow: none !important } .el-checkbox-button.is-focus .el-checkbox-button__inner { border-color: #409eff } .el-checkbox-button:last-child .el-checkbox-button__inner { border-radius: 0 4px 4px 0 } .el-checkbox-button--medium .el-checkbox-button__inner { padding: 10px 20px; font-size: 14px; border-radius: 0 } .el-checkbox-button--medium .el-checkbox-button__inner.is-round { padding: 10px 20px } .el-checkbox-button--small .el-checkbox-button__inner { padding: 9px 15px; font-size: 12px; border-radius: 0 } .el-checkbox-button--small .el-checkbox-button__inner.is-round { padding: 9px 15px } .el-checkbox-button--mini .el-checkbox-button__inner { padding: 7px 15px; font-size: 12px; border-radius: 0 } .el-checkbox-button--mini .el-checkbox-button__inner.is-round { padding: 7px 15px } .el-checkbox-group { font-size: 0 } .el-tag { background-color: #ecf5ff; border-color: #d9ecff; display: inline-block; height: 32px; padding: 0 10px; line-height: 30px; font-size: 12px; color: #409eff; border-width: 1px; border-style: solid; border-radius: 4px; -webkit-box-sizing: border-box; box-sizing: border-box; white-space: nowrap } .el-tag.is-hit { border-color: #409eff } .el-tag .el-tag__close { color: #409eff } .el-tag .el-tag__close:hover { color: #fff; background-color: #409eff } .el-tag.el-tag--info { background-color: #f4f4f5; border-color: #e9e9eb; color: #909399 } .el-tag.el-tag--info.is-hit { border-color: #909399 } .el-tag.el-tag--info .el-tag__close { color: #909399 } .el-tag.el-tag--info .el-tag__close:hover { color: #fff; background-color: #909399 } .el-tag.el-tag--success { background-color: #f0f9eb; border-color: #e1f3d8; color: #67c23a } .el-tag.el-tag--success.is-hit { border-color: #67c23a } .el-tag.el-tag--success .el-tag__close { color: #67c23a } .el-tag.el-tag--success .el-tag__close:hover { color: #fff; background-color: #67c23a } .el-tag.el-tag--warning { background-color: #fdf6ec; border-color: #faecd8; color: #e6a23c } .el-tag.el-tag--warning.is-hit { border-color: #e6a23c } .el-tag.el-tag--warning .el-tag__close { color: #e6a23c } .el-tag.el-tag--warning .el-tag__close:hover { color: #fff; background-color: #e6a23c } .el-tag.el-tag--danger { background-color: #fef0f0; border-color: #fde2e2; color: #f56c6c } .el-tag.el-tag--danger.is-hit { border-color: #f56c6c } .el-tag.el-tag--danger .el-tag__close { color: #f56c6c } .el-tag.el-tag--danger .el-tag__close:hover { color: #fff; background-color: #f56c6c } .el-tag .el-icon-close { border-radius: 50%; text-align: center; position: relative; cursor: pointer; font-size: 12px; height: 16px; width: 16px; line-height: 16px; vertical-align: middle; top: -1px; right: -5px } .el-tag .el-icon-close:before { display: block } .el-tag--dark { background-color: #409eff; color: #fff } .el-tag--dark, .el-tag--dark.is-hit { border-color: #409eff } .el-tag--dark .el-tag__close { color: #fff } .el-tag--dark .el-tag__close:hover { color: #fff; background-color: #66b1ff } .el-tag--dark.el-tag--info { background-color: #909399; border-color: #909399; color: #fff } .el-tag--dark.el-tag--info.is-hit { border-color: #909399 } .el-tag--dark.el-tag--info .el-tag__close { color: #fff } .el-tag--dark.el-tag--info .el-tag__close:hover { color: #fff; background-color: #a6a9ad } .el-tag--dark.el-tag--success { background-color: #67c23a; border-color: #67c23a; color: #fff } .el-tag--dark.el-tag--success.is-hit { border-color: #67c23a } .el-tag--dark.el-tag--success .el-tag__close { color: #fff } .el-tag--dark.el-tag--success .el-tag__close:hover { color: #fff; background-color: #85ce61 } .el-tag--dark.el-tag--warning { background-color: #e6a23c; border-color: #e6a23c; color: #fff } .el-tag--dark.el-tag--warning.is-hit { border-color: #e6a23c } .el-tag--dark.el-tag--warning .el-tag__close { color: #fff } .el-tag--dark.el-tag--warning .el-tag__close:hover { color: #fff; background-color: #ebb563 } .el-tag--dark.el-tag--danger { background-color: #f56c6c; border-color: #f56c6c; color: #fff } .el-tag--dark.el-tag--danger.is-hit { border-color: #f56c6c } .el-tag--dark.el-tag--danger .el-tag__close { color: #fff } .el-tag--dark.el-tag--danger .el-tag__close:hover { color: #fff; background-color: #f78989 } .el-tag--plain { background-color: #fff; border-color: #b3d8ff; color: #409eff } .el-tag--plain.is-hit { border-color: #409eff } .el-tag--plain .el-tag__close { color: #409eff } .el-tag--plain .el-tag__close:hover { color: #fff; background-color: #409eff } .el-tag--plain.el-tag--info { background-color: #fff; border-color: #d3d4d6; color: #909399 } .el-tag--plain.el-tag--info.is-hit { border-color: #909399 } .el-tag--plain.el-tag--info .el-tag__close { color: #909399 } .el-tag--plain.el-tag--info .el-tag__close:hover { color: #fff; background-color: #909399 } .el-tag--plain.el-tag--success { background-color: #fff; border-color: #c2e7b0; color: #67c23a } .el-tag--plain.el-tag--success.is-hit { border-color: #67c23a } .el-tag--plain.el-tag--success .el-tag__close { color: #67c23a } .el-tag--plain.el-tag--success .el-tag__close:hover { color: #fff; background-color: #67c23a } .el-tag--plain.el-tag--warning { background-color: #fff; border-color: #f5dab1; color: #e6a23c } .el-tag--plain.el-tag--warning.is-hit { border-color: #e6a23c } .el-tag--plain.el-tag--warning .el-tag__close { color: #e6a23c } .el-tag--plain.el-tag--warning .el-tag__close:hover { color: #fff; background-color: #e6a23c } .el-tag--plain.el-tag--danger { background-color: #fff; border-color: #fbc4c4; color: #f56c6c } .el-tag--plain.el-tag--danger.is-hit { border-color: #f56c6c } .el-tag--plain.el-tag--danger .el-tag__close { color: #f56c6c } .el-tag--plain.el-tag--danger .el-tag__close:hover { color: #fff; background-color: #f56c6c } .el-tag--medium { height: 28px; line-height: 26px } .el-tag--medium .el-icon-close { -webkit-transform: scale(.8); transform: scale(.8) } .el-tag--small { height: 24px; padding: 0 8px; line-height: 22px } .el-tag--small .el-icon-close { -webkit-transform: scale(.8); transform: scale(.8) } .el-tag--mini { height: 20px; padding: 0 5px; line-height: 19px } .el-tag--mini .el-icon-close { margin-left: -3px; -webkit-transform: scale(.7); transform: scale(.7) } .el-tooltip:focus:hover, .el-tooltip:focus:not(.focusing) { outline-width: 0 } .el-tooltip__popper { position: absolute; border-radius: 4px; padding: 10px; z-index: 2000; font-size: 12px; line-height: 1.2; min-width: 10px; word-wrap: break-word } .el-tooltip__popper .popper__arrow, .el-tooltip__popper .popper__arrow:after { position: absolute; display: block; width: 0; height: 0; border-color: transparent; border-style: solid } .el-tooltip__popper .popper__arrow { border-width: 6px } .el-tooltip__popper .popper__arrow:after { content: \" \"; border-width: 5px } .el-tooltip__popper[x-placement^=top] { margin-bottom: 12px } .el-tooltip__popper[x-placement^=top] .popper__arrow { bottom: -6px; border-top-color: #303133; border-bottom-width: 0 } .el-tooltip__popper[x-placement^=top] .popper__arrow:after { bottom: 1px; margin-left: -5px; border-top-color: #303133; border-bottom-width: 0 } .el-tooltip__popper[x-placement^=bottom] { margin-top: 12px } .el-tooltip__popper[x-placement^=bottom] .popper__arrow { top: -6px; border-top-width: 0; border-bottom-color: #303133 } .el-tooltip__popper[x-placement^=bottom] .popper__arrow:after { top: 1px; margin-left: -5px; border-top-width: 0; border-bottom-color: #303133 } .el-tooltip__popper[x-placement^=right] { margin-left: 12px } .el-tooltip__popper[x-placement^=right] .popper__arrow { left: -6px; border-right-color: #303133; border-left-width: 0 } .el-tooltip__popper[x-placement^=right] .popper__arrow:after { bottom: -5px; left: 1px; border-right-color: #303133; border-left-width: 0 } .el-tooltip__popper[x-placement^=left] { margin-right: 12px } .el-tooltip__popper[x-placement^=left] .popper__arrow { right: -6px; border-right-width: 0; border-left-color: #303133 } .el-tooltip__popper[x-placement^=left] .popper__arrow:after { right: 1px; bottom: -5px; margin-left: -5px; border-right-width: 0; border-left-color: #303133 } .el-tooltip__popper.is-dark { background: #303133; color: #fff } .el-table, .el-table__expanded-cell { background-color: #fff } .el-tooltip__popper.is-light { background: #fff; border: 1px solid #303133 } .el-tooltip__popper.is-light[x-placement^=top] .popper__arrow { border-top-color: #303133 } .el-tooltip__popper.is-light[x-placement^=top] .popper__arrow:after { border-top-color: #fff } .el-tooltip__popper.is-light[x-placement^=bottom] .popper__arrow { border-bottom-color: #303133 } .el-tooltip__popper.is-light[x-placement^=bottom] .popper__arrow:after { border-bottom-color: #fff } .el-tooltip__popper.is-light[x-placement^=left] .popper__arrow { border-left-color: #303133 } .el-tooltip__popper.is-light[x-placement^=left] .popper__arrow:after { border-left-color: #fff } .el-tooltip__popper.is-light[x-placement^=right] .popper__arrow { border-right-color: #303133 } .el-tooltip__popper.is-light[x-placement^=right] .popper__arrow:after { border-right-color: #fff } .el-table { position: relative; -webkit-box-sizing: border-box; box-sizing: border-box; -webkit-box-flex: 1; -ms-flex: 1; flex: 1; width: 100%; max-width: 100%; font-size: 14px; color: #606266 } .el-table--mini, .el-table--small, .el-table__expand-icon { font-size: 12px } .el-table__empty-block { min-height: 60px; text-align: center; width: 100%; display: -webkit-box; display: -ms-flexbox; display: flex; -webkit-box-pack: center; -ms-flex-pack: center; justify-content: center; -webkit-box-align: center; -ms-flex-align: center; align-items: center } .el-table__empty-text { line-height: 60px; width: 50%; color: #909399 } .el-table__expand-column .cell { padding: 0; text-align: center } .el-table__expand-icon { position: relative; cursor: pointer; color: #666; -webkit-transition: -webkit-transform .2s ease-in-out; transition: -webkit-transform .2s ease-in-out; transition: transform .2s ease-in-out; transition: transform .2s ease-in-out, -webkit-transform .2s ease-in-out; height: 20px } .el-table__expand-icon--expanded { -webkit-transform: rotate(90deg); transform: rotate(90deg) } .el-table__expand-icon>.el-icon { position: absolute; left: 50%; top: 50%; margin-left: -5px; margin-top: -5px } .el-table__expanded-cell[class*=cell] { padding: 20px 50px } .el-table__expanded-cell:hover { background-color: transparent !important } .el-table__placeholder { display: inline-block; width: 20px } .el-table--fit { border-right: 0; border-bottom: 0 } .el-table--fit .el-table__cell.gutter { border-right-width: 1px } .el-table--scrollable-x .el-table__body-wrapper { overflow-x: auto } .el-table--scrollable-y .el-table__body-wrapper { overflow-y: auto } .el-table thead { color: #909399; font-weight: 500 } .el-table thead.is-group th.el-table__cell { background: #f5f7fa } .el-table .el-table__cell { padding: 12px 0; min-width: 0; -webkit-box-sizing: border-box; box-sizing: border-box; text-overflow: ellipsis; vertical-align: middle; position: relative; text-align: left } .el-table .el-table__cell.is-center { text-align: center } .el-table .el-table__cell.is-right { text-align: right } .el-table .el-table__cell.gutter { width: 15px; border-right-width: 0; border-bottom-width: 0; padding: 0 } .el-table--medium .el-table__cell { padding: 10px 0 } .el-table--small .el-table__cell { padding: 8px 0 } .el-table--mini .el-table__cell { padding: 6px 0 } .el-table--border .el-table__cell:first-child .cell, .el-table .cell { padding-left: 10px } .el-table tr { background-color: #fff } .el-table tr input[type=checkbox] { margin: 0 } .el-table td.el-table__cell, .el-table th.el-table__cell.is-leaf { border-bottom: 1px solid #ebeef5 } .el-table th.el-table__cell.is-sortable { cursor: pointer } .el-table th.el-table__cell { overflow: hidden; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; background-color: #fff } .el-table th.el-table__cell>.cell { display: inline-block; -webkit-box-sizing: border-box; box-sizing: border-box; position: relative; vertical-align: middle; padding-left: 10px; padding-right: 10px; width: 100% } .el-table th.el-table__cell>.cell.highlight { color: #409eff } .el-table th.el-table__cell.required>div:before { display: inline-block; content: \"\"; width: 8px; height: 8px; border-radius: 50%; background: #ff4d51; margin-right: 5px; vertical-align: middle } .el-table td.el-table__cell div { -webkit-box-sizing: border-box; box-sizing: border-box } .el-table td.el-table__cell.gutter { width: 0 } .el-table .cell { -webkit-box-sizing: border-box; box-sizing: border-box; overflow: hidden; text-overflow: ellipsis; white-space: normal; word-break: break-all; line-height: 23px; padding-right: 10px } .el-table .cell.el-tooltip { white-space: nowrap; min-width: 50px } .el-table--border, .el-table--group { border: 1px solid #ebeef5 } .el-table--border:after, .el-table--group:after, .el-table:before { content: \"\"; position: absolute; background-color: #ebeef5; z-index: 1 } .el-table--border:after, .el-table--group:after { top: 0; right: 0; width: 1px; height: 100% } .el-table:before { left: 0; bottom: 0; width: 100%; height: 1px } .el-table--border { border-right: none; border-bottom: none } .el-table--border.el-loading-parent--relative { border-color: transparent } .el-table--border .el-table__cell, .el-table__body-wrapper .el-table--border.is-scrolling-left~.el-table__fixed { border-right: 1px solid #ebeef5 } .el-table--border th.el-table__cell.gutter:last-of-type { border-bottom: 1px solid #ebeef5; border-bottom-width: 1px } .el-table--border th.el-table__cell, .el-table__fixed-right-patch { border-bottom: 1px solid #ebeef5 } .el-table__fixed, .el-table__fixed-right { position: absolute; top: 0; left: 0; overflow-x: hidden; overflow-y: hidden; -webkit-box-shadow: 0 0 10px rgba(0, 0, 0, .12); box-shadow: 0 0 10px rgba(0, 0, 0, .12) } .el-table__fixed-right:before, .el-table__fixed:before { content: \"\"; position: absolute; left: 0; bottom: 0; width: 100%; height: 1px; background-color: #ebeef5; z-index: 4 } .el-table__fixed-right-patch { position: absolute; top: -1px; right: 0; background-color: #fff } .el-table__fixed-right { top: 0; left: auto; right: 0 } .el-table__fixed-right .el-table__fixed-body-wrapper, .el-table__fixed-right .el-table__fixed-footer-wrapper, .el-table__fixed-right .el-table__fixed-header-wrapper { left: auto; right: 0 } .el-table__fixed-header-wrapper { position: absolute; left: 0; top: 0; z-index: 3 } .el-table__fixed-footer-wrapper { position: absolute; left: 0; bottom: 0; z-index: 3 } .el-table__fixed-footer-wrapper tbody td.el-table__cell { border-top: 1px solid #ebeef5; background-color: #f5f7fa; color: #606266 } .el-table__fixed-body-wrapper { position: absolute; left: 0; top: 37px; overflow: hidden; z-index: 3 } .el-table__body-wrapper, .el-table__footer-wrapper, .el-table__header-wrapper { width: 100% } .el-table__footer-wrapper { margin-top: -1px } .el-table__footer-wrapper td.el-table__cell { border-top: 1px solid #ebeef5 } .el-table__body, .el-table__footer, .el-table__header { table-layout: fixed; border-collapse: separate } .el-table__footer-wrapper, .el-table__header-wrapper { overflow: hidden } .el-table__footer-wrapper tbody td.el-table__cell, .el-table__header-wrapper tbody td.el-table__cell { background-color: #f5f7fa; color: #606266 } .el-table__body-wrapper { overflow: hidden; position: relative } .el-table__body-wrapper.is-scrolling-left~.el-table__fixed, .el-table__body-wrapper.is-scrolling-none~.el-table__fixed, .el-table__body-wrapper.is-scrolling-none~.el-table__fixed-right, .el-table__body-wrapper.is-scrolling-right~.el-table__fixed-right { -webkit-box-shadow: none; box-shadow: none } .el-table__body-wrapper .el-table--border.is-scrolling-right~.el-table__fixed-right { border-left: 1px solid #ebeef5 } .el-table .caret-wrapper { display: -webkit-inline-box; display: -ms-inline-flexbox; display: inline-flex; -webkit-box-orient: vertical; -webkit-box-direction: normal; -ms-flex-direction: column; flex-direction: column; -webkit-box-align: center; -ms-flex-align: center; align-items: center; height: 34px; width: 24px; vertical-align: middle; cursor: pointer; overflow: initial; position: relative } .el-table .sort-caret { width: 0; height: 0; border: 5px solid transparent; position: absolute; left: 7px } .el-table .sort-caret.ascending { border-bottom-color: #c0c4cc; top: 5px } .el-table .sort-caret.descending { border-top-color: #c0c4cc; bottom: 7px } .el-table .ascending .sort-caret.ascending { border-bottom-color: #409eff } .el-table .descending .sort-caret.descending { border-top-color: #409eff } .el-table .hidden-columns { visibility: hidden; position: absolute; z-index: -1 } .el-table--striped .el-table__body tr.el-table__row--striped td.el-table__cell { background: #fafafa } .el-table--striped .el-table__body tr.el-table__row--striped.current-row td.el-table__cell { background-color: #ecf5ff } .el-table__body tr.hover-row.current-row>td.el-table__cell, .el-table__body tr.hover-row.el-table__row--striped.current-row>td.el-table__cell, .el-table__body tr.hover-row.el-table__row--striped>td.el-table__cell, .el-table__body tr.hover-row>td.el-table__cell { background-color: #f5f7fa } .el-table__body tr.current-row>td.el-table__cell { background-color: #ecf5ff } .el-table__column-resize-proxy { position: absolute; left: 200px; top: 0; bottom: 0; width: 0; border-left: 1px solid #ebeef5; z-index: 10 } .el-table__column-filter-trigger { display: inline-block; line-height: 34px; cursor: pointer } .el-table__column-filter-trigger i { color: #909399; font-size: 12px; -webkit-transform: scale(.75); transform: scale(.75) } .el-table--enable-row-transition .el-table__body td.el-table__cell { -webkit-transition: background-color .25s ease; transition: background-color .25s ease } .el-table--enable-row-hover .el-table__body tr:hover>td.el-table__cell { background-color: #f5f7fa } .el-table--fluid-height .el-table__fixed, .el-table--fluid-height .el-table__fixed-right { bottom: 0; overflow: hidden } .el-table [class*=el-table__row--level] .el-table__expand-icon { display: inline-block; width: 20px; line-height: 20px; height: 20px; text-align: center; margin-right: 3px } .el-textarea { position: relative; display: inline-block; width: 100%; vertical-align: bottom; font-size: 14px } .el-textarea__inner { display: block; resize: vertical; padding: 5px 15px; line-height: 1.5; -webkit-box-sizing: border-box; box-sizing: border-box; width: 100%; font-size: inherit; color: #606266; background-color: #fff; background-image: none; border: 1px solid #dcdfe6; border-radius: 4px; -webkit-transition: border-color .2s cubic-bezier(.645, .045, .355, 1); transition: border-color .2s cubic-bezier(.645, .045, .355, 1) } .el-textarea__inner::-webkit-input-placeholder { color: #c0c4cc } .el-textarea__inner:-ms-input-placeholder { color: #c0c4cc } .el-textarea__inner::-ms-input-placeholder { color: #c0c4cc } .el-textarea__inner::-moz-placeholder { color: #c0c4cc } .el-textarea__inner::placeholder { color: #c0c4cc } .el-textarea__inner:hover { border-color: #c0c4cc } .el-textarea__inner:focus { outline: 0; border-color: #409eff } .el-textarea .el-input__count { color: #909399; background: #fff; position: absolute; font-size: 12px; bottom: 5px; right: 10px } .el-textarea.is-disabled .el-textarea__inner { background-color: #f5f7fa; border-color: #e4e7ed; color: #c0c4cc; cursor: not-allowed } .el-textarea.is-disabled .el-textarea__inner::-webkit-input-placeholder { color: #c0c4cc } .el-textarea.is-disabled .el-textarea__inner:-ms-input-placeholder { color: #c0c4cc } .el-textarea.is-disabled .el-textarea__inner::-ms-input-placeholder { color: #c0c4cc } .el-textarea.is-disabled .el-textarea__inner::-moz-placeholder { color: #c0c4cc } .el-textarea.is-disabled .el-textarea__inner::placeholder { color: #c0c4cc } .el-textarea.is-exceed .el-textarea__inner { border-color: #f56c6c } .el-textarea.is-exceed .el-input__count { color: #f56c6c } .el-input { position: relative; font-size: 14px; display: inline-block; width: 100% } .el-input::-webkit-scrollbar { z-index: 11; width: 6px } .el-input::-webkit-scrollbar:horizontal { height: 6px } .el-input::-webkit-scrollbar-thumb { border-radius: 5px; width: 6px; background: #b4bccc } .el-input::-webkit-scrollbar-corner, .el-input::-webkit-scrollbar-track { background: #fff } .el-input::-webkit-scrollbar-track-piece { background: #fff; width: 6px } .el-input .el-input__clear { color: #c0c4cc; font-size: 14px; cursor: pointer; -webkit-transition: color .2s cubic-bezier(.645, .045, .355, 1); transition: color .2s cubic-bezier(.645, .045, .355, 1) } .el-input .el-input__clear:hover { color: #909399 } .el-input .el-input__count { height: 100%; display: -webkit-inline-box; display: -ms-inline-flexbox; display: inline-flex; -webkit-box-align: center; -ms-flex-align: center; align-items: center; color: #909399; font-size: 12px } .el-input .el-input__count .el-input__count-inner { background: #fff; line-height: normal; display: inline-block; padding: 0 5px } .el-input__inner { -webkit-appearance: none; background-color: #fff; background-image: none; border-radius: 4px; border: 1px solid #dcdfe6; -webkit-box-sizing: border-box; box-sizing: border-box; color: #606266; display: inline-block; font-size: inherit; height: 40px; line-height: 40px; outline: 0; padding: 0 15px; -webkit-transition: border-color .2s cubic-bezier(.645, .045, .355, 1); transition: border-color .2s cubic-bezier(.645, .045, .355, 1); width: 100% } .el-input__prefix, .el-input__suffix { position: absolute; top: 0; -webkit-transition: all .3s; text-align: center; height: 100%; color: #c0c4cc } .el-input__inner::-ms-reveal { display: none } .el-input__inner::-webkit-input-placeholder { color: #c0c4cc } .el-input__inner:-ms-input-placeholder { color: #c0c4cc } .el-input__inner::-ms-input-placeholder { color: #c0c4cc } .el-input__inner::-moz-placeholder { color: #c0c4cc } .el-input__inner::placeholder { color: #c0c4cc } .el-input__inner:hover { border-color: #c0c4cc } .el-input.is-active .el-input__inner, .el-input__inner:focus { border-color: #409eff; outline: 0 } .el-input__suffix { right: 5px; -webkit-transition: all .3s; transition: all .3s; pointer-events: none } .el-input__suffix-inner { pointer-events: all } .el-input__prefix { left: 5px } .el-input__icon, .el-input__prefix { -webkit-transition: all .3s; transition: all .3s } .el-input__icon { height: 100%; width: 25px; text-align: center; line-height: 40px } .el-input__icon:after { content: \"\"; height: 100%; width: 0; display: inline-block; vertical-align: middle } .el-input__validateIcon { pointer-events: none } .el-input.is-disabled .el-input__inner { background-color: #f5f7fa; border-color: #e4e7ed; color: #c0c4cc; cursor: not-allowed } .el-input.is-disabled .el-input__inner::-webkit-input-placeholder { color: #c0c4cc } .el-input.is-disabled .el-input__inner:-ms-input-placeholder { color: #c0c4cc } .el-input.is-disabled .el-input__inner::-ms-input-placeholder { color: #c0c4cc } .el-input.is-disabled .el-input__inner::-moz-placeholder { color: #c0c4cc } .el-input.is-disabled .el-input__inner::placeholder { color: #c0c4cc } .el-input.is-disabled .el-input__icon { cursor: not-allowed } .el-input.is-exceed .el-input__inner { border-color: #f56c6c } .el-input.is-exceed .el-input__suffix .el-input__count { color: #f56c6c } .el-input--suffix .el-input__inner { padding-right: 30px } .el-input--prefix .el-input__inner { padding-left: 30px } .el-input--medium { font-size: 14px } .el-input--medium .el-input__inner { height: 36px; line-height: 36px } .el-input--medium .el-input__icon { line-height: 36px } .el-input--small { font-size: 13px } .el-input--small .el-input__inner { height: 32px; line-height: 32px } .el-input--small .el-input__icon { line-height: 32px } .el-input--mini { font-size: 12px } .el-input--mini .el-input__inner { height: 28px; line-height: 28px } .el-input--mini .el-input__icon { line-height: 28px } .el-input-group { line-height: normal; display: inline-table; width: 100%; border-collapse: separate; border-spacing: 0 } .el-input-group>.el-input__inner { vertical-align: middle; display: table-cell } .el-input-group__append, .el-input-group__prepend { background-color: #f5f7fa; color: #909399; vertical-align: middle; display: table-cell; position: relative; border: 1px solid #dcdfe6; border-radius: 4px; padding: 0 20px; width: 1px; white-space: nowrap } .el-input-group--prepend .el-input__inner, .el-input-group__append { border-top-left-radius: 0; border-bottom-left-radius: 0 } .el-input-group--append .el-input__inner, .el-input-group__prepend { border-top-right-radius: 0; border-bottom-right-radius: 0 } .el-input-group__append:focus, .el-input-group__prepend:focus { outline: 0 } .el-input-group__append .el-button, .el-input-group__append .el-select, .el-input-group__prepend .el-button, .el-input-group__prepend .el-select { display: inline-block; margin: -10px -20px } .el-input-group__append button.el-button, .el-input-group__append div.el-select .el-input__inner, .el-input-group__append div.el-select:hover .el-input__inner, .el-input-group__prepend button.el-button, .el-input-group__prepend div.el-select .el-input__inner, .el-input-group__prepend div.el-select:hover .el-input__inner { border-color: transparent; background-color: transparent; color: inherit; border-top: 0; border-bottom: 0 } .el-input-group__append .el-button, .el-input-group__append .el-input, .el-input-group__prepend .el-button, .el-input-group__prepend .el-input { font-size: inherit } .el-input-group__prepend { border-right: 0 } .el-input-group__append { border-left: 0 } .el-input-group--append .el-select .el-input.is-focus .el-input__inner, .el-input-group--prepend .el-select .el-input.is-focus .el-input__inner { border-color: transparent } .el-input__inner::-ms-clear { display: none; width: 0; height: 0 } .el-form--inline .el-form-item, .el-form--inline .el-form-item__content { display: inline-block; vertical-align: top } .el-form-item:after, .el-form-item__content:after { clear: both } .el-form--label-left .el-form-item__label { text-align: left } .el-form--label-top .el-form-item__label { float: none; display: inline-block; text-align: left; padding: 0 0 10px } .el-form--inline .el-form-item { margin-right: 10px } .el-form--inline .el-form-item__label { float: none; display: inline-block } .el-form--inline.el-form--label-top .el-form-item__content { display: block } .el-form-item { margin-bottom: 22px } .el-form-item:after, .el-form-item:before { display: table; content: \"\" } .el-form-item .el-form-item { margin-bottom: 0 } .el-form-item--mini.el-form-item, .el-form-item--small.el-form-item { margin-bottom: 18px } .el-form-item .el-input__validateIcon { display: none } .el-form-item--medium .el-form-item__content, .el-form-item--medium .el-form-item__label { line-height: 36px } .el-form-item--small .el-form-item__content, .el-form-item--small .el-form-item__label { line-height: 32px } .el-form-item--small .el-form-item__error { padding-top: 2px } .el-form-item--mini .el-form-item__content, .el-form-item--mini .el-form-item__label { line-height: 28px } .el-form-item--mini .el-form-item__error { padding-top: 1px } .el-form-item__label-wrap { float: left } .el-form-item__label-wrap .el-form-item__label { display: inline-block; float: none } .el-form-item__label { text-align: right; vertical-align: middle; float: left; font-size: 14px; color: #606266; line-height: 40px; padding: 0 12px 0 0; -webkit-box-sizing: border-box; box-sizing: border-box } .el-form-item__content { line-height: 40px; position: relative; font-size: 14px } .el-form-item__content:after, .el-form-item__content:before { display: table; content: \"\" } .el-form-item__content .el-input-group { vertical-align: top } .el-form-item__error { color: #f56c6c; font-size: 12px; line-height: 1; padding-top: 4px; position: absolute; top: 100%; left: 0 } .el-form-item__error--inline { position: relative; top: auto; left: auto; display: inline-block; margin-left: 10px } .el-form-item.is-required:not(.is-no-asterisk) .el-form-item__label-wrap>.el-form-item__label:before, .el-form-item.is-required:not(.is-no-asterisk)>.el-form-item__label:before { content: \"*\"; color: #f56c6c; margin-right: 4px } .el-form-item.is-error .el-input__inner, .el-form-item.is-error .el-input__inner:focus, .el-form-item.is-error .el-textarea__inner, .el-form-item.is-error .el-textarea__inner:focus { border-color: #f56c6c } .el-form-item.is-error .el-input-group__append .el-input__inner, .el-form-item.is-error .el-input-group__prepend .el-input__inner { border-color: transparent } .el-form-item.is-error .el-input__validateIcon { color: #f56c6c } .el-form-item--feedback .el-input__validateIcon { display: inline-block } .v-modal-enter { -webkit-animation: v-modal-in .2s ease; animation: v-modal-in .2s ease } .v-modal-leave { -webkit-animation: v-modal-out .2s ease forwards; animation: v-modal-out .2s ease forwards } @-webkit-keyframes v-modal-in { 0% { opacity: 0 } } @keyframes v-modal-in { 0% { opacity: 0 } } @-webkit-keyframes v-modal-out { to { opacity: 0 } } @keyframes v-modal-out { to { opacity: 0 } } .v-modal { position: fixed; left: 0; top: 0; width: 100%; height: 100%; opacity: .5; background: #000 } .el-popup-parent--hidden { overflow: hidden } .el-dialog { position: relative; margin: 0 auto 50px; background: #fff; border-radius: 2px; -webkit-box-shadow: 0 1px 3px rgba(0, 0, 0, .3); box-shadow: 0 1px 3px rgba(0, 0, 0, .3); -webkit-box-sizing: border-box; box-sizing: border-box; width: 50% } .el-dialog.is-fullscreen { width: 100%; margin-top: 0; margin-bottom: 0; height: 100%; overflow: auto } .el-dialog__wrapper { position: fixed; top: 0; right: 0; bottom: 0; left: 0; overflow: auto; margin: 0 } .el-dialog__header { padding: 20px 20px 10px } .el-dialog__headerbtn { position: absolute; top: 20px; right: 20px; padding: 0; background: 0 0; border: none; outline: 0; cursor: pointer; font-size: 16px } .el-dialog__headerbtn .el-dialog__close { color: #909399 } .el-dialog__headerbtn:focus .el-dialog__close, .el-dialog__headerbtn:hover .el-dialog__close { color: #409eff } .el-dialog__title { line-height: 24px; font-size: 18px; color: #303133 } .el-dialog__body { padding: 30px 20px; color: #606266; font-size: 14px; word-break: break-all } .el-dialog__footer { padding: 10px 20px 20px; text-align: right; -webkit-box-sizing: border-box; box-sizing: border-box } .el-dialog--center { text-align: center } .el-dialog--center .el-dialog__body { text-align: initial; padding: 25px 25px 30px } .el-dialog--center .el-dialog__footer { text-align: inherit } .dialog-fade-enter-active { -webkit-animation: dialog-fade-in .3s; animation: dialog-fade-in .3s } .dialog-fade-leave-active { -webkit-animation: dialog-fade-out .3s; animation: dialog-fade-out .3s } @-webkit-keyframes dialog-fade-in { 0% { -webkit-transform: translate3d(0, -20px, 0); transform: translate3d(0, -20px, 0); opacity: 0 } to { -webkit-transform: translateZ(0); transform: translateZ(0); opacity: 1 } } @keyframes dialog-fade-in { 0% { -webkit-transform: translate3d(0, -20px, 0); transform: translate3d(0, -20px, 0); opacity: 0 } to { -webkit-transform: translateZ(0); transform: translateZ(0); opacity: 1 } } @-webkit-keyframes dialog-fade-out { 0% { -webkit-transform: translateZ(0); transform: translateZ(0); opacity: 1 } to { -webkit-transform: translate3d(0, -20px, 0); transform: translate3d(0, -20px, 0); opacity: 0 } } @keyframes dialog-fade-out { 0% { -webkit-transform: translateZ(0); transform: translateZ(0); opacity: 1 } to { -webkit-transform: translate3d(0, -20px, 0); transform: translate3d(0, -20px, 0); opacity: 0 } } .el-button-group>.el-button.is-active, .el-button-group>.el-button.is-disabled, .el-button-group>.el-button:not(.is-disabled):active, .el-button-group>.el-button:not(.is-disabled):focus, .el-button-group>.el-button:not(.is-disabled):hover { z-index: 1 } .el-button { display: inline-block; line-height: 1; white-space: nowrap; cursor: pointer; background: #fff; border: 1px solid #dcdfe6; color: #606266; -webkit-appearance: none; text-align: center; -webkit-box-sizing: border-box; box-sizing: border-box; outline: 0; margin: 0; -webkit-transition: .1s; transition: .1s; font-weight: 500; -moz-user-select: none; -webkit-user-select: none; -ms-user-select: none; padding: 12px 20px; font-size: 14px; border-radius: 4px } .el-button+.el-button { margin-left: 10px } .el-button:focus, .el-button:hover { color: #409eff; border-color: #c6e2ff; background-color: #ecf5ff } .el-button:active { color: #3a8ee6; border-color: #3a8ee6; outline: 0 } .el-button::-moz-focus-inner { border: 0 } .el-button [class*=el-icon-]+span { margin-left: 5px } .el-button.is-plain:focus, .el-button.is-plain:hover { background: #fff; border-color: #409eff; color: #409eff } .el-button.is-active, .el-button.is-plain:active { color: #3a8ee6; border-color: #3a8ee6 } .el-button.is-plain:active { background: #fff; outline: 0 } .el-button.is-disabled, .el-button.is-disabled:focus, .el-button.is-disabled:hover { color: #c0c4cc; cursor: not-allowed; background-image: none; background-color: #fff; border-color: #ebeef5 } .el-button.is-disabled.el-button--text { background-color: transparent } .el-button.is-disabled.is-plain, .el-button.is-disabled.is-plain:focus, .el-button.is-disabled.is-plain:hover { background-color: #fff; border-color: #ebeef5; color: #c0c4cc } .el-button.is-loading { position: relative; pointer-events: none } .el-button.is-loading:before { pointer-events: none; content: \"\"; position: absolute; left: -1px; top: -1px; right: -1px; bottom: -1px; border-radius: inherit; background-color: hsla(0, 0%, 100%, .35) } .el-button.is-round { border-radius: 20px; padding: 12px 23px } .el-button.is-circle { border-radius: 50%; padding: 12px } .el-button--primary { color: #fff; background-color: #409eff; border-color: #409eff } .el-button--primary:focus, .el-button--primary:hover { background: #66b1ff; border-color: #66b1ff; color: #fff } .el-button--primary.is-active, .el-button--primary:active { background: #3a8ee6; border-color: #3a8ee6; color: #fff } .el-button--primary:active { outline: 0 } .el-button--primary.is-disabled, .el-button--primary.is-disabled:active, .el-button--primary.is-disabled:focus, .el-button--primary.is-disabled:hover { color: #fff; background-color: #a0cfff; border-color: #a0cfff } .el-button--primary.is-plain { color: #409eff; background: #ecf5ff; border-color: #b3d8ff } .el-button--primary.is-plain:focus, .el-button--primary.is-plain:hover { background: #409eff; border-color: #409eff; color: #fff } .el-button--primary.is-plain:active { background: #3a8ee6; border-color: #3a8ee6; color: #fff; outline: 0 } .el-button--primary.is-plain.is-disabled, .el-button--primary.is-plain.is-disabled:active, .el-button--primary.is-plain.is-disabled:focus, .el-button--primary.is-plain.is-disabled:hover { color: #8cc5ff; background-color: #ecf5ff; border-color: #d9ecff } .el-button--success { color: #fff; background-color: #67c23a; border-color: #67c23a } .el-button--success:focus, .el-button--success:hover { background: #85ce61; border-color: #85ce61; color: #fff } .el-button--success.is-active, .el-button--success:active { background: #5daf34; border-color: #5daf34; color: #fff } .el-button--success:active { outline: 0 } .el-button--success.is-disabled, .el-button--success.is-disabled:active, .el-button--success.is-disabled:focus, .el-button--success.is-disabled:hover { color: #fff; background-color: #b3e19d; border-color: #b3e19d } .el-button--success.is-plain { color: #67c23a; background: #f0f9eb; border-color: #c2e7b0 } .el-button--success.is-plain:focus, .el-button--success.is-plain:hover { background: #67c23a; border-color: #67c23a; color: #fff } .el-button--success.is-plain:active { background: #5daf34; border-color: #5daf34; color: #fff; outline: 0 } .el-button--success.is-plain.is-disabled, .el-button--success.is-plain.is-disabled:active, .el-button--success.is-plain.is-disabled:focus, .el-button--success.is-plain.is-disabled:hover { color: #a4da89; background-color: #f0f9eb; border-color: #e1f3d8 } .el-button--warning { color: #fff; background-color: #e6a23c; border-color: #e6a23c } .el-button--warning:focus, .el-button--warning:hover { background: #ebb563; border-color: #ebb563; color: #fff } .el-button--warning.is-active, .el-button--warning:active { background: #cf9236; border-color: #cf9236; color: #fff } .el-button--warning:active { outline: 0 } .el-button--warning.is-disabled, .el-button--warning.is-disabled:active, .el-button--warning.is-disabled:focus, .el-button--warning.is-disabled:hover { color: #fff; background-color: #f3d19e; border-color: #f3d19e } .el-button--warning.is-plain { color: #e6a23c; background: #fdf6ec; border-color: #f5dab1 } .el-button--warning.is-plain:focus, .el-button--warning.is-plain:hover { background: #e6a23c; border-color: #e6a23c; color: #fff } .el-button--warning.is-plain:active { background: #cf9236; border-color: #cf9236; color: #fff; outline: 0 } .el-button--warning.is-plain.is-disabled, .el-button--warning.is-plain.is-disabled:active, .el-button--warning.is-plain.is-disabled:focus, .el-button--warning.is-plain.is-disabled:hover { color: #f0c78a; background-color: #fdf6ec; border-color: #faecd8 } .el-button--danger { color: #fff; background-color: #f56c6c; border-color: #f56c6c } .el-button--danger:focus, .el-button--danger:hover { background: #f78989; border-color: #f78989; color: #fff } .el-button--danger.is-active, .el-button--danger:active { background: #dd6161; border-color: #dd6161; color: #fff } .el-button--danger:active { outline: 0 } .el-button--danger.is-disabled, .el-button--danger.is-disabled:active, .el-button--danger.is-disabled:focus, .el-button--danger.is-disabled:hover { color: #fff; background-color: #fab6b6; border-color: #fab6b6 } .el-button--danger.is-plain { color: #f56c6c; background: #fef0f0; border-color: #fbc4c4 } .el-button--danger.is-plain:focus, .el-button--danger.is-plain:hover { background: #f56c6c; border-color: #f56c6c; color: #fff } .el-button--danger.is-plain:active { background: #dd6161; border-color: #dd6161; color: #fff; outline: 0 } .el-button--danger.is-plain.is-disabled, .el-button--danger.is-plain.is-disabled:active, .el-button--danger.is-plain.is-disabled:focus, .el-button--danger.is-plain.is-disabled:hover { color: #f9a7a7; background-color: #fef0f0; border-color: #fde2e2 } .el-button--info { color: #fff; background-color: #909399; border-color: #909399 } .el-button--info:focus, .el-button--info:hover { background: #a6a9ad; border-color: #a6a9ad; color: #fff } .el-button--info.is-active, .el-button--info:active { background: #82848a; border-color: #82848a; color: #fff } .el-button--info:active { outline: 0 } .el-button--info.is-disabled, .el-button--info.is-disabled:active, .el-button--info.is-disabled:focus, .el-button--info.is-disabled:hover { color: #fff; background-color: #c8c9cc; border-color: #c8c9cc } .el-button--info.is-plain { color: #909399; background: #f4f4f5; border-color: #d3d4d6 } .el-button--info.is-plain:focus, .el-button--info.is-plain:hover { background: #909399; border-color: #909399; color: #fff } .el-button--info.is-plain:active { background: #82848a; border-color: #82848a; color: #fff; outline: 0 } .el-button--info.is-plain.is-disabled, .el-button--info.is-plain.is-disabled:active, .el-button--info.is-plain.is-disabled:focus, .el-button--info.is-plain.is-disabled:hover { color: #bcbec2; background-color: #f4f4f5; border-color: #e9e9eb } .el-button--text, .el-button--text.is-disabled, .el-button--text.is-disabled:focus, .el-button--text.is-disabled:hover, .el-button--text:active { border-color: transparent } .el-button--medium { padding: 10px 20px; font-size: 14px; border-radius: 4px } .el-button--mini, .el-button--small { font-size: 12px; border-radius: 3px } .el-button--medium.is-round { padding: 10px 20px } .el-button--medium.is-circle { padding: 10px } .el-button--small, .el-button--small.is-round { padding: 9px 15px } .el-button--small.is-circle { padding: 9px } .el-button--mini, .el-button--mini.is-round { padding: 7px 15px } .el-button--mini.is-circle { padding: 7px } .el-button--text { color: #409eff; background: 0 0; padding-left: 0; padding-right: 0 } .el-button--text:focus, .el-button--text:hover { color: #66b1ff; border-color: transparent; background-color: transparent } .el-button--text:active { color: #3a8ee6; background-color: transparent } .el-button-group { display: inline-block; vertical-align: middle } .el-button-group:after, .el-button-group:before { display: table; content: \"\" } .el-button-group:after { clear: both } .el-button-group>.el-button { float: left; position: relative } .el-button-group>.el-button+.el-button { margin-left: 0 } .el-button-group>.el-button:first-child { border-top-right-radius: 0; border-bottom-right-radius: 0 } .el-button-group>.el-button:last-child { border-top-left-radius: 0; border-bottom-left-radius: 0 } .el-button-group>.el-button:first-child:last-child { border-radius: 4px } .el-button-group>.el-button:first-child:last-child.is-round { border-radius: 20px } .el-button-group>.el-button:first-child:last-child.is-circle { border-radius: 50% } .el-button-group>.el-button:not(:first-child):not(:last-child) { border-radius: 0 } .el-button-group>.el-button:not(:last-child) { margin-right: -1px } .el-button-group>.el-dropdown>.el-button { border-top-left-radius: 0; border-bottom-left-radius: 0; border-left-color: hsla(0, 0%, 100%, .5) } .el-button-group .el-button--primary:first-child { border-right-color: hsla(0, 0%, 100%, .5) } .el-button-group .el-button--primary:last-child { border-left-color: hsla(0, 0%, 100%, .5) } .el-button-group .el-button--primary:not(:first-child):not(:last-child) { border-left-color: hsla(0, 0%, 100%, .5); border-right-color: hsla(0, 0%, 100%, .5) } .el-button-group .el-button--success:first-child { border-right-color: hsla(0, 0%, 100%, .5) } .el-button-group .el-button--success:last-child { border-left-color: hsla(0, 0%, 100%, .5) } .el-button-group .el-button--success:not(:first-child):not(:last-child) { border-left-color: hsla(0, 0%, 100%, .5); border-right-color: hsla(0, 0%, 100%, .5) } .el-button-group .el-button--warning:first-child { border-right-color: hsla(0, 0%, 100%, .5) } .el-button-group .el-button--warning:last-child { border-left-color: hsla(0, 0%, 100%, .5) } .el-button-group .el-button--warning:not(:first-child):not(:last-child) { border-left-color: hsla(0, 0%, 100%, .5); border-right-color: hsla(0, 0%, 100%, .5) } .el-button-group .el-button--danger:first-child { border-right-color: hsla(0, 0%, 100%, .5) } .el-button-group .el-button--danger:last-child { border-left-color: hsla(0, 0%, 100%, .5) } .el-button-group .el-button--danger:not(:first-child):not(:last-child) { border-left-color: hsla(0, 0%, 100%, .5); border-right-color: hsla(0, 0%, 100%, .5) } .el-button-group .el-button--info:first-child { border-right-color: hsla(0, 0%, 100%, .5) } .el-button-group .el-button--info:last-child { border-left-color: hsla(0, 0%, 100%, .5) } .el-button-group .el-button--info:not(:first-child):not(:last-child) { border-left-color: hsla(0, 0%, 100%, .5); border-right-color: hsla(0, 0%, 100%, .5) } .el-image__error, .el-image__placeholder { background: #f5f7fa } .el-image__error, .el-image__inner, .el-image__placeholder { width: 100%; height: 100% } .el-image { position: relative; display: inline-block; overflow: hidden } .el-image__inner { vertical-align: top } .el-image__inner--center { position: relative; top: 50%; left: 50%; -webkit-transform: translate(-50%, -50%); transform: translate(-50%, -50%); display: block } .el-image__error { display: -webkit-box; display: -ms-flexbox; display: flex; -webkit-box-pack: center; -ms-flex-pack: center; justify-content: center; -webkit-box-align: center; -ms-flex-align: center; align-items: center; font-size: 14px; color: #c0c4cc; vertical-align: middle } .el-image__preview { cursor: pointer } .el-image-viewer__wrapper { position: fixed; top: 0; right: 0; bottom: 0; left: 0 } .el-image-viewer__btn { position: absolute; z-index: 1; display: -webkit-box; display: -ms-flexbox; display: flex; -webkit-box-align: center; -ms-flex-align: center; align-items: center; -webkit-box-pack: center; -ms-flex-pack: center; justify-content: center; border-radius: 50%; opacity: .8; cursor: pointer; -webkit-box-sizing: border-box; box-sizing: border-box; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none } .el-image-viewer__close { top: 40px; right: 40px; width: 40px; height: 40px; font-size: 24px; color: #fff; background-color: #606266 } .el-image-viewer__canvas { width: 100%; height: 100%; display: -webkit-box; display: -ms-flexbox; display: flex; -webkit-box-pack: center; -ms-flex-pack: center; justify-content: center; -webkit-box-align: center; -ms-flex-align: center; align-items: center } .el-image-viewer__actions { left: 50%; bottom: 30px; -webkit-transform: translateX(-50%); transform: translateX(-50%); width: 282px; height: 44px; padding: 0 23px; background-color: #606266; border-color: #fff; border-radius: 22px } .el-image-viewer__actions__inner { width: 100%; height: 100%; text-align: justify; cursor: default; font-size: 23px; color: #fff; display: -webkit-box; display: -ms-flexbox; display: flex; -webkit-box-align: center; -ms-flex-align: center; align-items: center; -ms-flex-pack: distribute; justify-content: space-around } .el-image-viewer__next, .el-image-viewer__prev { top: 50%; width: 44px; height: 44px; font-size: 24px; color: #fff; background-color: #606266; border-color: #fff } .el-image-viewer__prev { left: 40px } .el-image-viewer__next, .el-image-viewer__prev { -webkit-transform: translateY(-50%); transform: translateY(-50%) } .el-image-viewer__next { right: 40px; text-indent: 2px } .el-image-viewer__mask { position: absolute; width: 100%; height: 100%; top: 0; left: 0; opacity: .5; background: #000 } .viewer-fade-enter-active { -webkit-animation: viewer-fade-in .3s; animation: viewer-fade-in .3s } .viewer-fade-leave-active { -webkit-animation: viewer-fade-out .3s; animation: viewer-fade-out .3s } @-webkit-keyframes viewer-fade-in { 0% { -webkit-transform: translate3d(0, -20px, 0); transform: translate3d(0, -20px, 0); opacity: 0 } to { -webkit-transform: translateZ(0); transform: translateZ(0); opacity: 1 } } @keyframes viewer-fade-in { 0% { -webkit-transform: translate3d(0, -20px, 0); transform: translate3d(0, -20px, 0); opacity: 0 } to { -webkit-transform: translateZ(0); transform: translateZ(0); opacity: 1 } } @-webkit-keyframes viewer-fade-out { 0% { -webkit-transform: translateZ(0); transform: translateZ(0); opacity: 1 } to { -webkit-transform: translate3d(0, -20px, 0); transform: translate3d(0, -20px, 0); opacity: 0 } } @keyframes viewer-fade-out { 0% { -webkit-transform: translateZ(0); transform: translateZ(0); opacity: 1 } to { -webkit-transform: translate3d(0, -20px, 0); transform: translate3d(0, -20px, 0); opacity: 0 } } .el-link { display: -webkit-inline-box; display: -ms-inline-flexbox; display: inline-flex; -webkit-box-orient: horizontal; -webkit-box-direction: normal; -ms-flex-direction: row; flex-direction: row; -webkit-box-align: center; -ms-flex-align: center; align-items: center; -webkit-box-pack: center; -ms-flex-pack: center; justify-content: center; vertical-align: middle; position: relative; text-decoration: none; outline: 0; cursor: pointer; padding: 0; font-size: 14px; font-weight: 500 } .el-link.is-underline:hover:after { content: \"\"; position: absolute; left: 0; right: 0; height: 0; bottom: 0; border-bottom: 1px solid #409eff } .el-link.el-link--default:after, .el-link.el-link--primary.is-underline:hover:after, .el-link.el-link--primary:after { border-color: #409eff } .el-link.is-disabled { cursor: not-allowed } .el-link [class*=el-icon-]+span { margin-left: 5px } .el-link.el-link--default { color: #606266 } .el-link.el-link--default:hover { color: #409eff } .el-link.el-link--default.is-disabled { color: #c0c4cc } .el-link.el-link--primary { color: #409eff } .el-link.el-link--primary:hover { color: #66b1ff } .el-link.el-link--primary.is-disabled { color: #a0cfff } .el-link.el-link--danger.is-underline:hover:after, .el-link.el-link--danger:after { border-color: #f56c6c } .el-link.el-link--danger { color: #f56c6c } .el-link.el-link--danger:hover { color: #f78989 } .el-link.el-link--danger.is-disabled { color: #fab6b6 } .el-link.el-link--success.is-underline:hover:after, .el-link.el-link--success:after { border-color: #67c23a } .el-link.el-link--success { color: #67c23a } .el-link.el-link--success:hover { color: #85ce61 } .el-link.el-link--success.is-disabled { color: #b3e19d } .el-link.el-link--warning.is-underline:hover:after, .el-link.el-link--warning:after { border-color: #e6a23c } .el-link.el-link--warning { color: #e6a23c } .el-link.el-link--warning:hover { color: #ebb563 } .el-link.el-link--warning.is-disabled { color: #f3d19e } .el-link.el-link--info.is-underline:hover:after, .el-link.el-link--info:after { border-color: #909399 } .el-link.el-link--info { color: #909399 } .el-link.el-link--info:hover { color: #a6a9ad } .el-link.el-link--info.is-disabled { color: #c8c9cc }"},{"title":"","date":"2023-10-06T09:03:23.967Z","updated":"2023-10-06T08:02:12.000Z","comments":true,"path":"mypage/js/app.e29ffaed.js","permalink":"http://www.shelven.com/mypage/js/app.e29ffaed.js","excerpt":"","text":"(function (e) { function t(t) { for ( var n, c, o = t[0], s = t[1], u = t[2], d = 0, f = []; d < o.length; d++ ) (c = o[d]), Object.prototype.hasOwnProperty.call(i, c) && i[c] && f.push(i[c][0]), (i[c] = 0); for (n in s) Object.prototype.hasOwnProperty.call(s, n) && (e[n] = s[n]); l && l(t); while (f.length) f.shift()(); return a.push.apply(a, u || []), r(); } function r() { for (var e, t = 0; t < a.length; t++) { for (var r = a[t], n = !0, o = 1; o < r.length; o++) { var s = r[o]; 0 !== i[s] && (n = !1); } n && (a.splice(t--, 1), (e = c((c.s = r[0])))); } return e; } var n = {}, i = { app: 0 }, a = []; function c(t) { if (n[t]) return n[t].exports; var r = (n[t] = { i: t, l: !1, exports: {} }); return e[t].call(r.exports, r, r.exports, c), (r.l = !0), r.exports; } (c.m = e), (c.c = n), (c.d = function (e, t, r) { c.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: r }); }), (c.r = function (e) { \"undefined\" !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: \"Module\" }), Object.defineProperty(e, \"__esModule\", { value: !0 }); }), (c.t = function (e, t) { if ((1 & t && (e = c(e)), 8 & t)) return e; if (4 & t && \"object\" === typeof e && e && e.__esModule) return e; var r = Object.create(null); if ( (c.r(r), Object.defineProperty(r, \"default\", { enumerable: !0, value: e }), 2 & t && \"string\" != typeof e) ) for (var n in e) c.d( r, n, function (t) { return e[t]; }.bind(null, n) ); return r; }), (c.n = function (e) { var t = e && e.__esModule ? function () { return e[\"default\"]; } : function () { return e; }; return c.d(t, \"a\", t), t; }), (c.o = function (e, t) { return Object.prototype.hasOwnProperty.call(e, t); }), (c.p = \"\"); var o = (window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []), s = o.push.bind(o); (o.push = t), (o = o.slice()); for (var u = 0; u < o.length; u++) t(o[u]); var l = s; a.push([0, \"chunk-vendors\"]), r(); })({ 0: function (e, t, r) { e.exports = r(\"cd49\"); }, \"0565\": function (e, t, r) { \"use strict\"; (function (e) { var n = r(\"1da1\"), i = (r(\"96cf\"), r(\"99af\"), r(\"b0c0\"), r(\"7327\")), a = r(\"731b\"), c = r(\"25f1\"), o = r(\"507a\"), s = r(\"73ec\"), u = r(\"b7c7\"); t[\"a\"] = { name: \"FileSelector\", data: function () { return { task_all: 0, task_finished: 0, queue: new s[\"a\"](), parallel: !1, }; }, computed: { progress_value: function () { return this.task_all ? (this.task_finished / this.task_all) * 100 : 0; }, progress_show: function () { return this.task_all !== this.task_finished; }, }, mounted: function () { window.Worker && \"file:\" !== window.location.protocol ? (console.log(\"Using Worker Pool\"), (this.queue = Object(i[\"a\"])(function () { return Object(a[\"a\"])(new c[\"a\"](e)); }, navigator.hardwareConcurrency || 1)), (this.parallel = !0)) : console.log(\"Using Queue in Main Thread\"); }, methods: { progress_string: function () { return \"\".concat(this.task_finished, \" / \").concat(this.task_all); }, addFile: function (e) { var t = this; return Object(n[\"a\"])( regeneratorRuntime.mark(function r() { return regeneratorRuntime.wrap(function (r) { while (1) switch ((r.prev = r.next)) { case 0: t.task_all++, t.queue.queue( Object(n[\"a\"])( regeneratorRuntime.mark(function r() { var n, i = arguments; return regeneratorRuntime.wrap( function (r) { while (1) switch ((r.prev = r.next)) { case 0: return ( (n = i.length > 0 && void 0 !== i[0] ? i[0] : o[\"a\"]), console.log( \"start handling\", e.name ), (r.prev = 2), (r.t0 = t), (r.t1 = n), (r.t2 = e), (r.next = 8), u[\"a\"].getAll() ); case 8: return ( (r.t3 = r.sent), (r.next = 11), (0, r.t1)(r.t2, r.t3) ); case 11: (r.t4 = r.sent), r.t0.$emit.call( r.t0, \"success\", r.t4 ), (r.next = 19); break; case 15: (r.prev = 15), (r.t5 = r[\"catch\"](2)), console.error(r.t5), t.$emit(\"error\", r.t5, e.name); case 19: return ( (r.prev = 19), t.task_finished++, r.finish(19) ); case 22: case \"end\": return r.stop(); } }, r, null, [[2, 15, 19, 22]] ); }) ) ); case 2: case \"end\": return r.stop(); } }, r); }) )(); }, }, }; }).call(this, r(\"2e83\")); }, \"0ba7\": function (e, t, r) { \"use strict\"; r.d(t, \"a\", function () { return c; }); r(\"d3b7\"), r(\"ace4\"), r(\"5cc6\"), r(\"907a\"), r(\"9a8c\"), r(\"a975\"), r(\"735e\"), r(\"c1ac\"), r(\"d139\"), r(\"3a7b\"), r(\"d5d6\"), r(\"82f8\"), r(\"e91f\"), r(\"60bd\"), r(\"5f96\"), r(\"3280\"), r(\"3fcc\"), r(\"ca91\"), r(\"25a1\"), r(\"cd26\"), r(\"3c5d\"), r(\"2954\"), r(\"649e\"), r(\"219c\"), r(\"170b\"), r(\"b39a\"), r(\"72f7\"), r(\"3ca3\"), r(\"ddb0\"), r(\"2b3d\"), r(\"9861\"); var n = r(\"9ab4\"), i = r(\"cc74\"), a = r(\"cb96\"); function c(e, t, r, c) { return ( void 0 === c && (c = !0), Object(n[\"a\"])(this, void 0, Promise, function () { var o, s, u, l, d, f, m; return Object(n[\"c\"])(this, function (n) { switch (n.label) { case 0: return ( (o = r), c ? ((u = Uint8Array.bind), [4, Object(i[\"c\"])(e)]) : [3, 2] ); case 1: (s = new (u.apply(Uint8Array, [void 0, n.sent()]))()), (o = Object(i[\"i\"])(s, r)), o !== r && (e = new Blob([s], { type: i[\"a\"][o] })), (n.label = 2); case 2: return [4, Object(a[\"parseBlob\"])(e)]; case 3: return ( (l = n.sent()), (d = Object(i[\"f\"])( t, l.common.title, String(l.common.artists || l.common.artist || \"\") )), (f = d.title), (m = d.artist), [ 2, { title: f, artist: m, ext: o, album: l.common.album, picture: Object(i[\"d\"])(l), file: URL.createObjectURL(e), blob: e, mime: i[\"a\"][o], }, ] ); } }); }) ); } }, \"0f92\": function (e, t, r) { \"use strict\"; (function (e) { r.d(t, \"a\", function () { return l; }); r(\"d3b7\"), r(\"a15b\"), r(\"d81d\"), r(\"ac1f\"), r(\"1276\"), r(\"b0c0\"); var n = r(\"9ab4\"), i = r(\"cb96\"), a = r(\"acf9\"), c = r.n(a), o = r(\"cc74\"), s = r(\"97e5\"), u = function (t) { return c.a.decode(new e(t || \"\"), \"gbk\"); }; function l(e, t, r, a) { return Object(n[\"a\"])(this, void 0, Promise, function () { var c, s, l, b, p; return Object(n[\"c\"])(this, function (n) { switch (n.label) { case 0: return [4, Object(i[\"parseBlob\"])(e)]; case 1: for (s in ((c = n.sent()), c.native)) c.native.hasOwnProperty(s) && c.native[s].some(function (e) { return \"TCON\" === e.id && \"(12)\" === e.value; }) && (console.warn(\"try using gbk encoding to decode meta\"), (c.common.artist = \"\"), c.common.artists ? (c.common.artist = c.common.artists.map(u).join()) : (c.common.artist = u(c.common.artist)), (c.common.title = u(c.common.title)), (c.common.album = u(c.common.album))); if (a && \"0\" !== a) try { return [2, d(a, r, c, e)]; } catch (v) { console.warn( \"在线获取曲目信息失败，回退到本地 meta 提取\", v ); } return ( (l = Object(o[\"f\"])(t, c.common.title, c.common.artist)), (l.artist = l.artist || \"\"), (b = Object(o[\"d\"])(c)), b ? [3, 3] : [4, f(l.title, l.artist, c.common.album)] ); case 2: (b = n.sent()), (n.label = 3); case 3: return ( (p = { title: l.title, artist: l.artist, album: c.common.album || \"\", imgUrl: b, }), [ 4, m({ title: l.title, artists: l.artist.split(o[\"m\"]), ext: r, imageURL: b, musicMeta: c, blob: e, }), ] ); case 4: return [2, ((p.blob = n.sent()), p)]; } }); }); } function d(e, t, r, i) { return Object(n[\"a\"])(this, void 0, Promise, function () { var a, c, o, u; return Object(n[\"c\"])(this, function (n) { switch (n.label) { case 0: return [4, Object(s[\"d\"])(e)]; case 1: return ( (a = n.sent()), (c = Object(s[\"b\"])(a.track_info.album.pmid)), (o = a.track_info.singer.map(function (e) { return e.name; })), (u = { title: a.track_info.title, artist: o.join(\",\"), album: a.track_info.album.name, imgUrl: c, }), [ 4, m({ title: a.track_info.title, artists: o, ext: t, imageURL: c, musicMeta: r, blob: i, }), ] ); case 2: return [2, ((u.blob = n.sent()), u)]; } }); }); } function f(e, t, r) { return Object(n[\"a\"])(this, void 0, Promise, function () { var i, a; return Object(n[\"c\"])(this, function (n) { switch (n.label) { case 0: return n.trys.push([0, 2, , 3]), [4, Object(s[\"c\"])(e, t, r)]; case 1: return (i = n.sent()), [2, Object(s[\"b\"])(i.Id, i.Type)]; case 2: return (a = n.sent()), console.warn(a), [3, 3]; case 3: return [2, \"\"]; } }); }); } function m(t) { return Object(n[\"a\"])(this, void 0, Promise, function () { var r, i, a, c, s, u, l; return Object(n[\"c\"])(this, function (n) { switch (n.label) { case 0: return ( n.trys.push([0, 3, , 4]), [4, Object(o[\"e\"])(t.imageURL)] ); case 1: return ( (r = n.sent()), r || console.warn(\"获取图像失败\"), (i = { picture: null === r || void 0 === r ? void 0 : r.buffer, title: t.title, artists: t.artists, }), (s = (c = e).from), [4, t.blob.arrayBuffer()] ); case 2: return ( (a = s.apply(c, [n.sent()])), (u = o[\"a\"][t.ext] || o[\"a\"].mp3), \"mp3\" === t.ext ? [ 2, new Blob([Object(o[\"l\"])(a, i, t.musicMeta)], { type: u, }), ] : \"flac\" === t.ext ? [ 2, new Blob([Object(o[\"k\"])(a, i, t.musicMeta)], { type: u, }), ] : (console.info( \"writing metadata for \" + t.ext + \" is not being supported for now\" ), [3, 4]) ); case 3: return ( (l = n.sent()), console.warn( \"Error while appending cover image to file \" + l ), [3, 4] ); case 4: return [2, t.blob]; } }); }); } }).call(this, r(\"1c35\").Buffer); }, 1: function (e, t) {}, 2: function (e, t) {}, \"2e83\": function (e, t, r) { e.exports = r.p + \"js/0.bb00e0b9.worker.js\"; }, 3: function (e, t) {}, \"321b\": function (e, t, r) { \"use strict\"; (function (e) { var n = r(\"1da1\"), i = (r(\"96cf\"), r(\"e9c4\"), r(\"d3b7\"), r(\"159b\"), r(\"3ca3\"), r(\"ddb0\"), r(\"2b3d\"), r(\"9861\"), r(\"ac1f\"), r(\"1276\"), r(\"25f0\"), r(\"ab8f\")), a = r(\"af85\"), c = r(\"730d\"), o = r(\"d4ec\"), s = r(\"73ec\"), u = r(\"cc74\"), l = r(\"cb96\"); t[\"a\"] = { name: \"Home\", components: { FileSelector: i[\"a\"], PreviewTable: a[\"a\"], ConfigDialog: c[\"a\"], EditDialog: o[\"a\"], }, data: function () { return { showConfigDialog: !1, showEditDialog: !1, editing_data: { picture: \"\", title: \"\", artist: \"\", album: \"\", albumartist: \"\", genre: \"\", }, tableData: [], playing_url: \"\", playing_auto: !1, filename_policy: s[\"e\"].ArtistAndTitle, instant_save: !1, FilenamePolicies: s[\"d\"], dir: null, }; }, watch: { instant_save: function (e) { e && this.showDirectlySave(); }, }, methods: { showSuccess: function (e) { var t = this; return Object(n[\"a\"])( regeneratorRuntime.mark(function r() { var n; return regeneratorRuntime.wrap(function (r) { while (1) switch ((r.prev = r.next)) { case 0: if (!t.instant_save) { r.next = 6; break; } return (r.next = 3), t.saveFile(e); case 3: Object(s[\"f\"])(e), (r.next = 8); break; case 6: t.tableData.push(e), t.$notify.success({ title: \"解析成功!\", message: \"成功解析 \" + e.title, duration: 3e3, }); case 8: (n = [e.title, e.artist, e.album]), window._paq.push([ \"trackEvent\", \"Unlock\", e.rawExt + \",\" + e.mime, JSON.stringify(n), ]); case 9: case \"end\": return r.stop(); } }, r); }) )(); }, showFail: function (e, t) { console.error(e, t), this.$notify.error({ title: \"出现问题\", message: e + \"，\" + t + '，参考使用提示', dangerouslyUseHTMLString: !0, duration: 6e3, }), window._paq.push([\"trackEvent\", \"Error\", String(e), t]); }, changePlaying: function (e) { (this.playing_url = e), (this.playing_auto = !0); }, handleDeleteAll: function () { this.tableData.forEach(function (e) { Object(s[\"f\"])(e); }), (this.tableData = []); }, handleDecryptionConfig: function () { this.showConfigDialog = !0; }, handleDownloadAll: function () { var e = this, t = 0, r = setInterval(function () { t < e.tableData.length ? (e.saveFile(e.tableData[t]), t++) : clearInterval(r); }, 300); }, handleEdit: function (t) { var r = this; return Object(n[\"a\"])( regeneratorRuntime.mark(function n() { var i, a, c, o, s, d, f, m; return regeneratorRuntime.wrap( function (n) { while (1) switch ((n.prev = n.next)) { case 0: return ( (r.showEditDialog = !1), URL.revokeObjectURL(r.editing_data.file), t.picture && (URL.revokeObjectURL(r.editing_data.picture), (r.editing_data.picture = URL.createObjectURL( t.picture ))), (r.editing_data.title = t.title), (r.editing_data.artist = t.artist), (r.editing_data.album = t.album), (i = !0), (a = \"成功修改 \" + r.editing_data.title), (n.prev = 8), (n.next = 11), Object(l[\"parseBlob\"])( new Blob([r.editing_data.blob], { type: m }) ) ); case 11: if ( ((o = n.sent), (s = void 0), \"\" === r.editing_data.picture) ) { n.next = 18; break; } return ( (n.next = 16), Object(u[\"e\"])(r.editing_data.picture) ); case 16: (s = n.sent), s || console.warn( \"获取图像失败\", r.editing_data.picture ); case 18: return ( (d = { picture: null === (c = s) || void 0 === c ? void 0 : c.buffer, title: t.title, artists: t.artist.split(u[\"m\"]), album: t.album, albumartist: t.albumartist, genre: t.genre.split(u[\"m\"]), }), (n.t0 = e), (n.next = 22), r.editing_data.blob.arrayBuffer() ); case 22: (n.t1 = n.sent), (f = n.t0.from.call(n.t0, n.t1)), (m = u[\"a\"][r.editing_data.ext] || u[\"a\"].mp3), \"mp3\" === r.editing_data.ext ? (r.editing_data.blob = new Blob( [Object(u[\"h\"])(f, d, o)], { type: m } )) : \"flac\" === r.editing_data.ext ? (r.editing_data.blob = new Blob( [Object(u[\"g\"])(f, d, o)], { type: m } )) : ((i = void 0), (a = r.editing_data.ext + \"类型文件暂时不支持修改音乐标签\")), (n.next = 32); break; case 28: (n.prev = 28), (n.t2 = n[\"catch\"](8)), (i = !1), (a = \"修改\" + r.editing_data.title + \"未能完成。在写入新的元数据时发生错误：\" + n.t2); case 32: (r.editing_data.file = URL.createObjectURL( r.editing_data.blob )), !0 === i ? r.$notify.success({ title: \"修改成功\", message: a, duration: 3e3, }) : !1 === i ? r.$notify.error({ title: \"修改失败\", message: a, duration: 3e3, }) : r.$notify.warning({ title: \"修改取消\", message: a, duration: 3e3, }); case 34: case \"end\": return n.stop(); } }, n, null, [[8, 28]] ); }) )(); }, editFile: function (e) { var t = this; return Object(n[\"a\"])( regeneratorRuntime.mark(function r() { var n, i; return regeneratorRuntime.wrap(function (r) { while (1) switch ((r.prev = r.next)) { case 0: return ( (t.editing_data = e), (r.next = 3), Object(l[\"parseBlob\"])(t.editing_data.blob) ); case 3: (i = r.sent), (t.editing_data.albumartist = i.common.albumartist || \"\"), (t.editing_data.genre = (null === (n = i.common.genre) || void 0 === n ? void 0 : n.toString()) || \"\"), (t.showEditDialog = !0); case 7: case \"end\": return r.stop(); } }, r); }) )(); }, saveFile: function (e) { var t = this; return Object(n[\"a\"])( regeneratorRuntime.mark(function r() { return regeneratorRuntime.wrap(function (r) { while (1) switch ((r.prev = r.next)) { case 0: if (!t.dir) { r.next = 6; break; } return ( (r.next = 3), Object(s[\"b\"])(e, t.filename_policy, t.dir) ); case 3: t.$notify({ title: \"保存成功\", message: e.title, position: \"top-left\", type: \"success\", duration: 3e3, }), (r.next = 7); break; case 6: Object(s[\"c\"])(e, t.filename_policy); case 7: case \"end\": return r.stop(); } }, r); }) )(); }, showDirectlySave: function () { var e = this; return Object(n[\"a\"])( regeneratorRuntime.mark(function t() { var r; return regeneratorRuntime.wrap( function (t) { while (1) switch ((t.prev = t.next)) { case 0: if (window.showDirectoryPicker) { t.next = 2; break; } return t.abrupt(\"return\"); case 2: return ( (t.prev = 2), (t.next = 5), e.$confirm( \"您的浏览器支持文件直接保存到磁盘，是否使用？\", \"新特性提示\", { confirmButtonText: \"使用\", cancelButtonText: \"不使用\", type: \"warning\", center: !0, } ) ); case 5: t.next = 11; break; case 7: return ( (t.prev = 7), (t.t0 = t[\"catch\"](2)), console.log(t.t0), t.abrupt(\"return\") ); case 11: return ( (t.prev = 11), (t.next = 14), window.showDirectoryPicker() ); case 14: return ( (e.dir = t.sent), (r = \"__unlock_music_write_test.txt\"), (t.next = 18), e.dir.getFileHandle(r, { create: !0 }) ); case 18: return (t.next = 20), e.dir.removeEntry(r); case 20: t.next = 25; break; case 22: (t.prev = 22), (t.t1 = t[\"catch\"](11)), console.error(t.t1); case 25: case \"end\": return t.stop(); } }, t, null, [ [2, 7], [11, 22], ] ); }) )(); }, }, }; }).call(this, r(\"1c35\").Buffer); }, 4: function (e, t) {}, \"4a5a\": function (e, t, r) {}, 5: function (e, t) {}, \"507a\": function (e, t, r) { \"use strict\"; r.d(t, \"a\", function () { return V; }); r(\"d3b7\"), r(\"b0c0\"); var n = r(\"9ab4\"), i = r(\"9b2d\"), a = r(\"6d95\"), c = (r(\"ace4\"), r(\"5cc6\"), r(\"907a\"), r(\"9a8c\"), r(\"a975\"), r(\"735e\"), r(\"c1ac\"), r(\"d139\"), r(\"3a7b\"), r(\"d5d6\"), r(\"82f8\"), r(\"e91f\"), r(\"60bd\"), r(\"5f96\"), r(\"3280\"), r(\"3fcc\"), r(\"ca91\"), r(\"25a1\"), r(\"cd26\"), r(\"3c5d\"), r(\"2954\"), r(\"649e\"), r(\"219c\"), r(\"170b\"), r(\"b39a\"), r(\"72f7\"), r(\"3ca3\"), r(\"ddb0\"), r(\"2b3d\"), r(\"9861\"), r(\"cc74\")), o = r(\"cb96\"); function s(e, t, r) { return Object(n[\"a\"])(this, void 0, Promise, function () { var i, a, s, u, l, d, f, m, b; return Object(n[\"c\"])(this, function (n) { switch (n.label) { case 0: return (a = Uint8Array.bind), [4, Object(c[\"c\"])(e)]; case 1: for ( i = new (a.apply(Uint8Array, [void 0, n.sent()]))(), s = i.length, u = 0; u < s; u++ ) i[u] ^= 163; return ( (l = Object(c[\"i\"])(i, r)), l !== r && (e = new Blob([i], { type: c[\"a\"][l] })), [4, Object(o[\"parseBlob\"])(e)] ); case 2: return ( (d = n.sent()), (f = Object(c[\"f\"])( t, d.common.title, String(d.common.artists || d.common.artist || \"\") )), (m = f.title), (b = f.artist), [ 2, { title: m, artist: b, ext: l, album: d.common.album, picture: Object(c[\"d\"])(d), file: URL.createObjectURL(e), blob: e, mime: c[\"a\"][l], }, ] ); } }); }); } r(\"fb6a\"); var u = r(\"0ba7\"), l = [105, 102, 109, 116], d = [254, 254, 254, 254], f = { \" WAV\": \".wav\", FLAC: \".flac\", \" MP3\": \".mp3\", \" A4M\": \".m4a\" }; function m(e, t, r) { return Object(n[\"a\"])(this, void 0, Promise, function () { var i, a, s, m, b, p, v, h, g, w, y, j, O, x, _; return Object(n[\"c\"])(this, function (n) { switch (n.label) { case 0: return (a = Uint8Array.bind), [4, Object(c[\"c\"])(e)]; case 1: if ( ((i = new (a.apply(Uint8Array, [void 0, n.sent()]))()), Object(c[\"b\"])(i, l) && Object(c[\"b\"])(i.slice(8, 12), d)) ) return [3, 4]; if (\"xm\" !== r) return [3, 2]; throw Error(\"此xm文件已损坏\"); case 2: return [4, Object(u[\"a\"])(e, t, r, !0)]; case 3: return [2, n.sent()]; case 4: if ( ((s = new TextDecoder().decode(i.slice(4, 8))), !f.hasOwnProperty(s)) ) throw Error(\"未知的.xm文件类型\"); for ( m = i[15], b = i[12] | (i[13] < 8) | (i[14] < 16), p = i.slice(16), v = p.length, h = b; h < v; ++h ) p[h] = (p[h] - m) ^ 255; return ( (g = f[s]), (w = c[\"a\"][g]), (y = new Blob([p], { type: w })), [4, Object(o[\"parseBlob\"])(y)] ); case 5: return ( (j = n.sent()), \"wav\" === g && (console.info(j.common), (j.common.album = \"\"), (j.common.artist = \"\"), (j.common.title = \"\")), (O = Object(c[\"f\"])( t, j.common.title, String(j.common.artists || j.common.artist || \"\"), -1 === t.indexOf(\"_\") ? \"-\" : \"_\" )), (x = O.title), (_ = O.artist), [ 2, { title: x, artist: _, ext: g, mime: w, album: j.common.album, picture: Object(c[\"d\"])(j), file: URL.createObjectURL(y), blob: y, rawExt: \"xm\", }, ] ); } }); }); } r(\"6c57\"); var b = r(\"656c\"), p = r.n(b); r(\"159b\"); function v(e) { var t = 0; e.forEach(function (e) { t += e.length; }); var r = new Uint8Array(t), n = 0; return ( e.forEach(function (e) { r.set(e, n), (n += e.length); }), r ); } var h = 2097152; function g(e, t) { return Object(n[\"a\"])(this, void 0, Promise, function () { var r, i, a, c, o, s, u, l, d, f, m, b; return Object(n[\"c\"])(this, function (n) { switch (n.label) { case 0: (r = { success: !1, data: new Uint8Array(), songId: 0, error: \"\", }), (n.label = 1); case 1: return n.trys.push([1, 3, , 4]), [4, p()()]; case 2: return (i = n.sent()), [3, 4]; case 3: return ( (a = n.sent()), (r.error = (null === a || void 0 === a ? void 0 : a.message) || \"wasm 加载失败\"), [2, r] ); case 4: if (!i) return (r.error = \"wasm 加载失败\"), [2, r]; if ( ((c = new Uint8Array(e)), (o = i._malloc(h)), (s = Math.min(h, e.byteLength)), i.writeArrayToMemory(c.slice(-s), o), (t = \".\" + t), (u = i.preDec(o, s, t)), -1 == u) ) return (r.error = i.getErr()), [2, r]; (r.songId = i.getSongId()), (r.songId = \"0\" == r.songId ? 0 : r.songId), (l = []), (d = 0), (f = c.length - u); while (f > 0) (m = Math.min(f, h)), (b = new Uint8Array(c.slice(d, d + m))), i.writeArrayToMemory(b, o), l.push(i.HEAPU8.slice(o, o + i.decBlob(o, m, d))), (d += m), (f -= m); return i._free(o), (r.data = v(l)), (r.success = !0), [2, r]; } }); }); } var w = r(\"0f92\"), y = { mgg: { ext: \"ogg\", version: 2 }, mgg0: { ext: \"ogg\", version: 2 }, mggl: { ext: \"ogg\", version: 2 }, mgg1: { ext: \"ogg\", version: 2 }, mflac: { ext: \"flac\", version: 2 }, mflac0: { ext: \"flac\", version: 2 }, mmp4: { ext: \"mp4\", version: 2 }, qmcflac: { ext: \"flac\", version: 2 }, qmcogg: { ext: \"ogg\", version: 2 }, qmc0: { ext: \"mp3\", version: 2 }, qmc2: { ext: \"ogg\", version: 2 }, qmc3: { ext: \"mp3\", version: 2 }, qmc4: { ext: \"ogg\", version: 2 }, qmc6: { ext: \"ogg\", version: 2 }, qmc8: { ext: \"ogg\", version: 2 }, bkcmp3: { ext: \"mp3\", version: 1 }, bkcm4a: { ext: \"m4a\", version: 1 }, bkcflac: { ext: \"flac\", version: 1 }, bkcwav: { ext: \"wav\", version: 1 }, bkcape: { ext: \"ape\", version: 1 }, bkcogg: { ext: \"ogg\", version: 1 }, bkcwma: { ext: \"wma\", version: 1 }, tkm: { ext: \"m4a\", version: 1 }, \"666c6163\": { ext: \"flac\", version: 1 }, \"6d7033\": { ext: \"mp3\", version: 1 }, \"6f6767\": { ext: \"ogg\", version: 1 }, \"6d3461\": { ext: \"m4a\", version: 1 }, 776176: { ext: \"wav\", version: 1 }, }; function j(e, t, r) { return Object(n[\"a\"])(this, void 0, Promise, function () { var i, a, o, s, u, l, d, f, m, b, p, v, h, j; return Object(n[\"c\"])(this, function (n) { switch (n.label) { case 0: if (!(r in y)) throw \"Qmc cannot handle type: \".concat(r); return (i = y[r]), (a = i.version), [4, Object(c[\"c\"])(e)]; case 1: return ( (o = n.sent()), (s = new Uint8Array()), 2 === a && globalThis.WebAssembly ? [4, g(o, r)] : [3, 3] ); case 2: if (((l = n.sent()), !l.success)) throw new Error(l.error || \"(unknown error)\"); (s = l.data), (u = l.songId), console.log(\"qmc wasm decoder suceeded\"), (n.label = 3); case 3: return ( (d = Object(c[\"i\"])(s, i.ext)), (f = c[\"a\"][d]), [4, Object(w[\"a\"])(new Blob([s], { type: f }), t, d, u)] ); case 4: return ( (m = n.sent()), (b = m.album), (p = m.artist), (v = m.imgUrl), (h = m.blob), (j = m.title), [ 2, { title: j, artist: p, ext: d, album: b, picture: v, file: URL.createObjectURL(h), blob: h, mime: f, }, ] ); } }); }); } function O(e, t, r) { return Object(n[\"a\"])(this, void 0, Promise, function () { var i, a, s, u, l, d, f, m, b, p; return Object(n[\"c\"])(this, function (n) { switch (n.label) { case 0: return [4, Object(c[\"c\"])(e)]; case 1: return ( (i = n.sent()), (a = new Uint8Array()), globalThis.WebAssembly ? (console.log(\"qmc: using wasm decoder\"), [4, g(i, r)]) : [3, 3] ); case 2: if (((s = n.sent()), !s.success)) throw new Error(s.error || \"(unknown error)\"); (a = s.data), console.log(\"qmc wasm decoder suceeded\"), (n.label = 3); case 3: if ( ((u = Object(c[\"i\"])(a, \"\")), (l = Object(c[\"j\"])(t)), \"\" === u && \"mp3\" !== l.ext) ) { if (l.ext in y) return ( (d = new Blob([a], { type: \"application/octet-stream\" })), [2, j(d, l.name, l.ext)] ); throw \"不支持的QQ音乐缓存格式\"; } return ( (d = new Blob([a], { type: c[\"a\"][u] })), [4, Object(o[\"parseBlob\"])(d)] ); case 4: return ( (f = n.sent()), (m = Object(c[\"f\"])( t, f.common.title, String(f.common.artists || f.common.artist || \"\") )), (b = m.title), (p = m.artist), [ 2, { title: b, artist: p, ext: u, album: f.common.album, picture: Object(c[\"d\"])(f), file: URL.createObjectURL(d), blob: d, mime: c[\"a\"][u], }, ] ); } }); }); } var x = r(\"8866\"), _ = r.n(x), k = 2097152; function A(e, t) { return Object(n[\"a\"])(this, void 0, Promise, function () { var r, i, a, c, o, s, u, l, d, f, m, b; return Object(n[\"c\"])(this, function (n) { switch (n.label) { case 0: (r = { success: !1, data: new Uint8Array(), error: \"\" }), (n.label = 1); case 1: return n.trys.push([1, 3, , 4]), [4, _()()]; case 2: return (i = n.sent()), [3, 4]; case 3: return ( (a = n.sent()), (r.error = (null === a || void 0 === a ? void 0 : a.message) || \"wasm 加载失败\"), [2, r] ); case 4: if (!i) return (r.error = \"wasm 加载失败\"), [2, r]; (c = new Uint8Array(e)), (o = i._malloc(k)), (s = Math.min(k, e.byteLength)), i.writeArrayToMemory(c.slice(0, s), o), (u = i.preDec(o, s, t)), (c = c.slice(u)), (l = []), (d = 0), (f = c.length); while (f > 0) (m = Math.min(f, k)), (b = new Uint8Array(c.slice(d, d + m))), i.writeArrayToMemory(b, o), i.decBlob(o, m, d), l.push(i.HEAPU8.slice(o, o + m)), (d += m), (f -= m); return i._free(o), (r.data = v(l)), (r.success = !0), [2, r]; } }); }); } var U = [ 5, 40, 188, 150, 233, 228, 90, 67, 145, 170, 189, 208, 122, 245, 54, 49, ], T = [ 124, 213, 50, 235, 134, 2, 127, 75, 168, 175, 166, 142, 15, 255, 153, 20, ]; function R(e, t, r) { return Object(n[\"a\"])(this, void 0, Promise, function () { var i, a, s, u, l, d, f, m, b, p; return Object(n[\"c\"])(this, function (n) { switch (n.label) { case 0: return [4, Object(c[\"c\"])(e)]; case 1: if (((i = n.sent()), \"vpr\" === r)) { if (!Object(c[\"b\"])(new Uint8Array(i), U)) throw Error(\"Not a valid vpr file!\"); } else if (!Object(c[\"b\"])(new Uint8Array(i), T)) throw Error(\"Not a valid kgm(a) file!\"); return ( (a = new Uint8Array()), globalThis.WebAssembly ? [4, A(i, r)] : [3, 3] ); case 2: if (((s = n.sent()), !s.success)) throw new Error(s.error || \"(unknown error)\"); (a = s.data), console.log(\"kgm wasm decoder suceeded\"), (n.label = 3); case 3: return ( (u = Object(c[\"i\"])(a)), (l = c[\"a\"][u]), (d = new Blob([a], { type: l })), [4, Object(o[\"parseBlob\"])(d)] ); case 4: return ( (f = n.sent()), (m = Object(c[\"f\"])( t, f.common.title, String(f.common.artists || f.common.artist || \"\") )), (b = m.title), (p = m.artist), [ 2, { album: f.common.album, picture: Object(c[\"d\"])(f), file: URL.createObjectURL(d), blob: d, ext: u, mime: l, title: b, artist: p, }, ] ); } }); }); } r(\"25f0\"), r(\"843c\"); var P = [ 121, 101, 101, 108, 105, 111, 110, 45, 107, 117, 119, 111, 45, 116, 109, 101, ], E = [ 121, 101, 101, 108, 105, 111, 110, 45, 107, 117, 119, 111, 0, 0, 0, 0, ], D = \"MoOtOiTvINGwd2E6n0E1i7L5t2IoOoNk\"; function L(e, t, r) { return Object(n[\"a\"])(this, void 0, Promise, function () { var r, i, a, s, l, d, f, m, b, p, v, h, g, w; return Object(n[\"c\"])(this, function (n) { switch (n.label) { case 0: return (i = Uint8Array.bind), [4, Object(c[\"c\"])(e)]; case 1: return ( (r = new (i.apply(Uint8Array, [void 0, n.sent()]))()), Object(c[\"b\"])(r, P) || Object(c[\"b\"])(r, E) ? [3, 4] : \"aac\" !== Object(c[\"i\"])(r) ? [3, 3] : [4, Object(u[\"a\"])(e, t, \"aac\", !1)] ); case 2: return [2, n.sent()]; case 3: throw Error(\"not a valid kwm file\"); case 4: for ( a = r.slice(24, 32), s = C(a), l = r.slice(1024), d = l.length, f = 0; f < d; ++f ) l[f] ^= s[f % 32]; return ( (m = Object(c[\"i\"])(l)), (b = c[\"a\"][m]), (p = new Blob([l], { type: b })), [4, Object(o[\"parseBlob\"])(p)] ); case 5: return ( (v = n.sent()), (h = Object(c[\"f\"])( t, v.common.title, String(v.common.artists || v.common.artist || \"\") )), (g = h.title), (w = h.artist), [ 2, { album: v.common.album, picture: Object(c[\"d\"])(v), file: URL.createObjectURL(p), blob: p, mime: b, title: g, artist: w, ext: m, }, ] ); } }); }); } function C(e) { for ( var t = new DataView(e.buffer), r = t.getBigUint64(0, !0).toString(), n = F(r), i = new Uint8Array(32), a = 0; a < 32; a++ ) i[a] = D.charCodeAt(a) ^ n.charCodeAt(a); return i; } function F(e) { var t = e.length, r = e; return t > 32 ? (r = e.slice(0, 32)) : t < 32 && (r = e.padEnd(32, e)), r; } var S = [0, 0, 0, 32, 102, 116, 121, 112]; function B(e, t) { return Object(n[\"a\"])(this, void 0, Promise, function () { var r, i, a, o; return Object(n[\"c\"])(this, function (n) { switch (n.label) { case 0: return (i = Uint8Array.bind), [4, Object(c[\"c\"])(e)]; case 1: for ( r = new (i.apply(Uint8Array, [void 0, n.sent()]))(), a = 0; a < 8; ++a ) r[a] = S[a]; return ( (o = new Blob([r], { type: \"audio/mp4\" })), [4, Object(u[\"a\"])(o, t, \"m4a\", !1)] ); case 2: return [2, n.sent()]; } }); }); } r(\"ac1f\"), r(\"466d\"); var I = r(\"dc71\"), M = r.n(I), q = r(\"b7c7\"); function N(e, t, r) { var i; return Object(n[\"a\"])(this, void 0, Promise, function () { var r, a, o, s, u, l, d, f, m, b, p, h, g, y; return Object(n[\"c\"])(this, function (n) { switch (n.label) { case 0: return [4, q[\"a\"].loadJooxUUID(\"\")]; case 1: if (((r = n.sent()), !r || 32 !== r.length)) throw new Error(\"请在“解密设定”填写应用 Joox 应用的 UUID。\"); return (o = Uint8Array.bind), [4, Object(c[\"c\"])(e)]; case 2: if ( ((a = new (o.apply(Uint8Array, [void 0, n.sent()]))()), (s = M()(a, r)), !s) ) throw new Error(\"不支持的 joox 加密格式\"); return ( (u = v(s.decryptFile(a))), (l = Object(c[\"i\"])(u)), (d = c[\"a\"][l]), (f = null === (i = t.match(/^(\\d+)\\s\\[mqms\\d*]$/i)) || void 0 === i ? void 0 : i[1]), [4, Object(w[\"a\"])(new Blob([u], { type: d }), t, l, f)] ); case 3: return ( (m = n.sent()), (b = m.album), (p = m.artist), (h = m.imgUrl), (g = m.blob), (y = m.title), [ 2, { title: y, artist: p, ext: l, album: b, picture: h, file: URL.createObjectURL(g), blob: g, mime: d, }, ] ); } }); }); } r(\"4ec9\"); var $ = new Map([ [\"x2m\", W], [\"x3m\", H], ]); function J(e, t, r) { return Object(n[\"a\"])(this, void 0, Promise, function () { var i, a, s, u, l, d, f, m, b; return Object(n[\"c\"])(this, function (n) { switch (n.label) { case 0: return (a = Uint8Array.bind), [4, Object(c[\"c\"])(e)]; case 1: if ( ((i = new (a.apply(Uint8Array, [void 0, n.sent()]))()), (s = $.get(r)), !s) ) throw \"File type is incorrect!\"; return ( (u = s(i)), (l = Object(c[\"i\"])(u, \"m4a\")), (d = c[\"a\"][l]), (f = new Blob([u], { type: d })), [4, Object(o[\"parseBlob\"])(f)] ); case 2: return ( (m = n.sent()), (b = Object(c[\"f\"])(t, m.common.title, m.common.artist)), [ 2, { picture: \"\", title: b.title, artist: b.artist, ext: l, album: m.common.album, blob: f, file: URL.createObjectURL(f), mime: d, }, ] ); } }); }); } function W(e) { for ( var t = 1024, r = [120, 109, 108, 121], n = e.slice(0, t), i = 0; i < t; i++ ) { var a = G[i]; e[i] = n[a] ^ r[i % r.length]; } return e; } function H(e) { for ( var t = 1024, r = [ 51, 57, 56, 57, 100, 49, 49, 49, 97, 97, 100, 53, 54, 49, 51, 57, 52, 48, 102, 52, 102, 99, 52, 52, 98, 54, 51, 57, 98, 50, 57, 50, ], n = e.slice(0, t), i = 0; i < t; i++ ) { var a = Q[i]; e[i] = n[a] ^ r[i % r.length]; } return e; } var G = [ 681, 683, 340, 682, 680, 684, 339, 679, 685, 338, 678, 1023, 0, 341, 686, 337, 677, 1022, 1, 342, 687, 336, 676, 1021, 2, 343, 688, 335, 675, 1020, 3, 344, 689, 334, 674, 1019, 4, 345, 690, 333, 673, 1018, 5, 346, 691, 332, 672, 1017, 6, 347, 692, 331, 671, 1016, 7, 348, 693, 330, 670, 1015, 8, 349, 694, 329, 669, 1014, 9, 350, 695, 328, 668, 1013, 10, 351, 696, 327, 667, 1012, 11, 352, 697, 326, 666, 1011, 12, 353, 698, 325, 665, 1010, 13, 354, 699, 324, 664, 1009, 14, 355, 700, 323, 663, 1008, 15, 356, 701, 322, 662, 1007, 16, 357, 702, 321, 661, 1006, 17, 358, 703, 320, 660, 1005, 18, 359, 704, 319, 659, 1004, 19, 360, 705, 318, 658, 1003, 20, 361, 706, 317, 657, 1002, 21, 362, 707, 316, 656, 1001, 22, 363, 708, 315, 655, 1e3, 23, 364, 709, 314, 654, 999, 24, 365, 710, 313, 653, 998, 25, 366, 711, 312, 652, 997, 26, 367, 712, 311, 651, 996, 27, 368, 713, 310, 650, 995, 28, 369, 714, 309, 649, 994, 29, 370, 715, 308, 648, 993, 30, 371, 716, 307, 647, 992, 31, 372, 717, 169, 510, 855, 32, 373, 718, 170, 511, 856, 33, 374, 719, 171, 512, 857, 34, 375, 720, 172, 513, 858, 35, 376, 721, 173, 514, 859, 36, 377, 722, 174, 515, 860, 37, 378, 723, 175, 516, 861, 38, 379, 724, 176, 517, 862, 39, 380, 725, 177, 518, 863, 40, 381, 726, 178, 519, 864, 41, 382, 727, 179, 520, 865, 42, 383, 728, 180, 521, 866, 43, 384, 729, 181, 522, 867, 44, 385, 730, 182, 523, 868, 45, 386, 731, 183, 524, 869, 46, 387, 732, 184, 525, 870, 47, 388, 733, 185, 526, 871, 48, 389, 734, 186, 527, 872, 49, 390, 735, 187, 528, 873, 50, 391, 736, 188, 529, 874, 51, 392, 737, 189, 530, 875, 52, 393, 738, 190, 531, 876, 53, 394, 739, 191, 532, 877, 54, 395, 740, 192, 533, 878, 55, 396, 741, 193, 534, 879, 56, 397, 742, 194, 535, 880, 57, 398, 743, 195, 536, 881, 58, 399, 744, 196, 537, 882, 59, 400, 745, 197, 538, 883, 60, 401, 746, 198, 539, 884, 61, 402, 747, 199, 540, 885, 62, 403, 748, 200, 541, 886, 63, 404, 749, 201, 542, 887, 64, 405, 750, 202, 543, 888, 65, 406, 751, 203, 544, 889, 66, 407, 752, 204, 545, 890, 67, 408, 753, 205, 546, 891, 68, 409, 754, 206, 547, 892, 69, 410, 755, 207, 548, 893, 70, 411, 756, 208, 549, 894, 71, 412, 757, 209, 550, 895, 72, 413, 758, 210, 551, 896, 73, 414, 759, 211, 552, 897, 74, 415, 760, 212, 553, 898, 75, 416, 761, 213, 554, 899, 76, 417, 762, 214, 555, 900, 77, 418, 763, 215, 556, 901, 78, 419, 764, 216, 557, 902, 79, 420, 765, 217, 558, 903, 80, 421, 766, 218, 559, 904, 81, 422, 767, 219, 560, 905, 82, 423, 768, 220, 561, 906, 83, 424, 769, 221, 562, 907, 84, 425, 770, 222, 563, 908, 85, 426, 771, 223, 564, 909, 86, 427, 772, 224, 565, 910, 87, 428, 773, 225, 566, 911, 88, 429, 774, 226, 567, 912, 89, 430, 775, 227, 568, 913, 90, 431, 776, 228, 569, 914, 91, 432, 777, 229, 570, 915, 92, 433, 778, 230, 571, 916, 93, 434, 779, 231, 572, 917, 94, 435, 780, 232, 573, 918, 95, 436, 781, 233, 574, 919, 96, 437, 782, 234, 575, 920, 97, 438, 783, 235, 576, 921, 98, 439, 784, 236, 577, 922, 99, 440, 785, 237, 578, 923, 100, 441, 786, 238, 579, 924, 101, 442, 787, 239, 580, 925, 102, 443, 788, 240, 581, 926, 103, 444, 789, 241, 582, 927, 104, 445, 790, 242, 583, 928, 105, 446, 791, 243, 584, 929, 106, 447, 792, 244, 585, 930, 107, 448, 793, 245, 586, 931, 108, 449, 794, 246, 587, 932, 109, 450, 795, 247, 588, 933, 110, 451, 796, 248, 589, 934, 111, 452, 797, 249, 590, 935, 112, 453, 798, 250, 591, 936, 113, 454, 799, 251, 592, 937, 114, 455, 800, 252, 593, 938, 115, 456, 801, 253, 594, 939, 116, 457, 802, 254, 595, 940, 117, 458, 803, 255, 596, 941, 118, 459, 804, 256, 597, 942, 119, 460, 805, 257, 598, 943, 120, 461, 806, 258, 599, 944, 121, 462, 807, 259, 600, 945, 122, 463, 808, 260, 601, 946, 123, 464, 809, 261, 602, 947, 124, 465, 810, 262, 603, 948, 125, 466, 811, 263, 604, 949, 126, 467, 812, 264, 605, 950, 127, 468, 813, 265, 606, 951, 128, 469, 814, 266, 607, 952, 129, 470, 815, 267, 608, 953, 130, 471, 816, 268, 609, 954, 131, 472, 817, 269, 610, 955, 132, 473, 818, 270, 611, 956, 133, 474, 819, 271, 612, 957, 134, 475, 820, 272, 613, 958, 135, 476, 821, 273, 614, 959, 136, 477, 822, 274, 615, 960, 137, 478, 823, 275, 616, 961, 138, 479, 824, 276, 617, 962, 139, 480, 825, 277, 618, 963, 140, 481, 826, 278, 619, 964, 141, 482, 827, 279, 620, 965, 142, 483, 828, 280, 621, 966, 143, 484, 829, 281, 622, 967, 144, 485, 830, 282, 623, 968, 145, 486, 831, 283, 624, 969, 146, 487, 832, 284, 625, 970, 147, 488, 833, 285, 626, 971, 148, 489, 834, 286, 627, 972, 149, 490, 835, 287, 628, 973, 150, 491, 836, 288, 629, 974, 151, 492, 837, 289, 630, 975, 152, 493, 838, 290, 631, 976, 153, 494, 839, 291, 632, 977, 154, 495, 840, 292, 633, 978, 155, 496, 841, 293, 634, 979, 156, 497, 842, 294, 635, 980, 157, 498, 843, 295, 636, 981, 158, 499, 844, 296, 637, 982, 159, 500, 845, 297, 638, 983, 160, 501, 846, 298, 639, 984, 161, 502, 847, 299, 640, 985, 162, 503, 848, 300, 641, 986, 163, 504, 849, 301, 642, 987, 164, 505, 850, 302, 643, 988, 165, 506, 851, 303, 644, 989, 166, 507, 852, 304, 645, 990, 167, 508, 853, 305, 646, 991, 168, 509, 854, 306, ], Q = [ 598, 653, 531, 775, 342, 925, 98, 368, 970, 53, 237, 676, 484, 857, 211, 619, 613, 628, 593, 663, 514, 802, 294, 811, 279, 770, 348, 936, 87, 328, 896, 144, 502, 821, 268, 750, 373, 980, 43, 204, 608, 635, 573, 699, 438, 929, 94, 343, 926, 97, 367, 966, 57, 247, 697, 440, 927, 96, 358, 953, 70, 290, 796, 303, 829, 252, 714, 420, 972, 51, 230, 659, 521, 789, 317, 856, 213, 622, 606, 637, 570, 704, 433, 943, 80, 310, 838, 239, 682, 462, 886, 160, 528, 780, 332, 905, 130, 475, 871, 185, 574, 698, 439, 928, 95, 356, 951, 72, 293, 806, 284, 778, 335, 911, 112, 424, 967, 56, 245, 693, 445, 915, 108, 409, 993, 30, 179, 559, 727, 403, 1002, 21, 157, 522, 788, 318, 858, 210, 618, 615, 626, 595, 660, 520, 793, 311, 844, 231, 661, 517, 797, 302, 828, 254, 717, 416, 981, 42, 200, 600, 646, 554, 732, 398, 1015, 8, 124, 467, 880, 167, 541, 753, 369, 973, 50, 229, 658, 523, 787, 319, 860, 208, 614, 627, 594, 662, 516, 799, 298, 818, 271, 756, 364, 963, 60, 257, 722, 410, 992, 31, 181, 563, 713, 422, 969, 54, 240, 683, 459, 892, 149, 509, 808, 282, 774, 344, 930, 93, 341, 924, 99, 372, 979, 44, 207, 612, 629, 591, 665, 506, 812, 277, 767, 351, 939, 84, 323, 876, 173, 549, 741, 385, 1007, 16, 140, 497, 836, 243, 687, 452, 902, 136, 483, 859, 209, 617, 616, 621, 607, 636, 571, 703, 434, 942, 81, 315, 853, 218, 632, 584, 678, 476, 869, 192, 582, 680, 470, 877, 172, 548, 744, 382, 1003, 20, 156, 519, 794, 307, 833, 248, 700, 437, 931, 92, 338, 917, 106, 396, 1017, 6, 122, 465, 883, 164, 535, 766, 352, 941, 82, 316, 855, 215, 624, 604, 641, 565, 710, 426, 956, 67, 285, 781, 330, 900, 138, 487, 851, 221, 644, 558, 728, 402, 1004, 19, 153, 513, 803, 292, 801, 295, 813, 276, 765, 353, 944, 79, 309, 835, 244, 692, 446, 914, 109, 413, 987, 36, 190, 580, 688, 450, 906, 128, 473, 873, 182, 564, 712, 423, 968, 55, 241, 685, 454, 899, 141, 498, 827, 256, 721, 411, 990, 33, 187, 576, 694, 443, 921, 102, 378, 991, 32, 184, 572, 701, 436, 933, 90, 336, 912, 111, 421, 971, 52, 234, 669, 494, 840, 236, 675, 485, 854, 216, 625, 599, 649, 544, 748, 376, 985, 38, 194, 587, 673, 490, 845, 228, 657, 524, 786, 321, 864, 202, 602, 643, 560, 720, 412, 989, 34, 188, 577, 691, 447, 913, 110, 418, 977, 46, 214, 623, 605, 639, 567, 708, 428, 954, 69, 289, 792, 312, 846, 227, 655, 529, 779, 333, 908, 115, 451, 903, 132, 479, 866, 199, 597, 654, 530, 777, 339, 918, 105, 395, 1018, 5, 121, 464, 884, 162, 533, 769, 349, 937, 86, 327, 890, 152, 512, 804, 287, 790, 314, 850, 223, 648, 547, 745, 381, 1001, 22, 158, 525, 784, 324, 882, 165, 537, 762, 357, 952, 71, 291, 798, 301, 824, 263, 736, 392, 1022, 1, 117, 457, 894, 147, 505, 815, 274, 761, 359, 958, 65, 267, 743, 383, 1005, 18, 151, 511, 805, 286, 785, 322, 870, 186, 575, 696, 441, 923, 100, 374, 982, 41, 197, 592, 664, 508, 809, 281, 772, 346, 934, 89, 334, 910, 113, 429, 950, 73, 296, 814, 275, 764, 354, 946, 77, 305, 831, 250, 706, 431, 947, 76, 304, 830, 251, 711, 425, 957, 66, 278, 768, 350, 938, 85, 326, 888, 155, 518, 795, 306, 832, 249, 702, 435, 940, 83, 320, 861, 206, 610, 633, 583, 679, 471, 875, 174, 550, 739, 389, 1014, 9, 125, 468, 879, 168, 542, 752, 370, 974, 49, 222, 647, 552, 735, 393, 1021, 2, 118, 458, 893, 148, 507, 810, 280, 771, 347, 935, 88, 331, 904, 131, 477, 868, 193, 586, 674, 489, 848, 225, 651, 538, 760, 360, 959, 64, 266, 742, 384, 1006, 17, 145, 503, 820, 269, 751, 371, 975, 48, 220, 640, 566, 709, 427, 955, 68, 288, 791, 313, 847, 226, 652, 536, 763, 355, 948, 75, 300, 823, 264, 738, 390, 1020, 3, 119, 460, 891, 150, 510, 807, 283, 776, 340, 919, 104, 387, 1011, 12, 133, 480, 865, 201, 601, 645, 556, 730, 400, 1010, 13, 134, 481, 863, 203, 603, 642, 562, 716, 417, 978, 45, 212, 620, 611, 631, 585, 677, 478, 867, 198, 596, 656, 526, 783, 325, 887, 159, 527, 782, 329, 898, 142, 499, 826, 258, 723, 408, 994, 29, 178, 557, 729, 401, 1009, 14, 135, 482, 862, 205, 609, 634, 579, 689, 449, 907, 127, 472, 874, 180, 561, 719, 414, 986, 37, 191, 581, 684, 455, 897, 143, 501, 822, 265, 740, 388, 1012, 11, 129, 474, 872, 183, 569, 705, 432, 945, 78, 308, 834, 246, 695, 442, 922, 101, 377, 988, 35, 189, 578, 690, 448, 909, 114, 444, 920, 103, 386, 1008, 15, 139, 488, 849, 224, 650, 540, 755, 365, 964, 59, 255, 718, 415, 983, 40, 196, 590, 667, 496, 837, 242, 686, 453, 901, 137, 486, 852, 219, 638, 568, 707, 430, 949, 74, 299, 819, 270, 754, 366, 965, 58, 253, 715, 419, 976, 47, 217, 630, 588, 671, 492, 842, 233, 668, 495, 839, 238, 681, 463, 885, 161, 532, 773, 345, 932, 91, 337, 916, 107, 406, 998, 25, 171, 546, 746, 380, 997, 26, 175, 551, 737, 391, 1023, 0, 116, 456, 895, 146, 504, 817, 272, 758, 362, 961, 62, 260, 725, 405, 999, 24, 170, 545, 747, 379, 996, 27, 176, 553, 733, 397, 1016, 7, 123, 466, 881, 166, 539, 757, 363, 962, 61, 259, 724, 407, 995, 28, 177, 555, 731, 399, 1013, 10, 126, 469, 878, 169, 543, 749, 375, 984, 39, 195, 589, 670, 493, 841, 235, 672, 491, 843, 232, 666, 500, 825, 262, 734, 394, 1019, 4, 120, 461, 889, 154, 515, 800, 297, 816, 273, 759, 361, 960, 63, 261, 726, 404, 1e3, 23, 163, 534, ], z = r(\"efc0\"); function V(e, t) { return Object(n[\"a\"])(this, void 0, Promise, function () { var r, o, l; return Object(n[\"c\"])(this, function (n) { switch (n.label) { case 0: return q[\"a\"] instanceof z[\"a\"] ? [4, q[\"a\"].setAll(t)] : [3, 2]; case 1: n.sent(), (n.label = 2); case 2: switch (((r = Object(c[\"j\"])(e.name)), (l = r.ext), l)) { case \"mg3d\": return [3, 3]; case \"ncm\": return [3, 5]; case \"uc\": return [3, 7]; case \"kwm\": return [3, 9]; case \"xm\": return [3, 11]; case \"wav\": return [3, 11]; case \"mp3\": return [3, 11]; case \"flac\": return [3, 11]; case \"m4a\": return [3, 11]; case \"ogg\": return [3, 13]; case \"tm0\": return [3, 15]; case \"tm3\": return [3, 15]; case \"qmc0\": return [3, 17]; case \"qmc3\": return [3, 17]; case \"qmc2\": return [3, 17]; case \"qmc4\": return [3, 17]; case \"qmc6\": return [3, 17]; case \"qmc8\": return [3, 17]; case \"qmcflac\": return [3, 17]; case \"qmcogg\": return [3, 17]; case \"tkm\": return [3, 17]; case \"bkcmp3\": return [3, 17]; case \"bkcm4a\": return [3, 17]; case \"bkcflac\": return [3, 17]; case \"bkcwav\": return [3, 17]; case \"bkcape\": return [3, 17]; case \"bkcogg\": return [3, 17]; case \"bkcwma\": return [3, 17]; case \"mggl\": return [3, 17]; case \"mflac\": return [3, 17]; case \"mflac0\": return [3, 17]; case \"mflach\": return [3, 17]; case \"mgg\": return [3, 17]; case \"mgg1\": return [3, 17]; case \"mgg0\": return [3, 17]; case \"mmp4\": return [3, 17]; case \"666c6163\": return [3, 17]; case \"6d7033\": return [3, 17]; case \"6f6767\": return [3, 17]; case \"6d3461\": return [3, 17]; case \"776176\": return [3, 17]; case \"tm2\": return [3, 19]; case \"tm6\": return [3, 19]; case \"cache\": return [3, 21]; case \"vpr\": return [3, 23]; case \"kgm\": return [3, 23]; case \"kgma\": return [3, 23]; case \"ofl_en\": return [3, 25]; case \"x2m\": return [3, 27]; case \"x3m\": return [3, 27]; case \"mflach\": return [3, 29]; } return [3, 30]; case 3: return [4, Object(i[\"a\"])(e.raw, r.name)]; case 4: return (o = n.sent()), [3, 31]; case 5: return [4, Object(a[\"a\"])(e.raw, r.name, r.ext)]; case 6: return (o = n.sent()), [3, 31]; case 7: return [4, s(e.raw, r.name, r.ext)]; case 8: return (o = n.sent()), [3, 31]; case 9: return [4, L(e.raw, r.name, r.ext)]; case 10: return (o = n.sent()), [3, 31]; case 11: return [4, m(e.raw, r.name, r.ext)]; case 12: return (o = n.sent()), [3, 31]; case 13: return [4, Object(u[\"a\"])(e.raw, r.name, r.ext)]; case 14: return (o = n.sent()), [3, 31]; case 15: return [4, Object(u[\"a\"])(e.raw, r.name, \"mp3\")]; case 16: return (o = n.sent()), [3, 31]; case 17: return [4, j(e.raw, r.name, r.ext)]; case 18: return (o = n.sent()), [3, 31]; case 19: return [4, B(e.raw, r.name)]; case 20: return (o = n.sent()), [3, 31]; case 21: return [4, O(e.raw, r.name, r.ext)]; case 22: return (o = n.sent()), [3, 31]; case 23: return [4, R(e.raw, r.name, r.ext)]; case 24: return (o = n.sent()), [3, 31]; case 25: return [4, N(e.raw, r.name, r.ext)]; case 26: return (o = n.sent()), [3, 31]; case 27: return [4, J(e.raw, r.name, r.ext)]; case 28: return (o = n.sent()), [3, 31]; case 29: throw '网页版无法解锁，请使用"},{"title":"","date":"2023-10-06T09:03:23.530Z","updated":"2023-10-06T07:07:42.000Z","comments":true,"path":"mypage/js/0.bb00e0b9.worker.js","permalink":"http://www.shelven.com/mypage/js/0.bb00e0b9.worker.js","excerpt":"","text":"(function (e) { var t = {}; function r(i) { if (t[i]) return t[i].exports; var n = (t[i] = { i: i, l: !1, exports: {} }); return e[i].call(n.exports, n, n.exports, r), (n.l = !0), n.exports; } (r.m = e), (r.c = t), (r.d = function (e, t, i) { r.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: i }); }), (r.r = function (e) { \"undefined\" !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: \"Module\" }), Object.defineProperty(e, \"__esModule\", { value: !0 }); }), (r.t = function (e, t) { if ((1 & t && (e = r(e)), 8 & t)) return e; if (4 & t && \"object\" === typeof e && e && e.__esModule) return e; var i = Object.create(null); if ( (r.r(i), Object.defineProperty(i, \"default\", { enumerable: !0, value: e }), 2 & t && \"string\" != typeof e) ) for (var n in e) r.d( i, n, function (t) { return e[t]; }.bind(null, n) ); return i; }), (r.n = function (e) { var t = e && e.__esModule ? function () { return e[\"default\"]; } : function () { return e; }; return r.d(t, \"a\", t), t; }), (r.o = function (e, t) { return Object.prototype.hasOwnProperty.call(e, t); }), (r.p = \"\"), r((r.s = \"4c90\")); })({ 0: function (e, t) {}, \"00b4\": function (e, t, r) { \"use strict\"; r(\"ac1f\"); var i = r(\"23e7\"), n = r(\"da84\"), a = r(\"c65b\"), o = r(\"e330\"), s = r(\"1626\"), c = r(\"861d\"), u = (function () { var e = !1, t = /[ac]/; return ( (t.exec = function () { return (e = !0), /./.exec.apply(this, arguments); }), !0 === t.test(\"abc\") && e ); })(), A = n.Error, f = o(/./.test); i( { target: \"RegExp\", proto: !0, forced: !u }, { test: function (e) { var t = this.exec; if (!s(t)) return f(this, e); var r = a(t, this, e); if (null !== r && !c(r)) throw new A( \"RegExp exec method returned something other than an Object or null\" ); return !!r; }, } ); }, \"00ee\": function (e, t, r) { var i = r(\"b622\"), n = i(\"toStringTag\"), a = {}; (a[n] = \"z\"), (e.exports = \"[object z]\" === String(a)); }, \"00f6\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.SpeexParser = void 0); const i = r(\"34eb\"), n = r(\"04cc\"), a = r(\"bda5\"), o = i(\"music-metadata:parser:ogg:speex\"); class s extends a.VorbisParser { constructor(e, t, r) { super(e, t), (this.tokenizer = r); } parseFirstPage(e, t) { o(\"First Ogg/Speex page\"); const r = n.Header.get(t, 0); this.metadata.setFormat(\"codec\", \"Speex \" + r.version), this.metadata.setFormat(\"numberOfChannels\", r.nb_channels), this.metadata.setFormat(\"sampleRate\", r.rate), -1 !== r.bitrate && this.metadata.setFormat(\"bitrate\", r.bitrate); } } t.SpeexParser = s; }, \"0366\": function (e, t, r) { var i = r(\"e330\"), n = r(\"59ed\"), a = i(i.bind); e.exports = function (e, t) { return ( n(e), void 0 === t ? e : a ? a(e, t) : function () { return e.apply(t, arguments); } ); }; }, \"0383\": function (e, t, r) { \"use strict\"; var i = r(\"dbce\"), n = r(\"4ea4\"); Object.defineProperty(t, \"__esModule\", { value: !0 }), (t[\"default\"] = f); var a = n(r(\"448a\")), o = n(r(\"9523\")), s = n(r(\"278c\")), c = i(r(\"67ea\")); function u(e, t) { var r = Object.keys(e); if (Object.getOwnPropertySymbols) { var i = Object.getOwnPropertySymbols(e); t && (i = i.filter(function (t) { return Object.getOwnPropertyDescriptor(e, t).enumerable; })), r.push.apply(r, i); } return r; } function A(e) { for (var t = 1; t < arguments.length; t++) { var r = null != arguments[t] ? arguments[t] : {}; t % 2 ? u(r, !0).forEach(function (t) { (0, o[\"default\"])(e, t, r[t]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : u(r).forEach(function (t) { Object.defineProperty( e, t, Object.getOwnPropertyDescriptor(r, t) ); }); } return e; } function f(e) { var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : c[\"default\"], r = { hasAlpha: {}, encoders: {}, decoders: {}, class: {}, constants: {}, }; function i(e) { Object.entries(e).forEach(function (e) { var t = (0, s[\"default\"])(e, 2), i = t[0], n = t[1]; r[i] = A({}, r[i], {}, n); }); } function n(e) { var t = e(); Array.isArray(t.mime) ? c.addType.apply(void 0, (0, a[\"default\"])(t.mime)) : Object.entries(t.mime).forEach(function (e) { return c.addType.apply(void 0, (0, a[\"default\"])(e)); }), delete t.mime, i(t); } function o(e) { var t = e(c.jimpEvChange) || {}; t[\"class\"] || t.constants ? i(t) : i({ class: t }); } return ( e.types && (e.types.forEach(n), (t.decoders = A({}, t.decoders, {}, r.decoders)), (t.encoders = A({}, t.encoders, {}, r.encoders)), (t.hasAlpha = A({}, t.hasAlpha, {}, r.hasAlpha))), e.plugins && e.plugins.forEach(o), (0, c.addJimpMethods)(r[\"class\"], t), (0, c.addConstants)(r.constants, t), c[\"default\"] ); } }, \"03eb\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.joinArtists = t.MetadataCollector = void 0); const i = r(\"cec2\"), n = r(\"34eb\"), a = r(\"2819\"), o = r(\"a869\"), s = r(\"fc97\"), c = r(\"d3ab\"), u = r(\"31c8\"), A = n(\"music-metadata:collector\"), f = [ \"matroska\", \"APEv2\", \"vorbis\", \"ID3v2.4\", \"ID3v2.3\", \"ID3v2.2\", \"exif\", \"asf\", \"iTunes\", \"ID3v1\", ]; class l { constructor(e) { (this.opts = e), (this.format = { tagTypes: [], trackInfo: [] }), (this.native = {}), (this.common = { track: { no: null, of: null }, disk: { no: null, of: null }, movementIndex: {}, }), (this.quality = { warnings: [] }), (this.commonOrigin = {}), (this.originPriority = {}), (this.tagMapper = new o.CombinedTagMapper()); let t = 1; for (const r of f) this.originPriority[r] = t++; (this.originPriority.artificial = 500), (this.originPriority.id3v1 = 600); } hasAny() { return Object.keys(this.native).length > 0; } addStreamInfo(e) { A(`streamInfo: type=${i.TrackType[e.type]}, codec=${e.codecName}`), this.format.trackInfo.push(e); } setFormat(e, t) { A(`format: ${e} = ${t}`), (this.format[e] = t), this.opts.observer && this.opts.observer({ metadata: this, tag: { type: \"format\", id: e, value: t }, }); } addTag(e, t, r) { A(`tag ${e}.${t} = ${r}`), this.native[e] || (this.format.tagTypes.push(e), (this.native[e] = [])), this.native[e].push({ id: t, value: r }), this.toCommon(e, t, r); } addWarning(e) { this.quality.warnings.push({ message: e }); } postMap(e, t) { switch (t.id) { case \"artist\": if (this.commonOrigin.artist === this.originPriority[e]) return this.postMap(\"artificial\", { id: \"artists\", value: t.value, }); this.common.artists || this.setGenericTag(\"artificial\", { id: \"artists\", value: t.value, }); break; case \"artists\": if ( (!this.common.artist || this.commonOrigin.artist === this.originPriority.artificial) && (!this.common.artists || -1 === this.common.artists.indexOf(t.value)) ) { const e = (this.common.artists || []).concat([t.value]), r = h(e), i = { id: \"artist\", value: r }; this.setGenericTag(\"artificial\", i); } break; case \"picture\": return void this.postFixPicture(t.value).then((r) => { null !== r && ((t.value = r), this.setGenericTag(e, t)); }); case \"totaltracks\": return void (this.common.track.of = s.CommonTagMapper.toIntOrNull( t.value )); case \"totaldiscs\": return void (this.common.disk.of = s.CommonTagMapper.toIntOrNull( t.value )); case \"movementTotal\": return void (this.common.movementIndex.of = s.CommonTagMapper.toIntOrNull(t.value)); case \"track\": case \"disk\": case \"movementIndex\": const r = this.common[t.id].of; return ( (this.common[t.id] = s.CommonTagMapper.normalizeTrack(t.value)), void (this.common[t.id].of = null != r ? r : this.common[t.id].of) ); case \"year\": case \"originalyear\": t.value = parseInt(t.value, 10); break; case \"date\": const i = parseInt(t.value.substr(0, 4), 10); isNaN(i) || (this.common.year = i); break; case \"discogs_label_id\": case \"discogs_release_id\": case \"discogs_master_release_id\": case \"discogs_artist_id\": case \"discogs_votes\": t.value = \"string\" === typeof t.value ? parseInt(t.value, 10) : t.value; break; case \"replaygain_track_gain\": case \"replaygain_track_peak\": case \"replaygain_album_gain\": case \"replaygain_album_peak\": t.value = c.toRatio(t.value); break; case \"replaygain_track_minmax\": t.value = t.value.split(\",\").map((e) => parseInt(e, 10)); break; case \"replaygain_undo\": const n = t.value.split(\",\").map((e) => parseInt(e, 10)); t.value = { leftChannel: n[0], rightChannel: n[1] }; break; case \"gapless\": case \"compilation\": case \"podcast\": case \"showMovement\": t.value = \"1\" === t.value || 1 === t.value; break; case \"isrc\": if (this.common[t.id] && -1 !== this.common[t.id].indexOf(t.value)) return; break; default: } null !== t.value && this.setGenericTag(e, t); } toCommonMetadata() { return { format: this.format, native: this.native, quality: this.quality, common: this.common, }; } async postFixPicture(e) { if (e.data && e.data.length > 0) { if (!e.format) { const t = await u.fromBuffer(e.data); if (!t) return null; e.format = t.mime; } switch (((e.format = e.format.toLocaleLowerCase()), e.format)) { case \"image/jpg\": e.format = \"image/jpeg\"; } return e; } return this.addWarning(\"Empty picture tag found\"), null; } toCommon(e, t, r) { const i = { id: t, value: r }, n = this.tagMapper.mapTag(e, i, this); n && this.postMap(e, n); } setGenericTag(e, t) { A(`common.${t.id} = ${t.value}`); const r = this.commonOrigin[t.id] || 1e3, i = this.originPriority[e]; if (a.isSingleton(t.id)) { if (!(i 4 && i(e.slice(0, 4), n); }; }).call(this, r(\"1c35\").Buffer); }, \"04b7\": function (e, t) { e.exports = { exif: { 1: \"InteropIndex\", 2: \"InteropVersion\", 11: \"ProcessingSoftware\", 254: \"SubfileType\", 255: \"OldSubfileType\", 256: \"ImageWidth\", 257: \"ImageHeight\", 258: \"BitsPerSample\", 259: \"Compression\", 262: \"PhotometricInterpretation\", 263: \"Thresholding\", 264: \"CellWidth\", 265: \"CellLength\", 266: \"FillOrder\", 269: \"DocumentName\", 270: \"ImageDescription\", 271: \"Make\", 272: \"Model\", 273: \"StripOffsets\", 274: \"Orientation\", 277: \"SamplesPerPixel\", 278: \"RowsPerStrip\", 279: \"StripByteCounts\", 280: \"MinSampleValue\", 281: \"MaxSampleValue\", 282: \"XResolution\", 283: \"YResolution\", 284: \"PlanarConfiguration\", 285: \"PageName\", 286: \"XPosition\", 287: \"YPosition\", 288: \"FreeOffsets\", 289: \"FreeByteCounts\", 290: \"GrayResponseUnit\", 291: \"GrayResponseCurve\", 292: \"T4Options\", 293: \"T6Options\", 296: \"ResolutionUnit\", 297: \"PageNumber\", 300: \"ColorResponseUnit\", 301: \"TransferFunction\", 305: \"Software\", 306: \"ModifyDate\", 315: \"Artist\", 316: \"HostComputer\", 317: \"Predictor\", 318: \"WhitePoint\", 319: \"PrimaryChromaticities\", 320: \"ColorMap\", 321: \"HalftoneHints\", 322: \"TileWidth\", 323: \"TileLength\", 324: \"TileOffsets\", 325: \"TileByteCounts\", 326: \"BadFaxLines\", 327: \"CleanFaxData\", 328: \"ConsecutiveBadFaxLines\", 330: \"SubIFD\", 332: \"InkSet\", 333: \"InkNames\", 334: \"NumberofInks\", 336: \"DotRange\", 337: \"TargetPrinter\", 338: \"ExtraSamples\", 339: \"SampleFormat\", 340: \"SMinSampleValue\", 341: \"SMaxSampleValue\", 342: \"TransferRange\", 343: \"ClipPath\", 344: \"XClipPathUnits\", 345: \"YClipPathUnits\", 346: \"Indexed\", 347: \"JPEGTables\", 351: \"OPIProxy\", 400: \"GlobalParametersIFD\", 401: \"ProfileType\", 402: \"FaxProfile\", 403: \"CodingMethods\", 404: \"VersionYear\", 405: \"ModeNumber\", 433: \"Decode\", 434: \"DefaultImageColor\", 435: \"T82Options\", 437: \"JPEGTables\", 512: \"JPEGProc\", 513: \"ThumbnailOffset\", 514: \"ThumbnailLength\", 515: \"JPEGRestartInterval\", 517: \"JPEGLosslessPredictors\", 518: \"JPEGPointTransforms\", 519: \"JPEGQTables\", 520: \"JPEGDCTables\", 521: \"JPEGACTables\", 529: \"YCbCrCoefficients\", 530: \"YCbCrSubSampling\", 531: \"YCbCrPositioning\", 532: \"ReferenceBlackWhite\", 559: \"StripRowCounts\", 700: \"ApplicationNotes\", 999: \"USPTOMiscellaneous\", 4096: \"RelatedImageFileFormat\", 4097: \"RelatedImageWidth\", 4098: \"RelatedImageHeight\", 18246: \"Rating\", 18247: \"XP_DIP_XML\", 18248: \"StitchInfo\", 18249: \"RatingPercent\", 32781: \"ImageID\", 32931: \"WangTag1\", 32932: \"WangAnnotation\", 32933: \"WangTag3\", 32934: \"WangTag4\", 32995: \"Matteing\", 32996: \"DataType\", 32997: \"ImageDepth\", 32998: \"TileDepth\", 33405: \"Model2\", 33421: \"CFARepeatPatternDim\", 33422: \"CFAPattern2\", 33423: \"BatteryLevel\", 33424: \"KodakIFD\", 33432: \"Copyright\", 33434: \"ExposureTime\", 33437: \"FNumber\", 33445: \"MDFileTag\", 33446: \"MDScalePixel\", 33447: \"MDColorTable\", 33448: \"MDLabName\", 33449: \"MDSampleInfo\", 33450: \"MDPrepDate\", 33451: \"MDPrepTime\", 33452: \"MDFileUnits\", 33550: \"PixelScale\", 33589: \"AdventScale\", 33590: \"AdventRevision\", 33628: \"UIC1Tag\", 33629: \"UIC2Tag\", 33630: \"UIC3Tag\", 33631: \"UIC4Tag\", 33723: \"IPTC-NAA\", 33918: \"IntergraphPacketData\", 33919: \"IntergraphFlagRegisters\", 33920: \"IntergraphMatrix\", 33921: \"INGRReserved\", 33922: \"ModelTiePoint\", 34016: \"Site\", 34017: \"ColorSequence\", 34018: \"IT8Header\", 34019: \"RasterPadding\", 34020: \"BitsPerRunLength\", 34021: \"BitsPerExtendedRunLength\", 34022: \"ColorTable\", 34023: \"ImageColorIndicator\", 34024: \"BackgroundColorIndicator\", 34025: \"ImageColorValue\", 34026: \"BackgroundColorValue\", 34027: \"PixelIntensityRange\", 34028: \"TransparencyIndicator\", 34029: \"ColorCharacterization\", 34030: \"HCUsage\", 34031: \"TrapIndicator\", 34032: \"CMYKEquivalent\", 34118: \"SEMInfo\", 34152: \"AFCP_IPTC\", 34232: \"PixelMagicJBIGOptions\", 34264: \"ModelTransform\", 34306: \"WB_GRGBLevels\", 34310: \"LeafData\", 34377: \"PhotoshopSettings\", 34665: \"ExifOffset\", 34675: \"ICC_Profile\", 34687: \"TIFF_FXExtensions\", 34688: \"MultiProfiles\", 34689: \"SharedData\", 34690: \"T88Options\", 34732: \"ImageLayer\", 34735: \"GeoTiffDirectory\", 34736: \"GeoTiffDoubleParams\", 34737: \"GeoTiffAsciiParams\", 34850: \"ExposureProgram\", 34852: \"SpectralSensitivity\", 34853: \"GPSInfo\", 34855: \"ISO\", 34856: \"Opto-ElectricConvFactor\", 34857: \"Interlace\", 34858: \"TimeZoneOffset\", 34859: \"SelfTimerMode\", 34864: \"SensitivityType\", 34865: \"StandardOutputSensitivity\", 34866: \"RecommendedExposureIndex\", 34867: \"ISOSpeed\", 34868: \"ISOSpeedLatitudeyyy\", 34869: \"ISOSpeedLatitudezzz\", 34908: \"FaxRecvParams\", 34909: \"FaxSubAddress\", 34910: \"FaxRecvTime\", 34954: \"LeafSubIFD\", 36864: \"ExifVersion\", 36867: \"DateTimeOriginal\", 36868: \"CreateDate\", 37121: \"ComponentsConfiguration\", 37122: \"CompressedBitsPerPixel\", 37377: \"ShutterSpeedValue\", 37378: \"ApertureValue\", 37379: \"BrightnessValue\", 37380: \"ExposureCompensation\", 37381: \"MaxApertureValue\", 37382: \"SubjectDistance\", 37383: \"MeteringMode\", 37384: \"LightSource\", 37385: \"Flash\", 37386: \"FocalLength\", 37387: \"FlashEnergy\", 37388: \"SpatialFrequencyResponse\", 37389: \"Noise\", 37390: \"FocalPlaneXResolution\", 37391: \"FocalPlaneYResolution\", 37392: \"FocalPlaneResolutionUnit\", 37393: \"ImageNumber\", 37394: \"SecurityClassification\", 37395: \"ImageHistory\", 37396: \"SubjectArea\", 37397: \"ExposureIndex\", 37398: \"TIFF-EPStandardID\", 37399: \"SensingMethod\", 37434: \"CIP3DataFile\", 37435: \"CIP3Sheet\", 37436: \"CIP3Side\", 37439: \"StoNits\", 37500: \"MakerNote\", 37510: \"UserComment\", 37520: \"SubSecTime\", 37521: \"SubSecTimeOriginal\", 37522: \"SubSecTimeDigitized\", 37679: \"MSDocumentText\", 37680: \"MSPropertySetStorage\", 37681: \"MSDocumentTextPosition\", 37724: \"ImageSourceData\", 40091: \"XPTitle\", 40092: \"XPComment\", 40093: \"XPAuthor\", 40094: \"XPKeywords\", 40095: \"XPSubject\", 40960: \"FlashpixVersion\", 40961: \"ColorSpace\", 40962: \"ExifImageWidth\", 40963: \"ExifImageHeight\", 40964: \"RelatedSoundFile\", 40965: \"InteropOffset\", 41483: \"FlashEnergy\", 41484: \"SpatialFrequencyResponse\", 41485: \"Noise\", 41486: \"FocalPlaneXResolution\", 41487: \"FocalPlaneYResolution\", 41488: \"FocalPlaneResolutionUnit\", 41489: \"ImageNumber\", 41490: \"SecurityClassification\", 41491: \"ImageHistory\", 41492: \"SubjectLocation\", 41493: \"ExposureIndex\", 41494: \"TIFF-EPStandardID\", 41495: \"SensingMethod\", 41728: \"FileSource\", 41729: \"SceneType\", 41730: \"CFAPattern\", 41985: \"CustomRendered\", 41986: \"ExposureMode\", 41987: \"WhiteBalance\", 41988: \"DigitalZoomRatio\", 41989: \"FocalLengthIn35mmFormat\", 41990: \"SceneCaptureType\", 41991: \"GainControl\", 41992: \"Contrast\", 41993: \"Saturation\", 41994: \"Sharpness\", 41995: \"DeviceSettingDescription\", 41996: \"SubjectDistanceRange\", 42016: \"ImageUniqueID\", 42032: \"OwnerName\", 42033: \"SerialNumber\", 42034: \"LensInfo\", 42035: \"LensMake\", 42036: \"LensModel\", 42037: \"LensSerialNumber\", 42112: \"GDALMetadata\", 42113: \"GDALNoData\", 42240: \"Gamma\", 44992: \"ExpandSoftware\", 44993: \"ExpandLens\", 44994: \"ExpandFilm\", 44995: \"ExpandFilterLens\", 44996: \"ExpandScanner\", 44997: \"ExpandFlashLamp\", 48129: \"PixelFormat\", 48130: \"Transformation\", 48131: \"Uncompressed\", 48132: \"ImageType\", 48256: \"ImageWidth\", 48257: \"ImageHeight\", 48258: \"WidthResolution\", 48259: \"HeightResolution\", 48320: \"ImageOffset\", 48321: \"ImageByteCount\", 48322: \"AlphaOffset\", 48323: \"AlphaByteCount\", 48324: \"ImageDataDiscard\", 48325: \"AlphaDataDiscard\", 50215: \"OceScanjobDesc\", 50216: \"OceApplicationSelector\", 50217: \"OceIDNumber\", 50218: \"OceImageLogic\", 50255: \"Annotations\", 50341: \"PrintIM\", 50560: \"USPTOOriginalContentType\", 50706: \"DNGVersion\", 50707: \"DNGBackwardVersion\", 50708: \"UniqueCameraModel\", 50709: \"LocalizedCameraModel\", 50710: \"CFAPlaneColor\", 50711: \"CFALayout\", 50712: \"LinearizationTable\", 50713: \"BlackLevelRepeatDim\", 50714: \"BlackLevel\", 50715: \"BlackLevelDeltaH\", 50716: \"BlackLevelDeltaV\", 50717: \"WhiteLevel\", 50718: \"DefaultScale\", 50719: \"DefaultCropOrigin\", 50720: \"DefaultCropSize\", 50721: \"ColorMatrix1\", 50722: \"ColorMatrix2\", 50723: \"CameraCalibration1\", 50724: \"CameraCalibration2\", 50725: \"ReductionMatrix1\", 50726: \"ReductionMatrix2\", 50727: \"AnalogBalance\", 50728: \"AsShotNeutral\", 50729: \"AsShotWhiteXY\", 50730: \"BaselineExposure\", 50731: \"BaselineNoise\", 50732: \"BaselineSharpness\", 50733: \"BayerGreenSplit\", 50734: \"LinearResponseLimit\", 50735: \"CameraSerialNumber\", 50736: \"DNGLensInfo\", 50737: \"ChromaBlurRadius\", 50738: \"AntiAliasStrength\", 50739: \"ShadowScale\", 50740: \"DNGPrivateData\", 50741: \"MakerNoteSafety\", 50752: \"RawImageSegmentation\", 50778: \"CalibrationIlluminant1\", 50779: \"CalibrationIlluminant2\", 50780: \"BestQualityScale\", 50781: \"RawDataUniqueID\", 50784: \"AliasLayerMetadata\", 50827: \"OriginalRawFileName\", 50828: \"OriginalRawFileData\", 50829: \"ActiveArea\", 50830: \"MaskedAreas\", 50831: \"AsShotICCProfile\", 50832: \"AsShotPreProfileMatrix\", 50833: \"CurrentICCProfile\", 50834: \"CurrentPreProfileMatrix\", 50879: \"ColorimetricReference\", 50898: \"PanasonicTitle\", 50899: \"PanasonicTitle2\", 50931: \"CameraCalibrationSig\", 50932: \"ProfileCalibrationSig\", 50933: \"ProfileIFD\", 50934: \"AsShotProfileName\", 50935: \"NoiseReductionApplied\", 50936: \"ProfileName\", 50937: \"ProfileHueSatMapDims\", 50938: \"ProfileHueSatMapData1\", 50939: \"ProfileHueSatMapData2\", 50940: \"ProfileToneCurve\", 50941: \"ProfileEmbedPolicy\", 50942: \"ProfileCopyright\", 50964: \"ForwardMatrix1\", 50965: \"ForwardMatrix2\", 50966: \"PreviewApplicationName\", 50967: \"PreviewApplicationVersion\", 50968: \"PreviewSettingsName\", 50969: \"PreviewSettingsDigest\", 50970: \"PreviewColorSpace\", 50971: \"PreviewDateTime\", 50972: \"RawImageDigest\", 50973: \"OriginalRawFileDigest\", 50974: \"SubTileBlockSize\", 50975: \"RowInterleaveFactor\", 50981: \"ProfileLookTableDims\", 50982: \"ProfileLookTableData\", 51008: \"OpcodeList1\", 51009: \"OpcodeList2\", 51022: \"OpcodeList3\", 51041: \"NoiseProfile\", 51043: \"TimeCodes\", 51044: \"FrameRate\", 51058: \"TStop\", 51081: \"ReelName\", 51089: \"OriginalDefaultFinalSize\", 51090: \"OriginalBestQualitySize\", 51091: \"OriginalDefaultCropSize\", 51105: \"CameraLabel\", 51107: \"ProfileHueSatMapEncoding\", 51108: \"ProfileLookTableEncoding\", 51109: \"BaselineExposureOffset\", 51110: \"DefaultBlackRender\", 51111: \"NewRawImageDigest\", 51112: \"RawToPreviewGain\", 51125: \"DefaultUserCrop\", 59932: \"Padding\", 59933: \"OffsetSchema\", 65e3: \"OwnerName\", 65001: \"SerialNumber\", 65002: \"Lens\", 65024: \"KDC_IFD\", 65100: \"RawFile\", 65101: \"Converter\", 65102: \"WhiteBalance\", 65105: \"Exposure\", 65106: \"Shadows\", 65107: \"Brightness\", 65108: \"Contrast\", 65109: \"Saturation\", 65110: \"Sharpness\", 65111: \"Smoothness\", 65112: \"MoireFilter\", }, gps: { 0: \"GPSVersionID\", 1: \"GPSLatitudeRef\", 2: \"GPSLatitude\", 3: \"GPSLongitudeRef\", 4: \"GPSLongitude\", 5: \"GPSAltitudeRef\", 6: \"GPSAltitude\", 7: \"GPSTimeStamp\", 8: \"GPSSatellites\", 9: \"GPSStatus\", 10: \"GPSMeasureMode\", 11: \"GPSDOP\", 12: \"GPSSpeedRef\", 13: \"GPSSpeed\", 14: \"GPSTrackRef\", 15: \"GPSTrack\", 16: \"GPSImgDirectionRef\", 17: \"GPSImgDirection\", 18: \"GPSMapDatum\", 19: \"GPSDestLatitudeRef\", 20: \"GPSDestLatitude\", 21: \"GPSDestLongitudeRef\", 22: \"GPSDestLongitude\", 23: \"GPSDestBearingRef\", 24: \"GPSDestBearing\", 25: \"GPSDestDistanceRef\", 26: \"GPSDestDistance\", 27: \"GPSProcessingMethod\", 28: \"GPSAreaInformation\", 29: \"GPSDateStamp\", 30: \"GPSDifferential\", 31: \"GPSHPositioningError\", }, }; }, \"04cc\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.Header = void 0); const i = r(\"6f58\"), n = r(\"d3ab\"); t.Header = { len: 80, get: (e, t) => ({ speex: new i.StringType(8, \"ascii\").get(e, t + 0), version: n.trimRightNull(new i.StringType(20, \"ascii\").get(e, t + 8)), version_id: e.readInt32LE(t + 28), header_size: e.readInt32LE(t + 32), rate: e.readInt32LE(t + 36), mode: e.readInt32LE(t + 40), mode_bitstream_version: e.readInt32LE(t + 44), nb_channels: e.readInt32LE(t + 48), bitrate: e.readInt32LE(t + 52), frame_size: e.readInt32LE(t + 56), vbr: e.readInt32LE(t + 60), frames_per_packet: e.readInt32LE(t + 64), extra_headers: e.readInt32LE(t + 68), reserved1: e.readInt32LE(t + 72), reserved2: e.readInt32LE(t + 76), }), }; }, \"04d1\": function (e, t, r) { var i = r(\"342f\"), n = i.match(/firefox\\/(\\d+)/i); e.exports = !!n && +n[1]; }, \"0538\": function (e, t, r) { \"use strict\"; var i = r(\"da84\"), n = r(\"e330\"), a = r(\"59ed\"), o = r(\"861d\"), s = r(\"1a2d\"), c = r(\"f36a\"), u = i.Function, A = n([].concat), f = n([].join), l = {}, h = function (e, t, r) { if (!s(l, t)) { for (var i = [], n = 0; n < t; n++) i[n] = \"a[\" + n + \"]\"; l[t] = u(\"C,a\", \"return new C(\" + f(i, \",\") + \")\"); } return l[t](e, r); }; e.exports = u.bind || function (e) { var t = a(this), r = t.prototype, i = c(arguments, 1), n = function () { var r = A(i, c(arguments)); return this instanceof n ? h(t, r.length, r) : t.apply(e, r); }; return o(r) && (n.prototype = r), n; }; }, \"057f\": function (e, t, r) { var i = r(\"c6b6\"), n = r(\"fc6a\"), a = r(\"241c\").f, o = r(\"4dae\"), s = \"object\" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [], c = function (e) { try { return a(e); } catch (t) { return o(s); } }; e.exports.f = function (e) { return s && \"Window\" == i(e) ? c(e) : a(n(e)); }; }, \"0662\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.TextEncodingToken = t.ExtendedHeader = t.ID3v2Header = t.UINT32SYNCSAFE = t.AttachedPictureType = void 0); const i = r(\"6f58\"), n = r(\"d3ab\"); (function (e) { (e[(e[\"Other\"] = 0)] = \"Other\"), (e[(e[\"32x32 pixels 'file icon' (PNG only)\"] = 1)] = \"32x32 pixels 'file icon' (PNG only)\"), (e[(e[\"Other file icon\"] = 2)] = \"Other file icon\"), (e[(e[\"Cover (front)\"] = 3)] = \"Cover (front)\"), (e[(e[\"Cover (back)\"] = 4)] = \"Cover (back)\"), (e[(e[\"Leaflet page\"] = 5)] = \"Leaflet page\"), (e[(e[\"Media (e.g. label side of CD)\"] = 6)] = \"Media (e.g. label side of CD)\"), (e[(e[\"Lead artist/lead performer/soloist\"] = 7)] = \"Lead artist/lead performer/soloist\"), (e[(e[\"Artist/performer\"] = 8)] = \"Artist/performer\"), (e[(e[\"Conductor\"] = 9)] = \"Conductor\"), (e[(e[\"Band/Orchestra\"] = 10)] = \"Band/Orchestra\"), (e[(e[\"Composer\"] = 11)] = \"Composer\"), (e[(e[\"Lyricist/text writer\"] = 12)] = \"Lyricist/text writer\"), (e[(e[\"Recording Location\"] = 13)] = \"Recording Location\"), (e[(e[\"During recording\"] = 14)] = \"During recording\"), (e[(e[\"During performance\"] = 15)] = \"During performance\"), (e[(e[\"Movie/video screen capture\"] = 16)] = \"Movie/video screen capture\"), (e[(e[\"A bright coloured fish\"] = 17)] = \"A bright coloured fish\"), (e[(e[\"Illustration\"] = 18)] = \"Illustration\"), (e[(e[\"Band/artist logotype\"] = 19)] = \"Band/artist logotype\"), (e[(e[\"Publisher/Studio logotype\"] = 20)] = \"Publisher/Studio logotype\"); })(t.AttachedPictureType || (t.AttachedPictureType = {})), (t.UINT32SYNCSAFE = { get: (e, t) => (127 & e[t + 3]) | (e[t + 2] < 7) | (e[t + 1] < 14) | (e[t] < 21), len: 4, }), (t.ID3v2Header = { len: 10, get: (e, r) => ({ fileIdentifier: new i.StringType(3, \"ascii\").get(e, r), version: { major: i.INT8.get(e, r + 3), revision: i.INT8.get(e, r + 4), }, flags: { unsynchronisation: n.getBit(e, r + 5, 7), isExtendedHeader: n.getBit(e, r + 5, 6), expIndicator: n.getBit(e, r + 5, 5), footer: n.getBit(e, r + 5, 4), }, size: t.UINT32SYNCSAFE.get(e, r + 6), }), }), (t.ExtendedHeader = { len: 10, get: (e, t) => ({ size: i.UINT32_BE.get(e, t), extendedFlags: i.UINT16_BE.get(e, t + 4), sizeOfPadding: i.UINT32_BE.get(e, t + 6), crcDataPresent: n.getBit(e, t + 4, 31), }), }), (t.TextEncodingToken = { len: 1, get: (e, t) => { switch (e.readUInt8(t)) { case 0: return { encoding: \"latin1\" }; case 1: return { encoding: \"utf16le\", bom: !0 }; case 2: return { encoding: \"utf16le\", bom: !1 }; case 3: return { encoding: \"utf8\", bom: !1 }; default: return { encoding: \"utf8\", bom: !1 }; } }, }); }, \"0676\": function (e, t) { function r() { throw new TypeError( \"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\" ); } (e.exports = r), (e.exports.__esModule = !0), (e.exports[\"default\"] = e.exports); }, \"06cf\": function (e, t, r) { var i = r(\"83ab\"), n = r(\"c65b\"), a = r(\"d1e7\"), o = r(\"5c6c\"), s = r(\"fc6a\"), c = r(\"a04b\"), u = r(\"1a2d\"), A = r(\"0cfb\"), f = Object.getOwnPropertyDescriptor; t.f = i ? f : function (e, t) { if (((e = s(e)), (t = c(t)), A)) try { return f(e, t); } catch (r) {} if (u(e, t)) return o(!n(a.f, e, t), e[t]); }; }, \"07a0\": function (e, t, r) { \"use strict\"; var i = r(\"4ea4\"); Object.defineProperty(t, \"__esModule\", { value: !0 }), (t[\"default\"] = void 0); var n = i(r(\"7037\")), a = r(\"c2d7\"), o = function () { return { displace: function (e, t, r) { if ( \"object\" !== (0, n[\"default\"])(e) || e.constructor !== this.constructor ) return a.throwError.call( this, \"The source must be a Jimp image\", r ); if (\"number\" !== typeof t) return a.throwError.call(this, \"factor must be a number\", r); var i = this.cloneQuiet(); return ( this.scanQuiet( 0, 0, this.bitmap.width, this.bitmap.height, function (r, n, a) { var o = (e.bitmap.data[a] / 256) * t; o = Math.round(o); var s = this.getPixelIndex(r + o, n); (this.bitmap.data[s] = i.bitmap.data[a]), (this.bitmap.data[s + 1] = i.bitmap.data[a + 1]), (this.bitmap.data[s + 2] = i.bitmap.data[a + 2]); } ), (0, a.isNodePattern)(r) && r.call(this, null, this), this ); }, }; }; t[\"default\"] = o; }, \"07f4\": function (e, t, r) { \"use strict\"; var i = r(\"be7f\"), n = 4, a = 0, o = 1, s = 2; function c(e) { var t = e.length; while (--t >= 0) e[t] = 0; } var u = 0, A = 1, f = 2, l = 3, h = 258, d = 29, g = 256, p = g + 1 + d, m = 30, b = 19, I = 2 * p + 1, E = 15, y = 16, B = 7, v = 256, w = 16, C = 17, _ = 18, Q = [ 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, ], k = [ 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, ], S = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7], x = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], T = 512, D = new Array(2 * (p + 2)); c(D); var M = new Array(2 * m); c(M); var R = new Array(T); c(R); var N = new Array(h - l + 1); c(N); var F = new Array(d); c(F); var L, O, P, U = new Array(m); function G(e, t, r, i, n) { (this.static_tree = e), (this.extra_bits = t), (this.extra_base = r), (this.elems = i), (this.max_length = n), (this.has_stree = e && e.length); } function z(e, t) { (this.dyn_tree = e), (this.max_code = 0), (this.stat_desc = t); } function j(e) { return e < 256 ? R[e] : R[256 + (e >>> 7)]; } function H(e, t) { (e.pending_buf[e.pending++] = 255 & t), (e.pending_buf[e.pending++] = (t >>> 8) & 255); } function Y(e, t, r) { e.bi_valid > y - r ? ((e.bi_buf |= (t < e.bi_valid) & 65535), H(e, e.bi_buf), (e.bi_buf = t >> (y - e.bi_valid)), (e.bi_valid += r - y)) : ((e.bi_buf |= (t < e.bi_valid) & 65535), (e.bi_valid += r)); } function W(e, t, r) { Y(e, r[2 * t], r[2 * t + 1]); } function J(e, t) { var r = 0; do { (r |= 1 & e), (e >>>= 1), (r = 8), (e.bi_valid -= 8)); } function K(e, t) { var r, i, n, a, o, s, c = t.dyn_tree, u = t.max_code, A = t.stat_desc.static_tree, f = t.stat_desc.has_stree, l = t.stat_desc.extra_bits, h = t.stat_desc.extra_base, d = t.stat_desc.max_length, g = 0; for (a = 0; a u || (e.bl_count[a]++, (o = 0), i >= h && (o = l[i - h]), (s = c[2 * i]), (e.opt_len += s * (a + o)), f && (e.static_len += s * (A[2 * i + 1] + o))); if (0 !== g) { do { a = d - 1; while (0 === e.bl_count[a]) a--; e.bl_count[a]--, (e.bl_count[a + 1] += 2), e.bl_count[d]--, (g -= 2); } while (g > 0); for (a = d; 0 !== a; a--) { i = e.bl_count[a]; while (0 !== i) (n = e.heap[--r]), n > u || (c[2 * n + 1] !== a && ((e.opt_len += (a - c[2 * n + 1]) * c[2 * n]), (c[2 * n + 1] = a)), i--); } } } function X(e, t, r) { var i, n, a = new Array(E + 1), o = 0; for (i = 1; i 1 || \"\".split(/.?/).length ? function (e, r) { var a = h(u(this)), o = void 0 === r ? y : r >>> 0; if (0 === o) return []; if (void 0 === e) return [a]; if (!s(e)) return n(t, a, e, o); var c, A, f, l = [], d = (e.ignoreCase ? \"i\" : \"\") + (e.multiline ? \"m\" : \"\") + (e.unicode ? \"u\" : \"\") + (e.sticky ? \"y\" : \"\"), p = 0, b = new RegExp(e.source, d + \"g\"); while ((c = n(m, b, a))) { if ( ((A = b.lastIndex), A > p && (C(l, _(a, p, c.index)), c.length > 1 && c.index < a.length && i(v, l, g(c, 1)), (f = c[0].length), (p = A), l.length >= o)) ) break; b.lastIndex === c.index && b.lastIndex++; } return ( p === a.length ? (!f && w(b, \"\")) || C(l, \"\") : C(l, _(a, p)), l.length > o ? g(l, 0, o) : l ); } : \"0\".split(void 0, 0).length ? function (e, r) { return void 0 === e && 0 === r ? [] : n(t, this, e, r); } : t), [ function (t, r) { var i = u(this), o = void 0 == t ? void 0 : d(t, e); return o ? n(o, t, i, r) : n(a, h(i), t, r); }, function (e, i) { var n = c(this), o = h(e), s = r(a, n, o, i, a !== t); if (s.done) return s.value; var u = A(n, RegExp), d = n.unicode, g = (n.ignoreCase ? \"i\" : \"\") + (n.multiline ? \"m\" : \"\") + (n.unicode ? \"u\" : \"\") + (E ? \"g\" : \"y\"), m = new u(E ? \"^(?:\" + n.source + \")\" : n, g), b = void 0 === i ? y : i >>> 0; if (0 === b) return []; if (0 === o.length) return null === p(m, o) ? [o] : []; var I = 0, v = 0, w = []; while (v < o.length) { m.lastIndex = E ? 0 : v; var Q, k = p(m, E ? _(o, v) : o); if ( null === k || (Q = B(l(m.lastIndex + (E ? v : 0)), o.length)) === I ) v = f(o, v, d); else { if ((C(w, _(o, I, v)), w.length === b)) return w; for (var S = 1; S 2 ? arguments[2] : void 0, f = o((void 0 === A ? s : n(A, s)) - u, s - c), l = 1; u < c && c < u + f && ((l = -1), (u += f - 1), (c += f - 1)); while (f-- > 0) u in r ? (r[c] = r[u]) : delete r[c], (c += l), (u += l); return r; }; }, 1468: function (e, t) { var r = 1e3, i = 60 * r, n = 60 * i, a = 24 * n, o = 7 * a, s = 365.25 * a; function c(e) { if (((e = String(e)), !(e.length > 100))) { var t = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec( e ); if (t) { var c = parseFloat(t[1]), u = (t[2] || \"ms\").toLowerCase(); switch (u) { case \"years\": case \"year\": case \"yrs\": case \"yr\": case \"y\": return c * s; case \"weeks\": case \"week\": case \"w\": return c * o; case \"days\": case \"day\": case \"d\": return c * a; case \"hours\": case \"hour\": case \"hrs\": case \"hr\": case \"h\": return c * n; case \"minutes\": case \"minute\": case \"mins\": case \"min\": case \"m\": return c * i; case \"seconds\": case \"second\": case \"secs\": case \"sec\": case \"s\": return c * r; case \"milliseconds\": case \"millisecond\": case \"msecs\": case \"msec\": case \"ms\": return c; default: return; } } } } function u(e) { var t = Math.abs(e); return t >= a ? Math.round(e / a) + \"d\" : t >= n ? Math.round(e / n) + \"h\" : t >= i ? Math.round(e / i) + \"m\" : t >= r ? Math.round(e / r) + \"s\" : e + \"ms\"; } function A(e) { var t = Math.abs(e); return t >= a ? f(e, t, a, \"day\") : t >= n ? f(e, t, n, \"hour\") : t >= i ? f(e, t, i, \"minute\") : t >= r ? f(e, t, r, \"second\") : e + \" ms\"; } function f(e, t, r, i) { var n = t >= 1.5 * r; return Math.round(e / r) + \" \" + i + (n ? \"s\" : \"\"); } e.exports = function (e, t) { t = t || {}; var r = typeof e; if (\"string\" === r && e.length > 0) return c(e); if (\"number\" === r && isFinite(e)) return t.long ? A(e) : u(e); throw new Error( \"val is not a non-empty string or a valid number. val=\" + JSON.stringify(e) ); }; }, \"14c3\": function (e, t, r) { var i = r(\"da84\"), n = r(\"c65b\"), a = r(\"825a\"), o = r(\"1626\"), s = r(\"c6b6\"), c = r(\"9263\"), u = i.TypeError; e.exports = function (e, t) { var r = e.exec; if (o(r)) { var i = n(r, e, t); return null !== i && a(i), i; } if (\"RegExp\" === s(e)) return n(c, e, t); throw u(\"RegExp#exec called on incompatible receiver\"); }; }, \"150c\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.ChapterText = t.StcoAtom = t.StszAtom = t.StscAtom = t.SampleToChunkToken = t.SttsAtom = t.TimeToSampleToken = t.SoundSampleDescriptionV0 = t.SoundSampleDescriptionVersion = t.StsdAtom = t.TrackHeaderAtom = t.NameAtom = t.DataAtom = t.MvhdAtom = t.MdhdAtom = t.FixedLengthAtom = t.mhdr = t.tkhd = t.ftyp = t.ExtendedSize = t.Header = void 0); const i = r(\"6f58\"), n = r(\"98a7\"), a = r(\"34eb\"), o = a(\"music-metadata:parser:MP4:atom\"); (t.Header = { len: 8, get: (e, t) => { const r = i.UINT32_BE.get(e, t); if (r < 0) throw new Error(\"Invalid atom header length\"); return { length: BigInt(r), name: new i.StringType(4, \"binary\").get(e, t + 4), }; }, put: (e, t, r) => ( i.UINT32_BE.put(e, t, Number(r.length)), n.FourCcToken.put(e, t + 4, r.name) ), }), (t.ExtendedSize = i.UINT64_BE), (t.ftyp = { len: 4, get: (e, t) => ({ type: new i.StringType(4, \"ascii\").get(e, t) }), }), (t.tkhd = { len: 4, get: (e, t) => ({ type: new i.StringType(4, \"ascii\").get(e, t) }), }), (t.mhdr = { len: 8, get: (e, t) => ({ version: i.UINT8.get(e, t), flags: i.UINT24_BE.get(e, t + 1), nextItemID: i.UINT32_BE.get(e, t + 4), }), }); class s { constructor(e, t, r) { if (((this.len = e), e < t)) throw new Error( `Atom ${r} expected to be ${t}, but specifies ${e} bytes long.` ); e > t && o( `Warning: atom ${r} expected to be ${t}, but was actually ${e} bytes long.` ); } } t.FixedLengthAtom = s; const c = { len: 4, get: (e, t) => { const r = i.UINT32_BE.get(e, t) - 2082844800; return new Date(1e3 * r); }, }; class u extends s { constructor(e) { super(e, 24, \"mdhd\"), (this.len = e); } get(e, t) { return { version: i.UINT8.get(e, t + 0), flags: i.UINT24_BE.get(e, t + 1), creationTime: c.get(e, t + 4), modificationTime: c.get(e, t + 8), timeScale: i.UINT32_BE.get(e, t + 12), duration: i.UINT32_BE.get(e, t + 16), language: i.UINT16_BE.get(e, t + 20), quality: i.UINT16_BE.get(e, t + 22), }; } } t.MdhdAtom = u; class A extends s { constructor(e) { super(e, 100, \"mvhd\"), (this.len = e); } get(e, t) { return { version: i.UINT8.get(e, t), flags: i.UINT24_BE.get(e, t + 1), creationTime: c.get(e, t + 4), modificationTime: c.get(e, t + 8), timeScale: i.UINT32_BE.get(e, t + 12), duration: i.UINT32_BE.get(e, t + 16), preferredRate: i.UINT32_BE.get(e, t + 20), preferredVolume: i.UINT16_BE.get(e, t + 24), previewTime: i.UINT32_BE.get(e, t + 72), previewDuration: i.UINT32_BE.get(e, t + 76), posterTime: i.UINT32_BE.get(e, t + 80), selectionTime: i.UINT32_BE.get(e, t + 84), selectionDuration: i.UINT32_BE.get(e, t + 88), currentTime: i.UINT32_BE.get(e, t + 92), nextTrackID: i.UINT32_BE.get(e, t + 96), }; } } t.MvhdAtom = A; class f { constructor(e) { this.len = e; } get(e, t) { return { type: { set: i.UINT8.get(e, t + 0), type: i.UINT24_BE.get(e, t + 1) }, locale: i.UINT24_BE.get(e, t + 4), value: new i.BufferType(this.len - 8).get(e, t + 8), }; } } t.DataAtom = f; class l { constructor(e) { this.len = e; } get(e, t) { return { version: i.UINT8.get(e, t), flags: i.UINT24_BE.get(e, t + 1), name: new i.StringType(this.len - 4, \"utf-8\").get(e, t + 4), }; } } t.NameAtom = l; class h { constructor(e) { this.len = e; } get(e, t) { return { version: i.UINT8.get(e, t), flags: i.UINT24_BE.get(e, t + 1), creationTime: c.get(e, t + 4), modificationTime: c.get(e, t + 8), trackId: i.UINT32_BE.get(e, t + 12), duration: i.UINT32_BE.get(e, t + 20), layer: i.UINT16_BE.get(e, t + 24), alternateGroup: i.UINT16_BE.get(e, t + 26), volume: i.UINT16_BE.get(e, t + 28), }; } } t.TrackHeaderAtom = h; const d = { len: 8, get: (e, t) => ({ version: i.UINT8.get(e, t), flags: i.UINT24_BE.get(e, t + 1), numberOfEntries: i.UINT32_BE.get(e, t + 4), }), }; class g { constructor(e) { this.len = e; } get(e, t) { return { dataFormat: n.FourCcToken.get(e, t), dataReferenceIndex: i.UINT16_BE.get(e, t + 10), description: new i.BufferType(this.len - 12).get(e, t + 12), }; } } class p { constructor(e) { this.len = e; } get(e, t) { const r = d.get(e, t); t += d.len; const n = []; for (let a = 0; a < r.numberOfEntries; ++a) { const r = i.UINT32_BE.get(e, t); (t += i.UINT32_BE.len), n.push(new g(r).get(e, t)), (t += r); } return { header: r, table: n }; } } (t.StsdAtom = p), (t.SoundSampleDescriptionVersion = { len: 8, get(e, t) { return { version: i.INT16_BE.get(e, t), revision: i.INT16_BE.get(e, t + 2), vendor: i.INT32_BE.get(e, t + 4), }; }, }), (t.SoundSampleDescriptionV0 = { len: 12, get(e, t) { return { numAudioChannels: i.INT16_BE.get(e, t + 0), sampleSize: i.INT16_BE.get(e, t + 2), compressionId: i.INT16_BE.get(e, t + 4), packetSize: i.INT16_BE.get(e, t + 6), sampleRate: i.UINT16_BE.get(e, t + 8) + i.UINT16_BE.get(e, t + 10) / 1e4, }; }, }); class m { constructor(e, t) { (this.len = e), (this.token = t); } get(e, t) { const r = i.INT32_BE.get(e, t + 4); return { version: i.INT8.get(e, t + 0), flags: i.INT24_BE.get(e, t + 1), numberOfEntries: r, entries: v(e, this.token, t + 8, this.len - 8, r), }; } } t.TimeToSampleToken = { len: 8, get(e, t) { return { count: i.INT32_BE.get(e, t + 0), duration: i.INT32_BE.get(e, t + 4), }; }, }; class b extends m { constructor(e) { super(e, t.TimeToSampleToken), (this.len = e); } } (t.SttsAtom = b), (t.SampleToChunkToken = { len: 12, get(e, t) { return { firstChunk: i.INT32_BE.get(e, t), samplesPerChunk: i.INT32_BE.get(e, t + 4), sampleDescriptionId: i.INT32_BE.get(e, t + 8), }; }, }); class I extends m { constructor(e) { super(e, t.SampleToChunkToken), (this.len = e); } } t.StscAtom = I; class E { constructor(e) { this.len = e; } get(e, t) { const r = i.INT32_BE.get(e, t + 8); return { version: i.INT8.get(e, t), flags: i.INT24_BE.get(e, t + 1), sampleSize: i.INT32_BE.get(e, t + 4), numberOfEntries: r, entries: v(e, i.INT32_BE, t + 12, this.len - 12, r), }; } } t.StszAtom = E; class y extends m { constructor(e) { super(e, i.INT32_BE), (this.len = e); } } t.StcoAtom = y; class B { constructor(e) { this.len = e; } get(e, t) { const r = i.INT16_BE.get(e, t + 0), n = new i.StringType(r, \"utf-8\"); return n.get(e, t + 2); } } function v(e, t, r, i, n) { if ( (o(`remainingLen=${i}, numberOfEntries=${n} * token-len=${t.len}`), 0 === i) ) return []; if (i !== n * t.len) throw new Error( \"mismatch number-of-entries with remaining atom-length\" ); const a = []; for (let o = 0; o < n; ++o) a.push(t.get(e, r)), (r += t.len); return a; } t.ChapterText = B; }, 1536: function (e, t, r) { \"use strict\"; (function (t) { var i = r(\"662d\"); function n(e, t, r, i, n) { for (var a = 0; a < r; a++) i[n + a] = e[t + a]; } function a(e, t, r) { for (var i = 0, n = t + r, a = t; a < n; a++) i += Math.abs(e[a]); return i; } function o(e, t, r, i, n, a) { for (var o = 0; o < r; o++) { var s = o >= a ? e[t + o - a] : 0, c = e[t + o] - s; i[n + o] = c; } } function s(e, t, r, i) { for (var n = 0, a = 0; a < r; a++) { var o = a >= i ? e[t + a - i] : 0, s = e[t + a] - o; n += Math.abs(s); } return n; } function c(e, t, r, i, n) { for (var a = 0; a < r; a++) { var o = t > 0 ? e[t + a - r] : 0, s = e[t + a] - o; i[n + a] = s; } } function u(e, t, r) { for (var i = 0, n = t + r, a = t; a < n; a++) { var o = t > 0 ? e[a - r] : 0, s = e[a] - o; i += Math.abs(s); } return i; } function A(e, t, r, i, n, a) { for (var o = 0; o < r; o++) { var s = o >= a ? e[t + o - a] : 0, c = t > 0 ? e[t + o - r] : 0, u = e[t + o] - ((s + c) >> 1); i[n + o] = u; } } function f(e, t, r, i) { for (var n = 0, a = 0; a < r; a++) { var o = a >= i ? e[t + a - i] : 0, s = t > 0 ? e[t + a - r] : 0, c = e[t + a] - ((o + s) >> 1); n += Math.abs(c); } return n; } function l(e, t, r, n, a, o) { for (var s = 0; s < r; s++) { var c = s >= o ? e[t + s - o] : 0, u = t > 0 ? e[t + s - r] : 0, A = t > 0 && s >= o ? e[t + s - (r + o)] : 0, f = e[t + s] - i(c, u, A); n[a + s] = f; } } function h(e, t, r, n) { for (var a = 0, o = 0; o < r; o++) { var s = o >= n ? e[t + o - n] : 0, c = t > 0 ? e[t + o - r] : 0, u = t > 0 && o >= n ? e[t + o - (r + n)] : 0, A = e[t + o] - i(s, c, u); a += Math.abs(A); } return a; } var d = { 0: n, 1: o, 2: c, 3: A, 4: l }, g = { 0: a, 1: s, 2: u, 3: f, 4: h }; e.exports = function (e, r, i, n, a) { var o; if (\"filterType\" in n && -1 !== n.filterType) { if (\"number\" !== typeof n.filterType) throw new Error(\"unrecognised filter types\"); o = [n.filterType]; } else o = [0, 1, 2, 3, 4]; 16 === n.bitDepth && (a *= 2); for ( var s = r * a, c = 0, u = 0, A = new t((s + 1) * i), f = o[0], l = 0; l < i; l++ ) { if (o.length > 1) for (var h = 1 / 0, p = 0; p < o.length; p++) { var m = g[o[p]](e, u, s, a); m < h && ((f = o[p]), (h = m)); } (A[c] = f), c++, d[f](e, u, s, A, c, a), (c += s), (u += s); } return A; }; }).call(this, r(\"1c35\").Buffer); }, \"159b\": function (e, t, r) { var i = r(\"da84\"), n = r(\"fdbc\"), a = r(\"785a\"), o = r(\"17c2\"), s = r(\"9112\"), c = function (e) { if (e && e.forEach !== o) try { s(e, \"forEach\", o); } catch (t) { e.forEach = o; } }; for (var u in n) n[u] && c(i[u] && i[u].prototype); c(a); }, \"15a0\": function (e, t, r) { \"use strict\"; (function (e) { Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.AbstractTokenizer = void 0); const i = r(\"e23d\"); class n { constructor(e) { (this.position = 0), (this.numBuffer = new Uint8Array(8)), (this.fileInfo = e || {}); } async readToken(t, r = this.position) { const n = e.alloc(t.len), a = await this.readBuffer(n, { position: r }); if (a < t.len) throw new i.EndOfStreamError(); return t.get(n, 0); } async peekToken(t, r = this.position) { const n = e.alloc(t.len), a = await this.peekBuffer(n, { position: r }); if (a < t.len) throw new i.EndOfStreamError(); return t.get(n, 0); } async readNumber(e) { const t = await this.readBuffer(this.numBuffer, { length: e.len }); if (t < e.len) throw new i.EndOfStreamError(); return e.get(this.numBuffer, 0); } async peekNumber(e) { const t = await this.peekBuffer(this.numBuffer, { length: e.len }); if (t < e.len) throw new i.EndOfStreamError(); return e.get(this.numBuffer, 0); } async ignore(e) { if (void 0 !== this.fileInfo.size) { const t = this.fileInfo.size - this.position; if (e > t) return (this.position += t), t; } return (this.position += e), e; } async close() {} normalizeOptions(e, t) { if (t && void 0 !== t.position && t.position < this.position) throw new Error( \"`options.position` must be equal or greater than `tokenizer.position`\" ); return t ? { mayBeLess: !0 === t.mayBeLess, offset: t.offset ? t.offset : 0, length: t.length ? t.length : e.length - (t.offset ? t.offset : 0), position: t.position ? t.position : this.position, } : { mayBeLess: !1, offset: 0, length: e.length, position: this.position, }; } } t.AbstractTokenizer = n; }).call(this, r(\"1c35\").Buffer); }, \"15bf\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.APEv2TagMapper = void 0); const i = r(\"53d6\"), n = { Title: \"title\", Artist: \"artist\", Artists: \"artists\", \"Album Artist\": \"albumartist\", Album: \"album\", Year: \"date\", Originalyear: \"originalyear\", Originaldate: \"originaldate\", Comment: \"comment\", Track: \"track\", Disc: \"disk\", DISCNUMBER: \"disk\", Genre: \"genre\", \"Cover Art (Front)\": \"picture\", \"Cover Art (Back)\": \"picture\", Composer: \"composer\", Lyrics: \"lyrics\", ALBUMSORT: \"albumsort\", TITLESORT: \"titlesort\", WORK: \"work\", ARTISTSORT: \"artistsort\", ALBUMARTISTSORT: \"albumartistsort\", COMPOSERSORT: \"composersort\", Lyricist: \"lyricist\", Writer: \"writer\", Conductor: \"conductor\", MixArtist: \"remixer\", Arranger: \"arranger\", Engineer: \"engineer\", Producer: \"producer\", DJMixer: \"djmixer\", Mixer: \"mixer\", Label: \"label\", Grouping: \"grouping\", Subtitle: \"subtitle\", DiscSubtitle: \"discsubtitle\", Compilation: \"compilation\", BPM: \"bpm\", Mood: \"mood\", Media: \"media\", CatalogNumber: \"catalognumber\", MUSICBRAINZ_ALBUMSTATUS: \"releasestatus\", MUSICBRAINZ_ALBUMTYPE: \"releasetype\", RELEASECOUNTRY: \"releasecountry\", Script: \"script\", Language: \"language\", Copyright: \"copyright\", LICENSE: \"license\", EncodedBy: \"encodedby\", EncoderSettings: \"encodersettings\", Barcode: \"barcode\", ISRC: \"isrc\", ASIN: \"asin\", musicbrainz_trackid: \"musicbrainz_recordingid\", musicbrainz_releasetrackid: \"musicbrainz_trackid\", MUSICBRAINZ_ALBUMID: \"musicbrainz_albumid\", MUSICBRAINZ_ARTISTID: \"musicbrainz_artistid\", MUSICBRAINZ_ALBUMARTISTID: \"musicbrainz_albumartistid\", MUSICBRAINZ_RELEASEGROUPID: \"musicbrainz_releasegroupid\", MUSICBRAINZ_WORKID: \"musicbrainz_workid\", MUSICBRAINZ_TRMID: \"musicbrainz_trmid\", MUSICBRAINZ_DISCID: \"musicbrainz_discid\", Acoustid_Id: \"acoustid_id\", ACOUSTID_FINGERPRINT: \"acoustid_fingerprint\", MUSICIP_PUID: \"musicip_puid\", Weblink: \"website\", REPLAYGAIN_TRACK_GAIN: \"replaygain_track_gain\", REPLAYGAIN_TRACK_PEAK: \"replaygain_track_peak\", MP3GAIN_MINMAX: \"replaygain_track_minmax\", MP3GAIN_UNDO: \"replaygain_undo\", }; class a extends i.CaseInsensitiveTagMap { constructor() { super([\"APEv2\"], n); } } t.APEv2TagMapper = a; }, 1626: function (e, t) { e.exports = function (e) { return \"function\" == typeof e; }; }, \"170b\": function (e, t, r) { \"use strict\"; var i = r(\"ebb5\"), n = r(\"50c4\"), a = r(\"23cb\"), o = r(\"b6b7\"), s = i.aTypedArray, c = i.exportTypedArrayMethod; c(\"subarray\", function (e, t) { var r = s(this), i = r.length, c = a(e, i), u = o(r); return new u( r.buffer, r.byteOffset + c * r.BYTES_PER_ELEMENT, n((void 0 === t ? i : a(t, i)) - c) ); }); }, 1717: function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t[\"default\"] = void 0); var i = r(\"c2d7\"), n = function () { return { gaussian: function (e, t) { if (\"number\" !== typeof e) return i.throwError.call(this, \"r must be a number\", t); if (e < 1) return i.throwError.call(this, \"r must be greater than 0\", t); for ( var r = Math.ceil(2.57 * e), n = 2 * r + 1, a = e * e * 2, o = a * Math.PI, s = [], c = 0; c < n; c++ ) { s[c] = []; for (var u = 0; u < n; u++) { var A = Math.pow(u - r, 2) + Math.pow(c - r, 2); s[c][u] = Math.exp(-A / a) / o; } } for (var f = 0; f < this.bitmap.height; f++) for (var l = 0; l < this.bitmap.width; l++) for (var h = 0, d = 0, g = 0, p = 0, m = 0, b = 0; b < n; b++) { for (var I = 0; I < n; I++) { var E = Math.min( this.bitmap.width - 1, Math.max(0, I + l - r) ), y = Math.min( this.bitmap.height - 1, Math.max(0, b + f - r) ), B = s[b][I], v = (y * this.bitmap.width + E) < 2; (h += this.bitmap.data[v] * B), (d += this.bitmap.data[v + 1] * B), (g += this.bitmap.data[v + 2] * B), (p += this.bitmap.data[v + 3] * B), (m += B); } var w = (f * this.bitmap.width + l) < 2; (this.bitmap.data[w] = Math.round(h / m)), (this.bitmap.data[w + 1] = Math.round(d / m)), (this.bitmap.data[w + 2] = Math.round(g / m)), (this.bitmap.data[w + 3] = Math.round(p / m)); } return (0, i.isNodePattern)(t) && t.call(this, null, this), this; }, }; }; t[\"default\"] = n; }, \"17c2\": function (e, t, r) { \"use strict\"; var i = r(\"b727\").forEach, n = r(\"a640\"), a = n(\"forEach\"); e.exports = a ? [].forEach : function (e) { return i(this, e, arguments.length > 1 ? arguments[1] : void 0); }; }, \"17e1\": function (e, t, r) { (function (t, i) { e.exports = i(r(\"21bf\")); })(0, function (e) { return ( (function () { if (\"function\" == typeof ArrayBuffer) { var t = e, r = t.lib, i = r.WordArray, n = i.init, a = (i.init = function (e) { if ( (e instanceof ArrayBuffer && (e = new Uint8Array(e)), (e instanceof Int8Array || (\"undefined\" !== typeof Uint8ClampedArray && e instanceof Uint8ClampedArray) || e instanceof Int16Array || e instanceof Uint16Array || e instanceof Int32Array || e instanceof Uint32Array || e instanceof Float32Array || e instanceof Float64Array) && (e = new Uint8Array(e.buffer, e.byteOffset, e.byteLength)), e instanceof Uint8Array) ) { for (var t = e.byteLength, r = [], i = 0; i < t; i++) r[i >>> 2] |= e[i] < (24 - (i % 4) * 8); n.call(this, r, t); } else n.apply(this, arguments); }); a.prototype = i; } })(), e.lib.WordArray ); }); }, \"182d\": function (e, t, r) { var i = r(\"da84\"), n = r(\"f8cd\"), a = i.RangeError; e.exports = function (e, t) { var r = n(e); if (r % t) throw a(\"Wrong offset\"); return r; }; }, 1985: function (e, t, r) { (function (e, i) { var n; /*! https://mths.be/punycode v1.4.1 by @mathias */ (function (a) { t && t.nodeType, e && e.nodeType; var o = \"object\" == typeof i && i; o.global !== o && o.window !== o && o.self; var s, c = 2147483647, u = 36, A = 1, f = 26, l = 38, h = 700, d = 72, g = 128, p = \"-\", m = /^xn--/, b = /[^\\x20-\\x7E]/, I = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, E = { overflow: \"Overflow: input needs wider integers to process\", \"not-basic\": \"Illegal input >= 0x80 (not a basic code point)\", \"invalid-input\": \"Invalid input\", }, y = u - A, B = Math.floor, v = String.fromCharCode; function w(e) { throw new RangeError(E[e]); } function C(e, t) { var r = e.length, i = []; while (r--) i[r] = t(e[r]); return i; } function _(e, t) { var r = e.split(\"@\"), i = \"\"; r.length > 1 && ((i = r[0] + \"@\"), (e = r[1])), (e = e.replace(I, \".\")); var n = e.split(\".\"), a = C(n, t).join(\".\"); return i + a; } function Q(e) { var t, r, i = [], n = 0, a = e.length; while (n < a) (t = e.charCodeAt(n++)), t >= 55296 && t = s._chunkSize) && ((A = s._chunkSize), (s._offset = 0), (s._buffer = n.allocUnsafe(s._chunkSize))), 0 === t && ((h += u - e), (u = e), !0) ); } } this.on(\"error\", function (e) { i = e; }), a(this._handle, \"zlib binding closed\"); do { var m = this._handle.writeSync( t, e, h, u, this._buffer, this._offset, A ); m = m || this._writeState; } while (!this._hadError && p(m[0], m[1])); if (this._hadError) throw i; if (g >= c) throw ( (f(this), new RangeError( \"Cannot create final Buffer. It would be larger than 0x\" + c.toString(16) + \" bytes\" )) ); var b = n.concat(d, g); return f(this), b; }), s.inherits(u, o.Inflate), (e.exports = t = h), (t.Inflate = u), (t.createInflate = A), (t.inflateSync = h); }).call(this, r(\"4362\"), r(\"1c35\").Buffer); }, \"1be4\": function (e, t, r) { var i = r(\"d066\"); e.exports = i(\"document\", \"documentElement\"); }, \"1c35\": function (e, t, r) { \"use strict\"; (function (e) { /*! * The buffer module from node.js, for the browser. * * @author Feross Aboukhadijeh * @license MIT */ var i = r(\"1fb5\"), n = r(\"9152\"), a = r(\"e3db\"); function o() { try { var e = new Uint8Array(1); return ( (e.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42; }, }), 42 === e.foo() && \"function\" === typeof e.subarray && 0 === e.subarray(1, 1).byteLength ); } catch (t) { return !1; } } function s() { return u.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823; } function c(e, t) { if (s() < t) throw new RangeError(\"Invalid typed array length\"); return ( u.TYPED_ARRAY_SUPPORT ? ((e = new Uint8Array(t)), (e.__proto__ = u.prototype)) : (null === e && (e = new u(t)), (e.length = t)), e ); } function u(e, t, r) { if (!u.TYPED_ARRAY_SUPPORT && !(this instanceof u)) return new u(e, t, r); if (\"number\" === typeof e) { if (\"string\" === typeof t) throw new Error( \"If encoding is specified then the first argument must be a string\" ); return h(this, e); } return A(this, e, t, r); } function A(e, t, r, i) { if (\"number\" === typeof t) throw new TypeError('\"value\" argument must not be a number'); return \"undefined\" !== typeof ArrayBuffer && t instanceof ArrayBuffer ? p(e, t, r, i) : \"string\" === typeof t ? d(e, t, r) : m(e, t); } function f(e) { if (\"number\" !== typeof e) throw new TypeError('\"size\" argument must be a number'); if (e < 0) throw new RangeError('\"size\" argument must not be negative'); } function l(e, t, r, i) { return ( f(t), t >>= 0), r 2147483647 ? (r = 2147483647) : r < -2147483648 && (r = -2147483648), (r = +r), isNaN(r) && (r = n ? 0 : e.length - 1), r < 0 && (r = e.length + r), r >= e.length) ) { if (n) return -1; r = e.length - 1; } else if (r < 0) { if (!n) return -1; r = 0; } if ((\"string\" === typeof t && (t = u.from(t, i)), u.isBuffer(t))) return 0 === t.length ? -1 : w(e, t, r, i, n); if (\"number\" === typeof t) return ( (t &= 255), u.TYPED_ARRAY_SUPPORT && \"function\" === typeof Uint8Array.prototype.indexOf ? n ? Uint8Array.prototype.indexOf.call(e, t, r) : Uint8Array.prototype.lastIndexOf.call(e, t, r) : w(e, [t], r, i, n) ); throw new TypeError(\"val must be string, number or Buffer\"); } function w(e, t, r, i, n) { var a, o = 1, s = e.length, c = t.length; if ( void 0 !== i && ((i = String(i).toLowerCase()), \"ucs2\" === i || \"ucs-2\" === i || \"utf16le\" === i || \"utf-16le\" === i) ) { if (e.length < 2 || t.length < 2) return -1; (o = 2), (s /= 2), (c /= 2), (r /= 2); } function u(e, t) { return 1 === o ? e[t] : e.readUInt16BE(t * o); } if (n) { var A = -1; for (a = r; a < s; a++) if (u(e, a) === u(t, -1 === A ? 0 : a - A)) { if ((-1 === A && (A = a), a - A + 1 === c)) return A * o; } else -1 !== A && (a -= a - A), (A = -1); } else for (r + c > s && (r = s - c), a = r; a >= 0; a--) { for (var f = !0, l = 0; l < c; l++) if (u(e, a + l) !== u(t, l)) { f = !1; break; } if (f) return a; } return -1; } function C(e, t, r, i) { r = Number(r) || 0; var n = e.length - r; i ? ((i = Number(i)), i > n && (i = n)) : (i = n); var a = t.length; if (a % 2 !== 0) throw new TypeError(\"Invalid hex string\"); i > a / 2 && (i = a / 2); for (var o = 0; o < i; ++o) { var s = parseInt(t.substr(2 * o, 2), 16); if (isNaN(s)) return o; e[r + o] = s; } return o; } function _(e, t, r, i) { return ee(X(t, e.length - r), e, r, i); } function Q(e, t, r, i) { return ee(Z(t), e, r, i); } function k(e, t, r, i) { return Q(e, t, r, i); } function S(e, t, r, i) { return ee($(t), e, r, i); } function x(e, t, r, i) { return ee(V(t, e.length - r), e, r, i); } function T(e, t, r) { return 0 === t && r === e.length ? i.fromByteArray(e) : i.fromByteArray(e.slice(t, r)); } function D(e, t, r) { r = Math.min(e.length, r); var i = [], n = t; while (n < r) { var a, o, s, c, u = e[n], A = null, f = u > 239 ? 4 : u > 223 ? 3 : u > 191 ? 2 : 1; if (n + f >>= 0), this === e)) return 0; for ( var a = n - i, o = r - t, s = Math.min(a, o), c = this.slice(i, n), A = e.slice(t, r), f = 0; f < s; ++f ) if (c[f] !== A[f]) { (a = c[f]), (o = A[f]); break; } return a < o ? -1 : o < a ? 1 : 0; }), (u.prototype.includes = function (e, t, r) { return -1 !== this.indexOf(e, t, r); }), (u.prototype.indexOf = function (e, t, r) { return v(this, e, t, r, !0); }), (u.prototype.lastIndexOf = function (e, t, r) { return v(this, e, t, r, !1); }), (u.prototype.write = function (e, t, r, i) { if (void 0 === t) (i = \"utf8\"), (r = this.length), (t = 0); else if (void 0 === r && \"string\" === typeof t) (i = t), (r = this.length), (t = 0); else { if (!isFinite(t)) throw new Error( \"Buffer.write(string, encoding, offset[, length]) is no longer supported\" ); (t |= 0), isFinite(r) ? ((r |= 0), void 0 === i && (i = \"utf8\")) : ((i = r), (r = void 0)); } var n = this.length - t; if ( ((void 0 === r || r > n) && (r = n), (e.length > 0 && (r < 0 || t < 0)) || t > this.length) ) throw new RangeError(\"Attempt to write outside buffer bounds\"); i || (i = \"utf8\"); for (var a = !1; ; ) switch (i) { case \"hex\": return C(this, e, t, r); case \"utf8\": case \"utf-8\": return _(this, e, t, r); case \"ascii\": return Q(this, e, t, r); case \"latin1\": case \"binary\": return k(this, e, t, r); case \"base64\": return S(this, e, t, r); case \"ucs2\": case \"ucs-2\": case \"utf16le\": case \"utf-16le\": return x(this, e, t, r); default: if (a) throw new TypeError(\"Unknown encoding: \" + i); (i = (\"\" + i).toLowerCase()), (a = !0); } }), (u.prototype.toJSON = function () { return { type: \"Buffer\", data: Array.prototype.slice.call(this._arr || this, 0), }; }); var M = 4096; function R(e) { var t = e.length; if (t > 16), (this[t + 3] = e >>> 24)) : z(this, e, t, !0), t + 4 ); }), (u.prototype.writeInt32BE = function (e, t, r) { return ( (e = +e), (t |= 0), r || U(this, e, t, 4, 2147483647, -2147483648), e < 0 && (e = 4294967295 + e + 1), u.TYPED_ARRAY_SUPPORT ? ((this[t] = e >>> 24), (this[t + 1] = e >>> 16), (this[t + 2] = e >>> 8), (this[t + 3] = 255 & e)) : z(this, e, t, !1), t + 4 ); }), (u.prototype.writeFloatLE = function (e, t, r) { return H(this, e, t, !0, r); }), (u.prototype.writeFloatBE = function (e, t, r) { return H(this, e, t, !1, r); }), (u.prototype.writeDoubleLE = function (e, t, r) { return Y(this, e, t, !0, r); }), (u.prototype.writeDoubleBE = function (e, t, r) { return Y(this, e, t, !1, r); }), (u.prototype.copy = function (e, t, r, i) { if ( (r || (r = 0), i || 0 === i || (i = this.length), t >= e.length && (t = e.length), t || (t = 0), i > 0 && i < r && (i = r), i === r) ) return 0; if (0 === e.length || 0 === this.length) return 0; if (t < 0) throw new RangeError(\"targetStart out of bounds\"); if (r < 0 || r >= this.length) throw new RangeError(\"sourceStart out of bounds\"); if (i < 0) throw new RangeError(\"sourceEnd out of bounds\"); i > this.length && (i = this.length), e.length - t < i - r && (i = e.length - t + r); var n, a = i - r; if (this === e && r < t && t < i) for (n = a - 1; n >= 0; --n) e[n + t] = this[n + r]; else if (a < 1e3 || !u.TYPED_ARRAY_SUPPORT) for (n = 0; n < a; ++n) e[n + t] = this[n + r]; else Uint8Array.prototype.set.call(e, this.subarray(r, r + a), t); return a; }), (u.prototype.fill = function (e, t, r, i) { if (\"string\" === typeof e) { if ( (\"string\" === typeof t ? ((i = t), (t = 0), (r = this.length)) : \"string\" === typeof r && ((i = r), (r = this.length)), 1 === e.length) ) { var n = e.charCodeAt(0); n < 256 && (e = n); } if (void 0 !== i && \"string\" !== typeof i) throw new TypeError(\"encoding must be a string\"); if (\"string\" === typeof i && !u.isEncoding(i)) throw new TypeError(\"Unknown encoding: \" + i); } else \"number\" === typeof e && (e &= 255); if (t < 0 || this.length < t || this.length < r) throw new RangeError(\"Out of range index\"); if (r >>= 0), (r = void 0 === r ? this.length : r >>> 0), e || (e = 0), \"number\" === typeof e) ) for (a = t; a < r; ++a) this[a] = e; else { var o = u.isBuffer(e) ? e : X(new u(e, i).toString()), s = o.length; for (a = 0; a < r - t; ++a) this[a + t] = o[a % s]; } return this; }); var W = /[^+\\/0-9A-Za-z-_]/g; function J(e) { if (((e = q(e).replace(W, \"\")), e.length < 2)) return \"\"; while (e.length % 4 !== 0) e += \"=\"; return e; } function q(e) { return e.trim ? e.trim() : e.replace(/^\\s+|\\s+$/g, \"\"); } function K(e) { return e < 16 ? \"0\" + e.toString(16) : e.toString(16); } function X(e, t) { var r; t = t || 1 / 0; for (var i = e.length, n = null, a = [], o = 0; o < i; ++o) { if (((r = e.charCodeAt(o)), r > 55295 && r < 57344)) { if (!n) { if (r > 56319) { (t -= 3) > -1 && a.push(239, 191, 189); continue; } if (o + 1 === i) { (t -= 3) > -1 && a.push(239, 191, 189); continue; } n = r; continue; } if (r < 56320) { (t -= 3) > -1 && a.push(239, 191, 189), (n = r); continue; } r = 65536 + (((n - 55296) < 10) | (r - 56320)); } else n && (t -= 3) > -1 && a.push(239, 191, 189); if (((n = null), r < 128)) { if ((t -= 1) < 0) break; a.push(r); } else if (r < 2048) { if ((t -= 2) < 0) break; a.push((r >> 6) | 192, (63 & r) | 128); } else if (r < 65536) { if ((t -= 3) < 0) break; a.push((r >> 12) | 224, ((r >> 6) & 63) | 128, (63 & r) | 128); } else { if (!(r < 1114112)) throw new Error(\"Invalid code point\"); if ((t -= 4) < 0) break; a.push( (r >> 18) | 240, ((r >> 12) & 63) | 128, ((r >> 6) & 63) | 128, (63 & r) | 128 ); } } return a; } function Z(e) { for (var t = [], r = 0; r < e.length; ++r) t.push(255 & e.charCodeAt(r)); return t; } function V(e, t) { for (var r, i, n, a = [], o = 0; o < e.length; ++o) { if ((t -= 2) < 0) break; (r = e.charCodeAt(o)), (i = r >> 8), (n = r % 256), a.push(n), a.push(i); } return a; } function $(e) { return i.toByteArray(J(e)); } function ee(e, t, r, i) { for (var n = 0; n < i; ++n) { if (n + r >= t.length || n >= e.length) break; t[n + r] = e[n]; } return n; } function te(e) { return e !== e; } }).call(this, r(\"c8ba\")); }, \"1c47\": function (e, t, r) { \"use strict\"; e.exports = { shiftjis: { type: \"_dbcs\", table: function () { return r(\"94f4\"); }, encodeAdd: { \"¥\": 92, \"‾\": 126 }, encodeSkipVals: [{ from: 60736, to: 63808 }], }, csshiftjis: \"shiftjis\", mskanji: \"shiftjis\", sjis: \"shiftjis\", windows31j: \"shiftjis\", ms31j: \"shiftjis\", xsjis: \"shiftjis\", windows932: \"shiftjis\", ms932: \"shiftjis\", 932: \"shiftjis\", cp932: \"shiftjis\", eucjp: { type: \"_dbcs\", table: function () { return r(\"4981\"); }, encodeAdd: { \"¥\": 92, \"‾\": 126 }, }, gb2312: \"cp936\", gb231280: \"cp936\", gb23121980: \"cp936\", csgb2312: \"cp936\", csiso58gb231280: \"cp936\", euccn: \"cp936\", windows936: \"cp936\", ms936: \"cp936\", 936: \"cp936\", cp936: { type: \"_dbcs\", table: function () { return r(\"b2fd\"); }, }, gbk: { type: \"_dbcs\", table: function () { return r(\"b2fd\").concat(r(\"8474\")); }, }, xgbk: \"gbk\", isoir58: \"gbk\", gb18030: { type: \"_dbcs\", table: function () { return r(\"b2fd\").concat(r(\"8474\")); }, gb18030: function () { return r(\"7cf7\"); }, encodeSkipVals: [128], encodeAdd: { \"€\": 41699 }, }, chinese: \"gb18030\", windows949: \"cp949\", ms949: \"cp949\", 949: \"cp949\", cp949: { type: \"_dbcs\", table: function () { return r(\"e564\"); }, }, cseuckr: \"cp949\", csksc56011987: \"cp949\", euckr: \"cp949\", isoir149: \"cp949\", korean: \"cp949\", ksc56011987: \"cp949\", ksc56011989: \"cp949\", ksc5601: \"cp949\", windows950: \"cp950\", ms950: \"cp950\", 950: \"cp950\", cp950: { type: \"_dbcs\", table: function () { return r(\"86d7\"); }, }, big5: \"big5hkscs\", big5hkscs: { type: \"_dbcs\", table: function () { return r(\"86d7\").concat(r(\"71f0\")); }, encodeSkipVals: [ 36457, 36463, 36478, 36523, 36532, 36557, 36560, 36695, 36713, 36718, 36811, 36862, 36973, 36986, 37060, 37084, 37105, 37311, 37551, 37552, 37553, 37554, 37585, 37959, 38090, 38361, 38652, 39285, 39798, 39800, 39803, 39878, 39902, 39916, 39926, 40002, 40019, 40034, 40040, 40043, 40055, 40124, 40125, 40144, 40279, 40282, 40388, 40431, 40443, 40617, 40687, 40701, 40800, 40907, 41079, 41180, 41183, 36812, 37576, 38468, 38637, 41636, 41637, 41639, 41638, 41676, 41678, ], }, cnbig5: \"big5hkscs\", csbig5: \"big5hkscs\", xxbig5: \"big5hkscs\", }; }, \"1c7e\": function (e, t, r) { var i = r(\"b622\"), n = i(\"iterator\"), a = !1; try { var o = 0, s = { next: function () { return { done: !!o++ }; }, return: function () { a = !0; }, }; (s[n] = function () { return this; }), Array.from(s, function () { throw 2; }); } catch (c) {} e.exports = function (e, t) { if (!t && !a) return !1; var r = !1; try { var i = {}; (i[n] = function () { return { next: function () { return { done: (r = !0) }; }, }; }), e(i); } catch (c) {} return r; }; }, \"1d55\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.isBitSet = t.parseTagFlags = t.TagField = t.TagItemHeader = t.TagFooter = t.Header = t.DescriptorParser = t.DataType = void 0); const i = r(\"6f58\"), n = r(\"98a7\"); (function (e) { (e[(e[\"text_utf8\"] = 0)] = \"text_utf8\"), (e[(e[\"binary\"] = 1)] = \"binary\"), (e[(e[\"external_info\"] = 2)] = \"external_info\"), (e[(e[\"reserved\"] = 3)] = \"reserved\"); })(t.DataType || (t.DataType = {})), (t.DescriptorParser = { len: 52, get: (e, t) => ({ ID: n.FourCcToken.get(e, t), version: i.UINT32_LE.get(e, t + 4) / 1e3, descriptorBytes: i.UINT32_LE.get(e, t + 8), headerBytes: i.UINT32_LE.get(e, t + 12), seekTableBytes: i.UINT32_LE.get(e, t + 16), headerDataBytes: i.UINT32_LE.get(e, t + 20), apeFrameDataBytes: i.UINT32_LE.get(e, t + 24), apeFrameDataBytesHigh: i.UINT32_LE.get(e, t + 28), terminatingDataBytes: i.UINT32_LE.get(e, t + 32), fileMD5: new i.BufferType(16).get(e, t + 36), }), }), (t.Header = { len: 24, get: (e, t) => ({ compressionLevel: i.UINT16_LE.get(e, t), formatFlags: i.UINT16_LE.get(e, t + 2), blocksPerFrame: i.UINT32_LE.get(e, t + 4), finalFrameBlocks: i.UINT32_LE.get(e, t + 8), totalFrames: i.UINT32_LE.get(e, t + 12), bitsPerSample: i.UINT16_LE.get(e, t + 16), channel: i.UINT16_LE.get(e, t + 18), sampleRate: i.UINT32_LE.get(e, t + 20), }), }), (t.TagFooter = { len: 32, get: (e, t) => ({ ID: new i.StringType(8, \"ascii\").get(e, t), version: i.UINT32_LE.get(e, t + 8), size: i.UINT32_LE.get(e, t + 12), fields: i.UINT32_LE.get(e, t + 16), flags: o(i.UINT32_LE.get(e, t + 20)), }), }), (t.TagItemHeader = { len: 8, get: (e, t) => ({ size: i.UINT32_LE.get(e, t), flags: o(i.UINT32_LE.get(e, t + 4)), }), }); const a = (e) => new i.BufferType(e.size - t.TagFooter.len); function o(e) { return { containsHeader: s(e, 31), containsFooter: s(e, 30), isHeader: s(e, 31), readOnly: s(e, 0), dataType: (6 & e) >> 1, }; } function s(e, t) { return 0 !== (e & (1 < t)); } (t.TagField = a), (t.parseTagFlags = o), (t.isBitSet = s); }, \"1d80\": function (e, t, r) { var i = r(\"da84\"), n = i.TypeError; e.exports = function (e) { if (void 0 == e) throw n(\"Can't call method on \" + e); return e; }; }, \"1dbf\": function (e, t, r) { \"use strict\"; var i = r(\"86a9\"), n = r(\"c733\"); (t.read = function (e, t) { return i(e, t || {}); }), (t.write = function (e, t) { return n(e, t); }); }, \"1dde\": function (e, t, r) { var i = r(\"d039\"), n = r(\"b622\"), a = r(\"2d00\"), o = n(\"species\"); e.exports = function (e) { return ( a >= 51 || !i(function () { var t = [], r = (t.constructor = {}); return ( (r[o] = function () { return { foo: 1 }; }), 1 !== t[e](Boolean).foo ); }) ); }; }, \"1e48\": function (e, t, r) { \"use strict\"; (function (e) { Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.ReadStreamTokenizer = void 0); const i = r(\"a046\"), n = r(\"20f8\"), a = 256e3; class o extends i.AbstractTokenizer { constructor(e, t) { super(t), (this.streamReader = new n.StreamReader(e)); } async getFileInfo() { return this.fileInfo; } async readBuffer(e, t) { let r = 0, i = e.length; if (t) { if ( (Number.isInteger(t.length) ? (i = t.length) : (i -= t.offset || 0), t.position) ) { const r = t.position - this.position; if (r > 0) return await this.ignore(r), this.readBuffer(e, t); if (r < 0) throw new Error( \"`options.position` must be equal or greater than `tokenizer.position`\" ); } t.offset && (r = t.offset); } if (0 === i) return 0; const a = await this.streamReader.read(e, r, i); if (((this.position += a), (!t || !t.mayBeLess) && a < i)) throw new n.EndOfStreamError(); return a; } async peekBuffer(t, r) { let i, a = 0, o = t.length; if ( r && (r.offset && (a = r.offset), Number.isInteger(r.length) ? (o = r.length) : (o -= r.offset || 0), r.position) ) { const n = r.position - this.position; if (n > 0) { const s = e.alloc(o + n); return ( (i = await this.peekBuffer(s, { mayBeLess: r.mayBeLess })), s.copy(t, a, n), i - n ); } if (n < 0) throw new Error(\"Cannot peek from a negative offset in a stream\"); } try { i = await this.streamReader.peek(t, a, o); } catch (s) { if (r && r.mayBeLess && s instanceof n.EndOfStreamError) return 0; throw s; } if ((!r || !r.mayBeLess) && i < o) throw new n.EndOfStreamError(); return i; } async ignore(t) { const r = Math.min(a, t), i = e.alloc(r); let n = 0; while (n < t) { const e = t - n, a = await this.readBuffer(i, { length: Math.min(r, e) }); if (a < 0) return a; n += a; } return n; } } t.ReadStreamTokenizer = o; }).call(this, r(\"1c35\").Buffer); }, \"1e78\": function (e, t, r) { \"use strict\"; (function (e) { Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.hasID3v1Header = t.ID3v1Parser = t.Genres = void 0); const i = r(\"34eb\"), n = r(\"d3ab\"), a = r(\"6f58\"), o = r(\"95c9\"), s = r(\"9611\"), c = i(\"music-metadata:parser:ID3v1\"); t.Genres = [ \"Blues\", \"Classic Rock\", \"Country\", \"Dance\", \"Disco\", \"Funk\", \"Grunge\", \"Hip-Hop\", \"Jazz\", \"Metal\", \"New Age\", \"Oldies\", \"Other\", \"Pop\", \"R&B\", \"Rap\", \"Reggae\", \"Rock\", \"Techno\", \"Industrial\", \"Alternative\", \"Ska\", \"Death Metal\", \"Pranks\", \"Soundtrack\", \"Euro-Techno\", \"Ambient\", \"Trip-Hop\", \"Vocal\", \"Jazz+Funk\", \"Fusion\", \"Trance\", \"Classical\", \"Instrumental\", \"Acid\", \"House\", \"Game\", \"Sound Clip\", \"Gospel\", \"Noise\", \"Alt. Rock\", \"Bass\", \"Soul\", \"Punk\", \"Space\", \"Meditative\", \"Instrumental Pop\", \"Instrumental Rock\", \"Ethnic\", \"Gothic\", \"Darkwave\", \"Techno-Industrial\", \"Electronic\", \"Pop-Folk\", \"Eurodance\", \"Dream\", \"Southern Rock\", \"Comedy\", \"Cult\", \"Gangsta Rap\", \"Top 40\", \"Christian Rap\", \"Pop/Funk\", \"Jungle\", \"Native American\", \"Cabaret\", \"New Wave\", \"Psychedelic\", \"Rave\", \"Showtunes\", \"Trailer\", \"Lo-Fi\", \"Tribal\", \"Acid Punk\", \"Acid Jazz\", \"Polka\", \"Retro\", \"Musical\", \"Rock & Roll\", \"Hard Rock\", \"Folk\", \"Folk/Rock\", \"National Folk\", \"Swing\", \"Fast-Fusion\", \"Bebob\", \"Latin\", \"Revival\", \"Celtic\", \"Bluegrass\", \"Avantgarde\", \"Gothic Rock\", \"Progressive Rock\", \"Psychedelic Rock\", \"Symphonic Rock\", \"Slow Rock\", \"Big Band\", \"Chorus\", \"Easy Listening\", \"Acoustic\", \"Humour\", \"Speech\", \"Chanson\", \"Opera\", \"Chamber Music\", \"Sonata\", \"Symphony\", \"Booty Bass\", \"Primus\", \"Porn Groove\", \"Satire\", \"Slow Jam\", \"Club\", \"Tango\", \"Samba\", \"Folklore\", \"Ballad\", \"Power Ballad\", \"Rhythmic Soul\", \"Freestyle\", \"Duet\", \"Punk Rock\", \"Drum Solo\", \"A Cappella\", \"Euro-House\", \"Dance Hall\", \"Goa\", \"Drum & Bass\", \"Club-House\", \"Hardcore\", \"Terror\", \"Indie\", \"BritPop\", \"Negerpunk\", \"Polsk Punk\", \"Beat\", \"Christian Gangsta Rap\", \"Heavy Metal\", \"Black Metal\", \"Crossover\", \"Contemporary Christian\", \"Christian Rock\", \"Merengue\", \"Salsa\", \"Thrash Metal\", \"Anime\", \"JPop\", \"Synthpop\", \"Abstract\", \"Art Rock\", \"Baroque\", \"Bhangra\", \"Big Beat\", \"Breakbeat\", \"Chillout\", \"Downtempo\", \"Dub\", \"EBM\", \"Eclectic\", \"Electro\", \"Electroclash\", \"Emo\", \"Experimental\", \"Garage\", \"Global\", \"IDM\", \"Illbient\", \"Industro-Goth\", \"Jam Band\", \"Krautrock\", \"Leftfield\", \"Lounge\", \"Math Rock\", \"New Romantic\", \"Nu-Breakz\", \"Post-Punk\", \"Post-Rock\", \"Psytrance\", \"Shoegaze\", \"Space Rock\", \"Trop Rock\", \"World Music\", \"Neoclassical\", \"Audiobook\", \"Audio Theatre\", \"Neue Deutsche Welle\", \"Podcast\", \"Indie Rock\", \"G-Funk\", \"Dubstep\", \"Garage Rock\", \"Psybient\", ]; const u = { len: 128, get: (e, t) => { const r = new A(3).get(e, t); return \"TAG\" === r ? { header: r, title: new A(30).get(e, t + 3), artist: new A(30).get(e, t + 33), album: new A(30).get(e, t + 63), year: new A(4).get(e, t + 93), comment: new A(28).get(e, t + 97), zeroByte: a.UINT8.get(e, t + 127), track: a.UINT8.get(e, t + 126), genre: a.UINT8.get(e, t + 127), } : null; }, }; class A extends a.StringType { constructor(e) { super(e, \"binary\"); } get(e, t) { let r = super.get(e, t); return ( (r = n.trimRightNull(r)), (r = r.trim()), r.length > 0 ? r : void 0 ); } } class f extends o.BasicParser { static getGenre(e) { if (e < t.Genres.length) return t.Genres[e]; } async parse() { if (!this.tokenizer.fileInfo.size) return void c( \"Skip checking for ID3v1 because the file-size is unknown\" ); if (this.options.apeHeader) { this.tokenizer.ignore( this.options.apeHeader.offset - this.tokenizer.position ); const e = new s.APEv2Parser(); e.init(this.metadata, this.tokenizer, this.options), await e.parseTags(this.options.apeHeader.footer); } const e = this.tokenizer.fileInfo.size - u.len; if (this.tokenizer.position > e) return void c(\"Already consumed the last 128 bytes\"); const t = await this.tokenizer.readToken(u, e); if (t) { c( \"ID3v1 header found at: pos=%s\", this.tokenizer.fileInfo.size - u.len ); for (const r of [ \"title\", \"artist\", \"album\", \"comment\", \"track\", \"year\", ]) t[r] && \"\" !== t[r] && this.addTag(r, t[r]); const e = f.getGenre(t.genre); e && this.addTag(\"genre\", e); } else c( \"ID3v1 header not found at: pos=%s\", this.tokenizer.fileInfo.size - u.len ); } addTag(e, t) { this.metadata.addTag(\"ID3v1\", e, t); } } async function l(t) { if (t.fileSize >= 128) { const r = e.alloc(3); return ( await t.randomRead(r, 0, r.length, t.fileSize - 128), \"TAG\" === r.toString(\"binary\") ); } return !1; } (t.ID3v1Parser = f), (t.hasID3v1Header = l); }).call(this, r(\"1c35\").Buffer); }, \"1fb5\": function (e, t, r) { \"use strict\"; (t.byteLength = A), (t.toByteArray = l), (t.fromByteArray = g); for ( var i = [], n = [], a = \"undefined\" !== typeof Uint8Array ? Uint8Array : Array, o = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\", s = 0, c = o.length; s < c; ++s ) (i[s] = o[s]), (n[o.charCodeAt(s)] = s); function u(e) { var t = e.length; if (t % 4 > 0) throw new Error(\"Invalid string. Length must be a multiple of 4\"); var r = e.indexOf(\"=\"); -1 === r && (r = t); var i = r === t ? 0 : 4 - (r % 4); return [r, i]; } function A(e) { var t = u(e), r = t[0], i = t[1]; return (3 * (r + i)) / 4 - i; } function f(e, t, r) { return (3 * (t + r)) / 4 - r; } function l(e) { var t, r, i = u(e), o = i[0], s = i[1], c = new a(f(e, o, s)), A = 0, l = s > 0 ? o - 4 : o; for (r = 0; r < l; r += 4) (t = (n[e.charCodeAt(r)] < 18) | (n[e.charCodeAt(r + 1)] < 12) | (n[e.charCodeAt(r + 2)] < 6) | n[e.charCodeAt(r + 3)]), (c[A++] = (t >> 16) & 255), (c[A++] = (t >> 8) & 255), (c[A++] = 255 & t); return ( 2 === s && ((t = (n[e.charCodeAt(r)] < 2) | (n[e.charCodeAt(r + 1)] >> 4)), (c[A++] = 255 & t)), 1 === s && ((t = (n[e.charCodeAt(r)] < 10) | (n[e.charCodeAt(r + 1)] < 4) | (n[e.charCodeAt(r + 2)] >> 2)), (c[A++] = (t >> 8) & 255), (c[A++] = 255 & t)), c ); } function h(e) { return ( i[(e >> 18) & 63] + i[(e >> 12) & 63] + i[(e >> 6) & 63] + i[63 & e] ); } function d(e, t, r) { for (var i, n = [], a = t; a < r; a += 3) (i = ((e[a] < 16) & 16711680) + ((e[a + 1] < 8) & 65280) + (255 & e[a + 2])), n.push(h(i)); return n.join(\"\"); } function g(e) { for ( var t, r = e.length, n = r % 3, a = [], o = 16383, s = 0, c = r - n; s < c; s += o ) a.push(d(e, s, s + o > c ? c : s + o)); return ( 1 === n ? ((t = e[r - 1]), a.push(i[t >> 2] + i[(t < 4) & 63] + \"==\")) : 2 === n && ((t = (e[r - 2] < 8) + e[r - 1]), a.push(i[t >> 10] + i[(t >> 4) & 63] + i[(t < 2) & 63] + \"=\")), a.join(\"\") ); } (n[\"-\".charCodeAt(0)] = 62), (n[\"_\".charCodeAt(0)] = 63); }, 2: function (e, t) {}, 2090: function (e, t, r) { \"use strict\"; (function (e) { var i = r(\"4ea4\"); Object.defineProperty(t, \"__esModule\", { value: !0 }), (t[\"default\"] = void 0); var n = i(r(\"448a\")), a = i(r(\"66cb\")), o = r(\"c2d7\"); function s(e, t, r, i) { for ( var n = [0, 0, 0], a = (t.length - 1) / 2, o = 0; o < t.length; o += 1 ) for (var s = 0; s < t[o].length; s += 1) { var c = e.getPixelIndex(r + o - a, i + s - a); (n[0] += e.bitmap.data[c] * t[o][s]), (n[1] += e.bitmap.data[c + 1] * t[o][s]), (n[2] += e.bitmap.data[c + 2] * t[o][s]); } return n; } var c = function (e) { return \"undefined\" !== typeof e && null !== e; }; function u(e) { return ( this.scanQuiet( 0, 0, this.bitmap.width, this.bitmap.height, function (e, t, r) { var i = parseInt( 0.2126 * this.bitmap.data[r] + 0.7152 * this.bitmap.data[r + 1] + 0.0722 * this.bitmap.data[r + 2], 10 ); (this.bitmap.data[r] = i), (this.bitmap.data[r + 1] = i), (this.bitmap.data[r + 2] = i); } ), (0, o.isNodePattern)(e) && e.call(this, null, this), this ); } function A(e, t) { var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 50; return { r: (t.r - e.r) * (r / 100) + e.r, g: (t.g - e.g) * (r / 100) + e.g, b: (t.b - e.b) * (r / 100) + e.b, }; } function f(e, t) { var r = this; return e && Array.isArray(e) ? ((e = e.map(function (e) { return ( (\"xor\" !== e.apply && \"mix\" !== e.apply) || (e.params[0] = (0, a[\"default\"])(e.params[0]).toRgb()), e ); })), this.scanQuiet( 0, 0, this.bitmap.width, this.bitmap.height, function (i, s, c) { var u = { r: r.bitmap.data[c], g: r.bitmap.data[c + 1], b: r.bitmap.data[c + 2], }, f = function (e, t) { return r.constructor.limit255(u[e] + t); }; e.forEach(function (e) { if (\"mix\" === e.apply) u = A(u, e.params[0], e.params[1]); else if (\"tint\" === e.apply) u = A(u, { r: 255, g: 255, b: 255 }, e.params[0]); else if (\"shade\" === e.apply) u = A(u, { r: 0, g: 0, b: 0 }, e.params[0]); else if (\"xor\" === e.apply) u = { r: u.r ^ e.params[0].r, g: u.g ^ e.params[0].g, b: u.b ^ e.params[0].b, }; else if (\"red\" === e.apply) u.r = f(\"r\", e.params[0]); else if (\"green\" === e.apply) u.g = f(\"g\", e.params[0]); else if (\"blue\" === e.apply) u.b = f(\"b\", e.params[0]); else { var i; if ( (\"hue\" === e.apply && (e.apply = \"spin\"), (u = (0, a[\"default\"])(u)), !u[e.apply]) ) return o.throwError.call( r, \"action \" + e.apply + \" not supported\", t ); u = (i = u)[e.apply] .apply(i, (0, n[\"default\"])(e.params)) .toRgb(); } }), (r.bitmap.data[c] = u.r), (r.bitmap.data[c + 1] = u.g), (r.bitmap.data[c + 2] = u.b); } ), (0, o.isNodePattern)(t) && t.call(this, null, this), this) : o.throwError.call(this, \"actions must be an array\", t); } var l = function () { return { brightness: function (e, t) { return \"number\" !== typeof e ? o.throwError.call(this, \"val must be numbers\", t) : e < -1 || e > 1 ? o.throwError.call( this, \"val must be a number between -1 and +1\", t ) : (this.scanQuiet( 0, 0, this.bitmap.width, this.bitmap.height, function (t, r, i) { e < 0 ? ((this.bitmap.data[i] = this.bitmap.data[i] * (1 + e)), (this.bitmap.data[i + 1] = this.bitmap.data[i + 1] * (1 + e)), (this.bitmap.data[i + 2] = this.bitmap.data[i + 2] * (1 + e))) : ((this.bitmap.data[i] = this.bitmap.data[i] + (255 - this.bitmap.data[i]) * e), (this.bitmap.data[i + 1] = this.bitmap.data[i + 1] + (255 - this.bitmap.data[i + 1]) * e), (this.bitmap.data[i + 2] = this.bitmap.data[i + 2] + (255 - this.bitmap.data[i + 2]) * e)); } ), (0, o.isNodePattern)(t) && t.call(this, null, this), this); }, contrast: function (e, t) { if (\"number\" !== typeof e) return o.throwError.call(this, \"val must be numbers\", t); if (e < -1 || e > 1) return o.throwError.call( this, \"val must be a number between -1 and +1\", t ); var r = (e + 1) / (1 - e); function i(e) { return ( (e = Math.floor(r * (e - 127) + 127)), e < 0 ? 0 : e > 255 ? 255 : e ); } return ( this.scanQuiet( 0, 0, this.bitmap.width, this.bitmap.height, function (e, t, r) { (this.bitmap.data[r] = i(this.bitmap.data[r])), (this.bitmap.data[r + 1] = i(this.bitmap.data[r + 1])), (this.bitmap.data[r + 2] = i(this.bitmap.data[r + 2])); } ), (0, o.isNodePattern)(t) && t.call(this, null, this), this ); }, posterize: function (e, t) { return \"number\" !== typeof e ? o.throwError.call(this, \"n must be numbers\", t) : (e < 2 && (e = 2), this.scanQuiet( 0, 0, this.bitmap.width, this.bitmap.height, function (t, r, i) { (this.bitmap.data[i] = (Math.floor((this.bitmap.data[i] / 255) * (e - 1)) / (e - 1)) * 255), (this.bitmap.data[i + 1] = (Math.floor((this.bitmap.data[i + 1] / 255) * (e - 1)) / (e - 1)) * 255), (this.bitmap.data[i + 2] = (Math.floor((this.bitmap.data[i + 2] / 255) * (e - 1)) / (e - 1)) * 255); } ), (0, o.isNodePattern)(t) && t.call(this, null, this), this); }, greyscale: u, grayscale: u, opacity: function (e, t) { return \"number\" !== typeof e ? o.throwError.call(this, \"f must be a number\", t) : e < 0 || e > 1 ? o.throwError.call(this, \"f must be a number from 0 to 1\", t) : (this.scanQuiet( 0, 0, this.bitmap.width, this.bitmap.height, function (t, r, i) { var n = this.bitmap.data[i + 3] * e; this.bitmap.data[i + 3] = n; } ), (0, o.isNodePattern)(t) && t.call(this, null, this), this); }, sepia: function (e) { return ( this.scanQuiet( 0, 0, this.bitmap.width, this.bitmap.height, function (e, t, r) { var i = this.bitmap.data[r], n = this.bitmap.data[r + 1], a = this.bitmap.data[r + 2]; (i = 0.393 * i + 0.769 * n + 0.189 * a), (n = 0.349 * i + 0.686 * n + 0.168 * a), (a = 0.272 * i + 0.534 * n + 0.131 * a), (this.bitmap.data[r] = i < 255 ? i : 255), (this.bitmap.data[r + 1] = n < 255 ? n : 255), (this.bitmap.data[r + 2] = a < 255 ? a : 255); } ), (0, o.isNodePattern)(e) && e.call(this, null, this), this ); }, fade: function (e, t) { return \"number\" !== typeof e ? o.throwError.call(this, \"f must be a number\", t) : e < 0 || e > 1 ? o.throwError.call(this, \"f must be a number from 0 to 1\", t) : (this.opacity(1 - e), (0, o.isNodePattern)(t) && t.call(this, null, this), this); }, convolution: function (t, r, i) { \"function\" === typeof r && \"undefined\" === typeof i && ((i = r), (r = null)), r || (r = this.constructor.EDGE_EXTEND); var n, a, s, c, u, A, f, l, h, d, g = e.from(this.bitmap.data), p = t.length, m = t[0].length, b = Math.floor(p / 2), I = Math.floor(m / 2), E = -b, y = -I; return ( this.scanQuiet( 0, 0, this.bitmap.width, this.bitmap.height, function (e, i, o) { (c = 0), (s = 0), (a = 0); for (var p = E; p >> 4).toString(16)), i.push((15 & a).toString(16)); } return i.join(\"\"); }, parse: function (e) { for (var t = e.length, r = [], i = 0; i < t; i += 2) r[i >>> 3] |= parseInt(e.substr(i, 2), 16) < (24 - (i % 8) * 4); return new A.init(r, t / 2); }, }), h = (f.Latin1 = { stringify: function (e) { for ( var t = e.words, r = e.sigBytes, i = [], n = 0; n < r; n++ ) { var a = (t[n >>> 2] >>> (24 - (n % 4) * 8)) & 255; i.push(String.fromCharCode(a)); } return i.join(\"\"); }, parse: function (e) { for (var t = e.length, r = [], i = 0; i < t; i++) r[i >>> 2] |= (255 & e.charCodeAt(i)) < (24 - (i % 4) * 8); return new A.init(r, t); }, }), d = (f.Utf8 = { stringify: function (e) { try { return decodeURIComponent(escape(h.stringify(e))); } catch (t) { throw new Error(\"Malformed UTF-8 data\"); } }, parse: function (e) { return h.parse(unescape(encodeURIComponent(e))); }, }), g = (c.BufferedBlockAlgorithm = u.extend({ reset: function () { (this._data = new A.init()), (this._nDataBytes = 0); }, _append: function (e) { \"string\" == typeof e && (e = d.parse(e)), this._data.concat(e), (this._nDataBytes += e.sigBytes); }, _process: function (t) { var r, i = this._data, n = i.words, a = i.sigBytes, o = this.blockSize, s = 4 * o, c = a / s; c = t ? e.ceil(c) : e.max((0 | c) - this._minBufferSize, 0); var u = c * o, f = e.min(4 * u, a); if (u) { for (var l = 0; l < u; l += o) this._doProcessBlock(n, l); (r = n.splice(0, u)), (i.sigBytes -= f); } return new A.init(r, f); }, clone: function () { var e = u.clone.call(this); return (e._data = this._data.clone()), e; }, _minBufferSize: 0, })), p = ((c.Hasher = g.extend({ cfg: u.extend(), init: function (e) { (this.cfg = this.cfg.extend(e)), this.reset(); }, reset: function () { g.reset.call(this), this._doReset(); }, update: function (e) { return this._append(e), this._process(), this; }, finalize: function (e) { e && this._append(e); var t = this._doFinalize(); return t; }, blockSize: 16, _createHelper: function (e) { return function (t, r) { return new e.init(r).finalize(t); }; }, _createHmacHelper: function (e) { return function (t, r) { return new p.HMAC.init(e, r).finalize(t); }; }, })), (s.algo = {})); return s; })(Math); return e; }); }).call(this, r(\"c8ba\")); }, \"21c1\": function (e, t, r) { \"use strict\"; var i = /^GIF8[79]a/; function n(e) { var t = e.toString(\"ascii\", 0, 6); return i.test(t); } function a(e) { return { width: e.readUInt16LE(6), height: e.readUInt16LE(8) }; } e.exports = { detect: n, calculate: a }; }, \"21c2\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.fromBuffer = t.fromStream = t.EndOfStreamError = void 0); const i = r(\"1e48\"), n = r(\"377f\"); var a = r(\"20f8\"); function o(e, t) { return (t = t || {}), new i.ReadStreamTokenizer(e, t); } function s(e, t) { return new n.BufferTokenizer(e, t); } Object.defineProperty(t, \"EndOfStreamError\", { enumerable: !0, get: function () { return a.EndOfStreamError; }, }), (t.fromStream = o), (t.fromBuffer = s); }, 2236: function (e, t, r) { var i = r(\"5a43\"); function n(e) { if (Array.isArray(e)) return i(e); } (e.exports = n), (e.exports.__esModule = !0), (e.exports[\"default\"] = e.exports); }, 2266: function (e, t, r) { var i = r(\"da84\"), n = r(\"0366\"), a = r(\"c65b\"), o = r(\"825a\"), s = r(\"0d51\"), c = r(\"e95a\"), u = r(\"07fa\"), A = r(\"3a9b\"), f = r(\"9a1f\"), l = r(\"35a1\"), h = r(\"2a62\"), d = i.TypeError, g = function (e, t) { (this.stopped = e), (this.result = t); }, p = g.prototype; e.exports = function (e, t, r) { var i, m, b, I, E, y, B, v = r && r.that, w = !(!r || !r.AS_ENTRIES), C = !(!r || !r.IS_ITERATOR), _ = !(!r || !r.INTERRUPTED), Q = n(t, v), k = function (e) { return i && h(i, \"normal\", e), new g(!0, e); }, S = function (e) { return w ? (o(e), _ ? Q(e[0], e[1], k) : Q(e[0], e[1])) : _ ? Q(e, k) : Q(e); }; if (C) i = e; else { if (((m = l(e)), !m)) throw d(s(e) + \" is not iterable\"); if (c(m)) { for (b = 0, I = u(e); I > b; b++) if (((E = S(e[b])), E && A(p, E))) return E; return new g(!1); } i = f(e, m); } y = i.next; while (!(B = a(y, i)).done) { try { E = S(B.value); } catch (x) { h(i, \"throw\", x); } if (\"object\" == typeof E && E && A(p, E)) return E; } return new g(!1); }; }, \"22d0\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.OggParser = t.SegmentTable = void 0); const i = r(\"6f58\"), n = r(\"34eb\"), a = r(\"d3ab\"), o = r(\"98a7\"), s = r(\"bda5\"), c = r(\"c73e\"), u = r(\"00f6\"), A = r(\"95c9\"), f = r(\"10a8\"), l = r(\"21c2\"), h = n(\"music-metadata:parser:ogg\"); class d { constructor(e) { this.len = e.page_segments; } static sum(e, t, r) { let i = 0; for (let n = t; n < t + r; ++n) i += e[n]; return i; } get(e, t) { return { totalPageSize: d.sum(e, t, this.len) }; } } t.SegmentTable = d; class g extends A.BasicParser { async parse() { h(\"pos=%s, parsePage()\", this.tokenizer.position); try { let e; do { if ( ((e = await this.tokenizer.readToken(g.Header)), \"OggS\" !== e.capturePattern) ) throw new Error(\"Invalid Ogg capture pattern\"); this.metadata.setFormat(\"container\", \"Ogg\"), (this.header = e), (this.pageNumber = e.pageSequenceNo), h(\"page#=%s, Ogg.id=%s\", e.pageSequenceNo, e.capturePattern); const t = await this.tokenizer.readToken(new d(e)); h(\"totalPageSize=%s\", t.totalPageSize); const r = await this.tokenizer.readToken( new i.BufferType(t.totalPageSize) ); if ( (h( \"firstPage=%s, lastPage=%s, continued=%s\", e.headerType.firstPage, e.headerType.lastPage, e.headerType.continued ), e.headerType.firstPage) ) { const e = new i.StringType(7, \"ascii\").get(r, 0); switch (e) { case \"\u0001vorbis\": h(\"Set page consumer to Ogg/Vorbis\"), (this.pageConsumer = new s.VorbisParser( this.metadata, this.options )); break; case \"OpusHea\": h(\"Set page consumer to Ogg/Opus\"), (this.pageConsumer = new c.OpusParser( this.metadata, this.options, this.tokenizer )); break; case \"Speex \": h(\"Set page consumer to Ogg/Speex\"), (this.pageConsumer = new u.SpeexParser( this.metadata, this.options, this.tokenizer )); break; case \"fishead\": case \"\\0theora\": h(\"Set page consumer to Ogg/Theora\"), (this.pageConsumer = new f.TheoraParser( this.metadata, this.options, this.tokenizer )); break; default: throw new Error( \"gg audio-codec not recognized (id=\" + e + \")\" ); } } this.pageConsumer.parsePage(e, r); } while (!e.headerType.lastPage); } catch (e) { if (e instanceof l.EndOfStreamError) this.metadata.addWarning( \"Last OGG-page is not marked with last-page flag\" ), h(\"End-of-stream\"), this.metadata.addWarning( \"Last OGG-page is not marked with last-page flag\" ), this.header && this.pageConsumer.calculateDuration(this.header); else { if (!e.message.startsWith(\"FourCC\")) throw e; this.pageNumber > 0 && (this.metadata.addWarning( \"Invalid FourCC ID, maybe last OGG-page is not marked with last-page flag\" ), this.pageConsumer.flush()); } } } } (t.OggParser = g), (g.Header = { len: 27, get: (e, t) => ({ capturePattern: o.FourCcToken.get(e, t), version: e.readUInt8(t + 4), headerType: { continued: a.getBit(e, t + 5, 0), firstPage: a.getBit(e, t + 5, 1), lastPage: a.getBit(e, t + 5, 2), }, absoluteGranulePosition: e.readIntLE(t + 6, 6), streamSerialNumber: i.UINT32_LE.get(e, t + 14), pageSequenceNo: i.UINT32_LE.get(e, t + 18), pageChecksum: i.UINT32_LE.get(e, t + 22), page_segments: e.readUInt8(t + 26), }), }); }, \"230b\": function (e, t, r) { \"use strict\"; (function (t) { var i = r(\"3022\"), n = r(\"91f2\"), a = r(\"e22f\"), o = (e.exports = function (e) { n.call(this); var r = [], i = this; (this._filter = new a(e, { read: this.read.bind(this), write: function (e) { r.push(e); }, complete: function () { i.emit(\"complete\", t.concat(r)); }, })), this._filter.start(); }); i.inherits(o, n); }).call(this, r(\"1c35\").Buffer); }, \"239f\": function (e, t, r) { var i = r(\"51f3\"); function n(e, t) { var r = new i(e, t); return function (e) { return r.convert(e); }; } (n.BIN = \"01\"), (n.OCT = \"01234567\"), (n.DEC = \"0123456789\"), (n.HEX = \"0123456789abcdef\"), (e.exports = n); }, \"23cb\": function (e, t, r) { var i = r(\"5926\"), n = Math.max, a = Math.min; e.exports = function (e, t) { var r = i(e); return r < 0 ? n(r + t, 0) : a(r, t); }; }, \"23e7\": function (e, t, r) { var i = r(\"da84\"), n = r(\"06cf\").f, a = r(\"9112\"), o = r(\"6eeb\"), s = r(\"ce4e\"), c = r(\"e893\"), u = r(\"94ca\"); e.exports = function (e, t) { var r, A, f, l, h, d, g = e.target, p = e.global, m = e.stat; if (((A = p ? i : m ? i[g] || s(g, {}) : (i[g] || {}).prototype), A)) for (f in t) { if ( ((h = t[f]), e.noTargetGet ? ((d = n(A, f)), (l = d && d.value)) : (l = A[f]), (r = u(p ? f : g + (m ? \".\" : \"#\") + f, e.forced)), !r && void 0 !== l) ) { if (typeof h == typeof l) continue; c(h, l); } (e.sham || (l && l.sham)) && a(h, \"sham\", !0), o(A, f, h, e); } }; }, \"241c\": function (e, t, r) { var i = r(\"ca84\"), n = r(\"7839\"), a = n.concat(\"length\", \"prototype\"); t.f = Object.getOwnPropertyNames || function (e) { return i(e, a); }; }, \"24f8\": function (e, t, r) { var i = r(\"9490\"), n = r(\"0b16\"), a = e.exports; for (var o in i) i.hasOwnProperty(o) && (a[o] = i[o]); function s(e) { if ( (\"string\" === typeof e && (e = n.parse(e)), e.protocol || (e.protocol = \"https:\"), \"https:\" !== e.protocol) ) throw new Error( 'Protocol \"' + e.protocol + '\" not supported. Expected \"https:\"' ); return e; } (a.request = function (e, t) { return (e = s(e)), i.request.call(this, e, t); }), (a.get = function (e, t) { return (e = s(e)), i.get.call(this, e, t); }); }, \"25a1\": function (e, t, r) { \"use strict\"; var i = r(\"ebb5\"), n = r(\"d58f\").right, a = i.aTypedArray, o = i.exportTypedArrayMethod; o(\"reduceRight\", function (e) { var t = arguments.length; return n(a(this), e, t, t > 1 ? arguments[1] : void 0); }); }, \"25f0\": function (e, t, r) { \"use strict\"; var i = r(\"e330\"), n = r(\"5e77\").PROPER, a = r(\"6eeb\"), o = r(\"825a\"), s = r(\"3a9b\"), c = r(\"577e\"), u = r(\"d039\"), A = r(\"ad6d\"), f = \"toString\", l = RegExp.prototype, h = l[f], d = i(A), g = u(function () { return \"/a/b\" != h.call({ source: \"a\", flags: \"b\" }); }), p = n && h.name != f; (g || p) && a( RegExp.prototype, f, function () { var e = o(this), t = c(e.source), r = e.flags, i = c(void 0 === r && s(l, e) && !(\"flags\" in l) ? d(e) : r); return \"/\" + t + \"/\" + i; }, { unsafe: !0 } ); }, 2626: function (e, t, r) { \"use strict\"; var i = r(\"d066\"), n = r(\"9bf2\"), a = r(\"b622\"), o = r(\"83ab\"), s = a(\"species\"); e.exports = function (e) { var t = i(e), r = n.f; o && t && !t[s] && r(t, s, { configurable: !0, get: function () { return this; }, }); }; }, 2706: function (e, t, r) { \"use strict\"; var i = r(\"c591\").Buffer; e.exports = function (e) { var t = e.Transform; function r(e, r) { (this.conv = e), (r = r || {}), (r.decodeStrings = !1), t.call(this, r); } function n(e, r) { (this.conv = e), (r = r || {}), (r.encoding = this.encoding = \"utf8\"), t.call(this, r); } return ( (r.prototype = Object.create(t.prototype, { constructor: { value: r }, })), (r.prototype._transform = function (e, t, r) { if (\"string\" != typeof e) return r( new Error(\"Iconv encoding stream needs strings as its input.\") ); try { var i = this.conv.write(e); i && i.length && this.push(i), r(); } catch (n) { r(n); } }), (r.prototype._flush = function (e) { try { var t = this.conv.end(); t && t.length && this.push(t), e(); } catch (r) { e(r); } }), (r.prototype.collect = function (e) { var t = []; return ( this.on(\"error\", e), this.on(\"data\", function (e) { t.push(e); }), this.on(\"end\", function () { e(null, i.concat(t)); }), this ); }), (n.prototype = Object.create(t.prototype, { constructor: { value: n }, })), (n.prototype._transform = function (e, t, r) { if (!i.isBuffer(e) && !(e instanceof Uint8Array)) return r( new Error(\"Iconv decoding stream needs buffers as its input.\") ); try { var n = this.conv.write(e); n && n.length && this.push(n, this.encoding), r(); } catch (a) { r(a); } }), (n.prototype._flush = function (e) { try { var t = this.conv.end(); t && t.length && this.push(t, this.encoding), e(); } catch (r) { e(r); } }), (n.prototype.collect = function (e) { var t = \"\"; return ( this.on(\"error\", e), this.on(\"data\", function (e) { t += e; }), this.on(\"end\", function () { e(null, t); }), this ); }), { IconvLiteEncoderStream: r, IconvLiteDecoderStream: n } ); }; }, 2767: function (e, t, r) { \"use strict\"; (function (e) { var i = r(\"2ad0\"), n = [ function () {}, function (e, t, r, i) { if (i === t.length) throw new Error(\"Ran out of data\"); var n = t[i]; (e[r] = n), (e[r + 1] = n), (e[r + 2] = n), (e[r + 3] = 255); }, function (e, t, r, i) { if (i + 1 >= t.length) throw new Error(\"Ran out of data\"); var n = t[i]; (e[r] = n), (e[r + 1] = n), (e[r + 2] = n), (e[r + 3] = t[i + 1]); }, function (e, t, r, i) { if (i + 2 >= t.length) throw new Error(\"Ran out of data\"); (e[r] = t[i]), (e[r + 1] = t[i + 1]), (e[r + 2] = t[i + 2]), (e[r + 3] = 255); }, function (e, t, r, i) { if (i + 3 >= t.length) throw new Error(\"Ran out of data\"); (e[r] = t[i]), (e[r + 1] = t[i + 1]), (e[r + 2] = t[i + 2]), (e[r + 3] = t[i + 3]); }, ], a = [ function () {}, function (e, t, r, i) { var n = t[0]; (e[r] = n), (e[r + 1] = n), (e[r + 2] = n), (e[r + 3] = i); }, function (e, t, r) { var i = t[0]; (e[r] = i), (e[r + 1] = i), (e[r + 2] = i), (e[r + 3] = t[1]); }, function (e, t, r, i) { (e[r] = t[0]), (e[r + 1] = t[1]), (e[r + 2] = t[2]), (e[r + 3] = i); }, function (e, t, r) { (e[r] = t[0]), (e[r + 1] = t[1]), (e[r + 2] = t[2]), (e[r + 3] = t[3]); }, ]; function o(e, t) { var r = [], i = 0; function n() { if (i === e.length) throw new Error(\"Ran out of data\"); var n, a, o, s, c, u, A, f, l = e[i]; switch ((i++, t)) { default: throw new Error(\"unrecognised depth\"); case 16: (A = e[i]), i++, r.push((l < 8) + A); break; case 4: (A = 15 & l), (f = l >> 4), r.push(f, A); break; case 2: (c = 3 & l), (u = (l >> 2) & 3), (A = (l >> 4) & 3), (f = (l >> 6) & 3), r.push(f, A, u, c); break; case 1: (n = 1 & l), (a = (l >> 1) & 1), (o = (l >> 2) & 1), (s = (l >> 3) & 1), (c = (l >> 4) & 1), (u = (l >> 5) & 1), (A = (l >> 6) & 1), (f = (l >> 7) & 1), r.push(f, A, u, c, s, o, a, n); break; } } return { get: function (e) { while (r.length < e) n(); var t = r.slice(0, e); return (r = r.slice(e)), t; }, resetAfterLine: function () { r.length = 0; }, end: function () { if (i !== e.length) throw new Error(\"extra data found\"); }, }; } function s(e, t, r, i, a, o) { for (var s = e.width, c = e.height, u = e.index, A = 0; A < c; A++) for (var f = 0; f < s; f++) { var l = r(f, A, u); n[i](t, a, l, o), (o += i); } return o; } function c(e, t, r, i, n, o) { for (var s = e.width, c = e.height, u = e.index, A = 0; A < c; A++) { for (var f = 0; f < s; f++) { var l = n.get(i), h = r(f, A, u); a[i](t, l, h, o); } n.resetAfterLine(); } } t.dataToBitMap = function (t, r) { var n, a = r.width, u = r.height, A = r.depth, f = r.bpp, l = r.interlace; if (8 !== A) var h = o(t, A); n = A this.bitmap.width / this.bitmap.height ? e / this.bitmap.width : t / this.bitmap.height; return ( this.scale(A, n), this.crop( ((this.bitmap.width - e) / 2) * c, ((this.bitmap.height - t) / 2) * u, e, t ), (0, i.isNodePattern)(a) && a.call(this, null, this), this ); }, }; }; t[\"default\"] = n; }, 2819: function (e, t, r) { \"use strict\"; function i(e) { return t.commonTags.hasOwnProperty(e) && !t.commonTags[e].multiple; } function n(e) { return !t.commonTags[e].multiple || t.commonTags[e].unique; } Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.isUnique = t.isSingleton = t.commonTags = void 0), (t.commonTags = { year: { multiple: !1 }, track: { multiple: !1 }, disk: { multiple: !1 }, title: { multiple: !1 }, artist: { multiple: !1 }, artists: { multiple: !0, unique: !0 }, albumartist: { multiple: !1 }, album: { multiple: !1 }, date: { multiple: !1 }, originaldate: { multiple: !1 }, originalyear: { multiple: !1 }, comment: { multiple: !0, unique: !1 }, genre: { multiple: !0, unique: !0 }, picture: { multiple: !0, unique: !0 }, composer: { multiple: !0, unique: !0 }, lyrics: { multiple: !0, unique: !1 }, albumsort: { multiple: !1, unique: !0 }, titlesort: { multiple: !1, unique: !0 }, work: { multiple: !1, unique: !0 }, artistsort: { multiple: !1, unique: !0 }, albumartistsort: { multiple: !1, unique: !0 }, composersort: { multiple: !1, unique: !0 }, lyricist: { multiple: !0, unique: !0 }, writer: { multiple: !0, unique: !0 }, conductor: { multiple: !0, unique: !0 }, remixer: { multiple: !0, unique: !0 }, arranger: { multiple: !0, unique: !0 }, engineer: { multiple: !0, unique: !0 }, producer: { multiple: !0, unique: !0 }, technician: { multiple: !0, unique: !0 }, djmixer: { multiple: !0, unique: !0 }, mixer: { multiple: !0, unique: !0 }, label: { multiple: !0, unique: !0 }, grouping: { multiple: !1 }, subtitle: { multiple: !0 }, discsubtitle: { multiple: !1 }, totaltracks: { multiple: !1 }, totaldiscs: { multiple: !1 }, compilation: { multiple: !1 }, rating: { multiple: !0 }, bpm: { multiple: !1 }, mood: { multiple: !1 }, media: { multiple: !1 }, catalognumber: { multiple: !0, unique: !0 }, tvShow: { multiple: !1 }, tvShowSort: { multiple: !1 }, tvSeason: { multiple: !1 }, tvEpisode: { multiple: !1 }, tvEpisodeId: { multiple: !1 }, tvNetwork: { multiple: !1 }, podcast: { multiple: !1 }, podcasturl: { multiple: !1 }, releasestatus: { multiple: !1 }, releasetype: { multiple: !0 }, releasecountry: { multiple: !1 }, script: { multiple: !1 }, language: { multiple: !1 }, copyright: { multiple: !1 }, license: { multiple: !1 }, encodedby: { multiple: !1 }, encodersettings: { multiple: !1 }, gapless: { multiple: !1 }, barcode: { multiple: !1 }, isrc: { multiple: !0 }, asin: { multiple: !1 }, musicbrainz_recordingid: { multiple: !1 }, musicbrainz_trackid: { multiple: !1 }, musicbrainz_albumid: { multiple: !1 }, musicbrainz_artistid: { multiple: !0 }, musicbrainz_albumartistid: { multiple: !0 }, musicbrainz_releasegroupid: { multiple: !1 }, musicbrainz_workid: { multiple: !1 }, musicbrainz_trmid: { multiple: !1 }, musicbrainz_discid: { multiple: !1 }, acoustid_id: { multiple: !1 }, acoustid_fingerprint: { multiple: !1 }, musicip_puid: { multiple: !1 }, musicip_fingerprint: { multiple: !1 }, website: { multiple: !1 }, \"performer:instrument\": { multiple: !0, unique: !0 }, averageLevel: { multiple: !1 }, peakLevel: { multiple: !1 }, notes: { multiple: !0, unique: !1 }, key: { multiple: !1 }, originalalbum: { multiple: !1 }, originalartist: { multiple: !1 }, discogs_artist_id: { multiple: !0, unique: !0 }, discogs_release_id: { multiple: !1 }, discogs_label_id: { multiple: !1 }, discogs_master_release_id: { multiple: !1 }, discogs_votes: { multiple: !1 }, discogs_rating: { multiple: !1 }, replaygain_track_peak: { multiple: !1 }, replaygain_track_gain: { multiple: !1 }, replaygain_album_peak: { multiple: !1 }, replaygain_album_gain: { multiple: !1 }, replaygain_track_minmax: { multiple: !1 }, replaygain_album_minmax: { multiple: !1 }, replaygain_undo: { multiple: !1 }, description: { multiple: !0 }, longDescription: { multiple: !1 }, category: { multiple: !0 }, hdVideo: { multiple: !1 }, keywords: { multiple: !0 }, movement: { multiple: !1 }, movementIndex: { multiple: !1 }, movementTotal: { multiple: !1 }, podcastId: { multiple: !1 }, showMovement: { multiple: !1 }, stik: { multiple: !1 }, }), (t.isSingleton = i), (t.isUnique = n); }, \"289b\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.ReplayGain = void 0); const i = r(\"d3ab\"); var n, a; (function (e) { (e[(e[\"not_set\"] = 0)] = \"not_set\"), (e[(e[\"radio\"] = 1)] = \"radio\"), (e[(e[\"audiophile\"] = 2)] = \"audiophile\"); })(n || (n = {})), (function (e) { (e[(e[\"unspecified\"] = 0)] = \"unspecified\"), (e[(e[\"engineer\"] = 1)] = \"engineer\"), (e[(e[\"user\"] = 2)] = \"user\"), (e[(e[\"automatic\"] = 3)] = \"automatic\"), (e[(e[\"rms_average\"] = 4)] = \"rms_average\"); })(a || (a = {})), (t.ReplayGain = { len: 2, get: (e, t) => { const r = i.getBitAllignedNumber(e, t, 0, 3), n = i.getBitAllignedNumber(e, t, 6, 1), a = i.getBitAllignedNumber(e, t, 7, 9) / 10; if (r > 0) return { type: i.getBitAllignedNumber(e, t, 0, 3), origin: i.getBitAllignedNumber(e, t, 3, 3), adjustment: n ? -a : a, }; }, }); }, \"28a0\": function (e, t) { \"function\" === typeof Object.create ? (e.exports = function (e, t) { (e.super_ = t), (e.prototype = Object.create(t.prototype, { constructor: { value: e, enumerable: !1, writable: !0, configurable: !0, }, })); }) : (e.exports = function (e, t) { e.super_ = t; var r = function () {}; (r.prototype = t.prototype), (e.prototype = new r()), (e.prototype.constructor = e); }); }, 2954: function (e, t, r) { \"use strict\"; var i = r(\"ebb5\"), n = r(\"b6b7\"), a = r(\"d039\"), o = r(\"f36a\"), s = i.aTypedArray, c = i.exportTypedArrayMethod, u = a(function () { new Int8Array(1).slice(); }); c( \"slice\", function (e, t) { var r = o(s(this), e, t), i = n(this), a = 0, c = r.length, u = new i(c); while (c > a) u[a] = r[a++]; return u; }, u ); }, 2956: function (e, t, r) { \"use strict\"; const i = r(\"d9d3\"), { Gif: n, GifError: a } = r(\"480c\"), { GifCodec: o } = r(\"51d2\"), { GifFrame: s } = r(\"ad0b\"), c = r(\"2bbd\"); e.exports = { BitmapImage: i, Gif: n, GifCodec: o, GifFrame: s, GifUtil: c, GifError: a, }; }, \"2a62\": function (e, t, r) { var i = r(\"c65b\"), n = r(\"825a\"), a = r(\"dc4a\"); e.exports = function (e, t, r) { var o, s; n(e); try { if (((o = a(e, \"return\")), !o)) { if (\"throw\" === t) throw r; return r; } o = i(o, e); } catch (c) { (s = !0), (o = c); } if (\"throw\" === t) throw r; if (s) throw o; return n(o), r; }; }, \"2ad0\": function (e, t, r) { \"use strict\"; var i = [ { x: [0], y: [0] }, { x: [4], y: [0] }, { x: [0, 4], y: [4] }, { x: [2, 6], y: [0, 4] }, { x: [0, 2, 4, 6], y: [2, 6] }, { x: [1, 3, 5, 7], y: [0, 2, 4, 6] }, { x: [0, 1, 2, 3, 4, 5, 6, 7], y: [1, 3, 5, 7] }, ]; (t.getImagePasses = function (e, t) { for ( var r = [], n = e % 8, a = t % 8, o = (e - n) / 8, s = (t - a) / 8, c = 0; c < i.length; c++ ) { for ( var u = i[c], A = o * u.x.length, f = s * u.y.length, l = 0; l < u.x.length; l++ ) { if (!(u.x[l] < n)) break; A++; } for (l = 0; l < u.y.length; l++) { if (!(u.y[l] < a)) break; f++; } A > 0 && f > 0 && r.push({ width: A, height: f, index: c }); } return r; }), (t.getInterlaceIterator = function (e) { return function (t, r, n) { var a = t % i[n].x.length, o = ((t - a) / i[n].x.length) * 8 + i[n].x[a], s = r % i[n].y.length, c = ((r - s) / i[n].y.length) * 8 + i[n].y[s]; return 4 * o + c * e * 4; }; }); }, \"2b3d\": function (e, t, r) { \"use strict\"; r(\"3ca3\"); var i, n = r(\"23e7\"), a = r(\"83ab\"), o = r(\"0d3b\"), s = r(\"da84\"), c = r(\"0366\"), u = r(\"e330\"), A = r(\"37e8\").f, f = r(\"6eeb\"), l = r(\"19aa\"), h = r(\"1a2d\"), d = r(\"60da\"), g = r(\"4df4\"), p = r(\"4dae\"), m = r(\"6547\").codeAt, b = r(\"5fb2\"), I = r(\"577e\"), E = r(\"d44e\"), y = r(\"9861\"), B = r(\"69f3\"), v = B.set, w = B.getterFor(\"URL\"), C = y.URLSearchParams, _ = y.getState, Q = s.URL, k = s.TypeError, S = s.parseInt, x = Math.floor, T = Math.pow, D = u(\"\".charAt), M = u(/./.exec), R = u([].join), N = u((1).toString), F = u([].pop), L = u([].push), O = u(\"\".replace), P = u([].shift), U = u(\"\".split), G = u(\"\".slice), z = u(\"\".toLowerCase), j = u([].unshift), H = \"Invalid authority\", Y = \"Invalid scheme\", W = \"Invalid host\", J = \"Invalid port\", q = /[a-z]/i, K = /[\\d+-.a-z]/i, X = /\\d/, Z = /^0x/i, V = /^[0-7]+$/, $ = /^\\d+$/, ee = /^[\\da-f]+$/i, te = /[\\0\\t\\n\\r #%/:?@[\\\\\\]^|]/, re = /[\\0\\t\\n\\r #/:?@[\\\\\\]^|]/, ie = /^[\\u0000-\\u0020]+|[\\u0000-\\u0020]+$/g, ne = /[\\t\\n\\r]/g, ae = function (e) { var t, r, i, n, a, o, s, c = U(e, \".\"); if ( (c.length && \"\" == c[c.length - 1] && c.length--, (t = c.length), t > 4) ) return e; for (r = [], i = 0; i < t; i++) { if (((n = c[i]), \"\" == n)) return e; if ( ((a = 10), n.length > 1 && \"0\" == D(n, 0) && ((a = M(Z, n) ? 16 : 8), (n = G(n, 8 == a ? 1 : 2))), \"\" === n) ) o = 0; else { if (!M(10 == a ? $ : 8 == a ? V : ee, n)) return e; o = S(n, a); } L(r, o); } for (i = 0; i < t; i++) if (((o = r[i]), i == t - 1)) { if (o >= T(256, 5 - t)) return null; } else if (o > 255) return null; for (s = F(r), i = 0; i < r.length; i++) s += r[i] * T(256, 3 - i); return s; }, oe = function (e) { var t, r, i, n, a, o, s, c = [0, 0, 0, 0, 0, 0, 0, 0], u = 0, A = null, f = 0, l = function () { return D(e, f); }; if (\":\" == l()) { if (\":\" != D(e, 1)) return; (f += 2), u++, (A = u); } while (l()) { if (8 == u) return; if (\":\" != l()) { t = r = 0; while (r < 4 && M(ee, l())) (t = 16 * t + S(l(), 16)), f++, r++; if (\".\" == l()) { if (0 == r) return; if (((f -= r), u > 6)) return; i = 0; while (l()) { if (((n = null), i > 0)) { if (!(\".\" == l() && i < 4)) return; f++; } if (!M(X, l())) return; while (M(X, l())) { if (((a = S(l(), 10)), null === n)) n = a; else { if (0 == n) return; n = 10 * n + a; } if (n > 255) return; f++; } (c[u] = 256 * c[u] + n), i++, (2 != i && 4 != i) || u++; } if (4 != i) return; break; } if (\":\" == l()) { if ((f++, !l())) return; } else if (l()) return; c[u++] = t; } else { if (null !== A) return; f++, u++, (A = u); } } if (null !== A) { (o = u - A), (u = 7); while (0 != u && o > 0) (s = c[u]), (c[u--] = c[A + o - 1]), (c[A + --o] = s); } else if (8 != u) return; return c; }, se = function (e) { for (var t = null, r = 1, i = null, n = 0, a = 0; a < 8; a++) 0 !== e[a] ? (n > r && ((t = i), (r = n)), (i = null), (n = 0)) : (null === i && (i = a), ++n); return n > r && ((t = i), (r = n)), t; }, ce = function (e) { var t, r, i, n; if (\"number\" == typeof e) { for (t = [], r = 0; r < 4; r++) j(t, e % 256), (e = x(e / 256)); return R(t, \".\"); } if (\"object\" == typeof e) { for (t = \"\", i = se(e), r = 0; r < 8; r++) (n && 0 === e[r]) || (n && (n = !1), i === r ? ((t += r ? \":\" : \"::\"), (n = !0)) : ((t += N(e[r], 16)), r < 7 && (t += \":\"))); return \"[\" + t + \"]\"; } return e; }, ue = {}, Ae = d({}, ue, { \" \": 1, '\"': 1, \"\": 1, \"`\": 1 }), fe = d({}, Ae, { \"#\": 1, \"?\": 1, \"{\": 1, \"}\": 1 }), le = d({}, fe, { \"/\": 1, \":\": 1, \";\": 1, \"=\": 1, \"@\": 1, \"[\": 1, \"\\\\\": 1, \"]\": 1, \"^\": 1, \"|\": 1, }), he = function (e, t) { var r = m(e, 0); return r > 32 && r < 127 && !h(t, e) ? e : encodeURIComponent(e); }, de = { ftp: 21, file: null, http: 80, https: 443, ws: 80, wss: 443 }, ge = function (e, t) { var r; return ( 2 == e.length && M(q, D(e, 0)) && (\":\" == (r = D(e, 1)) || (!t && \"|\" == r)) ); }, pe = function (e) { var t; return ( e.length > 1 && ge(G(e, 0, 2)) && (2 == e.length || \"/\" === (t = D(e, 2)) || \"\\\\\" === t || \"?\" === t || \"#\" === t) ); }, me = function (e) { return \".\" === e || \"%2e\" === z(e); }, be = function (e) { return ( (e = z(e)), \"..\" === e || \"%2e.\" === e || \".%2e\" === e || \"%2e%2e\" === e ); }, Ie = {}, Ee = {}, ye = {}, Be = {}, ve = {}, we = {}, Ce = {}, _e = {}, Qe = {}, ke = {}, Se = {}, xe = {}, Te = {}, De = {}, Me = {}, Re = {}, Ne = {}, Fe = {}, Le = {}, Oe = {}, Pe = {}, Ue = function (e, t, r) { var i, n, a, o = I(e); if (t) { if (((n = this.parse(o)), n)) throw k(n); this.searchParams = null; } else { if ( (void 0 !== r && (i = new Ue(r, !0)), (n = this.parse(o, null, i)), n) ) throw k(n); (a = _(new C())), a.bindURL(this), (this.searchParams = a); } }; Ue.prototype = { type: \"URL\", parse: function (e, t, r) { var n, a, o, s, c = this, u = t || Ie, A = 0, f = \"\", l = !1, d = !1, m = !1; (e = I(e)), t || ((c.scheme = \"\"), (c.username = \"\"), (c.password = \"\"), (c.host = null), (c.port = null), (c.path = []), (c.query = null), (c.fragment = null), (c.cannotBeABaseURL = !1), (e = O(e, ie, \"\"))), (e = O(e, ne, \"\")), (n = g(e)); while (A 1 && \"\" === c.path[0]) P(c.path); \"?\" == a ? ((c.query = \"\"), (u = Oe)) : \"#\" == a && ((c.fragment = \"\"), (u = Pe)); } else f += he(a, fe); break; case Le: \"?\" == a ? ((c.query = \"\"), (u = Oe)) : \"#\" == a ? ((c.fragment = \"\"), (u = Pe)) : a != i && (c.path[0] += he(a, ue)); break; case Oe: t || \"#\" != a ? a != i && (\"'\" == a && c.isSpecial() ? (c.query += \"%27\") : (c.query += \"#\" == a ? \"%23\" : he(a, ue))) : ((c.fragment = \"\"), (u = Pe)); break; case Pe: a != i && (c.fragment += he(a, Ae)); break; } A++; } }, parseHost: function (e) { var t, r, i; if (\"[\" == D(e, 0)) { if (\"]\" != D(e, e.length - 1)) return W; if (((t = oe(G(e, 1, -1))), !t)) return W; this.host = t; } else if (this.isSpecial()) { if (((e = b(e)), M(te, e))) return W; if (((t = ae(e)), null === t)) return W; this.host = t; } else { if (M(re, e)) return W; for (t = \"\", r = g(e), i = 0; i < r.length; i++) t += he(r[i], ue); this.host = t; } }, cannotHaveUsernamePasswordPort: function () { return !this.host || this.cannotBeABaseURL || \"file\" == this.scheme; }, includesCredentials: function () { return \"\" != this.username || \"\" != this.password; }, isSpecial: function () { return h(de, this.scheme); }, shortenPath: function () { var e = this.path, t = e.length; !t || (\"file\" == this.scheme && 1 == t && ge(e[0], !0)) || e.length--; }, serialize: function () { var e = this, t = e.scheme, r = e.username, i = e.password, n = e.host, a = e.port, o = e.path, s = e.query, c = e.fragment, u = t + \":\"; return ( null !== n ? ((u += \"//\"), e.includesCredentials() && (u += r + (i ? \":\" + i : \"\") + \"@\"), (u += ce(n)), null !== a && (u += \":\" + a)) : \"file\" == t && (u += \"//\"), (u += e.cannotBeABaseURL ? o[0] : o.length ? \"/\" + R(o, \"/\") : \"\"), null !== s && (u += \"?\" + s), null !== c && (u += \"#\" + c), u ); }, setHref: function (e) { var t = this.parse(e); if (t) throw k(t); this.searchParams.update(); }, getOrigin: function () { var e = this.scheme, t = this.port; if (\"blob\" == e) try { return new Ge(e.path[0]).origin; } catch (r) { return \"null\"; } return \"file\" != e && this.isSpecial() ? e + \"://\" + ce(this.host) + (null !== t ? \":\" + t : \"\") : \"null\"; }, getProtocol: function () { return this.scheme + \":\"; }, setProtocol: function (e) { this.parse(I(e) + \":\", Ie); }, getUsername: function () { return this.username; }, setUsername: function (e) { var t = g(I(e)); if (!this.cannotHaveUsernamePasswordPort()) { this.username = \"\"; for (var r = 0; r < t.length; r++) this.username += he(t[r], le); } }, getPassword: function () { return this.password; }, setPassword: function (e) { var t = g(I(e)); if (!this.cannotHaveUsernamePasswordPort()) { this.password = \"\"; for (var r = 0; r < t.length; r++) this.password += he(t[r], le); } }, getHost: function () { var e = this.host, t = this.port; return null === e ? \"\" : null === t ? ce(e) : ce(e) + \":\" + t; }, setHost: function (e) { this.cannotBeABaseURL || this.parse(e, Se); }, getHostname: function () { var e = this.host; return null === e ? \"\" : ce(e); }, setHostname: function (e) { this.cannotBeABaseURL || this.parse(e, xe); }, getPort: function () { var e = this.port; return null === e ? \"\" : I(e); }, setPort: function (e) { this.cannotHaveUsernamePasswordPort() || ((e = I(e)), \"\" == e ? (this.port = null) : this.parse(e, Te)); }, getPathname: function () { var e = this.path; return this.cannotBeABaseURL ? e[0] : e.length ? \"/\" + R(e, \"/\") : \"\"; }, setPathname: function (e) { this.cannotBeABaseURL || ((this.path = []), this.parse(e, Ne)); }, getSearch: function () { var e = this.query; return e ? \"?\" + e : \"\"; }, setSearch: function (e) { (e = I(e)), \"\" == e ? (this.query = null) : (\"?\" == D(e, 0) && (e = G(e, 1)), (this.query = \"\"), this.parse(e, Oe)), this.searchParams.update(); }, getSearchParams: function () { return this.searchParams.facade; }, getHash: function () { var e = this.fragment; return e ? \"#\" + e : \"\"; }, setHash: function (e) { (e = I(e)), \"\" != e ? (\"#\" == D(e, 0) && (e = G(e, 1)), (this.fragment = \"\"), this.parse(e, Pe)) : (this.fragment = null); }, update: function () { this.query = this.searchParams.serialize() || null; }, }; var Ge = function (e) { var t = l(this, ze), r = arguments.length > 1 ? arguments[1] : void 0, i = v(t, new Ue(e, !1, r)); a || ((t.href = i.serialize()), (t.origin = i.getOrigin()), (t.protocol = i.getProtocol()), (t.username = i.getUsername()), (t.password = i.getPassword()), (t.host = i.getHost()), (t.hostname = i.getHostname()), (t.port = i.getPort()), (t.pathname = i.getPathname()), (t.search = i.getSearch()), (t.searchParams = i.getSearchParams()), (t.hash = i.getHash())); }, ze = Ge.prototype, je = function (e, t) { return { get: function () { return w(this)[e](); }, set: t && function (e) { return w(this)[t](e); }, configurable: !0, enumerable: !0, }; }; if ( (a && A(ze, { href: je(\"serialize\", \"setHref\"), origin: je(\"getOrigin\"), protocol: je(\"getProtocol\", \"setProtocol\"), username: je(\"getUsername\", \"setUsername\"), password: je(\"getPassword\", \"setPassword\"), host: je(\"getHost\", \"setHost\"), hostname: je(\"getHostname\", \"setHostname\"), port: je(\"getPort\", \"setPort\"), pathname: je(\"getPathname\", \"setPathname\"), search: je(\"getSearch\", \"setSearch\"), searchParams: je(\"getSearchParams\"), hash: je(\"getHash\", \"setHash\"), }), f( ze, \"toJSON\", function () { return w(this).serialize(); }, { enumerable: !0 } ), f( ze, \"toString\", function () { return w(this).serialize(); }, { enumerable: !0 } ), Q) ) { var He = Q.createObjectURL, Ye = Q.revokeObjectURL; He && f(Ge, \"createObjectURL\", c(He, Q)), Ye && f(Ge, \"revokeObjectURL\", c(Ye, Q)); } E(Ge, \"URL\"), n({ global: !0, forced: !o, sham: !a }, { URL: Ge }); }, \"2b79\": function (e, t, r) { (function (t, i, n) { e.exports = i(r(\"21bf\"), r(\"df2f\"), r(\"5980\")); })(0, function (e) { return ( (function () { var t = e, r = t.lib, i = r.Base, n = r.WordArray, a = t.algo, o = a.MD5, s = (a.EvpKDF = i.extend({ cfg: i.extend({ keySize: 4, hasher: o, iterations: 1 }), init: function (e) { this.cfg = this.cfg.extend(e); }, compute: function (e, t) { var r, i = this.cfg, a = i.hasher.create(), o = n.create(), s = o.words, c = i.keySize, u = i.iterations; while (s.length < c) { r && a.update(r), (r = a.update(e).finalize(t)), a.reset(); for (var A = 1; A < u; A++) (r = a.finalize(r)), a.reset(); o.concat(r); } return (o.sigBytes = 4 * c), o; }, })); t.EvpKDF = function (e, t, r) { return s.create(r).compute(e, t); }; })(), e.EvpKDF ); }); }, \"2ba4\": function (e, t) { var r = Function.prototype, i = r.apply, n = r.bind, a = r.call; e.exports = (\"object\" == typeof Reflect && Reflect.apply) || (n ? a.bind(i) : function () { return a.apply(i, arguments); }); }, \"2bbd\": function (e, t, r) { \"use strict\"; (function (e) { const i = r(\"3e8f\"), n = r(\"9a26\"), a = r(\"d9d3\"), { GifFrame: o } = r(\"ad0b\"), { GifError: s } = r(\"480c\"), { GifCodec: c } = r(\"51d2\"), u = [\".jpg\", \".jpeg\", \".png\", \".bmp\"], A = new c(); function f(e, t, r, i, a) { const o = Array.isArray(e) ? e : [e], s = [ \"FloydSteinberg\", \"FalseFloydSteinberg\", \"Stucki\", \"Atkinson\", \"Jarvis\", \"Burkes\", \"Sierra\", \"TwoSierra\", \"SierraLite\", ]; if (a) { if (s.indexOf(a.ditherAlgorithm) < 0) throw new Error(`Invalid ditherAlgorithm '${a.ditherAlgorithm}'`); void 0 === a.serpentine && (a.serpentine = !0), void 0 === a.minimumColorDistanceToDither && (a.minimumColorDistanceToDither = 0), void 0 === a.calculateErrorLikeGIMP && (a.calculateErrorLikeGIMP = !1); } const c = new n.distance.Euclidean(), u = new n.palette[t](c, r, i); let A; A = a ? new n.image.ErrorDiffusionArray( c, n.image.ErrorDiffusionArrayKernel[a.ditherAlgorithm], a.serpentine, a.minimumColorDistanceToDither, a.calculateErrorLikeGIMP ) : new n.image.NearestColor(c); const f = []; o.forEach((e) => { const t = e.bitmap.data, r = new ArrayBuffer(t.length), i = new Uint32Array(r); for (let n = 0, o = 0; n < t.length; n += 4, ++o) i[o] = t.readUInt32LE(n, !0); const a = n.utils.PointContainer.fromUint32Array( i, e.bitmap.width, e.bitmap.height ); u.sample(a), f.push(a); }); const l = u.quantize(); for (let n = 0; n < o.length; ++n) { const e = o[n].bitmap.data, t = A.quantize(f[n], l), r = t.toUint32Array(); for (let i = 0, n = 0; i < e.length; i += 4, ++n) e.writeUInt32LE(r[n], i); } } function l(e) { return new Promise((t, r) => { i.readFile(e, (e, i) => (e ? r(e) : t(i))); }); } function h(e, t) { return new Promise((r, n) => { i.writeFile(e, t, (e) => (e ? n(e) : r())); }); } (t.cloneFrames = function (e) { let t = []; return ( e.forEach((e) => { t.push(new o(e)); }), t ); }), (t.getColorInfo = function (e, t) { let r = !1; const i = []; for (let u = 0; u < e.length; ++u) { let t = e[u].getPalette(); if ((t.usesTransparency && (r = !0), t.indexCount > 256)) throw new s(`Frame ${u} uses more than 256 color indexes`); i.push(t); } if (0 === t) return { usesTransparency: r, palettes: i }; const n = new Set(); i.forEach((e) => { e.colors.forEach((e) => { n.add(e); }); }); let a = n.size; if ((r && ++a, t && a > t)) return { usesTransparency: r, palettes: i }; const o = new Array(n.size), c = n.values(); for (let s = 0; s < o.length; ++s) o[s] = c.next().value; return ( o.sort((e, t) => e - t), { colors: o, indexCount: a, usesTransparency: r, palettes: i } ); }), (t.copyAsJimp = function (e, r) { return t.shareAsJimp(e, new a(r)); }), (t.getMaxDimensions = function (e) { let t = 0, r = 0; return ( e.forEach((e) => { const i = e.xOffset + e.bitmap.width; i > t && (t = i); const n = e.yOffset + e.bitmap.height; n > r && (r = n); }), { maxWidth: t, maxHeight: r } ); }), (t.quantizeDekker = function (e, t, r) { (t = t || 256), f(e, \"NeuQuantFloat\", t, 0, r); }), (t.quantizeSorokin = function (e, t, r, i) { let n; switch (((t = t || 256), (r = r || \"min-pop\"), r)) { case \"min-pop\": n = 2; break; case \"top-pop\": n = 1; break; default: throw new Error(`Invalid quantizeSorokin histogram '${r}'`); } f(e, \"RGBQuant\", t, n, i); }), (t.quantizeWu = function (e, t, r, i) { if (((t = t || 256), (r = r || 5), r < 1 || r > 8)) throw new Error(\"Invalid quantization quality\"); f(e, \"WuQuant\", t, r, i); }), (t.read = function (t, r) { return ( (r = r || A), e.isBuffer(t) ? r.decodeGif(t) : l(t).then((e) => r.decodeGif(e)) ); }), (t.shareAsJimp = function (e, t) { const r = new e(t.bitmap.width, t.bitmap.height, 0); return (r.bitmap.data = t.bitmap.data), r; }), (t.write = function (e, t, r, i) { i = i || A; const n = e.match(/\\.[a-zA-Z]+$/); if (null !== n && u.includes(n[0].toLowerCase())) throw new Error(`GIF '${e}' has an unexpected suffix`); return i.encodeGif(t, r).then((t) => h(e, t.buffer).then(() => t)); }); }).call(this, r(\"1c35\").Buffer); }, \"2c63\": function (e, t, r) { e.exports = r(\"dc14\"); }, \"2c85\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.EDGE_CROP = t.EDGE_WRAP = t.EDGE_EXTEND = t.BLEND_EXCLUSION = t.BLEND_DIFFERENCE = t.BLEND_HARDLIGHT = t.BLEND_LIGHTEN = t.BLEND_DARKEN = t.BLEND_OVERLAY = t.BLEND_SCREEN = t.BLEND_ADD = t.BLEND_MULTIPLY = t.BLEND_DESTINATION_OVER = t.BLEND_SOURCE_OVER = t.VERTICAL_ALIGN_BOTTOM = t.VERTICAL_ALIGN_MIDDLE = t.VERTICAL_ALIGN_TOP = t.HORIZONTAL_ALIGN_RIGHT = t.HORIZONTAL_ALIGN_CENTER = t.HORIZONTAL_ALIGN_LEFT = t.AUTO = void 0); var i = -1; t.AUTO = i; var n = 1; t.HORIZONTAL_ALIGN_LEFT = n; var a = 2; t.HORIZONTAL_ALIGN_CENTER = a; var o = 4; t.HORIZONTAL_ALIGN_RIGHT = o; var s = 8; t.VERTICAL_ALIGN_TOP = s; var c = 16; t.VERTICAL_ALIGN_MIDDLE = c; var u = 32; t.VERTICAL_ALIGN_BOTTOM = u; var A = \"srcOver\"; t.BLEND_SOURCE_OVER = A; var f = \"dstOver\"; t.BLEND_DESTINATION_OVER = f; var l = \"multiply\"; t.BLEND_MULTIPLY = l; var h = \"add\"; t.BLEND_ADD = h; var d = \"screen\"; t.BLEND_SCREEN = d; var g = \"overlay\"; t.BLEND_OVERLAY = g; var p = \"darken\"; t.BLEND_DARKEN = p; var m = \"lighten\"; t.BLEND_LIGHTEN = m; var b = \"hardLight\"; t.BLEND_HARDLIGHT = b; var I = \"difference\"; t.BLEND_DIFFERENCE = I; var E = \"exclusion\"; t.BLEND_EXCLUSION = E; var y = 1; t.EDGE_EXTEND = y; var B = 2; t.EDGE_WRAP = B; var v = 3; t.EDGE_CROP = v; }, \"2ca0\": function (e, t, r) { \"use strict\"; var i = r(\"23e7\"), n = r(\"e330\"), a = r(\"06cf\").f, o = r(\"50c4\"), s = r(\"577e\"), c = r(\"5a34\"), u = r(\"1d80\"), A = r(\"ab13\"), f = r(\"c430\"), l = n(\"\".startsWith), h = n(\"\".slice), d = Math.min, g = A(\"startsWith\"), p = !f && !g && !!(function () { var e = a(String.prototype, \"startsWith\"); return e && !e.writable; })(); i( { target: \"String\", proto: !0, forced: !p && !g }, { startsWith: function (e) { var t = s(u(this)); c(e); var r = o(d(arguments.length > 1 ? arguments[1] : void 0, t.length)), i = s(e); return l ? l(t, i, r) : h(t, r, r + i.length) === i; }, } ); }, \"2ceb\": function (e, t, r) { \"use strict\"; e.exports = { Z_NO_FLUSH: 0, Z_PARTIAL_FLUSH: 1, Z_SYNC_FLUSH: 2, Z_FULL_FLUSH: 3, Z_FINISH: 4, Z_BLOCK: 5, Z_TREES: 6, Z_OK: 0, Z_STREAM_END: 1, Z_NEED_DICT: 2, Z_ERRNO: -1, Z_STREAM_ERROR: -2, Z_DATA_ERROR: -3, Z_BUF_ERROR: -5, Z_NO_COMPRESSION: 0, Z_BEST_SPEED: 1, Z_BEST_COMPRESSION: 9, Z_DEFAULT_COMPRESSION: -1, Z_FILTERED: 1, Z_HUFFMAN_ONLY: 2, Z_RLE: 3, Z_FIXED: 4, Z_DEFAULT_STRATEGY: 0, Z_BINARY: 0, Z_TEXT: 1, Z_UNKNOWN: 2, Z_DEFLATED: 8, }; }, \"2cfe\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.DsfParser = void 0); const i = r(\"4f83\"), n = r(\"34eb\"), a = r(\"e23f\"), o = r(\"64a4\"), s = n(\"music-metadata:parser:DSF\"); class c extends i.AbstractID3Parser { async _parse() { const e = this.tokenizer.position, t = await this.tokenizer.readToken(a.ChunkHeader); if (\"DSD \" !== t.id) throw new Error(\"Invalid chunk signature\"); this.metadata.setFormat(\"container\", \"DSF\"), this.metadata.setFormat(\"lossless\", !0); const r = await this.tokenizer.readToken(a.DsdChunk); if (r.metadataPointer !== BigInt(0)) return ( s(\"expect ID3v2 at offset=\" + r.metadataPointer), await this.parseChunks(r.fileSize - t.size), await this.tokenizer.ignore( Number(r.metadataPointer) - this.tokenizer.position - e ), new o.ID3v2Parser().parse( this.metadata, this.tokenizer, this.options ) ); s(\"No ID3v2 tag present\"); } async parseChunks(e) { while (e >= a.ChunkHeader.len) { const t = await this.tokenizer.readToken(a.ChunkHeader); switch ((s(`Parsing chunk name=${t.id} size=${t.size}`), t.id)) { case \"fmt \": const e = await this.tokenizer.readToken(a.FormatChunk); this.metadata.setFormat(\"numberOfChannels\", e.channelNum), this.metadata.setFormat(\"sampleRate\", e.samplingFrequency), this.metadata.setFormat(\"bitsPerSample\", e.bitsPerSample), this.metadata.setFormat(\"numberOfSamples\", e.sampleCount), this.metadata.setFormat( \"duration\", Number(e.sampleCount) / e.samplingFrequency ); const r = e.bitsPerSample * e.samplingFrequency * e.channelNum; return void this.metadata.setFormat(\"bitrate\", r); default: this.tokenizer.ignore(Number(t.size) - a.ChunkHeader.len); break; } e -= t.size; } } } t.DsfParser = c; }, \"2d00\": function (e, t, r) { var i, n, a = r(\"da84\"), o = r(\"342f\"), s = a.process, c = a.Deno, u = (s && s.versions) || (c && c.version), A = u && u.v8; A && ((i = A.split(\".\")), (n = i[0] > 0 && i[0] < 4 ? 1 : +(i[0] + i[1]))), !n && o && ((i = o.match(/Edge\\/(\\d+)/)), (!i || i[1] >= 74) && ((i = o.match(/Chrome\\/(\\d+)/)), i && (n = +i[1]))), (e.exports = n); }, \"2d78\": function (e, t, r) { \"use strict\"; (function (e) { Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.ParserFactory = t.parseHttpContentType = void 0); const i = r(\"31c8\"), n = r(\"b40f\"), a = r(\"66ba\"), o = r(\"34eb\"), s = r(\"03eb\"), c = r(\"d66d\"), u = r(\"9611\"), A = r(\"65da\"), f = r(\"a062\"), l = r(\"5ea2\"), h = r(\"5658\"), d = r(\"a4e1\"), g = r(\"22d0\"), p = r(\"d4cf\"), m = r(\"e907\"), b = r(\"2cfe\"), I = r(\"dee4\"), E = r(\"73c2\"), y = o(\"music-metadata:parser:factory\"); function B(e) { const t = n.parse(e), r = a.parse(t.type); return { type: r.type, subtype: r.subtype, suffix: r.suffix, parameters: t.parameters, }; } t.parseHttpContentType = B; class v { static async parseOnContentType(e, t) { const { mimeType: r, path: i, url: n } = await e.fileInfo, a = v.getParserIdForMimeType(r) || v.getParserIdForExtension(i) || v.getParserIdForExtension(n); return ( a || y(\"No parser found for MIME-type / extension: \" + r), this.parse(e, a, t) ); } static async parse(t, r, n) { if (!r) { y(\"Guess parser on content...\"); const n = e.alloc(4100); if ( (await t.peekBuffer(n, { mayBeLess: !0 }), t.fileInfo.path && (r = this.getParserIdForExtension(t.fileInfo.path)), !r) ) { const e = await i.fromBuffer(n); if (!e) throw new Error(\"Failed to determine audio format\"); if ( (y(`Guessed file type is mime=${e.mime}, extension=${e.ext}`), (r = v.getParserIdForMimeType(e.mime)), !r) ) throw new Error(\"Guessed MIME-type not supported: \" + e.mime); } } return this._parse(t, r, n); } static getParserIdForExtension(e) { if (!e) return; const t = this.getExtension(e).toLocaleLowerCase() || e; switch (t) { case \".mp2\": case \".mp3\": case \".m2a\": case \".aac\": return \"mpeg\"; case \".ape\": return \"apev2\"; case \".mp4\": case \".m4a\": case \".m4b\": case \".m4pa\": case \".m4v\": case \".m4r\": case \".3gp\": return \"mp4\"; case \".wma\": case \".wmv\": case \".asf\": return \"asf\"; case \".flac\": return \"flac\"; case \".ogg\": case \".ogv\": case \".oga\": case \".ogm\": case \".ogx\": case \".opus\": case \".spx\": return \"ogg\"; case \".aif\": case \".aiff\": case \".aifc\": return \"aiff\"; case \".wav\": return \"riff\"; case \".wv\": case \".wvp\": return \"wavpack\"; case \".mpc\": return \"musepack\"; case \".dsf\": return \"dsf\"; case \".dff\": return \"dsdiff\"; case \".mka\": case \".mkv\": case \".mk3d\": case \".mks\": case \".webm\": return \"matroska\"; } } static async loadParser(e) { switch (e) { case \"aiff\": return new c.AIFFParser(); case \"adts\": case \"mpeg\": return new h.MpegParser(); case \"apev2\": return new u.APEv2Parser(); case \"asf\": return new A.AsfParser(); case \"dsf\": return new b.DsfParser(); case \"dsdiff\": return new I.DsdiffParser(); case \"flac\": return new f.FlacParser(); case \"mp4\": return new l.MP4Parser(); case \"musepack\": return new d.default(); case \"ogg\": return new g.OggParser(); case \"riff\": return new p.WaveParser(); case \"wavpack\": return new m.WavPackParser(); case \"matroska\": return new E.MatroskaParser(); default: throw new Error(\"Unknown parser type: \" + e); } } static async _parse(e, t, r = {}) { const i = await v.loadParser(t), n = new s.MetadataCollector(r); return await i.init(n, e, r).parse(), n.toCommonMetadata(); } static getExtension(e) { const t = e.lastIndexOf(\".\"); return -1 === t ? \"\" : e.slice(t); } static getParserIdForMimeType(e) { let t; try { t = B(e); } catch (i) { return void y(\"Invalid HTTP Content-Type header value: \" + e); } const r = 0 === t.subtype.indexOf(\"x-\") ? t.subtype.substring(2) : t.subtype; switch (t.type) { case \"audio\": switch (r) { case \"mp3\": case \"mpeg\": return \"mpeg\"; case \"aac\": case \"aacp\": return \"adts\"; case \"flac\": return \"flac\"; case \"ape\": case \"monkeys-audio\": return \"apev2\"; case \"mp4\": case \"m4a\": return \"mp4\"; case \"ogg\": case \"opus\": case \"speex\": return \"ogg\"; case \"ms-wma\": case \"ms-wmv\": case \"ms-asf\": return \"asf\"; case \"aiff\": case \"aif\": case \"aifc\": return \"aiff\"; case \"vnd.wave\": case \"wav\": case \"wave\": return \"riff\"; case \"wavpack\": return \"wavpack\"; case \"musepack\": return \"musepack\"; case \"matroska\": case \"webm\": return \"matroska\"; case \"dsf\": return \"dsf\"; } break; case \"video\": switch (r) { case \"ms-asf\": case \"ms-wmv\": return \"asf\"; case \"m4v\": case \"mp4\": return \"mp4\"; case \"ogg\": return \"ogg\"; case \"matroska\": case \"webm\": return \"matroska\"; } break; case \"application\": switch (r) { case \"vnd.ms-asf\": return \"asf\"; case \"ogg\": return \"ogg\"; } break; } } } t.ParserFactory = v; }).call(this, r(\"1c35\").Buffer); }, 3: function (e, t) {}, 3022: function (e, t, r) { (function (e) { var i = Object.getOwnPropertyDescriptors || function (e) { for (var t = Object.keys(e), r = {}, i = 0; i < t.length; i++) r[t[i]] = Object.getOwnPropertyDescriptor(e, t[i]); return r; }, n = /%[sdj%]/g; (t.format = function (e) { if (!B(e)) { for (var t = [], r = 0; r < arguments.length; r++) t.push(s(arguments[r])); return t.join(\" \"); } r = 1; for ( var i = arguments, a = i.length, o = String(e).replace(n, function (e) { if (\"%%\" === e) return \"%\"; if (r >= a) return e; switch (e) { case \"%s\": return String(i[r++]); case \"%d\": return Number(i[r++]); case \"%j\": try { return JSON.stringify(i[r++]); } catch (t) { return \"[Circular]\"; } default: return e; } }), c = i[r]; r < a; c = i[++r] ) I(c) || !_(c) ? (o += \" \" + c) : (o += \" \" + s(c)); return o; }), (t.deprecate = function (r, i) { if (\"undefined\" !== typeof e && !0 === e.noDeprecation) return r; if (\"undefined\" === typeof e) return function () { return t.deprecate(r, i).apply(this, arguments); }; var n = !1; function a() { if (!n) { if (e.throwDeprecation) throw new Error(i); e.traceDeprecation ? console.trace(i) : console.error(i), (n = !0); } return r.apply(this, arguments); } return a; }); var a, o = {}; function s(e, r) { var i = { seen: [], stylize: u }; return ( arguments.length >= 3 && (i.depth = arguments[2]), arguments.length >= 4 && (i.colors = arguments[3]), b(r) ? (i.showHidden = r) : r && t._extend(i, r), w(i.showHidden) && (i.showHidden = !1), w(i.depth) && (i.depth = 2), w(i.colors) && (i.colors = !1), w(i.customInspect) && (i.customInspect = !0), i.colors && (i.stylize = c), f(i, e, i.depth) ); } function c(e, t) { var r = s.styles[t]; return r ? \"\u001b[\" + s.colors[r][0] + \"m\" + e + \"\u001b[\" + s.colors[r][1] + \"m\" : e; } function u(e, t) { return e; } function A(e) { var t = {}; return ( e.forEach(function (e, r) { t[e] = !0; }), t ); } function f(e, r, i) { if ( e.customInspect && r && S(r.inspect) && r.inspect !== t.inspect && (!r.constructor || r.constructor.prototype !== r) ) { var n = r.inspect(i, e); return B(n) || (n = f(e, n, i)), n; } var a = l(e, r); if (a) return a; var o = Object.keys(r), s = A(o); if ( (e.showHidden && (o = Object.getOwnPropertyNames(r)), k(r) && (o.indexOf(\"message\") >= 0 || o.indexOf(\"description\") >= 0)) ) return h(r); if (0 === o.length) { if (S(r)) { var c = r.name ? \": \" + r.name : \"\"; return e.stylize(\"[Function\" + c + \"]\", \"special\"); } if (C(r)) return e.stylize(RegExp.prototype.toString.call(r), \"regexp\"); if (Q(r)) return e.stylize(Date.prototype.toString.call(r), \"date\"); if (k(r)) return h(r); } var u, b = \"\", I = !1, E = [\"{\", \"}\"]; if ((m(r) && ((I = !0), (E = [\"[\", \"]\"])), S(r))) { var y = r.name ? \": \" + r.name : \"\"; b = \" [Function\" + y + \"]\"; } return ( C(r) && (b = \" \" + RegExp.prototype.toString.call(r)), Q(r) && (b = \" \" + Date.prototype.toUTCString.call(r)), k(r) && (b = \" \" + h(r)), 0 !== o.length || (I && 0 != r.length) ? i < 0 ? C(r) ? e.stylize(RegExp.prototype.toString.call(r), \"regexp\") : e.stylize(\"[Object]\", \"special\") : (e.seen.push(r), (u = I ? d(e, r, i, s, o) : o.map(function (t) { return g(e, r, i, s, t, I); })), e.seen.pop(), p(u, b, E)) : E[0] + b + E[1] ); } function l(e, t) { if (w(t)) return e.stylize(\"undefined\", \"undefined\"); if (B(t)) { var r = \"'\" + JSON.stringify(t) .replace(/^\"|\"$/g, \"\") .replace(/'/g, \"\\\\'\") .replace(/\\\\\"/g, '\"') + \"'\"; return e.stylize(r, \"string\"); } return y(t) ? e.stylize(\"\" + t, \"number\") : b(t) ? e.stylize(\"\" + t, \"boolean\") : I(t) ? e.stylize(\"null\", \"null\") : void 0; } function h(e) { return \"[\" + Error.prototype.toString.call(e) + \"]\"; } function d(e, t, r, i, n) { for (var a = [], o = 0, s = t.length; o < s; ++o) N(t, String(o)) ? a.push(g(e, t, r, i, String(o), !0)) : a.push(\"\"); return ( n.forEach(function (n) { n.match(/^\\d+$/) || a.push(g(e, t, r, i, n, !0)); }), a ); } function g(e, t, r, i, n, a) { var o, s, c; if ( ((c = Object.getOwnPropertyDescriptor(t, n) || { value: t[n] }), c.get ? (s = c.set ? e.stylize(\"[Getter/Setter]\", \"special\") : e.stylize(\"[Getter]\", \"special\")) : c.set && (s = e.stylize(\"[Setter]\", \"special\")), N(i, n) || (o = \"[\" + n + \"]\"), s || (e.seen.indexOf(c.value) < 0 ? ((s = I(r) ? f(e, c.value, null) : f(e, c.value, r - 1)), s.indexOf(\"\\n\") > -1 && (s = a ? s .split(\"\\n\") .map(function (e) { return \" \" + e; }) .join(\"\\n\") .substr(2) : \"\\n\" + s .split(\"\\n\") .map(function (e) { return \" \" + e; }) .join(\"\\n\"))) : (s = e.stylize(\"[Circular]\", \"special\"))), w(o)) ) { if (a && n.match(/^\\d+$/)) return s; (o = JSON.stringify(\"\" + n)), o.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/) ? ((o = o.substr(1, o.length - 2)), (o = e.stylize(o, \"name\"))) : ((o = o .replace(/'/g, \"\\\\'\") .replace(/\\\\\"/g, '\"') .replace(/(^\"|\"$)/g, \"'\")), (o = e.stylize(o, \"string\"))); } return o + \": \" + s; } function p(e, t, r) { var i = e.reduce(function (e, t) { return ( t.indexOf(\"\\n\") >= 0 && 0, e + t.replace(/\\u001b\\[\\d\\d?m/g, \"\").length + 1 ); }, 0); return i > 60 ? r[0] + (\"\" === t ? \"\" : t + \"\\n \") + \" \" + e.join(\",\\n \") + \" \" + r[1] : r[0] + t + \" \" + e.join(\", \") + \" \" + r[1]; } function m(e) { return Array.isArray(e); } function b(e) { return \"boolean\" === typeof e; } function I(e) { return null === e; } function E(e) { return null == e; } function y(e) { return \"number\" === typeof e; } function B(e) { return \"string\" === typeof e; } function v(e) { return \"symbol\" === typeof e; } function w(e) { return void 0 === e; } function C(e) { return _(e) && \"[object RegExp]\" === T(e); } function _(e) { return \"object\" === typeof e && null !== e; } function Q(e) { return _(e) && \"[object Date]\" === T(e); } function k(e) { return _(e) && (\"[object Error]\" === T(e) || e instanceof Error); } function S(e) { return \"function\" === typeof e; } function x(e) { return ( null === e || \"boolean\" === typeof e || \"number\" === typeof e || \"string\" === typeof e || \"symbol\" === typeof e || \"undefined\" === typeof e ); } function T(e) { return Object.prototype.toString.call(e); } function D(e) { return e < 10 ? \"0\" + e.toString(10) : e.toString(10); } (t.debuglog = function (r) { if ( (w(a) && (a = Object({ NODE_ENV: \"production\", BASE_URL: \"\" }).NODE_DEBUG || \"\"), (r = r.toUpperCase()), !o[r]) ) if (new RegExp(\"\\\\b\" + r + \"\\\\b\", \"i\").test(a)) { var i = e.pid; o[r] = function () { var e = t.format.apply(t, arguments); console.error(\"%s %d: %s\", r, i, e); }; } else o[r] = function () {}; return o[r]; }), (t.inspect = s), (s.colors = { bold: [1, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], white: [37, 39], grey: [90, 39], black: [30, 39], blue: [34, 39], cyan: [36, 39], green: [32, 39], magenta: [35, 39], red: [31, 39], yellow: [33, 39], }), (s.styles = { special: \"cyan\", number: \"yellow\", boolean: \"yellow\", undefined: \"grey\", null: \"bold\", string: \"green\", date: \"magenta\", regexp: \"red\", }), (t.isArray = m), (t.isBoolean = b), (t.isNull = I), (t.isNullOrUndefined = E), (t.isNumber = y), (t.isString = B), (t.isSymbol = v), (t.isUndefined = w), (t.isRegExp = C), (t.isObject = _), (t.isDate = Q), (t.isError = k), (t.isFunction = S), (t.isPrimitive = x), (t.isBuffer = r(\"d60a\")); var M = [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", ]; function R() { var e = new Date(), t = [D(e.getHours()), D(e.getMinutes()), D(e.getSeconds())].join(\":\"); return [e.getDate(), M[e.getMonth()], t].join(\" \"); } function N(e, t) { return Object.prototype.hasOwnProperty.call(e, t); } (t.log = function () { console.log(\"%s - %s\", R(), t.format.apply(t, arguments)); }), (t.inherits = r(\"28a0\")), (t._extend = function (e, t) { if (!t || !_(t)) return e; var r = Object.keys(t), i = r.length; while (i--) e[r[i]] = t[r[i]]; return e; }); var F = \"undefined\" !== typeof Symbol ? Symbol(\"util.promisify.custom\") : void 0; function L(e, t) { if (!e) { var r = new Error(\"Promise was rejected with a falsy value\"); (r.reason = e), (e = r); } return t(e); } function O(t) { if (\"function\" !== typeof t) throw new TypeError( 'The \"original\" argument must be of type Function' ); function r() { for (var r = [], i = 0; i < arguments.length; i++) r.push(arguments[i]); var n = r.pop(); if (\"function\" !== typeof n) throw new TypeError(\"The last argument must be of type Function\"); var a = this, o = function () { return n.apply(a, arguments); }; t.apply(this, r).then( function (t) { e.nextTick(o, null, t); }, function (t) { e.nextTick(L, t, o); } ); } return ( Object.setPrototypeOf(r, Object.getPrototypeOf(t)), Object.defineProperties(r, i(t)), r ); } (t.promisify = function (e) { if (\"function\" !== typeof e) throw new TypeError( 'The \"original\" argument must be of type Function' ); if (F && e[F]) { var t = e[F]; if (\"function\" !== typeof t) throw new TypeError( 'The \"util.promisify.custom\" argument must be of type Function' ); return ( Object.defineProperty(t, F, { value: t, enumerable: !1, writable: !1, configurable: !0, }), t ); } function t() { for ( var t, r, i = new Promise(function (e, i) { (t = e), (r = i); }), n = [], a = 0; a < arguments.length; a++ ) n.push(arguments[a]); n.push(function (e, i) { e ? r(e) : t(i); }); try { e.apply(this, n); } catch (o) { r(o); } return i; } return ( Object.setPrototypeOf(t, Object.getPrototypeOf(e)), F && Object.defineProperty(t, F, { value: t, enumerable: !1, writable: !1, configurable: !0, }), Object.defineProperties(t, i(e)) ); }), (t.promisify.custom = F), (t.callbackify = O); }).call(this, r(\"4362\")); }, \"30c8\": function (e, t, r) { (function (t) { function r(e) { (this.buffer = e.data), (this.width = e.width), (this.height = e.height), (this.extraBytes = this.width % 4), (this.rgbSize = this.height * (3 * this.width + this.extraBytes)), (this.headerInfoSize = 40), (this.data = []), (this.flag = \"BM\"), (this.reserved = 0), (this.offset = 54), (this.fileSize = this.rgbSize + this.offset), (this.planes = 1), (this.bitPP = 24), (this.compress = 0), (this.hr = 0), (this.vr = 0), (this.colors = 0), (this.importantColors = 0); } (r.prototype.encode = function () { var e = new t(this.offset + this.rgbSize); (this.pos = 0), e.write(this.flag, this.pos, 2), (this.pos += 2), e.writeUInt32LE(this.fileSize, this.pos), (this.pos += 4), e.writeUInt32LE(this.reserved, this.pos), (this.pos += 4), e.writeUInt32LE(this.offset, this.pos), (this.pos += 4), e.writeUInt32LE(this.headerInfoSize, this.pos), (this.pos += 4), e.writeUInt32LE(this.width, this.pos), (this.pos += 4), e.writeInt32LE(-this.height, this.pos), (this.pos += 4), e.writeUInt16LE(this.planes, this.pos), (this.pos += 2), e.writeUInt16LE(this.bitPP, this.pos), (this.pos += 2), e.writeUInt32LE(this.compress, this.pos), (this.pos += 4), e.writeUInt32LE(this.rgbSize, this.pos), (this.pos += 4), e.writeUInt32LE(this.hr, this.pos), (this.pos += 4), e.writeUInt32LE(this.vr, this.pos), (this.pos += 4), e.writeUInt32LE(this.colors, this.pos), (this.pos += 4), e.writeUInt32LE(this.importantColors, this.pos), (this.pos += 4); for ( var r = 0, i = 3 * this.width + this.extraBytes, n = 0; n < this.height; n++ ) { for (var a = 0; a < this.width; a++) { var o = this.pos + n * i + 3 * a; r++, (e[o] = this.buffer[r++]), (e[o + 1] = this.buffer[r++]), (e[o + 2] = this.buffer[r++]); } if (this.extraBytes > 0) { var s = this.pos + n * i + 3 * this.width; e.fill(0, s, s + this.extraBytes); } } return e; }), (e.exports = function (e, t) { \"undefined\" === typeof t && (t = 100); var i = new r(e), n = i.encode(); return { data: n, width: e.width, height: e.height }; }); }).call(this, r(\"1c35\").Buffer); }, \"31c8\": function (module, exports, __webpack_require__) { \"use strict\"; (function (Buffer) { const Token = __webpack_require__(\"3a92\"), strtok3 = __webpack_require__(\"f682\"), { stringToBytes: stringToBytes, tarHeaderChecksumMatches: tarHeaderChecksumMatches, uint32SyncSafeToken: uint32SyncSafeToken, } = __webpack_require__(\"aa60\"), supported = __webpack_require__(\"8104\"), minimumBytes = 4100; async function fromStream(e) { const t = await strtok3.fromStream(e); try { return await fromTokenizer(t); } finally { await t.close(); } } async function fromBuffer(e) { if ( !( e instanceof Uint8Array || e instanceof ArrayBuffer || Buffer.isBuffer(e) ) ) throw new TypeError( `Expected the \\`input\\` argument to be of type \\`Uint8Array\\` or \\`Buffer\\` or \\`ArrayBuffer\\`, got \\`${typeof e}\\`` ); const t = e instanceof Buffer ? e : Buffer.from(e); if (!(t && t.length > 1)) return; const r = strtok3.fromBuffer(t); return fromTokenizer(r); } function _check(e, t, r) { r = { offset: 0, ...r }; for (const [i, n] of t.entries()) if (r.mask) { if (n !== (r.mask[i] & e[i + r.offset])) return !1; } else if (n !== e[i + r.offset]) return !1; return !0; } async function fromTokenizer(e) { try { return _fromTokenizer(e); } catch (t) { if (!(t instanceof strtok3.EndOfStreamError)) throw t; } } async function _fromTokenizer(e) { let t = Buffer.alloc(minimumBytes); const r = 12, i = (e, r) => _check(t, e, r), n = (e, t) => i(stringToBytes(e), t); if ( (e.fileInfo.size || (e.fileInfo.size = Number.MAX_SAFE_INTEGER), await e.peekBuffer(t, { length: r, mayBeLess: !0 }), i([66, 77])) ) return { ext: \"bmp\", mime: \"image/bmp\" }; if (i([11, 119])) return { ext: \"ac3\", mime: \"audio/vnd.dolby.dd-raw\" }; if (i([120, 1])) return { ext: \"dmg\", mime: \"application/x-apple-diskimage\" }; if (i([77, 90])) return { ext: \"exe\", mime: \"application/x-msdownload\" }; if (i([37, 33])) return ( await e.peekBuffer(t, { length: 24, mayBeLess: !0 }), n(\"PS-Adobe-\", { offset: 2 }) && n(\" EPSF-\", { offset: 14 }) ? { ext: \"eps\", mime: \"application/eps\" } : { ext: \"ps\", mime: \"application/postscript\" } ); if (i([31, 160]) || i([31, 157])) return { ext: \"Z\", mime: \"application/x-compress\" }; if (i([255, 216, 255])) return { ext: \"jpg\", mime: \"image/jpeg\" }; if (i([73, 73, 188])) return { ext: \"jxr\", mime: \"image/vnd.ms-photo\" }; if (i([31, 139, 8])) return { ext: \"gz\", mime: \"application/gzip\" }; if (i([66, 90, 104])) return { ext: \"bz2\", mime: \"application/x-bzip2\" }; if (n(\"ID3\")) { await e.ignore(6); const t = await e.readToken(uint32SyncSafeToken); return e.position + t > e.fileInfo.size ? { ext: \"mp3\", mime: \"audio/mpeg\" } : (await e.ignore(t), fromTokenizer(e)); } if (n(\"MP+\")) return { ext: \"mpc\", mime: \"audio/x-musepack\" }; if ((67 === t[0] || 70 === t[0]) && i([87, 83], { offset: 1 })) return { ext: \"swf\", mime: \"application/x-shockwave-flash\" }; if (i([71, 73, 70])) return { ext: \"gif\", mime: \"image/gif\" }; if (n(\"FLIF\")) return { ext: \"flif\", mime: \"image/flif\" }; if (n(\"8BPS\")) return { ext: \"psd\", mime: \"image/vnd.adobe.photoshop\" }; if (n(\"WEBP\", { offset: 8 })) return { ext: \"webp\", mime: \"image/webp\" }; if (n(\"MPCK\")) return { ext: \"mpc\", mime: \"audio/x-musepack\" }; if (n(\"FORM\")) return { ext: \"aif\", mime: \"audio/aiff\" }; if (n(\"icns\", { offset: 0 })) return { ext: \"icns\", mime: \"image/icns\" }; if (i([80, 75, 3, 4])) { try { while (e.position + 30 < e.fileInfo.size) { await e.readBuffer(t, { length: 30 }); const r = { compressedSize: t.readUInt32LE(18), uncompressedSize: t.readUInt32LE(22), filenameLength: t.readUInt16LE(26), extraFieldLength: t.readUInt16LE(28), }; if ( ((r.filename = await e.readToken( new Token.StringType(r.filenameLength, \"utf-8\") )), await e.ignore(r.extraFieldLength), \"META-INF/mozilla.rsa\" === r.filename) ) return { ext: \"xpi\", mime: \"application/x-xpinstall\" }; if (r.filename.endsWith(\".rels\") || r.filename.endsWith(\".xml\")) { const e = r.filename.split(\"/\")[0]; switch (e) { case \"_rels\": break; case \"word\": return { ext: \"docx\", mime: \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\", }; case \"ppt\": return { ext: \"pptx\", mime: \"application/vnd.openxmlformats-officedocument.presentationml.presentation\", }; case \"xl\": return { ext: \"xlsx\", mime: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\", }; default: break; } } if (r.filename.startsWith(\"xl/\")) return { ext: \"xlsx\", mime: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\", }; if (r.filename.startsWith(\"3D/\") && r.filename.endsWith(\".model\")) return { ext: \"3mf\", mime: \"model/3mf\" }; if ( \"mimetype\" === r.filename && r.compressedSize === r.uncompressedSize ) { const t = await e.readToken( new Token.StringType(r.compressedSize, \"utf-8\") ); switch (t) { case \"application/epub+zip\": return { ext: \"epub\", mime: \"application/epub+zip\" }; case \"application/vnd.oasis.opendocument.text\": return { ext: \"odt\", mime: \"application/vnd.oasis.opendocument.text\", }; case \"application/vnd.oasis.opendocument.spreadsheet\": return { ext: \"ods\", mime: \"application/vnd.oasis.opendocument.spreadsheet\", }; case \"application/vnd.oasis.opendocument.presentation\": return { ext: \"odp\", mime: \"application/vnd.oasis.opendocument.presentation\", }; default: } } if (0 === r.compressedSize) { let r = -1; while (r < 0 && e.position < e.fileInfo.size) await e.peekBuffer(t, { mayBeLess: !0 }), (r = t.indexOf(\"504B0304\", 0, \"hex\")), await e.ignore(r >= 0 ? r : t.length); } else await e.ignore(r.compressedSize); } } catch (A) { if (!(A instanceof strtok3.EndOfStreamError)) throw A; } return { ext: \"zip\", mime: \"application/zip\" }; } if (n(\"OggS\")) { await e.ignore(28); const t = Buffer.alloc(8); return ( await e.readBuffer(t), _check(t, [79, 112, 117, 115, 72, 101, 97, 100]) ? { ext: \"opus\", mime: \"audio/opus\" } : _check(t, [128, 116, 104, 101, 111, 114, 97]) ? { ext: \"ogv\", mime: \"video/ogg\" } : _check(t, [1, 118, 105, 100, 101, 111, 0]) ? { ext: \"ogm\", mime: \"video/ogg\" } : _check(t, [127, 70, 76, 65, 67]) ? { ext: \"oga\", mime: \"audio/ogg\" } : _check(t, [83, 112, 101, 101, 120, 32, 32]) ? { ext: \"spx\", mime: \"audio/ogg\" } : _check(t, [1, 118, 111, 114, 98, 105, 115]) ? { ext: \"ogg\", mime: \"audio/ogg\" } : { ext: \"ogx\", mime: \"application/ogg\" } ); } if ( i([80, 75]) && (3 === t[2] || 5 === t[2] || 7 === t[2]) && (4 === t[3] || 6 === t[3] || 8 === t[3]) ) return { ext: \"zip\", mime: \"application/zip\" }; if (n(\"ftyp\", { offset: 4 }) && 0 !== (96 & t[8])) { const e = t.toString(\"binary\", 8, 12).replace(\"\\0\", \" \").trim(); switch (e) { case \"avif\": return { ext: \"avif\", mime: \"image/avif\" }; case \"mif1\": return { ext: \"heic\", mime: \"image/heif\" }; case \"msf1\": return { ext: \"heic\", mime: \"image/heif-sequence\" }; case \"heic\": case \"heix\": return { ext: \"heic\", mime: \"image/heic\" }; case \"hevc\": case \"hevx\": return { ext: \"heic\", mime: \"image/heic-sequence\" }; case \"qt\": return { ext: \"mov\", mime: \"video/quicktime\" }; case \"M4V\": case \"M4VH\": case \"M4VP\": return { ext: \"m4v\", mime: \"video/x-m4v\" }; case \"M4P\": return { ext: \"m4p\", mime: \"video/mp4\" }; case \"M4B\": return { ext: \"m4b\", mime: \"audio/mp4\" }; case \"M4A\": return { ext: \"m4a\", mime: \"audio/x-m4a\" }; case \"F4V\": return { ext: \"f4v\", mime: \"video/mp4\" }; case \"F4P\": return { ext: \"f4p\", mime: \"video/mp4\" }; case \"F4A\": return { ext: \"f4a\", mime: \"audio/mp4\" }; case \"F4B\": return { ext: \"f4b\", mime: \"audio/mp4\" }; case \"crx\": return { ext: \"cr3\", mime: \"image/x-canon-cr3\" }; default: return e.startsWith(\"3g\") ? e.startsWith(\"3g2\") ? { ext: \"3g2\", mime: \"video/3gpp2\" } : { ext: \"3gp\", mime: \"video/3gpp\" } : { ext: \"mp4\", mime: \"video/mp4\" }; } } if (n(\"MThd\")) return { ext: \"mid\", mime: \"audio/midi\" }; if ( n(\"wOFF\") && (i([0, 1, 0, 0], { offset: 4 }) || n(\"OTTO\", { offset: 4 })) ) return { ext: \"woff\", mime: \"font/woff\" }; if ( n(\"wOF2\") && (i([0, 1, 0, 0], { offset: 4 }) || n(\"OTTO\", { offset: 4 })) ) return { ext: \"woff2\", mime: \"font/woff2\" }; if (i([212, 195, 178, 161]) || i([161, 178, 195, 212])) return { ext: \"pcap\", mime: \"application/vnd.tcpdump.pcap\" }; if (n(\"DSD \")) return { ext: \"dsf\", mime: \"audio/x-dsf\" }; if (n(\"LZIP\")) return { ext: \"lz\", mime: \"application/x-lzip\" }; if (n(\"fLaC\")) return { ext: \"flac\", mime: \"audio/x-flac\" }; if (i([66, 80, 71, 251])) return { ext: \"bpg\", mime: \"image/bpg\" }; if (n(\"wvpk\")) return { ext: \"wv\", mime: \"audio/wavpack\" }; if (n(\"%PDF\")) { await e.ignore(1350); const t = 10485760, r = Buffer.alloc(Math.min(t, e.fileInfo.size)); return ( await e.readBuffer(r, { mayBeLess: !0 }), r.includes(Buffer.from(\"AIPrivateData\")) ? { ext: \"ai\", mime: \"application/postscript\" } : { ext: \"pdf\", mime: \"application/pdf\" } ); } if (i([0, 97, 115, 109])) return { ext: \"wasm\", mime: \"application/wasm\" }; if (i([73, 73, 42, 0])) return n(\"CR\", { offset: 8 }) ? { ext: \"cr2\", mime: \"image/x-canon-cr2\" } : i([28, 0, 254, 0], { offset: 8 }) || i([31, 0, 11, 0], { offset: 8 }) ? { ext: \"nef\", mime: \"image/x-nikon-nef\" } : i([8, 0, 0, 0], { offset: 4 }) && (i([45, 0, 254, 0], { offset: 8 }) || i([39, 0, 254, 0], { offset: 8 })) ? { ext: \"dng\", mime: \"image/x-adobe-dng\" } : ((t = Buffer.alloc(24)), await e.peekBuffer(t), (i([16, 251, 134, 1], { offset: 4 }) || i([8, 0, 0, 0], { offset: 4 })) && i([0, 254, 0, 4, 0, 1, 0, 0, 0, 1, 0, 0, 0, 3, 1], { offset: 9 }) ? { ext: \"arw\", mime: \"image/x-sony-arw\" } : { ext: \"tif\", mime: \"image/tiff\" }); if (i([77, 77, 0, 42])) return { ext: \"tif\", mime: \"image/tiff\" }; if (n(\"MAC \")) return { ext: \"ape\", mime: \"audio/ape\" }; if (i([26, 69, 223, 163])) { async function a() { const t = await e.peekNumber(Token.UINT8); let r = 128, i = 0; while (0 === (t & r)) ++i, (r >>= 1); const n = Buffer.alloc(i + 1); return await e.readBuffer(n), n; } async function o() { const e = await a(), t = await a(); t[0] ^= 128 >> (t.length - 1); const r = Math.min(6, t.length); return { id: e.readUIntBE(0, e.length), len: t.readUIntBE(t.length - r, r), }; } async function s(t, r) { while (r > 0) { const t = await o(); if (17026 === t.id) return e.readToken(new Token.StringType(t.len, \"utf-8\")); await e.ignore(t.len), --r; } } const t = await o(), r = await s(1, t.len); switch (r) { case \"webm\": return { ext: \"webm\", mime: \"video/webm\" }; case \"matroska\": return { ext: \"mkv\", mime: \"video/x-matroska\" }; default: return; } } if (i([82, 73, 70, 70])) { if (i([65, 86, 73], { offset: 8 })) return { ext: \"avi\", mime: \"video/vnd.avi\" }; if (i([87, 65, 86, 69], { offset: 8 })) return { ext: \"wav\", mime: \"audio/vnd.wave\" }; if (i([81, 76, 67, 77], { offset: 8 })) return { ext: \"qcp\", mime: \"audio/qcelp\" }; } if (n(\"SQLi\")) return { ext: \"sqlite\", mime: \"application/x-sqlite3\" }; if (i([78, 69, 83, 26])) return { ext: \"nes\", mime: \"application/x-nintendo-nes-rom\" }; if (n(\"Cr24\")) return { ext: \"crx\", mime: \"application/x-google-chrome-extension\" }; if (n(\"MSCF\") || n(\"ISc(\")) return { ext: \"cab\", mime: \"application/vnd.ms-cab-compressed\" }; if (i([237, 171, 238, 219])) return { ext: \"rpm\", mime: \"application/x-rpm\" }; if (i([197, 208, 211, 198])) return { ext: \"eps\", mime: \"application/eps\" }; if (i([40, 181, 47, 253])) return { ext: \"zst\", mime: \"application/zstd\" }; if (i([79, 84, 84, 79, 0])) return { ext: \"otf\", mime: \"font/otf\" }; if (n(\"#!AMR\")) return { ext: \"amr\", mime: \"audio/amr\" }; if (n(\"{\\\\rtf\")) return { ext: \"rtf\", mime: \"application/rtf\" }; if (i([70, 76, 86, 1])) return { ext: \"flv\", mime: \"video/x-flv\" }; if (n(\"IMPM\")) return { ext: \"it\", mime: \"audio/x-it\" }; if ( n(\"-lh0-\", { offset: 2 }) || n(\"-lh1-\", { offset: 2 }) || n(\"-lh2-\", { offset: 2 }) || n(\"-lh3-\", { offset: 2 }) || n(\"-lh4-\", { offset: 2 }) || n(\"-lh5-\", { offset: 2 }) || n(\"-lh6-\", { offset: 2 }) || n(\"-lh7-\", { offset: 2 }) || n(\"-lzs-\", { offset: 2 }) || n(\"-lz4-\", { offset: 2 }) || n(\"-lz5-\", { offset: 2 }) || n(\"-lhd-\", { offset: 2 }) ) return { ext: \"lzh\", mime: \"application/x-lzh-compressed\" }; if (i([0, 0, 1, 186])) { if (i([33], { offset: 4, mask: [241] })) return { ext: \"mpg\", mime: \"video/MP1S\" }; if (i([68], { offset: 4, mask: [196] })) return { ext: \"mpg\", mime: \"video/MP2P\" }; } if (n(\"ITSF\")) return { ext: \"chm\", mime: \"application/vnd.ms-htmlhelp\" }; if (i([253, 55, 122, 88, 90, 0])) return { ext: \"xz\", mime: \"application/x-xz\" }; if (n(\"\", l = \" 1 ? arguments[1] : void 0, r), c = o > 2 ? arguments[2] : void 0, u = void 0 === c ? r : n(c, r); while (u > s) t[s++] = e; return t; }; }, \"825a\": function (e, t, r) { var i = r(\"da84\"), n = r(\"861d\"), a = i.String, o = i.TypeError; e.exports = function (e) { if (n(e)) return e; throw o(a(e) + \" is not an object\"); }; }, \"82de\": function (e, t, r) { \"use strict\"; (function (t) { var i; function n(e, t, r) { return ( t in e ? Object.defineProperty(e, t, { value: r, enumerable: !0, configurable: !0, writable: !0, }) : (e[t] = r), e ); } var a = r(\"fd17\"), o = Symbol(\"lastResolve\"), s = Symbol(\"lastReject\"), c = Symbol(\"error\"), u = Symbol(\"ended\"), A = Symbol(\"lastPromise\"), f = Symbol(\"handlePromise\"), l = Symbol(\"stream\"); function h(e, t) { return { value: e, done: t }; } function d(e) { var t = e[o]; if (null !== t) { var r = e[l].read(); null !== r && ((e[A] = null), (e[o] = null), (e[s] = null), t(h(r, !1))); } } function g(e) { t.nextTick(d, e); } function p(e, t) { return function (r, i) { e.then(function () { t[u] ? r(h(void 0, !0)) : t[f](r, i); }, i); }; } var m = Object.getPrototypeOf(function () {}), b = Object.setPrototypeOf( ((i = { get stream() { return this[l]; }, next: function () { var e = this, r = this[c]; if (null !== r) return Promise.reject(r); if (this[u]) return Promise.resolve(h(void 0, !0)); if (this[l].destroyed) return new Promise(function (r, i) { t.nextTick(function () { e[c] ? i(e[c]) : r(h(void 0, !0)); }); }); var i, n = this[A]; if (n) i = new Promise(p(n, this)); else { var a = this[l].read(); if (null !== a) return Promise.resolve(h(a, !1)); i = new Promise(this[f]); } return (this[A] = i), i; }, }), n(i, Symbol.asyncIterator, function () { return this; }), n(i, \"return\", function () { var e = this; return new Promise(function (t, r) { e[l].destroy(null, function (e) { e ? r(e) : t(h(void 0, !0)); }); }); }), i), m ), I = function (e) { var t, r = Object.create( b, ((t = {}), n(t, l, { value: e, writable: !0 }), n(t, o, { value: null, writable: !0 }), n(t, s, { value: null, writable: !0 }), n(t, c, { value: null, writable: !0 }), n(t, u, { value: e._readableState.endEmitted, writable: !0 }), n(t, f, { value: function (e, t) { var i = r[l].read(); i ? ((r[A] = null), (r[o] = null), (r[s] = null), e(h(i, !1))) : ((r[o] = e), (r[s] = t)); }, writable: !0, }), t) ); return ( (r[A] = null), a(e, function (e) { if (e && \"ERR_STREAM_PREMATURE_CLOSE\" !== e.code) { var t = r[s]; return ( null !== t && ((r[A] = null), (r[o] = null), (r[s] = null), t(e)), void (r[c] = e) ); } var i = r[o]; null !== i && ((r[A] = null), (r[o] = null), (r[s] = null), i(h(void 0, !0))), (r[u] = !0); }), e.on(\"readable\", g.bind(null, r)), r ); }; e.exports = I; }).call(this, r(\"4362\")); }, \"82f8\": function (e, t, r) { \"use strict\"; var i = r(\"ebb5\"), n = r(\"4d64\").includes, a = i.aTypedArray, o = i.exportTypedArrayMethod; o(\"includes\", function (e) { return n(a(this), e, arguments.length > 1 ? arguments[1] : void 0); }); }, \"82fe\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.ReadStreamTokenizer = void 0); const i = r(\"15a0\"), n = r(\"e23d\"), a = 256e3; class o extends i.AbstractTokenizer { constructor(e, t) { super(t), (this.streamReader = new n.StreamReader(e)); } async getFileInfo() { return this.fileInfo; } async readBuffer(e, t) { const r = this.normalizeOptions(e, t), i = r.position - this.position; if (i > 0) return await this.ignore(i), this.readBuffer(e, t); if (i < 0) throw new Error( \"`options.position` must be equal or greater than `tokenizer.position`\" ); if (0 === r.length) return 0; const a = await this.streamReader.read(e, r.offset, r.length); if (((this.position += a), (!t || !t.mayBeLess) && a < r.length)) throw new n.EndOfStreamError(); return a; } async peekBuffer(e, t) { const r = this.normalizeOptions(e, t); let i = 0; if (r.position) { const t = r.position - this.position; if (t > 0) { const n = new Uint8Array(r.length + t); return ( (i = await this.peekBuffer(n, { mayBeLess: r.mayBeLess })), e.set(n.subarray(t), r.offset), i - t ); } if (t < 0) throw new Error(\"Cannot peek from a negative offset in a stream\"); } if (r.length > 0) { try { i = await this.streamReader.peek(e, r.offset, r.length); } catch (a) { if (t && t.mayBeLess && a instanceof n.EndOfStreamError) return 0; throw a; } if (!r.mayBeLess && i < r.length) throw new n.EndOfStreamError(); } return i; } async ignore(e) { const t = Math.min(a, e), r = new Uint8Array(t); let i = 0; while (i < e) { const n = e - i, a = await this.readBuffer(r, { length: Math.min(t, n) }); if (a < 0) return a; i += a; } return i; } } t.ReadStreamTokenizer = o; }, 8362: function (e, t) { e.exports = i; var r = Object.prototype.toString; function i(e) { if (!e) return !1; var t = r.call(e); return ( \"[object Function]\" === t || (\"function\" === typeof e && \"[object RegExp]\" !== t) || (\"undefined\" !== typeof window && (e === window.setTimeout || e === window.alert || e === window.confirm || e === window.prompt)) ); } }, \"83ab\": function (e, t, r) { var i = r(\"d039\"); e.exports = !i(function () { return ( 7 != Object.defineProperty({}, 1, { get: function () { return 7; }, })[1] ); }); }, 8418: function (e, t, r) { \"use strict\"; var i = r(\"a04b\"), n = r(\"9bf2\"), a = r(\"5c6c\"); e.exports = function (e, t, r) { var o = i(t); o in e ? n.f(e, o, a(0, r)) : (e[o] = r); }; }, \"843c\": function (e, t, r) { \"use strict\"; var i = r(\"23e7\"), n = r(\"0ccb\").end, a = r(\"9a0c\"); i( { target: \"String\", proto: !0, forced: a }, { padEnd: function (e) { return n(this, e, arguments.length > 1 ? arguments[1] : void 0); }, } ); }, \"845f\": function (e, t, r) { \"use strict\"; (function (t) { var i = Object.keys || function (e) { var t = []; for (var r in e) t.push(r); return t; }; e.exports = u; var n = r(\"bd7a\"), a = r(\"b84d\"); r(\"3fb5\")(u, n); for (var o = i(a.prototype), s = 0; s < o.length; s++) { var c = o[s]; u.prototype[c] || (u.prototype[c] = a.prototype[c]); } function u(e) { if (!(this instanceof u)) return new u(e); n.call(this, e), a.call(this, e), (this.allowHalfOpen = !0), e && (!1 === e.readable && (this.readable = !1), !1 === e.writable && (this.writable = !1), !1 === e.allowHalfOpen && ((this.allowHalfOpen = !1), this.once(\"end\", A))); } function A() { this._writableState.ended || t.nextTick(f, this); } function f(e) { e.end(); } Object.defineProperty(u.prototype, \"writableHighWaterMark\", { enumerable: !1, get: function () { return this._writableState.highWaterMark; }, }), Object.defineProperty(u.prototype, \"writableBuffer\", { enumerable: !1, get: function () { return this._writableState && this._writableState.getBuffer(); }, }), Object.defineProperty(u.prototype, \"writableLength\", { enumerable: !1, get: function () { return this._writableState.length; }, }), Object.defineProperty(u.prototype, \"destroyed\", { enumerable: !1, get: function () { return ( void 0 !== this._readableState && void 0 !== this._writableState && this._readableState.destroyed && this._writableState.destroyed ); }, set: function (e) { void 0 !== this._readableState && void 0 !== this._writableState && ((this._readableState.destroyed = e), (this._writableState.destroyed = e)); }, }); }).call(this, r(\"4362\")); }, 8474: function (e) { e.exports = JSON.parse( '[[\"a140\",\"\",62],[\"a180\",\"\",32],[\"a240\",\"\",62],[\"a280\",\"\",32],[\"a2ab\",\"\",5],[\"a2e3\",\"€\"],[\"a2ef\",\"\"],[\"a2fd\",\"\"],[\"a340\",\"\",62],[\"a380\",\"\",31,\" \"],[\"a440\",\"\",62],[\"a480\",\"\",32],[\"a4f4\",\"\",10],[\"a540\",\"\",62],[\"a580\",\"\",32],[\"a5f7\",\"\",7],[\"a640\",\"\",62],[\"a680\",\"\",32],[\"a6b9\",\"\",7],[\"a6d9\",\"\",6],[\"a6ec\",\"\"],[\"a6f3\",\"\"],[\"a6f6\",\"\",8],[\"a740\",\"\",62],[\"a780\",\"\",32],[\"a7c2\",\"\",14],[\"a7f2\",\"\",12],[\"a896\",\"\",10],[\"a8bc\",\"ḿ\"],[\"a8bf\",\"ǹ\"],[\"a8c1\",\"\"],[\"a8ea\",\"\",20],[\"a958\",\"\"],[\"a95b\",\"\"],[\"a95d\",\"\"],[\"a989\",\"〾⿰\",11],[\"a997\",\"\",12],[\"a9f0\",\"\",14],[\"aaa1\",\"\",93],[\"aba1\",\"\",93],[\"aca1\",\"\",93],[\"ada1\",\"\",93],[\"aea1\",\"\",93],[\"afa1\",\"\",93],[\"d7fa\",\"\",4],[\"f8a1\",\"\",93],[\"f9a1\",\"\",93],[\"faa1\",\"\",93],[\"fba1\",\"\",93],[\"fca1\",\"\",93],[\"fda1\",\"\",93],[\"fe50\",\"⺁⺄㑳㑇⺈⺋㖞㘚㘎⺌⺗㥮㤘㧏㧟㩳㧐㭎㱮㳠⺧⺪䁖䅟⺮䌷⺳⺶⺷䎱䎬⺻䏝䓖䙡䙌\"],[\"fe80\",\"䜣䜩䝼䞍⻊䥇䥺䥽䦂䦃䦅䦆䦟䦛䦷䦶䲣䲟䲠䲡䱷䲢䴓\",6,\"䶮\",93],[\"8135f437\",\"\"]]' ); }, \"861d\": function (e, t, r) { var i = r(\"1626\"); e.exports = function (e) { return \"object\" == typeof e ? null !== e : i(e); }; }, \"86a9\": function (e, t, r) { \"use strict\"; (function (t) { var i = !0, n = r(\"470b\"), a = r(\"1bc3\"); n.deflateSync || (i = !1); var o = r(\"46d3\"), s = r(\"7c9f\"), c = r(\"618c\"), u = r(\"2767\"), A = r(\"4196\"); e.exports = function (e, r) { if (!i) throw new Error( \"To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0\" ); var f, l, h; function d(e) { f = e; } function g(e) { l = e; } function p(e) { l.transColor = e; } function m(e) { l.palette = e; } function b() { l.alpha = !0; } function I(e) { h = e; } var E = []; function y(e) { E.push(e); } var B = new o(e), v = new c(r, { read: B.read.bind(B), error: d, metadata: g, gamma: I, palette: m, transColor: p, inflateData: y, simpleTransparency: b, }); if ((v.start(), B.process(), f)) throw f; var w, C = t.concat(E); if (((E.length = 0), l.interlace)) w = n.inflateSync(C); else { var _ = 1 + ((l.width * l.bpp * l.depth + 7) >> 3), Q = _ * l.height; w = a(C, { chunkSize: Q, maxLength: Q }); } if (((C = null), !w || !w.length)) throw new Error(\"bad png - invalid inflate data response\"); var k = s.process(w, l); C = null; var S = u.dataToBitMap(k, l); k = null; var x = A(S, l); return (l.data = x), (l.gamma = h || 0), l; }; }).call(this, r(\"1c35\").Buffer); }, \"86d7\": function (e) { e.exports = JSON.parse( '[[\"0\",\"\\\\u0000\",127],[\"a140\",\" ，、。．‧；：？！︰…‥﹐﹑﹒·﹔﹕﹖﹗｜–︱—︳╴︴﹏（）︵︶｛｝︷︸〔〕︹︺【】︻︼《》︽︾〈〉︿﹀「」﹁﹂『』﹃﹄﹙﹚\"],[\"a1a1\",\"﹛﹜﹝﹞‘’“”〝〞‵′＃＆＊※§〃○●△▲◎☆★◇◆□■▽▼㊣℅¯￣＿ˍ﹉﹊﹍﹎﹋﹌﹟﹠﹡＋－×÷±√＜＞＝≦≧≠∞≒≡﹢\",4,\"～∩∪⊥∠∟⊿㏒㏑∫∮∵∴♀♂⊕⊙↑↓←→↖↗↙↘∥∣／\"],[\"a240\",\"＼∕﹨＄￥〒￠￡％＠℃℉﹩﹪﹫㏕㎜㎝㎞㏎㎡㎎㎏㏄°兙兛兞兝兡兣嗧瓩糎▁\",7,\"▏▎▍▌▋▊▉┼┴┬┤├▔─│▕┌┐└┘╭\"],[\"a2a1\",\"╮╰╯═╞╪╡◢◣◥◤╱╲╳０\",9,\"Ⅰ\",9,\"〡\",8,\"十卄卅Ａ\",25,\"ａ\",21],[\"a340\",\"ｗｘｙｚΑ\",16,\"Σ\",6,\"α\",16,\"σ\",6,\"ㄅ\",10],[\"a3a1\",\"ㄐ\",25,\"˙ˉˊˇˋ\"],[\"a3e1\",\"€\"],[\"a440\",\"一乙丁七乃九了二人儿入八几刀刁力匕十卜又三下丈上丫丸凡久么也乞于亡兀刃勺千叉口土士夕大女子孑孓寸小尢尸山川工己已巳巾干廾弋弓才\"],[\"a4a1\",\"丑丐不中丰丹之尹予云井互五亢仁什仃仆仇仍今介仄元允內六兮公冗凶分切刈勻勾勿化匹午升卅卞厄友及反壬天夫太夭孔少尤尺屯巴幻廿弔引心戈戶手扎支文斗斤方日曰月木欠止歹毋比毛氏水火爪父爻片牙牛犬王丙\"],[\"a540\",\"世丕且丘主乍乏乎以付仔仕他仗代令仙仞充兄冉冊冬凹出凸刊加功包匆北匝仟半卉卡占卯卮去可古右召叮叩叨叼司叵叫另只史叱台句叭叻四囚外\"],[\"a5a1\",\"央失奴奶孕它尼巨巧左市布平幼弁弘弗必戊打扔扒扑斥旦朮本未末札正母民氐永汁汀氾犯玄玉瓜瓦甘生用甩田由甲申疋白皮皿目矛矢石示禾穴立丞丟乒乓乩亙交亦亥仿伉伙伊伕伍伐休伏仲件任仰仳份企伋光兇兆先全\"],[\"a640\",\"共再冰列刑划刎刖劣匈匡匠印危吉吏同吊吐吁吋各向名合吃后吆吒因回囝圳地在圭圬圯圩夙多夷夸妄奸妃好她如妁字存宇守宅安寺尖屹州帆并年\"],[\"a6a1\",\"式弛忙忖戎戌戍成扣扛托收早旨旬旭曲曳有朽朴朱朵次此死氖汝汗汙江池汐汕污汛汍汎灰牟牝百竹米糸缶羊羽老考而耒耳聿肉肋肌臣自至臼舌舛舟艮色艾虫血行衣西阡串亨位住佇佗佞伴佛何估佐佑伽伺伸佃佔似但佣\"],[\"a740\",\"作你伯低伶余佝佈佚兌克免兵冶冷別判利刪刨劫助努劬匣即卵吝吭吞吾否呎吧呆呃吳呈呂君吩告吹吻吸吮吵吶吠吼呀吱含吟听囪困囤囫坊坑址坍\"],[\"a7a1\",\"均坎圾坐坏圻壯夾妝妒妨妞妣妙妖妍妤妓妊妥孝孜孚孛完宋宏尬局屁尿尾岐岑岔岌巫希序庇床廷弄弟彤形彷役忘忌志忍忱快忸忪戒我抄抗抖技扶抉扭把扼找批扳抒扯折扮投抓抑抆改攻攸旱更束李杏材村杜杖杞杉杆杠\"],[\"a840\",\"杓杗步每求汞沙沁沈沉沅沛汪決沐汰沌汨沖沒汽沃汲汾汴沆汶沍沔沘沂灶灼災灸牢牡牠狄狂玖甬甫男甸皂盯矣私秀禿究系罕肖肓肝肘肛肚育良芒\"],[\"a8a1\",\"芋芍見角言谷豆豕貝赤走足身車辛辰迂迆迅迄巡邑邢邪邦那酉釆里防阮阱阪阬並乖乳事些亞享京佯依侍佳使佬供例來侃佰併侈佩佻侖佾侏侑佺兔兒兕兩具其典冽函刻券刷刺到刮制剁劾劻卒協卓卑卦卷卸卹取叔受味呵\"],[\"a940\",\"咖呸咕咀呻呷咄咒咆呼咐呱呶和咚呢周咋命咎固垃坷坪坩坡坦坤坼夜奉奇奈奄奔妾妻委妹妮姑姆姐姍始姓姊妯妳姒姅孟孤季宗定官宜宙宛尚屈居\"],[\"a9a1\",\"屆岷岡岸岩岫岱岳帘帚帖帕帛帑幸庚店府底庖延弦弧弩往征彿彼忝忠忽念忿怏怔怯怵怖怪怕怡性怩怫怛或戕房戾所承拉拌拄抿拂抹拒招披拓拔拋拈抨抽押拐拙拇拍抵拚抱拘拖拗拆抬拎放斧於旺昔易昌昆昂明昀昏昕昊\"],[\"aa40\",\"昇服朋杭枋枕東果杳杷枇枝林杯杰板枉松析杵枚枓杼杪杲欣武歧歿氓氛泣注泳沱泌泥河沽沾沼波沫法泓沸泄油況沮泗泅泱沿治泡泛泊沬泯泜泖泠\"],[\"aaa1\",\"炕炎炒炊炙爬爭爸版牧物狀狎狙狗狐玩玨玟玫玥甽疝疙疚的盂盲直知矽社祀祁秉秈空穹竺糾罔羌羋者肺肥肢肱股肫肩肴肪肯臥臾舍芳芝芙芭芽芟芹花芬芥芯芸芣芰芾芷虎虱初表軋迎返近邵邸邱邶采金長門阜陀阿阻附\"],[\"ab40\",\"陂隹雨青非亟亭亮信侵侯便俠俑俏保促侶俘俟俊俗侮俐俄係俚俎俞侷兗冒冑冠剎剃削前剌剋則勇勉勃勁匍南卻厚叛咬哀咨哎哉咸咦咳哇哂咽咪品\"],[\"aba1\",\"哄哈咯咫咱咻咩咧咿囿垂型垠垣垢城垮垓奕契奏奎奐姜姘姿姣姨娃姥姪姚姦威姻孩宣宦室客宥封屎屏屍屋峙峒巷帝帥帟幽庠度建弈弭彥很待徊律徇後徉怒思怠急怎怨恍恰恨恢恆恃恬恫恪恤扁拜挖按拼拭持拮拽指拱拷\"],[\"ac40\",\"拯括拾拴挑挂政故斫施既春昭映昧是星昨昱昤曷柿染柱柔某柬架枯柵柩柯柄柑枴柚查枸柏柞柳枰柙柢柝柒歪殃殆段毒毗氟泉洋洲洪流津洌洱洞洗\"],[\"aca1\",\"活洽派洶洛泵洹洧洸洩洮洵洎洫炫為炳炬炯炭炸炮炤爰牲牯牴狩狠狡玷珊玻玲珍珀玳甚甭畏界畎畋疫疤疥疢疣癸皆皇皈盈盆盃盅省盹相眉看盾盼眇矜砂研砌砍祆祉祈祇禹禺科秒秋穿突竿竽籽紂紅紀紉紇約紆缸美羿耄\"],[\"ad40\",\"耐耍耑耶胖胥胚胃胄背胡胛胎胞胤胝致舢苧范茅苣苛苦茄若茂茉苒苗英茁苜苔苑苞苓苟苯茆虐虹虻虺衍衫要觔計訂訃貞負赴赳趴軍軌述迦迢迪迥\"],[\"ada1\",\"迭迫迤迨郊郎郁郃酋酊重閂限陋陌降面革韋韭音頁風飛食首香乘亳倌倍倣俯倦倥俸倩倖倆值借倚倒們俺倀倔倨俱倡個候倘俳修倭倪俾倫倉兼冤冥冢凍凌准凋剖剜剔剛剝匪卿原厝叟哨唐唁唷哼哥哲唆哺唔哩哭員唉哮哪\"],[\"ae40\",\"哦唧唇哽唏圃圄埂埔埋埃堉夏套奘奚娑娘娜娟娛娓姬娠娣娩娥娌娉孫屘宰害家宴宮宵容宸射屑展屐峭峽峻峪峨峰島崁峴差席師庫庭座弱徒徑徐恙\"],[\"aea1\",\"恣恥恐恕恭恩息悄悟悚悍悔悌悅悖扇拳挈拿捎挾振捕捂捆捏捉挺捐挽挪挫挨捍捌效敉料旁旅時晉晏晃晒晌晅晁書朔朕朗校核案框桓根桂桔栩梳栗桌桑栽柴桐桀格桃株桅栓栘桁殊殉殷氣氧氨氦氤泰浪涕消涇浦浸海浙涓\"],[\"af40\",\"浬涉浮浚浴浩涌涊浹涅浥涔烊烘烤烙烈烏爹特狼狹狽狸狷玆班琉珮珠珪珞畔畝畜畚留疾病症疲疳疽疼疹痂疸皋皰益盍盎眩真眠眨矩砰砧砸砝破砷\"],[\"afa1\",\"砥砭砠砟砲祕祐祠祟祖神祝祗祚秤秣秧租秦秩秘窄窈站笆笑粉紡紗紋紊素索純紐紕級紜納紙紛缺罟羔翅翁耆耘耕耙耗耽耿胱脂胰脅胭胴脆胸胳脈能脊胼胯臭臬舀舐航舫舨般芻茫荒荔荊茸荐草茵茴荏茲茹茶茗荀茱茨荃\"],[\"b040\",\"虔蚊蚪蚓蚤蚩蚌蚣蚜衰衷袁袂衽衹記訐討訌訕訊託訓訖訏訑豈豺豹財貢起躬軒軔軏辱送逆迷退迺迴逃追逅迸邕郡郝郢酒配酌釘針釗釜釙閃院陣陡\"],[\"b0a1\",\"陛陝除陘陞隻飢馬骨高鬥鬲鬼乾偺偽停假偃偌做偉健偶偎偕偵側偷偏倏偯偭兜冕凰剪副勒務勘動匐匏匙匿區匾參曼商啪啦啄啞啡啃啊唱啖問啕唯啤唸售啜唬啣唳啁啗圈國圉域堅堊堆埠埤基堂堵執培夠奢娶婁婉婦婪婀\"],[\"b140\",\"娼婢婚婆婊孰寇寅寄寂宿密尉專將屠屜屝崇崆崎崛崖崢崑崩崔崙崤崧崗巢常帶帳帷康庸庶庵庾張強彗彬彩彫得徙從徘御徠徜恿患悉悠您惋悴惦悽\"],[\"b1a1\",\"情悻悵惜悼惘惕惆惟悸惚惇戚戛扈掠控捲掖探接捷捧掘措捱掩掉掃掛捫推掄授掙採掬排掏掀捻捩捨捺敝敖救教敗啟敏敘敕敔斜斛斬族旋旌旎晝晚晤晨晦晞曹勗望梁梯梢梓梵桿桶梱梧梗械梃棄梭梆梅梔條梨梟梡梂欲殺\"],[\"b240\",\"毫毬氫涎涼淳淙液淡淌淤添淺清淇淋涯淑涮淞淹涸混淵淅淒渚涵淚淫淘淪深淮淨淆淄涪淬涿淦烹焉焊烽烯爽牽犁猜猛猖猓猙率琅琊球理現琍瓠瓶\"],[\"b2a1\",\"瓷甜產略畦畢異疏痔痕疵痊痍皎盔盒盛眷眾眼眶眸眺硫硃硎祥票祭移窒窕笠笨笛第符笙笞笮粒粗粕絆絃統紮紹紼絀細紳組累終紲紱缽羞羚翌翎習耜聊聆脯脖脣脫脩脰脤舂舵舷舶船莎莞莘荸莢莖莽莫莒莊莓莉莠荷荻荼\"],[\"b340\",\"莆莧處彪蛇蛀蚶蛄蚵蛆蛋蚱蚯蛉術袞袈被袒袖袍袋覓規訪訝訣訥許設訟訛訢豉豚販責貫貨貪貧赧赦趾趺軛軟這逍通逗連速逝逐逕逞造透逢逖逛途\"],[\"b3a1\",\"部郭都酗野釵釦釣釧釭釩閉陪陵陳陸陰陴陶陷陬雀雪雩章竟頂頃魚鳥鹵鹿麥麻傢傍傅備傑傀傖傘傚最凱割剴創剩勞勝勛博厥啻喀喧啼喊喝喘喂喜喪喔喇喋喃喳單喟唾喲喚喻喬喱啾喉喫喙圍堯堪場堤堰報堡堝堠壹壺奠\"],[\"b440\",\"婷媚婿媒媛媧孳孱寒富寓寐尊尋就嵌嵐崴嵇巽幅帽幀幃幾廊廁廂廄弼彭復循徨惑惡悲悶惠愜愣惺愕惰惻惴慨惱愎惶愉愀愒戟扉掣掌描揀揩揉揆揍\"],[\"b4a1\",\"插揣提握揖揭揮捶援揪換摒揚揹敞敦敢散斑斐斯普晰晴晶景暑智晾晷曾替期朝棺棕棠棘棗椅棟棵森棧棹棒棲棣棋棍植椒椎棉棚楮棻款欺欽殘殖殼毯氮氯氬港游湔渡渲湧湊渠渥渣減湛湘渤湖湮渭渦湯渴湍渺測湃渝渾滋\"],[\"b540\",\"溉渙湎湣湄湲湩湟焙焚焦焰無然煮焜牌犄犀猶猥猴猩琺琪琳琢琥琵琶琴琯琛琦琨甥甦畫番痢痛痣痙痘痞痠登發皖皓皴盜睏短硝硬硯稍稈程稅稀窘\"],[\"b5a1\",\"窗窖童竣等策筆筐筒答筍筋筏筑粟粥絞結絨絕紫絮絲絡給絢絰絳善翔翕耋聒肅腕腔腋腑腎脹腆脾腌腓腴舒舜菩萃菸萍菠菅萋菁華菱菴著萊菰萌菌菽菲菊萸萎萄菜萇菔菟虛蛟蛙蛭蛔蛛蛤蛐蛞街裁裂袱覃視註詠評詞証詁\"],[\"b640\",\"詔詛詐詆訴診訶詖象貂貯貼貳貽賁費賀貴買貶貿貸越超趁跎距跋跚跑跌跛跆軻軸軼辜逮逵週逸進逶鄂郵鄉郾酣酥量鈔鈕鈣鈉鈞鈍鈐鈇鈑閔閏開閑\"],[\"b6a1\",\"間閒閎隊階隋陽隅隆隍陲隄雁雅雄集雇雯雲韌項順須飧飪飯飩飲飭馮馭黃黍黑亂傭債傲傳僅傾催傷傻傯僇剿剷剽募勦勤勢勣匯嗟嗨嗓嗦嗎嗜嗇嗑嗣嗤嗯嗚嗡嗅嗆嗥嗉園圓塞塑塘塗塚塔填塌塭塊塢塒塋奧嫁嫉嫌媾媽媼\"],[\"b740\",\"媳嫂媲嵩嵯幌幹廉廈弒彙徬微愚意慈感想愛惹愁愈慎慌慄慍愾愴愧愍愆愷戡戢搓搾搞搪搭搽搬搏搜搔損搶搖搗搆敬斟新暗暉暇暈暖暄暘暍會榔業\"],[\"b7a1\",\"楚楷楠楔極椰概楊楨楫楞楓楹榆楝楣楛歇歲毀殿毓毽溢溯滓溶滂源溝滇滅溥溘溼溺溫滑準溜滄滔溪溧溴煎煙煩煤煉照煜煬煦煌煥煞煆煨煖爺牒猷獅猿猾瑯瑚瑕瑟瑞瑁琿瑙瑛瑜當畸瘀痰瘁痲痱痺痿痴痳盞盟睛睫睦睞督\"],[\"b840\",\"睹睪睬睜睥睨睢矮碎碰碗碘碌碉硼碑碓硿祺祿禁萬禽稜稚稠稔稟稞窟窠筷節筠筮筧粱粳粵經絹綑綁綏絛置罩罪署義羨群聖聘肆肄腱腰腸腥腮腳腫\"],[\"b8a1\",\"腹腺腦舅艇蒂葷落萱葵葦葫葉葬葛萼萵葡董葩葭葆虞虜號蛹蜓蜈蜇蜀蛾蛻蜂蜃蜆蜊衙裟裔裙補裘裝裡裊裕裒覜解詫該詳試詩詰誇詼詣誠話誅詭詢詮詬詹詻訾詨豢貊貉賊資賈賄貲賃賂賅跡跟跨路跳跺跪跤跦躲較載軾輊\"],[\"b940\",\"辟農運遊道遂達逼違遐遇遏過遍遑逾遁鄒鄗酬酪酩釉鈷鉗鈸鈽鉀鈾鉛鉋鉤鉑鈴鉉鉍鉅鈹鈿鉚閘隘隔隕雍雋雉雊雷電雹零靖靴靶預頑頓頊頒頌飼飴\"],[\"b9a1\",\"飽飾馳馱馴髡鳩麂鼎鼓鼠僧僮僥僖僭僚僕像僑僱僎僩兢凳劃劂匱厭嗾嘀嘛嘗嗽嘔嘆嘉嘍嘎嗷嘖嘟嘈嘐嗶團圖塵塾境墓墊塹墅塽壽夥夢夤奪奩嫡嫦嫩嫗嫖嫘嫣孵寞寧寡寥實寨寢寤察對屢嶄嶇幛幣幕幗幔廓廖弊彆彰徹慇\"],[\"ba40\",\"愿態慷慢慣慟慚慘慵截撇摘摔撤摸摟摺摑摧搴摭摻敲斡旗旖暢暨暝榜榨榕槁榮槓構榛榷榻榫榴槐槍榭槌榦槃榣歉歌氳漳演滾漓滴漩漾漠漬漏漂漢\"],[\"baa1\",\"滿滯漆漱漸漲漣漕漫漯澈漪滬漁滲滌滷熔熙煽熊熄熒爾犒犖獄獐瑤瑣瑪瑰瑭甄疑瘧瘍瘋瘉瘓盡監瞄睽睿睡磁碟碧碳碩碣禎福禍種稱窪窩竭端管箕箋筵算箝箔箏箸箇箄粹粽精綻綰綜綽綾綠緊綴網綱綺綢綿綵綸維緒緇綬\"],[\"bb40\",\"罰翠翡翟聞聚肇腐膀膏膈膊腿膂臧臺與舔舞艋蓉蒿蓆蓄蒙蒞蒲蒜蓋蒸蓀蓓蒐蒼蓑蓊蜿蜜蜻蜢蜥蜴蜘蝕蜷蜩裳褂裴裹裸製裨褚裯誦誌語誣認誡誓誤\"],[\"bba1\",\"說誥誨誘誑誚誧豪貍貌賓賑賒赫趙趕跼輔輒輕輓辣遠遘遜遣遙遞遢遝遛鄙鄘鄞酵酸酷酴鉸銀銅銘銖鉻銓銜銨鉼銑閡閨閩閣閥閤隙障際雌雒需靼鞅韶頗領颯颱餃餅餌餉駁骯骰髦魁魂鳴鳶鳳麼鼻齊億儀僻僵價儂儈儉儅凜\"],[\"bc40\",\"劇劈劉劍劊勰厲嘮嘻嘹嘲嘿嘴嘩噓噎噗噴嘶嘯嘰墀墟增墳墜墮墩墦奭嬉嫻嬋嫵嬌嬈寮寬審寫層履嶝嶔幢幟幡廢廚廟廝廣廠彈影德徵慶慧慮慝慕憂\"],[\"bca1\",\"慼慰慫慾憧憐憫憎憬憚憤憔憮戮摩摯摹撞撲撈撐撰撥撓撕撩撒撮播撫撚撬撙撢撳敵敷數暮暫暴暱樣樟槨樁樞標槽模樓樊槳樂樅槭樑歐歎殤毅毆漿潼澄潑潦潔澆潭潛潸潮澎潺潰潤澗潘滕潯潠潟熟熬熱熨牖犛獎獗瑩璋璃\"],[\"bd40\",\"瑾璀畿瘠瘩瘟瘤瘦瘡瘢皚皺盤瞎瞇瞌瞑瞋磋磅確磊碾磕碼磐稿稼穀稽稷稻窯窮箭箱範箴篆篇篁箠篌糊締練緯緻緘緬緝編緣線緞緩綞緙緲緹罵罷羯\"],[\"bda1\",\"翩耦膛膜膝膠膚膘蔗蔽蔚蓮蔬蔭蔓蔑蔣蔡蔔蓬蔥蓿蔆螂蝴蝶蝠蝦蝸蝨蝙蝗蝌蝓衛衝褐複褒褓褕褊誼諒談諄誕請諸課諉諂調誰論諍誶誹諛豌豎豬賠賞賦賤賬賭賢賣賜質賡赭趟趣踫踐踝踢踏踩踟踡踞躺輝輛輟輩輦輪輜輞\"],[\"be40\",\"輥適遮遨遭遷鄰鄭鄧鄱醇醉醋醃鋅銻銷鋪銬鋤鋁銳銼鋒鋇鋰銲閭閱霄霆震霉靠鞍鞋鞏頡頫頜颳養餓餒餘駝駐駟駛駑駕駒駙骷髮髯鬧魅魄魷魯鴆鴉\"],[\"bea1\",\"鴃麩麾黎墨齒儒儘儔儐儕冀冪凝劑劓勳噙噫噹噩噤噸噪器噥噱噯噬噢噶壁墾壇壅奮嬝嬴學寰導彊憲憑憩憊懍憶憾懊懈戰擅擁擋撻撼據擄擇擂操撿擒擔撾整曆曉暹曄曇暸樽樸樺橙橫橘樹橄橢橡橋橇樵機橈歙歷氅濂澱澡\"],[\"bf40\",\"濃澤濁澧澳激澹澶澦澠澴熾燉燐燒燈燕熹燎燙燜燃燄獨璜璣璘璟璞瓢甌甍瘴瘸瘺盧盥瞠瞞瞟瞥磨磚磬磧禦積穎穆穌穋窺篙簑築篤篛篡篩篦糕糖縊\"],[\"bfa1\",\"縑縈縛縣縞縝縉縐罹羲翰翱翮耨膳膩膨臻興艘艙蕊蕙蕈蕨蕩蕃蕉蕭蕪蕞螃螟螞螢融衡褪褲褥褫褡親覦諦諺諫諱謀諜諧諮諾謁謂諷諭諳諶諼豫豭貓賴蹄踱踴蹂踹踵輻輯輸輳辨辦遵遴選遲遼遺鄴醒錠錶鋸錳錯錢鋼錫錄錚\"],[\"c040\",\"錐錦錡錕錮錙閻隧隨險雕霎霑霖霍霓霏靛靜靦鞘頰頸頻頷頭頹頤餐館餞餛餡餚駭駢駱骸骼髻髭鬨鮑鴕鴣鴦鴨鴒鴛默黔龍龜優償儡儲勵嚎嚀嚐嚅嚇\"],[\"c0a1\",\"嚏壕壓壑壎嬰嬪嬤孺尷屨嶼嶺嶽嶸幫彌徽應懂懇懦懋戲戴擎擊擘擠擰擦擬擱擢擭斂斃曙曖檀檔檄檢檜櫛檣橾檗檐檠歜殮毚氈濘濱濟濠濛濤濫濯澀濬濡濩濕濮濰燧營燮燦燥燭燬燴燠爵牆獰獲璩環璦璨癆療癌盪瞳瞪瞰瞬\"],[\"c140\",\"瞧瞭矯磷磺磴磯礁禧禪穗窿簇簍篾篷簌篠糠糜糞糢糟糙糝縮績繆縷縲繃縫總縱繅繁縴縹繈縵縿縯罄翳翼聱聲聰聯聳臆臃膺臂臀膿膽臉膾臨舉艱薪\"],[\"c1a1\",\"薄蕾薜薑薔薯薛薇薨薊虧蟀蟑螳蟒蟆螫螻螺蟈蟋褻褶襄褸褽覬謎謗謙講謊謠謝謄謐豁谿豳賺賽購賸賻趨蹉蹋蹈蹊轄輾轂轅輿避遽還邁邂邀鄹醣醞醜鍍鎂錨鍵鍊鍥鍋錘鍾鍬鍛鍰鍚鍔闊闋闌闈闆隱隸雖霜霞鞠韓顆颶餵騁\"],[\"c240\",\"駿鮮鮫鮪鮭鴻鴿麋黏點黜黝黛鼾齋叢嚕嚮壙壘嬸彝懣戳擴擲擾攆擺擻擷斷曜朦檳檬櫃檻檸櫂檮檯歟歸殯瀉瀋濾瀆濺瀑瀏燻燼燾燸獷獵璧璿甕癖癘\"],[\"c2a1\",\"癒瞽瞿瞻瞼礎禮穡穢穠竄竅簫簧簪簞簣簡糧織繕繞繚繡繒繙罈翹翻職聶臍臏舊藏薩藍藐藉薰薺薹薦蟯蟬蟲蟠覆覲觴謨謹謬謫豐贅蹙蹣蹦蹤蹟蹕軀轉轍邇邃邈醫醬釐鎔鎊鎖鎢鎳鎮鎬鎰鎘鎚鎗闔闖闐闕離雜雙雛雞霤鞣鞦\"],[\"c340\",\"鞭韹額顏題顎顓颺餾餿餽餮馥騎髁鬃鬆魏魎魍鯊鯉鯽鯈鯀鵑鵝鵠黠鼕鼬儳嚥壞壟壢寵龐廬懲懷懶懵攀攏曠曝櫥櫝櫚櫓瀛瀟瀨瀚瀝瀕瀘爆爍牘犢獸\"],[\"c3a1\",\"獺璽瓊瓣疇疆癟癡矇礙禱穫穩簾簿簸簽簷籀繫繭繹繩繪羅繳羶羹羸臘藩藝藪藕藤藥藷蟻蠅蠍蟹蟾襠襟襖襞譁譜識證譚譎譏譆譙贈贊蹼蹲躇蹶蹬蹺蹴轔轎辭邊邋醱醮鏡鏑鏟鏃鏈鏜鏝鏖鏢鏍鏘鏤鏗鏨關隴難霪霧靡韜韻類\"],[\"c440\",\"願顛颼饅饉騖騙鬍鯨鯧鯖鯛鶉鵡鵲鵪鵬麒麗麓麴勸嚨嚷嚶嚴嚼壤孀孃孽寶巉懸懺攘攔攙曦朧櫬瀾瀰瀲爐獻瓏癢癥礦礪礬礫竇競籌籃籍糯糰辮繽繼\"],[\"c4a1\",\"纂罌耀臚艦藻藹蘑藺蘆蘋蘇蘊蠔蠕襤覺觸議譬警譯譟譫贏贍躉躁躅躂醴釋鐘鐃鏽闡霰飄饒饑馨騫騰騷騵鰓鰍鹹麵黨鼯齟齣齡儷儸囁囀囂夔屬巍懼懾攝攜斕曩櫻欄櫺殲灌爛犧瓖瓔癩矓籐纏續羼蘗蘭蘚蠣蠢蠡蠟襪襬覽譴\"],[\"c540\",\"護譽贓躊躍躋轟辯醺鐮鐳鐵鐺鐸鐲鐫闢霸霹露響顧顥饗驅驃驀騾髏魔魑鰭鰥鶯鶴鷂鶸麝黯鼙齜齦齧儼儻囈囊囉孿巔巒彎懿攤權歡灑灘玀瓤疊癮癬\"],[\"c5a1\",\"禳籠籟聾聽臟襲襯觼讀贖贗躑躓轡酈鑄鑑鑒霽霾韃韁顫饕驕驍髒鬚鱉鰱鰾鰻鷓鷗鼴齬齪龔囌巖戀攣攫攪曬欐瓚竊籤籣籥纓纖纔臢蘸蘿蠱變邐邏鑣鑠鑤靨顯饜驚驛驗髓體髑鱔鱗鱖鷥麟黴囑壩攬灞癱癲矗罐羈蠶蠹衢讓讒\"],[\"c640\",\"讖艷贛釀鑪靂靈靄韆顰驟鬢魘鱟鷹鷺鹼鹽鼇齷齲廳欖灣籬籮蠻觀躡釁鑲鑰顱饞髖鬣黌灤矚讚鑷韉驢驥纜讜躪釅鑽鑾鑼鱷鱸黷豔鑿鸚爨驪鬱鸛鸞籲\"],[\"c940\",\"乂乜凵匚厂万丌乇亍囗兀屮彳丏冇与丮亓仂仉仈冘勼卬厹圠夃夬尐巿旡殳毌气爿丱丼仨仜仩仡仝仚刌匜卌圢圣夗夯宁宄尒尻屴屳帄庀庂忉戉扐氕\"],[\"c9a1\",\"氶汃氿氻犮犰玊禸肊阞伎优伬仵伔仱伀价伈伝伂伅伢伓伄仴伒冱刓刉刐劦匢匟卍厊吇囡囟圮圪圴夼妀奼妅奻奾奷奿孖尕尥屼屺屻屾巟幵庄异弚彴忕忔忏扜扞扤扡扦扢扙扠扚扥旯旮朾朹朸朻机朿朼朳氘汆汒汜汏汊汔汋\"],[\"ca40\",\"汌灱牞犴犵玎甪癿穵网艸艼芀艽艿虍襾邙邗邘邛邔阢阤阠阣佖伻佢佉体佤伾佧佒佟佁佘伭伳伿佡冏冹刜刞刡劭劮匉卣卲厎厏吰吷吪呔呅吙吜吥吘\"],[\"caa1\",\"吽呏呁吨吤呇囮囧囥坁坅坌坉坋坒夆奀妦妘妠妗妎妢妐妏妧妡宎宒尨尪岍岏岈岋岉岒岊岆岓岕巠帊帎庋庉庌庈庍弅弝彸彶忒忑忐忭忨忮忳忡忤忣忺忯忷忻怀忴戺抃抌抎抏抔抇扱扻扺扰抁抈扷扽扲扴攷旰旴旳旲旵杅杇\"],[\"cb40\",\"杙杕杌杈杝杍杚杋毐氙氚汸汧汫沄沋沏汱汯汩沚汭沇沕沜汦汳汥汻沎灴灺牣犿犽狃狆狁犺狅玕玗玓玔玒町甹疔疕皁礽耴肕肙肐肒肜芐芏芅芎芑芓\"],[\"cba1\",\"芊芃芄豸迉辿邟邡邥邞邧邠阰阨阯阭丳侘佼侅佽侀侇佶佴侉侄佷佌侗佪侚佹侁佸侐侜侔侞侒侂侕佫佮冞冼冾刵刲刳剆刱劼匊匋匼厒厔咇呿咁咑咂咈呫呺呾呥呬呴呦咍呯呡呠咘呣呧呤囷囹坯坲坭坫坱坰坶垀坵坻坳坴坢\"],[\"cc40\",\"坨坽夌奅妵妺姏姎妲姌姁妶妼姃姖妱妽姀姈妴姇孢孥宓宕屄屇岮岤岠岵岯岨岬岟岣岭岢岪岧岝岥岶岰岦帗帔帙弨弢弣弤彔徂彾彽忞忥怭怦怙怲怋\"],[\"cca1\",\"怴怊怗怳怚怞怬怢怍怐怮怓怑怌怉怜戔戽抭抴拑抾抪抶拊抮抳抯抻抩抰抸攽斨斻昉旼昄昒昈旻昃昋昍昅旽昑昐曶朊枅杬枎枒杶杻枘枆构杴枍枌杺枟枑枙枃杽极杸杹枔欥殀歾毞氝沓泬泫泮泙沶泔沭泧沷泐泂沺泃泆泭泲\"],[\"cd40\",\"泒泝沴沊沝沀泞泀洰泍泇沰泹泏泩泑炔炘炅炓炆炄炑炖炂炚炃牪狖狋狘狉狜狒狔狚狌狑玤玡玭玦玢玠玬玝瓝瓨甿畀甾疌疘皯盳盱盰盵矸矼矹矻矺\"],[\"cda1\",\"矷祂礿秅穸穻竻籵糽耵肏肮肣肸肵肭舠芠苀芫芚芘芛芵芧芮芼芞芺芴芨芡芩苂芤苃芶芢虰虯虭虮豖迒迋迓迍迖迕迗邲邴邯邳邰阹阽阼阺陃俍俅俓侲俉俋俁俔俜俙侻侳俛俇俖侺俀侹俬剄剉勀勂匽卼厗厖厙厘咺咡咭咥哏\"],[\"ce40\",\"哃茍咷咮哖咶哅哆咠呰咼咢咾呲哞咰垵垞垟垤垌垗垝垛垔垘垏垙垥垚垕壴复奓姡姞姮娀姱姝姺姽姼姶姤姲姷姛姩姳姵姠姾姴姭宨屌峐峘峌峗峋峛\"],[\"cea1\",\"峞峚峉峇峊峖峓峔峏峈峆峎峟峸巹帡帢帣帠帤庰庤庢庛庣庥弇弮彖徆怷怹恔恲恞恅恓恇恉恛恌恀恂恟怤恄恘恦恮扂扃拏挍挋拵挎挃拫拹挏挌拸拶挀挓挔拺挕拻拰敁敃斪斿昶昡昲昵昜昦昢昳昫昺昝昴昹昮朏朐柁柲柈枺\"],[\"cf40\",\"柜枻柸柘柀枷柅柫柤柟枵柍枳柷柶柮柣柂枹柎柧柰枲柼柆柭柌枮柦柛柺柉柊柃柪柋欨殂殄殶毖毘毠氠氡洨洴洭洟洼洿洒洊泚洳洄洙洺洚洑洀洝浂\"],[\"cfa1\",\"洁洘洷洃洏浀洇洠洬洈洢洉洐炷炟炾炱炰炡炴炵炩牁牉牊牬牰牳牮狊狤狨狫狟狪狦狣玅珌珂珈珅玹玶玵玴珫玿珇玾珃珆玸珋瓬瓮甮畇畈疧疪癹盄眈眃眄眅眊盷盻盺矧矨砆砑砒砅砐砏砎砉砃砓祊祌祋祅祄秕种秏秖秎窀\"],[\"d040\",\"穾竑笀笁籺籸籹籿粀粁紃紈紁罘羑羍羾耇耎耏耔耷胘胇胠胑胈胂胐胅胣胙胜胊胕胉胏胗胦胍臿舡芔苙苾苹茇苨茀苕茺苫苖苴苬苡苲苵茌苻苶苰苪\"],[\"d0a1\",\"苤苠苺苳苭虷虴虼虳衁衎衧衪衩觓訄訇赲迣迡迮迠郱邽邿郕郅邾郇郋郈釔釓陔陏陑陓陊陎倞倅倇倓倢倰倛俵俴倳倷倬俶俷倗倜倠倧倵倯倱倎党冔冓凊凄凅凈凎剡剚剒剞剟剕剢勍匎厞唦哢唗唒哧哳哤唚哿唄唈哫唑唅哱\"],[\"d140\",\"唊哻哷哸哠唎唃唋圁圂埌堲埕埒垺埆垽垼垸垶垿埇埐垹埁夎奊娙娖娭娮娕娏娗娊娞娳孬宧宭宬尃屖屔峬峿峮峱峷崀峹帩帨庨庮庪庬弳弰彧恝恚恧\"],[\"d1a1\",\"恁悢悈悀悒悁悝悃悕悛悗悇悜悎戙扆拲挐捖挬捄捅挶捃揤挹捋捊挼挩捁挴捘捔捙挭捇挳捚捑挸捗捀捈敊敆旆旃旄旂晊晟晇晑朒朓栟栚桉栲栳栻桋桏栖栱栜栵栫栭栯桎桄栴栝栒栔栦栨栮桍栺栥栠欬欯欭欱欴歭肂殈毦毤\"],[\"d240\",\"毨毣毢毧氥浺浣浤浶洍浡涒浘浢浭浯涑涍淯浿涆浞浧浠涗浰浼浟涂涘洯浨涋浾涀涄洖涃浻浽浵涐烜烓烑烝烋缹烢烗烒烞烠烔烍烅烆烇烚烎烡牂牸\"],[\"d2a1\",\"牷牶猀狺狴狾狶狳狻猁珓珙珥珖玼珧珣珩珜珒珛珔珝珚珗珘珨瓞瓟瓴瓵甡畛畟疰痁疻痄痀疿疶疺皊盉眝眛眐眓眒眣眑眕眙眚眢眧砣砬砢砵砯砨砮砫砡砩砳砪砱祔祛祏祜祓祒祑秫秬秠秮秭秪秜秞秝窆窉窅窋窌窊窇竘笐\"],[\"d340\",\"笄笓笅笏笈笊笎笉笒粄粑粊粌粈粍粅紞紝紑紎紘紖紓紟紒紏紌罜罡罞罠罝罛羖羒翃翂翀耖耾耹胺胲胹胵脁胻脀舁舯舥茳茭荄茙荑茥荖茿荁茦茜茢\"],[\"d3a1\",\"荂荎茛茪茈茼荍茖茤茠茷茯茩荇荅荌荓茞茬荋茧荈虓虒蚢蚨蚖蚍蚑蚞蚇蚗蚆蚋蚚蚅蚥蚙蚡蚧蚕蚘蚎蚝蚐蚔衃衄衭衵衶衲袀衱衿衯袃衾衴衼訒豇豗豻貤貣赶赸趵趷趶軑軓迾迵适迿迻逄迼迶郖郠郙郚郣郟郥郘郛郗郜郤酐\"],[\"d440\",\"酎酏釕釢釚陜陟隼飣髟鬯乿偰偪偡偞偠偓偋偝偲偈偍偁偛偊偢倕偅偟偩偫偣偤偆偀偮偳偗偑凐剫剭剬剮勖勓匭厜啵啶唼啍啐唴唪啑啢唶唵唰啒啅\"],[\"d4a1\",\"唌唲啥啎唹啈唭唻啀啋圊圇埻堔埢埶埜埴堀埭埽堈埸堋埳埏堇埮埣埲埥埬埡堎埼堐埧堁堌埱埩埰堍堄奜婠婘婕婧婞娸娵婭婐婟婥婬婓婤婗婃婝婒婄婛婈媎娾婍娹婌婰婩婇婑婖婂婜孲孮寁寀屙崞崋崝崚崠崌崨崍崦崥崏\"],[\"d540\",\"崰崒崣崟崮帾帴庱庴庹庲庳弶弸徛徖徟悊悐悆悾悰悺惓惔惏惤惙惝惈悱惛悷惊悿惃惍惀挲捥掊掂捽掽掞掭掝掗掫掎捯掇掐据掯捵掜捭掮捼掤挻掟\"],[\"d5a1\",\"捸掅掁掑掍捰敓旍晥晡晛晙晜晢朘桹梇梐梜桭桮梮梫楖桯梣梬梩桵桴梲梏桷梒桼桫桲梪梀桱桾梛梖梋梠梉梤桸桻梑梌梊桽欶欳欷欸殑殏殍殎殌氪淀涫涴涳湴涬淩淢涷淶淔渀淈淠淟淖涾淥淜淝淛淴淊涽淭淰涺淕淂淏淉\"],[\"d640\",\"淐淲淓淽淗淍淣涻烺焍烷焗烴焌烰焄烳焐烼烿焆焓焀烸烶焋焂焎牾牻牼牿猝猗猇猑猘猊猈狿猏猞玈珶珸珵琄琁珽琇琀珺珼珿琌琋珴琈畤畣痎痒痏\"],[\"d6a1\",\"痋痌痑痐皏皉盓眹眯眭眱眲眴眳眽眥眻眵硈硒硉硍硊硌砦硅硐祤祧祩祪祣祫祡离秺秸秶秷窏窔窐笵筇笴笥笰笢笤笳笘笪笝笱笫笭笯笲笸笚笣粔粘粖粣紵紽紸紶紺絅紬紩絁絇紾紿絊紻紨罣羕羜羝羛翊翋翍翐翑翇翏翉耟\"],[\"d740\",\"耞耛聇聃聈脘脥脙脛脭脟脬脞脡脕脧脝脢舑舸舳舺舴舲艴莐莣莨莍荺荳莤荴莏莁莕莙荵莔莩荽莃莌莝莛莪莋荾莥莯莈莗莰荿莦莇莮荶莚虙虖蚿蚷\"],[\"d7a1\",\"蛂蛁蛅蚺蚰蛈蚹蚳蚸蛌蚴蚻蚼蛃蚽蚾衒袉袕袨袢袪袚袑袡袟袘袧袙袛袗袤袬袌袓袎覂觖觙觕訰訧訬訞谹谻豜豝豽貥赽赻赹趼跂趹趿跁軘軞軝軜軗軠軡逤逋逑逜逌逡郯郪郰郴郲郳郔郫郬郩酖酘酚酓酕釬釴釱釳釸釤釹釪\"],[\"d840\",\"釫釷釨釮镺閆閈陼陭陫陱陯隿靪頄飥馗傛傕傔傞傋傣傃傌傎傝偨傜傒傂傇兟凔匒匑厤厧喑喨喥喭啷噅喢喓喈喏喵喁喣喒喤啽喌喦啿喕喡喎圌堩堷\"],[\"d8a1\",\"堙堞堧堣堨埵塈堥堜堛堳堿堶堮堹堸堭堬堻奡媯媔媟婺媢媞婸媦婼媥媬媕媮娷媄媊媗媃媋媩婻婽媌媜媏媓媝寪寍寋寔寑寊寎尌尰崷嵃嵫嵁嵋崿崵嵑嵎嵕崳崺嵒崽崱嵙嵂崹嵉崸崼崲崶嵀嵅幄幁彘徦徥徫惉悹惌惢惎惄愔\"],[\"d940\",\"惲愊愖愅惵愓惸惼惾惁愃愘愝愐惿愄愋扊掔掱掰揎揥揨揯揃撝揳揊揠揶揕揲揵摡揟掾揝揜揄揘揓揂揇揌揋揈揰揗揙攲敧敪敤敜敨敥斌斝斞斮旐旒\"],[\"d9a1\",\"晼晬晻暀晱晹晪晲朁椌棓椄棜椪棬棪棱椏棖棷棫棤棶椓椐棳棡椇棌椈楰梴椑棯棆椔棸棐棽棼棨椋椊椗棎棈棝棞棦棴棑椆棔棩椕椥棇欹欻欿欼殔殗殙殕殽毰毲毳氰淼湆湇渟湉溈渼渽湅湢渫渿湁湝湳渜渳湋湀湑渻渃渮湞\"],[\"da40\",\"湨湜湡渱渨湠湱湫渹渢渰湓湥渧湸湤湷湕湹湒湦渵渶湚焠焞焯烻焮焱焣焥焢焲焟焨焺焛牋牚犈犉犆犅犋猒猋猰猢猱猳猧猲猭猦猣猵猌琮琬琰琫琖\"],[\"daa1\",\"琚琡琭琱琤琣琝琩琠琲瓻甯畯畬痧痚痡痦痝痟痤痗皕皒盚睆睇睄睍睅睊睎睋睌矞矬硠硤硥硜硭硱硪确硰硩硨硞硢祴祳祲祰稂稊稃稌稄窙竦竤筊笻筄筈筌筎筀筘筅粢粞粨粡絘絯絣絓絖絧絪絏絭絜絫絒絔絩絑絟絎缾缿罥\"],[\"db40\",\"罦羢羠羡翗聑聏聐胾胔腃腊腒腏腇脽腍脺臦臮臷臸臹舄舼舽舿艵茻菏菹萣菀菨萒菧菤菼菶萐菆菈菫菣莿萁菝菥菘菿菡菋菎菖菵菉萉萏菞萑萆菂菳\"],[\"dba1\",\"菕菺菇菑菪萓菃菬菮菄菻菗菢萛菛菾蛘蛢蛦蛓蛣蛚蛪蛝蛫蛜蛬蛩蛗蛨蛑衈衖衕袺裗袹袸裀袾袶袼袷袽袲褁裉覕覘覗觝觚觛詎詍訹詙詀詗詘詄詅詒詈詑詊詌詏豟貁貀貺貾貰貹貵趄趀趉跘跓跍跇跖跜跏跕跙跈跗跅軯軷軺\"],[\"dc40\",\"軹軦軮軥軵軧軨軶軫軱軬軴軩逭逴逯鄆鄬鄄郿郼鄈郹郻鄁鄀鄇鄅鄃酡酤酟酢酠鈁鈊鈥鈃鈚鈦鈏鈌鈀鈒釿釽鈆鈄鈧鈂鈜鈤鈙鈗鈅鈖镻閍閌閐隇陾隈\"],[\"dca1\",\"隉隃隀雂雈雃雱雰靬靰靮頇颩飫鳦黹亃亄亶傽傿僆傮僄僊傴僈僂傰僁傺傱僋僉傶傸凗剺剸剻剼嗃嗛嗌嗐嗋嗊嗝嗀嗔嗄嗩喿嗒喍嗏嗕嗢嗖嗈嗲嗍嗙嗂圔塓塨塤塏塍塉塯塕塎塝塙塥塛堽塣塱壼嫇嫄嫋媺媸媱媵媰媿嫈媻嫆\"],[\"dd40\",\"媷嫀嫊媴媶嫍媹媐寖寘寙尟尳嵱嵣嵊嵥嵲嵬嵞嵨嵧嵢巰幏幎幊幍幋廅廌廆廋廇彀徯徭惷慉慊愫慅愶愲愮慆愯慏愩慀戠酨戣戥戤揅揱揫搐搒搉搠搤\"],[\"dda1\",\"搳摃搟搕搘搹搷搢搣搌搦搰搨摁搵搯搊搚摀搥搧搋揧搛搮搡搎敯斒旓暆暌暕暐暋暊暙暔晸朠楦楟椸楎楢楱椿楅楪椹楂楗楙楺楈楉椵楬椳椽楥棰楸椴楩楀楯楄楶楘楁楴楌椻楋椷楜楏楑椲楒椯楻椼歆歅歃歂歈歁殛嗀毻毼\"],[\"de40\",\"毹毷毸溛滖滈溏滀溟溓溔溠溱溹滆滒溽滁溞滉溷溰滍溦滏溲溾滃滜滘溙溒溎溍溤溡溿溳滐滊溗溮溣煇煔煒煣煠煁煝煢煲煸煪煡煂煘煃煋煰煟煐煓\"],[\"dea1\",\"煄煍煚牏犍犌犑犐犎猼獂猻猺獀獊獉瑄瑊瑋瑒瑑瑗瑀瑏瑐瑎瑂瑆瑍瑔瓡瓿瓾瓽甝畹畷榃痯瘏瘃痷痾痼痹痸瘐痻痶痭痵痽皙皵盝睕睟睠睒睖睚睩睧睔睙睭矠碇碚碔碏碄碕碅碆碡碃硹碙碀碖硻祼禂祽祹稑稘稙稒稗稕稢稓\"],[\"df40\",\"稛稐窣窢窞竫筦筤筭筴筩筲筥筳筱筰筡筸筶筣粲粴粯綈綆綀綍絿綅絺綎絻綃絼綌綔綄絽綒罭罫罧罨罬羦羥羧翛翜耡腤腠腷腜腩腛腢腲朡腞腶腧腯\"],[\"dfa1\",\"腄腡舝艉艄艀艂艅蓱萿葖葶葹蒏蒍葥葑葀蒆葧萰葍葽葚葙葴葳葝蔇葞萷萺萴葺葃葸萲葅萩菙葋萯葂萭葟葰萹葎葌葒葯蓅蒎萻葇萶萳葨葾葄萫葠葔葮葐蜋蜄蛷蜌蛺蛖蛵蝍蛸蜎蜉蜁蛶蜍蜅裖裋裍裎裞裛裚裌裐覅覛觟觥觤\"],[\"e040\",\"觡觠觢觜触詶誆詿詡訿詷誂誄詵誃誁詴詺谼豋豊豥豤豦貆貄貅賌赨赩趑趌趎趏趍趓趔趐趒跰跠跬跱跮跐跩跣跢跧跲跫跴輆軿輁輀輅輇輈輂輋遒逿\"],[\"e0a1\",\"遄遉逽鄐鄍鄏鄑鄖鄔鄋鄎酮酯鉈鉒鈰鈺鉦鈳鉥鉞銃鈮鉊鉆鉭鉬鉏鉠鉧鉯鈶鉡鉰鈱鉔鉣鉐鉲鉎鉓鉌鉖鈲閟閜閞閛隒隓隑隗雎雺雽雸雵靳靷靸靲頏頍頎颬飶飹馯馲馰馵骭骫魛鳪鳭鳧麀黽僦僔僗僨僳僛僪僝僤僓僬僰僯僣僠\"],[\"e140\",\"凘劀劁勩勫匰厬嘧嘕嘌嘒嗼嘏嘜嘁嘓嘂嗺嘝嘄嗿嗹墉塼墐墘墆墁塿塴墋塺墇墑墎塶墂墈塻墔墏壾奫嫜嫮嫥嫕嫪嫚嫭嫫嫳嫢嫠嫛嫬嫞嫝嫙嫨嫟孷寠\"],[\"e1a1\",\"寣屣嶂嶀嵽嶆嵺嶁嵷嶊嶉嶈嵾嵼嶍嵹嵿幘幙幓廘廑廗廎廜廕廙廒廔彄彃彯徶愬愨慁慞慱慳慒慓慲慬憀慴慔慺慛慥愻慪慡慖戩戧戫搫摍摛摝摴摶摲摳摽摵摦撦摎撂摞摜摋摓摠摐摿搿摬摫摙摥摷敳斠暡暠暟朅朄朢榱榶槉\"],[\"e240\",\"榠槎榖榰榬榼榑榙榎榧榍榩榾榯榿槄榽榤槔榹槊榚槏榳榓榪榡榞槙榗榐槂榵榥槆歊歍歋殞殟殠毃毄毾滎滵滱漃漥滸漷滻漮漉潎漙漚漧漘漻漒滭漊\"],[\"e2a1\",\"漶潳滹滮漭潀漰漼漵滫漇漎潃漅滽滶漹漜滼漺漟漍漞漈漡熇熐熉熀熅熂熏煻熆熁熗牄牓犗犕犓獃獍獑獌瑢瑳瑱瑵瑲瑧瑮甀甂甃畽疐瘖瘈瘌瘕瘑瘊瘔皸瞁睼瞅瞂睮瞀睯睾瞃碲碪碴碭碨硾碫碞碥碠碬碢碤禘禊禋禖禕禔禓\"],[\"e340\",\"禗禈禒禐稫穊稰稯稨稦窨窫窬竮箈箜箊箑箐箖箍箌箛箎箅箘劄箙箤箂粻粿粼粺綧綷緂綣綪緁緀緅綝緎緄緆緋緌綯綹綖綼綟綦綮綩綡緉罳翢翣翥翞\"],[\"e3a1\",\"耤聝聜膉膆膃膇膍膌膋舕蒗蒤蒡蒟蒺蓎蓂蒬蒮蒫蒹蒴蓁蓍蒪蒚蒱蓐蒝蒧蒻蒢蒔蓇蓌蒛蒩蒯蒨蓖蒘蒶蓏蒠蓗蓔蓒蓛蒰蒑虡蜳蜣蜨蝫蝀蜮蜞蜡蜙蜛蝃蜬蝁蜾蝆蜠蜲蜪蜭蜼蜒蜺蜱蜵蝂蜦蜧蜸蜤蜚蜰蜑裷裧裱裲裺裾裮裼裶裻\"],[\"e440\",\"裰裬裫覝覡覟覞觩觫觨誫誙誋誒誏誖谽豨豩賕賏賗趖踉踂跿踍跽踊踃踇踆踅跾踀踄輐輑輎輍鄣鄜鄠鄢鄟鄝鄚鄤鄡鄛酺酲酹酳銥銤鉶銛鉺銠銔銪銍\"],[\"e4a1\",\"銦銚銫鉹銗鉿銣鋮銎銂銕銢鉽銈銡銊銆銌銙銧鉾銇銩銝銋鈭隞隡雿靘靽靺靾鞃鞀鞂靻鞄鞁靿韎韍頖颭颮餂餀餇馝馜駃馹馻馺駂馽駇骱髣髧鬾鬿魠魡魟鳱鳲鳵麧僿儃儰僸儆儇僶僾儋儌僽儊劋劌勱勯噈噂噌嘵噁噊噉噆噘\"],[\"e540\",\"噚噀嘳嘽嘬嘾嘸嘪嘺圚墫墝墱墠墣墯墬墥墡壿嫿嫴嫽嫷嫶嬃嫸嬂嫹嬁嬇嬅嬏屧嶙嶗嶟嶒嶢嶓嶕嶠嶜嶡嶚嶞幩幝幠幜緳廛廞廡彉徲憋憃慹憱憰憢憉\"],[\"e5a1\",\"憛憓憯憭憟憒憪憡憍慦憳戭摮摰撖撠撅撗撜撏撋撊撌撣撟摨撱撘敶敺敹敻斲斳暵暰暩暲暷暪暯樀樆樗槥槸樕槱槤樠槿槬槢樛樝槾樧槲槮樔槷槧橀樈槦槻樍槼槫樉樄樘樥樏槶樦樇槴樖歑殥殣殢殦氁氀毿氂潁漦潾澇濆澒\"],[\"e640\",\"澍澉澌潢潏澅潚澖潶潬澂潕潲潒潐潗澔澓潝漀潡潫潽潧澐潓澋潩潿澕潣潷潪潻熲熯熛熰熠熚熩熵熝熥熞熤熡熪熜熧熳犘犚獘獒獞獟獠獝獛獡獚獙\"],[\"e6a1\",\"獢璇璉璊璆璁瑽璅璈瑼瑹甈甇畾瘥瘞瘙瘝瘜瘣瘚瘨瘛皜皝皞皛瞍瞏瞉瞈磍碻磏磌磑磎磔磈磃磄磉禚禡禠禜禢禛歶稹窲窴窳箷篋箾箬篎箯箹篊箵糅糈糌糋緷緛緪緧緗緡縃緺緦緶緱緰緮緟罶羬羰羭翭翫翪翬翦翨聤聧膣膟\"],[\"e740\",\"膞膕膢膙膗舖艏艓艒艐艎艑蔤蔻蔏蔀蔩蔎蔉蔍蔟蔊蔧蔜蓻蔫蓺蔈蔌蓴蔪蓲蔕蓷蓫蓳蓼蔒蓪蓩蔖蓾蔨蔝蔮蔂蓽蔞蓶蔱蔦蓧蓨蓰蓯蓹蔘蔠蔰蔋蔙蔯虢\"],[\"e7a1\",\"蝖蝣蝤蝷蟡蝳蝘蝔蝛蝒蝡蝚蝑蝞蝭蝪蝐蝎蝟蝝蝯蝬蝺蝮蝜蝥蝏蝻蝵蝢蝧蝩衚褅褌褔褋褗褘褙褆褖褑褎褉覢覤覣觭觰觬諏諆誸諓諑諔諕誻諗誾諀諅諘諃誺誽諙谾豍貏賥賟賙賨賚賝賧趠趜趡趛踠踣踥踤踮踕踛踖踑踙踦踧\"],[\"e840\",\"踔踒踘踓踜踗踚輬輤輘輚輠輣輖輗遳遰遯遧遫鄯鄫鄩鄪鄲鄦鄮醅醆醊醁醂醄醀鋐鋃鋄鋀鋙銶鋏鋱鋟鋘鋩鋗鋝鋌鋯鋂鋨鋊鋈鋎鋦鋍鋕鋉鋠鋞鋧鋑鋓\"],[\"e8a1\",\"銵鋡鋆銴镼閬閫閮閰隤隢雓霅霈霂靚鞊鞎鞈韐韏頞頝頦頩頨頠頛頧颲餈飺餑餔餖餗餕駜駍駏駓駔駎駉駖駘駋駗駌骳髬髫髳髲髱魆魃魧魴魱魦魶魵魰魨魤魬鳼鳺鳽鳿鳷鴇鴀鳹鳻鴈鴅鴄麃黓鼏鼐儜儓儗儚儑凞匴叡噰噠噮\"],[\"e940\",\"噳噦噣噭噲噞噷圜圛壈墽壉墿墺壂墼壆嬗嬙嬛嬡嬔嬓嬐嬖嬨嬚嬠嬞寯嶬嶱嶩嶧嶵嶰嶮嶪嶨嶲嶭嶯嶴幧幨幦幯廩廧廦廨廥彋徼憝憨憖懅憴懆懁懌憺\"],[\"e9a1\",\"憿憸憌擗擖擐擏擉撽撉擃擛擳擙攳敿敼斢曈暾曀曊曋曏暽暻暺曌朣樴橦橉橧樲橨樾橝橭橶橛橑樨橚樻樿橁橪橤橐橏橔橯橩橠樼橞橖橕橍橎橆歕歔歖殧殪殫毈毇氄氃氆澭濋澣濇澼濎濈潞濄澽澞濊澨瀄澥澮澺澬澪濏澿澸\"],[\"ea40\",\"澢濉澫濍澯澲澰燅燂熿熸燖燀燁燋燔燊燇燏熽燘熼燆燚燛犝犞獩獦獧獬獥獫獪瑿璚璠璔璒璕璡甋疀瘯瘭瘱瘽瘳瘼瘵瘲瘰皻盦瞚瞝瞡瞜瞛瞢瞣瞕瞙\"],[\"eaa1\",\"瞗磝磩磥磪磞磣磛磡磢磭磟磠禤穄穈穇窶窸窵窱窷篞篣篧篝篕篥篚篨篹篔篪篢篜篫篘篟糒糔糗糐糑縒縡縗縌縟縠縓縎縜縕縚縢縋縏縖縍縔縥縤罃罻罼罺羱翯耪耩聬膱膦膮膹膵膫膰膬膴膲膷膧臲艕艖艗蕖蕅蕫蕍蕓蕡蕘\"],[\"eb40\",\"蕀蕆蕤蕁蕢蕄蕑蕇蕣蔾蕛蕱蕎蕮蕵蕕蕧蕠薌蕦蕝蕔蕥蕬虣虥虤螛螏螗螓螒螈螁螖螘蝹螇螣螅螐螑螝螄螔螜螚螉褞褦褰褭褮褧褱褢褩褣褯褬褟觱諠\"],[\"eba1\",\"諢諲諴諵諝謔諤諟諰諈諞諡諨諿諯諻貑貒貐賵賮賱賰賳赬赮趥趧踳踾踸蹀蹅踶踼踽蹁踰踿躽輶輮輵輲輹輷輴遶遹遻邆郺鄳鄵鄶醓醐醑醍醏錧錞錈錟錆錏鍺錸錼錛錣錒錁鍆錭錎錍鋋錝鋺錥錓鋹鋷錴錂錤鋿錩錹錵錪錔錌\"],[\"ec40\",\"錋鋾錉錀鋻錖閼闍閾閹閺閶閿閵閽隩雔霋霒霐鞙鞗鞔韰韸頵頯頲餤餟餧餩馞駮駬駥駤駰駣駪駩駧骹骿骴骻髶髺髹髷鬳鮀鮅鮇魼魾魻鮂鮓鮒鮐魺鮕\"],[\"eca1\",\"魽鮈鴥鴗鴠鴞鴔鴩鴝鴘鴢鴐鴙鴟麈麆麇麮麭黕黖黺鼒鼽儦儥儢儤儠儩勴嚓嚌嚍嚆嚄嚃噾嚂噿嚁壖壔壏壒嬭嬥嬲嬣嬬嬧嬦嬯嬮孻寱寲嶷幬幪徾徻懃憵憼懧懠懥懤懨懞擯擩擣擫擤擨斁斀斶旚曒檍檖檁檥檉檟檛檡檞檇檓檎\"],[\"ed40\",\"檕檃檨檤檑橿檦檚檅檌檒歛殭氉濌澩濴濔濣濜濭濧濦濞濲濝濢濨燡燱燨燲燤燰燢獳獮獯璗璲璫璐璪璭璱璥璯甐甑甒甏疄癃癈癉癇皤盩瞵瞫瞲瞷瞶\"],[\"eda1\",\"瞴瞱瞨矰磳磽礂磻磼磲礅磹磾礄禫禨穜穛穖穘穔穚窾竀竁簅簏篲簀篿篻簎篴簋篳簂簉簃簁篸篽簆篰篱簐簊糨縭縼繂縳顈縸縪繉繀繇縩繌縰縻縶繄縺罅罿罾罽翴翲耬膻臄臌臊臅臇膼臩艛艚艜薃薀薏薧薕薠薋薣蕻薤薚薞\"],[\"ee40\",\"蕷蕼薉薡蕺蕸蕗薎薖薆薍薙薝薁薢薂薈薅蕹蕶薘薐薟虨螾螪螭蟅螰螬螹螵螼螮蟉蟃蟂蟌螷螯蟄蟊螴螶螿螸螽蟞螲褵褳褼褾襁襒褷襂覭覯覮觲觳謞\"],[\"eea1\",\"謘謖謑謅謋謢謏謒謕謇謍謈謆謜謓謚豏豰豲豱豯貕貔賹赯蹎蹍蹓蹐蹌蹇轃轀邅遾鄸醚醢醛醙醟醡醝醠鎡鎃鎯鍤鍖鍇鍼鍘鍜鍶鍉鍐鍑鍠鍭鎏鍌鍪鍹鍗鍕鍒鍏鍱鍷鍻鍡鍞鍣鍧鎀鍎鍙闇闀闉闃闅閷隮隰隬霠霟霘霝霙鞚鞡鞜\"],[\"ef40\",\"鞞鞝韕韔韱顁顄顊顉顅顃餥餫餬餪餳餲餯餭餱餰馘馣馡騂駺駴駷駹駸駶駻駽駾駼騃骾髾髽鬁髼魈鮚鮨鮞鮛鮦鮡鮥鮤鮆鮢鮠鮯鴳鵁鵧鴶鴮鴯鴱鴸鴰\"],[\"efa1\",\"鵅鵂鵃鴾鴷鵀鴽翵鴭麊麉麍麰黈黚黻黿鼤鼣鼢齔龠儱儭儮嚘嚜嚗嚚嚝嚙奰嬼屩屪巀幭幮懘懟懭懮懱懪懰懫懖懩擿攄擽擸攁攃擼斔旛曚曛曘櫅檹檽櫡櫆檺檶檷櫇檴檭歞毉氋瀇瀌瀍瀁瀅瀔瀎濿瀀濻瀦濼濷瀊爁燿燹爃燽獶\"],[\"f040\",\"璸瓀璵瓁璾璶璻瓂甔甓癜癤癙癐癓癗癚皦皽盬矂瞺磿礌礓礔礉礐礒礑禭禬穟簜簩簙簠簟簭簝簦簨簢簥簰繜繐繖繣繘繢繟繑繠繗繓羵羳翷翸聵臑臒\"],[\"f0a1\",\"臐艟艞薴藆藀藃藂薳薵薽藇藄薿藋藎藈藅薱薶藒蘤薸薷薾虩蟧蟦蟢蟛蟫蟪蟥蟟蟳蟤蟔蟜蟓蟭蟘蟣螤蟗蟙蠁蟴蟨蟝襓襋襏襌襆襐襑襉謪謧謣謳謰謵譇謯謼謾謱謥謷謦謶謮謤謻謽謺豂豵貙貘貗賾贄贂贀蹜蹢蹠蹗蹖蹞蹥蹧\"],[\"f140\",\"蹛蹚蹡蹝蹩蹔轆轇轈轋鄨鄺鄻鄾醨醥醧醯醪鎵鎌鎒鎷鎛鎝鎉鎧鎎鎪鎞鎦鎕鎈鎙鎟鎍鎱鎑鎲鎤鎨鎴鎣鎥闒闓闑隳雗雚巂雟雘雝霣霢霥鞬鞮鞨鞫鞤鞪\"],[\"f1a1\",\"鞢鞥韗韙韖韘韺顐顑顒颸饁餼餺騏騋騉騍騄騑騊騅騇騆髀髜鬈鬄鬅鬩鬵魊魌魋鯇鯆鯃鮿鯁鮵鮸鯓鮶鯄鮹鮽鵜鵓鵏鵊鵛鵋鵙鵖鵌鵗鵒鵔鵟鵘鵚麎麌黟鼁鼀鼖鼥鼫鼪鼩鼨齌齕儴儵劖勷厴嚫嚭嚦嚧嚪嚬壚壝壛夒嬽嬾嬿巃幰\"],[\"f240\",\"徿懻攇攐攍攉攌攎斄旞旝曞櫧櫠櫌櫑櫙櫋櫟櫜櫐櫫櫏櫍櫞歠殰氌瀙瀧瀠瀖瀫瀡瀢瀣瀩瀗瀤瀜瀪爌爊爇爂爅犥犦犤犣犡瓋瓅璷瓃甖癠矉矊矄矱礝礛\"],[\"f2a1\",\"礡礜礗礞禰穧穨簳簼簹簬簻糬糪繶繵繸繰繷繯繺繲繴繨罋罊羃羆羷翽翾聸臗臕艤艡艣藫藱藭藙藡藨藚藗藬藲藸藘藟藣藜藑藰藦藯藞藢蠀蟺蠃蟶蟷蠉蠌蠋蠆蟼蠈蟿蠊蠂襢襚襛襗襡襜襘襝襙覈覷覶觶譐譈譊譀譓譖譔譋譕\"],[\"f340\",\"譑譂譒譗豃豷豶貚贆贇贉趬趪趭趫蹭蹸蹳蹪蹯蹻軂轒轑轏轐轓辴酀鄿醰醭鏞鏇鏏鏂鏚鏐鏹鏬鏌鏙鎩鏦鏊鏔鏮鏣鏕鏄鏎鏀鏒鏧镽闚闛雡霩霫霬霨霦\"],[\"f3a1\",\"鞳鞷鞶韝韞韟顜顙顝顗颿颽颻颾饈饇饃馦馧騚騕騥騝騤騛騢騠騧騣騞騜騔髂鬋鬊鬎鬌鬷鯪鯫鯠鯞鯤鯦鯢鯰鯔鯗鯬鯜鯙鯥鯕鯡鯚鵷鶁鶊鶄鶈鵱鶀鵸鶆鶋鶌鵽鵫鵴鵵鵰鵩鶅鵳鵻鶂鵯鵹鵿鶇鵨麔麑黀黼鼭齀齁齍齖齗齘匷嚲\"],[\"f440\",\"嚵嚳壣孅巆巇廮廯忀忁懹攗攖攕攓旟曨曣曤櫳櫰櫪櫨櫹櫱櫮櫯瀼瀵瀯瀷瀴瀱灂瀸瀿瀺瀹灀瀻瀳灁爓爔犨獽獼璺皫皪皾盭矌矎矏矍矲礥礣礧礨礤礩\"],[\"f4a1\",\"禲穮穬穭竷籉籈籊籇籅糮繻繾纁纀羺翿聹臛臙舋艨艩蘢藿蘁藾蘛蘀藶蘄蘉蘅蘌藽蠙蠐蠑蠗蠓蠖襣襦覹觷譠譪譝譨譣譥譧譭趮躆躈躄轙轖轗轕轘轚邍酃酁醷醵醲醳鐋鐓鏻鐠鐏鐔鏾鐕鐐鐨鐙鐍鏵鐀鏷鐇鐎鐖鐒鏺鐉鏸鐊鏿\"],[\"f540\",\"鏼鐌鏶鐑鐆闞闠闟霮霯鞹鞻韽韾顠顢顣顟飁飂饐饎饙饌饋饓騲騴騱騬騪騶騩騮騸騭髇髊髆鬐鬒鬑鰋鰈鯷鰅鰒鯸鱀鰇鰎鰆鰗鰔鰉鶟鶙鶤鶝鶒鶘鶐鶛\"],[\"f5a1\",\"鶠鶔鶜鶪鶗鶡鶚鶢鶨鶞鶣鶿鶩鶖鶦鶧麙麛麚黥黤黧黦鼰鼮齛齠齞齝齙龑儺儹劘劗囃嚽嚾孈孇巋巏廱懽攛欂櫼欃櫸欀灃灄灊灈灉灅灆爝爚爙獾甗癪矐礭礱礯籔籓糲纊纇纈纋纆纍罍羻耰臝蘘蘪蘦蘟蘣蘜蘙蘧蘮蘡蘠蘩蘞蘥\"],[\"f640\",\"蠩蠝蠛蠠蠤蠜蠫衊襭襩襮襫觺譹譸譅譺譻贐贔趯躎躌轞轛轝酆酄酅醹鐿鐻鐶鐩鐽鐼鐰鐹鐪鐷鐬鑀鐱闥闤闣霵霺鞿韡顤飉飆飀饘饖騹騽驆驄驂驁騺\"],[\"f6a1\",\"騿髍鬕鬗鬘鬖鬺魒鰫鰝鰜鰬鰣鰨鰩鰤鰡鶷鶶鶼鷁鷇鷊鷏鶾鷅鷃鶻鶵鷎鶹鶺鶬鷈鶱鶭鷌鶳鷍鶲鹺麜黫黮黭鼛鼘鼚鼱齎齥齤龒亹囆囅囋奱孋孌巕巑廲攡攠攦攢欋欈欉氍灕灖灗灒爞爟犩獿瓘瓕瓙瓗癭皭礵禴穰穱籗籜籙籛籚\"],[\"f740\",\"糴糱纑罏羇臞艫蘴蘵蘳蘬蘲蘶蠬蠨蠦蠪蠥襱覿覾觻譾讄讂讆讅譿贕躕躔躚躒躐躖躗轠轢酇鑌鑐鑊鑋鑏鑇鑅鑈鑉鑆霿韣顪顩飋饔饛驎驓驔驌驏驈驊\"],[\"f7a1\",\"驉驒驐髐鬙鬫鬻魖魕鱆鱈鰿鱄鰹鰳鱁鰼鰷鰴鰲鰽鰶鷛鷒鷞鷚鷋鷐鷜鷑鷟鷩鷙鷘鷖鷵鷕鷝麶黰鼵鼳鼲齂齫龕龢儽劙壨壧奲孍巘蠯彏戁戃戄攩攥斖曫欑欒欏毊灛灚爢玂玁玃癰矔籧籦纕艬蘺虀蘹蘼蘱蘻蘾蠰蠲蠮蠳襶襴襳觾\"],[\"f840\",\"讌讎讋讈豅贙躘轤轣醼鑢鑕鑝鑗鑞韄韅頀驖驙鬞鬟鬠鱒鱘鱐鱊鱍鱋鱕鱙鱌鱎鷻鷷鷯鷣鷫鷸鷤鷶鷡鷮鷦鷲鷰鷢鷬鷴鷳鷨鷭黂黐黲黳鼆鼜鼸鼷鼶齃齏\"],[\"f8a1\",\"齱齰齮齯囓囍孎屭攭曭曮欓灟灡灝灠爣瓛瓥矕礸禷禶籪纗羉艭虃蠸蠷蠵衋讔讕躞躟躠躝醾醽釂鑫鑨鑩雥靆靃靇韇韥驞髕魙鱣鱧鱦鱢鱞鱠鸂鷾鸇鸃鸆鸅鸀鸁鸉鷿鷽鸄麠鼞齆齴齵齶囔攮斸欘欙欗欚灢爦犪矘矙礹籩籫糶纚\"],[\"f940\",\"纘纛纙臠臡虆虇虈襹襺襼襻觿讘讙躥躤躣鑮鑭鑯鑱鑳靉顲饟鱨鱮鱭鸋鸍鸐鸏鸒鸑麡黵鼉齇齸齻齺齹圞灦籯蠼趲躦釃鑴鑸鑶鑵驠鱴鱳鱱鱵鸔鸓黶鼊\"],[\"f9a1\",\"龤灨灥糷虪蠾蠽蠿讞貜躩軉靋顳顴飌饡馫驤驦驧鬤鸕鸗齈戇欞爧虌躨钂钀钁驩驨鬮鸙爩虋讟钃鱹麷癵驫鱺鸝灩灪麤齾齉龘碁銹裏墻恒粧嫺╔╦╗╠╬╣╚╩╝╒╤╕╞╪╡╘╧╛╓╥╖╟╫╢╙╨╜║═╭╮╰╯▓\"]]' ); }, 8707: function (e, t, r) { var i = r(\"1c35\"), n = i.Buffer; function a(e, t) { for (var r in e) t[r] = e[r]; } function o(e, t, r) { return n(e, t, r); } n.from && n.alloc && n.allocUnsafe && n.allocUnsafeSlow ? (e.exports = i) : (a(i, t), (t.Buffer = o)), a(n, o), (o.from = function (e, t, r) { if (\"number\" === typeof e) throw new TypeError(\"Argument must not be a number\"); return n(e, t, r); }), (o.alloc = function (e, t, r) { if (\"number\" !== typeof e) throw new TypeError(\"Argument must be a number\"); var i = n(e); return ( void 0 !== t ? \"string\" === typeof r ? i.fill(t, r) : i.fill(t) : i.fill(0), i ); }), (o.allocUnsafe = function (e) { if (\"number\" !== typeof e) throw new TypeError(\"Argument must be a number\"); return n(e); }), (o.allocUnsafeSlow = function (e) { if (\"number\" !== typeof e) throw new TypeError(\"Argument must be a number\"); return i.SlowBuffer(e); }); }, 8737: function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.FactChunk = t.Format = t.WaveFormat = void 0), (function (e) { (e[(e[\"PCM\"] = 1)] = \"PCM\"), (e[(e[\"ADPCM\"] = 2)] = \"ADPCM\"), (e[(e[\"IEEE_FLOAT\"] = 3)] = \"IEEE_FLOAT\"), (e[(e[\"MPEG_ADTS_AAC\"] = 5632)] = \"MPEG_ADTS_AAC\"), (e[(e[\"MPEG_LOAS\"] = 5634)] = \"MPEG_LOAS\"), (e[(e[\"RAW_AAC1\"] = 255)] = \"RAW_AAC1\"), (e[(e[\"DOLBY_AC3_SPDIF\"] = 146)] = \"DOLBY_AC3_SPDIF\"), (e[(e[\"DVM\"] = 8192)] = \"DVM\"), (e[(e[\"RAW_SPORT\"] = 576)] = \"RAW_SPORT\"), (e[(e[\"ESST_AC3\"] = 577)] = \"ESST_AC3\"), (e[(e[\"DRM\"] = 9)] = \"DRM\"), (e[(e[\"DTS2\"] = 8193)] = \"DTS2\"), (e[(e[\"MPEG\"] = 80)] = \"MPEG\"); })(t.WaveFormat || (t.WaveFormat = {})); class i { constructor(e) { if (e.chunkSize < 16) throw new Error(\"Invalid chunk size\"); this.len = e.chunkSize; } get(e, t) { return { wFormatTag: e.readUInt16LE(t), nChannels: e.readUInt16LE(t + 2), nSamplesPerSec: e.readUInt32LE(t + 4), nAvgBytesPerSec: e.readUInt32LE(t + 8), nBlockAlign: e.readUInt16LE(t + 12), wBitsPerSample: e.readUInt16LE(t + 14), }; } } t.Format = i; class n { constructor(e) { if (e.chunkSize < 4) throw new Error(\"Invalid fact chunk size.\"); this.len = e.chunkSize; } get(e, t) { return { dwSampleLength: e.readUInt32LE(t) }; } } t.FactChunk = n; }, 8866: function (e, t, r) { (function (t, i, n, a) { var o = (function () { var e = \"undefined\" !== typeof document && document.currentScript ? document.currentScript.src : void 0; return ( (e = e || t), function (t) { t = t || {}; var o, s, c = \"undefined\" !== typeof t ? t : {}; c[\"ready\"] = new Promise(function (e, t) { (o = e), (s = t); }); var u, A = {}; for (u in c) c.hasOwnProperty(u) && (A[u] = c[u]); var f, l, h, d, g, p = [], m = \"object\" === typeof window, b = \"function\" === typeof importScripts, I = \"object\" === typeof i && \"object\" === typeof i.versions && \"string\" === typeof i.versions.node, E = \"\"; function y(e) { return c[\"locateFile\"] ? c[\"locateFile\"](e, E) : E + e; } function B(e) { if (!(e instanceof Ut)) { var t = e; w(\"exiting due to exception: \" + t); } } I ? ((E = b ? r(\"df7c\").dirname(E) + \"/\" : n + \"/\"), (f = function (e, t) { var i = Rt(e); return i ? t ? i : i.toString() : (d || (d = r(\"3e8f\")), g || (g = r(\"df7c\")), (e = g[\"normalize\"](e)), d[\"readFileSync\"](e, t ? null : \"utf8\")); }), (h = function (e) { var t = f(e, !0); return t.buffer || (t = new Uint8Array(t)), S(t.buffer), t; }), (l = function (e, t, i) { var n = Rt(e); n && t(n), d || (d = r(\"3e8f\")), g || (g = r(\"df7c\")), (e = g[\"normalize\"](e)), d[\"readFile\"](e, function (e, r) { e ? i(e) : t(r.buffer); }); }), i[\"argv\"].length > 1 && i[\"argv\"][1].replace(/\\\\/g, \"/\"), (p = i[\"argv\"].slice(2)), i[\"on\"](\"uncaughtException\", function (e) { if (!(e instanceof Ut)) throw e; }), i[\"on\"](\"unhandledRejection\", function (e) { throw e; }), function (e, t) { if (ae()) throw ((i[\"exitCode\"] = e), t); B(t), i[\"exit\"](e); }, (c[\"inspect\"] = function () { return \"[Emscripten Module object]\"; })) : (m || b) && (b ? (E = self.location.href) : \"undefined\" !== typeof document && document.currentScript && (E = document.currentScript.src), e && (E = e), (E = 0 !== E.indexOf(\"blob:\") ? E.substr(0, E.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1) : \"\"), (f = function (e) { try { var t = new XMLHttpRequest(); return t.open(\"GET\", e, !1), t.send(null), t.responseText; } catch (w) { var r = Rt(e); if (r) return Tt(r); throw w; } }), b && (h = function (e) { try { var t = new XMLHttpRequest(); return ( t.open(\"GET\", e, !1), (t.responseType = \"arraybuffer\"), t.send(null), new Uint8Array(t.response) ); } catch (w) { var r = Rt(e); if (r) return r; throw w; } }), (l = function (e, t, r) { var i = new XMLHttpRequest(); i.open(\"GET\", e, !0), (i.responseType = \"arraybuffer\"), (i.onload = function () { if (200 == i.status || (0 == i.status && i.response)) t(i.response); else { var n = Rt(e); n ? t(n.buffer) : r(); } }), (i.onerror = r), i.send(null); })); c[\"print\"] || console.log.bind(console); var v, w = c[\"printErr\"] || console.warn.bind(console); for (u in A) A.hasOwnProperty(u) && (c[u] = A[u]); (A = null), c[\"arguments\"] && (p = c[\"arguments\"]), c[\"thisProgram\"] && c[\"thisProgram\"], c[\"quit\"] && c[\"quit\"], c[\"wasmBinary\"] && (v = c[\"wasmBinary\"]); var C, _ = c[\"noExitRuntime\"] || !0; function Q(e, t, r) { switch ( ((t = t || \"i8\"), \"*\" === t.charAt(t.length - 1) && (t = \"i32\"), t) ) { case \"i1\": return L[e >> 0]; case \"i8\": return L[e >> 0]; case \"i16\": return P[e >> 1]; case \"i32\": return G[e >> 2]; case \"i64\": return G[e >> 2]; case \"float\": return j[e >> 2]; case \"double\": return Number(H[e >> 3]); default: me(\"invalid type for getValue: \" + t); } return null; } \"object\" !== typeof WebAssembly && me(\"no native wasm support detected\"); var k = !1; function S(e, t) { e || me(\"Assertion failed: \" + t); } var x = \"undefined\" !== typeof TextDecoder ? new TextDecoder(\"utf8\") : void 0; function T(e, t, r) { var i = t + r, n = t; while (e[n] && !(n >= i)) ++n; if (n - t > 16 && e.subarray && x) return x.decode(e.subarray(t, n)); var a = \"\"; while (t < n) { var o = e[t++]; if (128 & o) { var s = 63 & e[t++]; if (192 != (224 & o)) { var c = 63 & e[t++]; if ( ((o = 224 == (240 & o) ? ((15 & o) < 12) | (s < 6) | c : ((7 & o) < 18) | (s < 12) | (c < 6) | (63 & e[t++])), o < 65536) ) a += String.fromCharCode(o); else { var u = o - 65536; a += String.fromCharCode( 55296 | (u >> 10), 56320 | (1023 & u) ); } } else a += String.fromCharCode(((31 & o) < 6) | s); } else a += String.fromCharCode(o); } return a; } function D(e, t) { return e ? T(O, e, t) : \"\"; } function M(e, t, r, i) { if (!(i > 0)) return 0; for (var n = r, a = r + i - 1, o = 0; o < e.length; ++o) { var s = e.charCodeAt(o); if (s >= 55296 && s 18)), (t[r++] = 128 | ((s >> 12) & 63)), (t[r++] = 128 | ((s >> 6) & 63)), (t[r++] = 128 | (63 & s)); } } return (t[r] = 0), r - n; } function R(e, t, r) { return M(e, O, t, r); } function N(e) { for (var t = 0, r = 0; r < e.length; ++r) { var i = e.charCodeAt(r); i >= 55296 && i 1] = 0), t - i; } function q(e) { return 2 * e.length; } function K(e, t) { var r = 0, i = \"\"; while (!(r >= t / 4)) { var n = G[(e + 4 * r) >> 2]; if (0 == n) break; if ((++r, n >= 65536)) { var a = n - 65536; i += String.fromCharCode( 55296 | (a >> 10), 56320 | (1023 & a) ); } else i += String.fromCharCode(n); } return i; } function X(e, t, r) { if ((void 0 === r && (r = 2147483647), r < 4)) return 0; for (var i = t, n = i + r - 4, a = 0; a < e.length; ++a) { var o = e.charCodeAt(a); if (o >= 55296 && o n)) break; } return (G[t >> 2] = 0), t - i; } function Z(e) { for (var t = 0, r = 0; r < e.length; ++r) { var i = e.charCodeAt(r); i >= 55296 && i 0; } function oe() { if (c[\"preRun\"]) { \"function\" == typeof c[\"preRun\"] && (c[\"preRun\"] = [c[\"preRun\"]]); while (c[\"preRun\"].length) ue(c[\"preRun\"].shift()); } Ce(te); } function se() { !0, Ce(re); } function ce() { if (c[\"postRun\"]) { \"function\" == typeof c[\"postRun\"] && (c[\"postRun\"] = [c[\"postRun\"]]); while (c[\"postRun\"].length) fe(c[\"postRun\"].shift()); } Ce(ie); } function ue(e) { te.unshift(e); } function Ae(e) { re.unshift(e); } function fe(e) { ie.unshift(e); } var le = 0, he = null, de = null; function ge(e) { le++, c[\"monitorRunDependencies\"] && c[\"monitorRunDependencies\"](le); } function pe(e) { if ( (le--, c[\"monitorRunDependencies\"] && c[\"monitorRunDependencies\"](le), 0 == le && (null !== he && (clearInterval(he), (he = null)), de)) ) { var t = de; (de = null), t(); } } function me(e) { c[\"onAbort\"] && c[\"onAbort\"](e), (e = \"Aborted(\" + e + \")\"), w(e), (k = !0), 1, (e += \". Build with -s ASSERTIONS=1 for more info.\"); var t = new WebAssembly.RuntimeError(e); throw (s(t), t); } (c[\"preloadedImages\"] = {}), (c[\"preloadedAudios\"] = {}); var be, Ie = \"data:application/octet-stream;base64,\"; function Ee(e) { return e.startsWith(Ie); } function ye(e) { return e.startsWith(\"file://\"); } function Be(e) { try { if (e == be && v) return new Uint8Array(v); var t = Rt(e); if (t) return t; if (h) return h(e); throw \"both async and sync fetching of the wasm failed\"; } catch (w) { me(w); } } function ve() { if (!v && (m || b)) { if (\"function\" === typeof fetch && !ye(be)) return fetch(be, { credentials: \"same-origin\" }) .then(function (e) { if (!e[\"ok\"]) throw \"failed to load wasm binary file at '\" + be + \"'\"; return e[\"arrayBuffer\"](); }) .catch(function () { return Be(be); }); if (l) return new Promise(function (e, t) { l( be, function (t) { e(new Uint8Array(t)); }, t ); }); } return Promise.resolve().then(function () { return Be(be); }); } function we() { var e = { a: Ft }; function t(e, t) { var r = e.exports; (c[\"asm\"] = r), (C = c[\"asm\"][\"n\"]), $(C.buffer), (ee = c[\"asm\"][\"p\"]), Ae(c[\"asm\"][\"o\"]), pe(\"wasm-instantiate\"); } function r(e) { t(e[\"instance\"]); } function i(t) { return ve() .then(function (t) { return WebAssembly.instantiate(t, e); }) .then(function (e) { return e; }) .then(t, function (e) { w(\"failed to asynchronously prepare wasm: \" + e), me(e); }); } function n() { return v || \"function\" !== typeof WebAssembly.instantiateStreaming || Ee(be) || ye(be) || \"function\" !== typeof fetch ? i(r) : fetch(be, { credentials: \"same-origin\" }).then(function ( t ) { var n = WebAssembly.instantiateStreaming(t, e); return n.then(r, function (e) { return ( w(\"wasm streaming compile failed: \" + e), w(\"falling back to ArrayBuffer instantiation\"), i(r) ); }); }); } if ((ge(\"wasm-instantiate\"), c[\"instantiateWasm\"])) try { var a = c[\"instantiateWasm\"](e, t); return a; } catch (o) { return ( w( \"Module.instantiateWasm callback failed with error: \" + o ), !1 ); } return n().catch(s), {}; } function Ce(e) { while (e.length > 0) { var t = e.shift(); if (\"function\" != typeof t) { var r = t.func; \"number\" === typeof r ? void 0 === t.arg ? Qe(r)() : Qe(r)(t.arg) : r(void 0 === t.arg ? null : t.arg); } else t(c); } } (be = \"data:application/octet-stream;base64,\"), Ee(be) || (be = y(be)); var _e = []; function Qe(e) { var t = _e[e]; return ( t || (e >= _e.length && (_e.length = e + 1), (_e[e] = t = ee.get(e))), t ); } function ke(e, t, r, i, n) {} function Se(e) { switch (e) { case 1: return 0; case 2: return 1; case 4: return 2; case 8: return 3; default: throw new TypeError(\"Unknown type size: \" + e); } } function xe() { for (var e = new Array(256), t = 0; t < 256; ++t) e[t] = String.fromCharCode(t); Te = e; } var Te = void 0; function De(e) { var t = \"\", r = e; while (O[r]) t += Te[O[r++]]; return t; } var Me = {}, Re = {}, Ne = {}, Fe = 48, Le = 57; function Oe(e) { if (void 0 === e) return \"_unknown\"; e = e.replace(/[^a-zA-Z0-9_]/g, \"$\"); var t = e.charCodeAt(0); return t >= Fe && t a]); }, destructorFunction: null, }); } var qe = [], Ke = [ {}, { value: void 0 }, { value: null }, { value: !0 }, { value: !1 }, ]; function Xe(e) { e > 4 && 0 === --Ke[e].refcount && ((Ke[e] = void 0), qe.push(e)); } function Ze() { for (var e = 0, t = 5; t < Ke.length; ++t) void 0 !== Ke[t] && ++e; return e; } function Ve() { for (var e = 5; e < Ke.length; ++e) if (void 0 !== Ke[e]) return Ke[e]; return null; } function $e() { (c[\"count_emval_handles\"] = Ze), (c[\"get_first_emval\"] = Ve); } var et = { toValue: function (e) { return ( e || ze(\"Cannot use deleted val. handle = \" + e), Ke[e].value ); }, toHandle: function (e) { switch (e) { case void 0: return 1; case null: return 2; case !0: return 3; case !1: return 4; default: var t = qe.length ? qe.pop() : Ke.length; return (Ke[t] = { refcount: 1, value: e }), t; } }, }; function tt(e) { return this[\"fromWireType\"](z[e >> 2]); } function rt(e, t) { (t = De(t)), We(e, { name: t, fromWireType: function (e) { var t = et.toValue(e); return Xe(e), t; }, toWireType: function (e, t) { return et.toHandle(t); }, argPackAdvance: 8, readValueFromPointer: tt, destructorFunction: null, }); } function it(e) { if (null === e) return \"null\"; var t = typeof e; return \"object\" === t || \"array\" === t || \"function\" === t ? e.toString() : \"\" + e; } function nt(e, t) { switch (t) { case 2: return function (e) { return this[\"fromWireType\"](j[e >> 2]); }; case 3: return function (e) { return this[\"fromWireType\"](H[e >> 3]); }; default: throw new TypeError(\"Unknown float type: \" + e); } } function at(e, t, r) { var i = Se(r); (t = De(t)), We(e, { name: t, fromWireType: function (e) { return e; }, toWireType: function (e, t) { return t; }, argPackAdvance: 8, readValueFromPointer: nt(t, i), destructorFunction: null, }); } function ot(e) { while (e.length) { var t = e.pop(), r = e.pop(); r(t); } } function st(e, t, r, i, n) { var a = t.length; a < 2 && ze( \"argTypes array size mismatch! Must at least get return value and 'this' types!\" ); for ( var o = null !== t[1] && null !== r, s = !1, c = 1; c < t.length; ++c ) if (null !== t[c] && void 0 === t[c].destructorFunction) { s = !0; break; } var u = \"void\" !== t[0].name, A = a - 2, f = new Array(A), l = [], h = []; return function () { var r; arguments.length !== A && ze( \"function \" + e + \" called with \" + arguments.length + \" arguments, expected \" + A + \" args!\" ), (h.length = 0), (l.length = o ? 2 : 1), (l[0] = n), o && ((r = t[1].toWireType(h, this)), (l[1] = r)); for (var a = 0; a < A; ++a) (f[a] = t[a + 2].toWireType(h, arguments[a])), l.push(f[a]); var c = i.apply(null, l); function d(e) { if (s) ot(h); else for (var i = o ? 1 : 2; i < t.length; i++) { var n = 1 === i ? r : f[i - 2]; null !== t[i].destructorFunction && t[i].destructorFunction(n); } if (u) return t[0].fromWireType(e); } return d(c); }; } function ct(e, t, r) { if (void 0 === e[t].overloadTable) { var i = e[t]; (e[t] = function () { return ( e[t].overloadTable.hasOwnProperty(arguments.length) || ze( \"Function '\" + r + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + e[t].overloadTable + \")!\" ), e[t].overloadTable[arguments.length].apply(this, arguments) ); }), (e[t].overloadTable = []), (e[t].overloadTable[i.argCount] = i); } } function ut(e, t, r) { c.hasOwnProperty(e) ? ((void 0 === r || (void 0 !== c[e].overloadTable && void 0 !== c[e].overloadTable[r])) && ze(\"Cannot register public name '\" + e + \"' twice\"), ct(c, e, e), c.hasOwnProperty(r) && ze( \"Cannot register multiple overloads of a function with the same number of arguments (\" + r + \")!\" ), (c[e].overloadTable[r] = t)) : ((c[e] = t), void 0 !== r && (c[e].numArguments = r)); } function At(e, t) { for (var r = [], i = 0; i < e; i++) r.push(G[(t >> 2) + i]); return r; } function ft(e, t, r) { c.hasOwnProperty(e) || He(\"Replacing nonexistant public symbol\"), void 0 !== c[e].overloadTable && void 0 !== r ? (c[e].overloadTable[r] = t) : ((c[e] = t), (c[e].argCount = r)); } function lt(e, t, r) { var i = c[\"dynCall_\" + e]; return r && r.length ? i.apply(null, [t].concat(r)) : i.call(null, t); } function ht(e, t, r) { return e.includes(\"j\") ? lt(e, t, r) : Qe(t).apply(null, r); } function dt(e, t) { var r = []; return function () { r.length = arguments.length; for (var i = 0; i < arguments.length; i++) r[i] = arguments[i]; return ht(e, t, r); }; } function gt(e, t) { function r() { return e.includes(\"j\") ? dt(e, t) : Qe(t); } e = De(e); var i = r(); return ( \"function\" !== typeof i && ze(\"unknown function pointer with signature \" + e + \": \" + t), i ); } var pt = void 0; function mt(e) { var t = Lt(e), r = De(t); return Pt(t), r; } function bt(e, t) { var r = [], i = {}; function n(e) { i[e] || Re[e] || (Ne[e] ? Ne[e].forEach(n) : (r.push(e), (i[e] = !0))); } throw (t.forEach(n), new pt(e + \": \" + r.map(mt).join([\", \"]))); } function It(e, t, r, i, n, a) { var o = At(t, r); (e = De(e)), (n = gt(i, n)), ut( e, function () { bt(\"Cannot call \" + e + \" due to unbound types\", o); }, t - 1 ), Ye([], o, function (r) { var i = [r[0], null].concat(r.slice(1)); return ft(e, st(e, i, null, n, a), t - 1), []; }); } function Et(e, t, r) { switch (t) { case 0: return r ? function (e) { return L[e]; } : function (e) { return O[e]; }; case 1: return r ? function (e) { return P[e >> 1]; } : function (e) { return U[e >> 1]; }; case 2: return r ? function (e) { return G[e >> 2]; } : function (e) { return z[e >> 2]; }; default: throw new TypeError(\"Unknown integer type: \" + e); } } function yt(e, t, r, i, n) { (t = De(t)), -1 === n && (n = 4294967295); var a = Se(r), o = function (e) { return e; }; if (0 === i) { var s = 32 - 8 * r; o = function (e) { return (e < s) >>> s; }; } var c = t.includes(\"unsigned\"); We(e, { name: t, fromWireType: o, toWireType: function (e, r) { if (\"number\" !== typeof r && \"boolean\" !== typeof r) throw new TypeError( 'Cannot convert \"' + it(r) + '\" to ' + this.name ); if (r < i || r > n) throw new TypeError( 'Passing a number \"' + it(r) + '\" from JS side to C/C++ side to an argument of type \"' + t + '\", which is outside the valid range [' + i + \", \" + n + \"]!\" ); return c ? r >>> 0 : 0 | r; }, argPackAdvance: 8, readValueFromPointer: Et(t, a, 0 !== i), destructorFunction: null, }); } function Bt(e, t, r) { var i = [ Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array, ], n = i[t]; function a(e) { e >>= 2; var t = z, r = t[e], i = t[e + 1]; return new n(F, i, r); } (r = De(r)), We( e, { name: r, fromWireType: a, argPackAdvance: 8, readValueFromPointer: a, }, { ignoreDuplicateRegistrations: !0 } ); } function vt(e, t) { t = De(t); var r = \"std::string\" === t; We(e, { name: t, fromWireType: function (e) { var t, i = z[e >> 2]; if (r) for (var n = e + 4, a = 0; a 2], o = a(), c = e + 4, u = 0; u > s]) { var f = A - c, l = i(c, f); void 0 === r ? (r = l) : ((r += String.fromCharCode(0)), (r += l)), (c = A + t); } } return Pt(e), r; }, toWireType: function (e, i) { \"string\" !== typeof i && ze(\"Cannot pass non-string to C++ string type \" + r); var a = o(i), c = Ot(4 + a + t); return ( (z[c >> 2] = a >> s), n(i, c + 4, a + t), null !== e && e.push(Pt, c), c ); }, argPackAdvance: 8, readValueFromPointer: tt, destructorFunction: function (e) { Pt(e); }, }); } function Ct(e, t) { (t = De(t)), We(e, { isVoid: !0, name: t, argPackAdvance: 0, fromWireType: function () {}, toWireType: function (e, t) {}, }); } function _t() { me(\"\"); } function Qt(e, t, r) { O.copyWithin(e, t, t + r); } function kt(e) { me(\"OOM\"); } function St(e) { O.length; (e >>>= 0), kt(e); } xe(), (Ge = c[\"BindingError\"] = Ue(Error, \"BindingError\")), (je = c[\"InternalError\"] = Ue(Error, \"InternalError\")), $e(), (pt = c[\"UnboundTypeError\"] = Ue(Error, \"UnboundTypeError\")); var xt = !1; function Tt(e) { for (var t = [], r = 0; r < e.length; r++) { var i = e[r]; i > 255 && (xt && S( !1, \"Character code \" + i + \" (\" + String.fromCharCode(i) + \") at offset \" + r + \" not in 0x00-0xFF.\" ), (i &= 255)), t.push(String.fromCharCode(i)); } return t.join(\"\"); } var Dt = \"function\" === typeof atob ? atob : function (e) { var t, r, i, n, a, o, s, c = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\", u = \"\", A = 0; e = e.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\"); do { (n = c.indexOf(e.charAt(A++))), (a = c.indexOf(e.charAt(A++))), (o = c.indexOf(e.charAt(A++))), (s = c.indexOf(e.charAt(A++))), (t = (n < 2) | (a >> 4)), (r = ((15 & a) < 4) | (o >> 2)), (i = ((3 & o) < 6) | s), (u += String.fromCharCode(t)), 64 !== o && (u += String.fromCharCode(r)), 64 !== s && (u += String.fromCharCode(i)); } while (A < e.length); return u; }; function Mt(e) { if (\"boolean\" === typeof I && I) { var t = a.from(e, \"base64\"); return new Uint8Array( t[\"buffer\"], t[\"byteOffset\"], t[\"byteLength\"] ); } try { for ( var r = Dt(e), i = new Uint8Array(r.length), n = 0; n < r.length; ++n ) i[n] = r.charCodeAt(n); return i; } catch (o) { throw new Error(\"Converting base64 string to bytes failed.\"); } } function Rt(e) { if (Ee(e)) return Mt(e.slice(Ie.length)); } var Nt, Ft = { j: ke, i: Je, h: rt, e: at, g: It, b: yt, a: Bt, f: vt, c: wt, m: Ct, d: _t, k: Qt, l: St, }, Lt = (we(), (c[\"___wasm_call_ctors\"] = function () { return (c[\"___wasm_call_ctors\"] = c[\"asm\"][\"o\"]).apply( null, arguments ); }), (c[\"___getTypeName\"] = function () { return (Lt = c[\"___getTypeName\"] = c[\"asm\"][\"q\"]).apply( null, arguments ); })), Ot = ((c[\"___embind_register_native_and_builtin_types\"] = function () { return (c[\"___embind_register_native_and_builtin_types\"] = c[\"asm\"][\"r\"]).apply(null, arguments); }), (c[\"_malloc\"] = function () { return (Ot = c[\"_malloc\"] = c[\"asm\"][\"s\"]).apply( null, arguments ); })), Pt = (c[\"_free\"] = function () { return (Pt = c[\"_free\"] = c[\"asm\"][\"t\"]).apply(null, arguments); }); function Ut(e) { (this.name = \"ExitStatus\"), (this.message = \"Program terminated with exit(\" + e + \")\"), (this.status = e); } function Gt(e) { function t() { Nt || ((Nt = !0), (c[\"calledRun\"] = !0), k || (se(), o(c), c[\"onRuntimeInitialized\"] && c[\"onRuntimeInitialized\"](), ce())); } (e = e || p), le > 0 || (oe(), le > 0 || (c[\"setStatus\"] ? (c[\"setStatus\"](\"Running...\"), setTimeout(function () { setTimeout(function () { c[\"setStatus\"](\"\"); }, 1), t(); }, 1)) : t())); } if ( ((c[\"getValue\"] = Q), (c[\"UTF8ToString\"] = D), (c[\"writeArrayToMemory\"] = V), (de = function e() { Nt || Gt(), Nt || (de = e); }), (c[\"run\"] = Gt), c[\"preInit\"]) ) { \"function\" == typeof c[\"preInit\"] && (c[\"preInit\"] = [c[\"preInit\"]]); while (c[\"preInit\"].length > 0) c[\"preInit\"].pop()(); } return Gt(), t.ready; } ); })(); e.exports = o; }).call(this, \"/index.js\", r(\"4362\"), \"/\", r(\"1c35\").Buffer); }, 8925: function (e, t, r) { var i = r(\"e330\"), n = r(\"1626\"), a = r(\"c6cd\"), o = i(Function.toString); n(a.inspectSource) || (a.inspectSource = function (e) { return o(e); }), (e.exports = a.inspectSource); }, 8936: function (e, t, r) { \"use strict\"; function i() { (this.input = null), (this.next_in = 0), (this.avail_in = 0), (this.total_in = 0), (this.output = null), (this.next_out = 0), (this.avail_out = 0), (this.total_out = 0), (this.msg = \"\"), (this.state = null), (this.data_type = 2), (this.adler = 0); } e.exports = i; }, \"89c7\": function (e, t, r) { \"use strict\"; e.exports = (e) => !!e && (\"symbol\" === typeof Symbol.observable && \"function\" === typeof e[Symbol.observable] ? e === e[Symbol.observable]() : \"function\" === typeof e[\"@@observable\"] && e === e[\"@@observable\"]()); }, \"8a58\": function (e, t, r) { \"use strict\"; e.exports = A; var i = r(\"1b08\").codes, n = i.ERR_METHOD_NOT_IMPLEMENTED, a = i.ERR_MULTIPLE_CALLBACK, o = i.ERR_TRANSFORM_ALREADY_TRANSFORMING, s = i.ERR_TRANSFORM_WITH_LENGTH_0, c = r(\"845f\"); function u(e, t) { var r = this._transformState; r.transforming = !1; var i = r.writecb; if (null === i) return this.emit(\"error\", new a()); (r.writechunk = null), (r.writecb = null), null != t && this.push(t), i(e); var n = this._readableState; (n.reading = !1), (n.needReadable || n.length < n.highWaterMark) && this._read(n.highWaterMark); } function A(e) { if (!(this instanceof A)) return new A(e); c.call(this, e), (this._transformState = { afterTransform: u.bind(this), needTransform: !1, transforming: !1, writecb: null, writechunk: null, writeencoding: null, }), (this._readableState.needReadable = !0), (this._readableState.sync = !1), e && (\"function\" === typeof e.transform && (this._transform = e.transform), \"function\" === typeof e.flush && (this._flush = e.flush)), this.on(\"prefinish\", f); } function f() { var e = this; \"function\" !== typeof this._flush || this._readableState.destroyed ? l(this, null, null) : this._flush(function (t, r) { l(e, t, r); }); } function l(e, t, r) { if (t) return e.emit(\"error\", t); if ((null != r && e.push(r), e._writableState.length)) throw new s(); if (e._transformState.transforming) throw new o(); return e.push(null); } r(\"3fb5\")(A, c), (A.prototype.push = function (e, t) { return ( (this._transformState.needTransform = !1), c.prototype.push.call(this, e, t) ); }), (A.prototype._transform = function (e, t, r) { r(new n(\"_transform()\")); }), (A.prototype._write = function (e, t, r) { var i = this._transformState; if ( ((i.writecb = r), (i.writechunk = e), (i.writeencoding = t), !i.transforming) ) { var n = this._readableState; (i.needTransform || n.needReadable || n.length < n.highWaterMark) && this._read(n.highWaterMark); } }), (A.prototype._read = function (e) { var t = this._transformState; null === t.writechunk || t.transforming ? (t.needTransform = !0) : ((t.transforming = !0), this._transform(t.writechunk, t.writeencoding, t.afterTransform)); }), (A.prototype._destroy = function (e, t) { c.prototype._destroy.call(this, e, function (e) { t(e); }); }); }, \"8aa5\": function (e, t, r) { \"use strict\"; var i = r(\"6547\").charAt; e.exports = function (e, t, r) { return t + (r ? i(e, t).length : 1); }; }, \"8aa7\": function (e, t, r) { var i = r(\"da84\"), n = r(\"d039\"), a = r(\"1c7e\"), o = r(\"ebb5\").NATIVE_ARRAY_BUFFER_VIEWS, s = i.ArrayBuffer, c = i.Int8Array; e.exports = !o || !n(function () { c(1); }) || !n(function () { new c(-1); }) || !a(function (e) { new c(), new c(null), new c(1.5), new c(e); }, !0) || n(function () { return 1 !== new c(new s(2), 1, void 0).length; }); }, \"8b10\": function (e, t, r) { \"use strict\"; (function (e) { var i = r(\"4ea4\"); Object.defineProperty(t, \"__esModule\", { value: !0 }), (t[\"default\"] = o); var n = i(r(\"7037\")), a = r(\"c2d7\"); function o(t) { return ( t(\"crop\", function (t, r, i, n, o) { if (\"number\" !== typeof t || \"number\" !== typeof r) return a.throwError.call(this, \"x and y must be numbers\", o); if (\"number\" !== typeof i || \"number\" !== typeof n) return a.throwError.call(this, \"w and h must be numbers\", o); if ( ((t = Math.round(t)), (r = Math.round(r)), (i = Math.round(i)), (n = Math.round(n)), 0 === t && i === this.bitmap.width) ) { var s = (i * r + t) < 2, c = (s + n * i) < 2; this.bitmap.data = this.bitmap.data.slice(s, c); } else { var u = e.allocUnsafe(i * n * 4), A = 0; this.scanQuiet(t, r, i, n, function (e, t, r) { var i = this.bitmap.data.readUInt32BE(r, !0); u.writeUInt32BE(i, A, !0), (A += 4); }), (this.bitmap.data = u); } return ( (this.bitmap.width = i), (this.bitmap.height = n), (0, a.isNodePattern)(o) && o.call(this, null, this), this ); }), { class: { autocrop: function () { for ( var e, t = this.bitmap.width, r = this.bitmap.height, i = 1, o = 0, s = 2e-4, c = !0, u = !1, A = { north: !1, south: !1, east: !1, west: !1 }, f = arguments.length, l = new Array(f), h = 0; h < f; h++ ) l[h] = arguments[h]; for (var d = 0, g = l.length; d < g; d++) if ( (\"number\" === typeof l[d] && (s = l[d]), \"boolean\" === typeof l[d] && (c = l[d]), \"function\" === typeof l[d] && (e = l[d]), \"object\" === (0, n[\"default\"])(l[d])) ) { var p = l[d]; \"undefined\" !== typeof p.tolerance && (s = p.tolerance), \"undefined\" !== typeof p.cropOnlyFrames && (c = p.cropOnlyFrames), \"undefined\" !== typeof p.cropSymmetric && (u = p.cropSymmetric), \"undefined\" !== typeof p.leaveBorder && (o = p.leaveBorder), \"undefined\" !== typeof p.ignoreSides && (A = p.ignoreSides); } var m = this.getPixelColor(0, 0), b = this.constructor.intToRGBA(m), I = 0, E = 0, y = 0, B = 0; if (((m = this.getPixelColor(0, 0)), !A.north)) e: for (var v = 0; v < r - i; v++) { for (var w = 0; w < t; w++) { var C = this.getPixelColor(w, v), _ = this.constructor.intToRGBA(C); if (this.constructor.colorDiff(b, _) > s) break e; } I++; } if (((m = this.getPixelColor(t, 0)), !A.east)) e: for (var Q = 0; Q < t - i; Q++) { for (var k = 0 + I; k < r; k++) { var S = this.getPixelColor(Q, k), x = this.constructor.intToRGBA(S); if (this.constructor.colorDiff(b, x) > s) break e; } E++; } if (((m = this.getPixelColor(0, r)), !A.south)) e: for (var T = r - 1; T >= I + i; T--) { for (var D = t - E - 1; D >= 0; D--) { var M = this.getPixelColor(D, T), R = this.constructor.intToRGBA(M); if (this.constructor.colorDiff(b, R) > s) break e; } y++; } if (((m = this.getPixelColor(t, r)), !A.west)) e: for (var N = t - 1; N >= 0 + E + i; N--) { for (var F = r - 1; F >= 0 + I; F--) { var L = this.getPixelColor(N, F), O = this.constructor.intToRGBA(L); if (this.constructor.colorDiff(b, O) > s) break e; } B++; } var P = !1; if (((B -= o), (E -= o), (I -= o), (y -= o), u)) { var U = Math.min(E, B), G = Math.min(I, y); (B = U), (E = U), (I = G), (y = G); } (B = B >= 0 ? B : 0), (E = E >= 0 ? E : 0), (I = I >= 0 ? I : 0), (y = y >= 0 ? y : 0); var z = t - (B + E), j = r - (y + I); return ( (P = c ? 0 !== E && 0 !== I && 0 !== B && 0 !== y : 0 !== E || 0 !== I || 0 !== B || 0 !== y), P && this.crop(E, I, z, j), (0, a.isNodePattern)(e) && e.call(this, null, this), this ); }, }, } ); } }).call(this, r(\"1c35\").Buffer); }, \"8b6b\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.Deferred = void 0); class i { constructor() { (this.resolve = () => null), (this.reject = () => null), (this.promise = new Promise((e, t) => { (this.reject = t), (this.resolve = e); })); } } t.Deferred = i; }, \"8c05\": function (e, t) { e.exports = { 100: \"Continue\", 101: \"Switching Protocols\", 102: \"Processing\", 200: \"OK\", 201: \"Created\", 202: \"Accepted\", 203: \"Non-Authoritative Information\", 204: \"No Content\", 205: \"Reset Content\", 206: \"Partial Content\", 207: \"Multi-Status\", 208: \"Already Reported\", 226: \"IM Used\", 300: \"Multiple Choices\", 301: \"Moved Permanently\", 302: \"Found\", 303: \"See Other\", 304: \"Not Modified\", 305: \"Use Proxy\", 307: \"Temporary Redirect\", 308: \"Permanent Redirect\", 400: \"Bad Request\", 401: \"Unauthorized\", 402: \"Payment Required\", 403: \"Forbidden\", 404: \"Not Found\", 405: \"Method Not Allowed\", 406: \"Not Acceptable\", 407: \"Proxy Authentication Required\", 408: \"Request Timeout\", 409: \"Conflict\", 410: \"Gone\", 411: \"Length Required\", 412: \"Precondition Failed\", 413: \"Payload Too Large\", 414: \"URI Too Long\", 415: \"Unsupported Media Type\", 416: \"Range Not Satisfiable\", 417: \"Expectation Failed\", 418: \"I'm a teapot\", 421: \"Misdirected Request\", 422: \"Unprocessable Entity\", 423: \"Locked\", 424: \"Failed Dependency\", 425: \"Unordered Collection\", 426: \"Upgrade Required\", 428: \"Precondition Required\", 429: \"Too Many Requests\", 431: \"Request Header Fields Too Large\", 451: \"Unavailable For Legal Reasons\", 500: \"Internal Server Error\", 501: \"Not Implemented\", 502: \"Bad Gateway\", 503: \"Service Unavailable\", 504: \"Gateway Timeout\", 505: \"HTTP Version Not Supported\", 506: \"Variant Also Negotiates\", 507: \"Insufficient Storage\", 508: \"Loop Detected\", 509: \"Bandwidth Limit Exceeded\", 510: \"Not Extended\", 511: \"Network Authentication Required\", }; }, \"8d59\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t[\"default\"] = void 0); var i = r(\"c2d7\"), n = function () { return { circle: function () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t = arguments.length > 1 ? arguments[1] : void 0; \"function\" === typeof e && ((t = e), (e = {})); var r = e.radius || (this.bitmap.width > this.bitmap.height ? this.bitmap.height : this.bitmap.width) / 2, n = { x: \"number\" === typeof e.x ? e.x : this.bitmap.width / 2, y: \"number\" === typeof e.y ? e.y : this.bitmap.height / 2, }; return ( this.scanQuiet( 0, 0, this.bitmap.width, this.bitmap.height, function (e, t, i) { var a = Math.sqrt( Math.pow(e - n.x, 2) + Math.pow(t - n.y, 2) ); r - a > 8) & 255), (e[a++] = 255 & d); } if (null !== o) { if (o < 0 || o > 65535) throw new Error(\"Loop count invalid.\"); (e[a++] = 33), (e[a++] = 255), (e[a++] = 11), (e[a++] = 78), (e[a++] = 69), (e[a++] = 84), (e[a++] = 83), (e[a++] = 67), (e[a++] = 65), (e[a++] = 80), (e[a++] = 69), (e[a++] = 50), (e[a++] = 46), (e[a++] = 48), (e[a++] = 3), (e[a++] = 1), (e[a++] = 255 & o), (e[a++] = (o >> 8) & 255), (e[a++] = 0); } var g = !1; (this.addFrame = function (t, r, i, o, u, A) { if ( (!0 === g && (--a, (g = !1)), (A = void 0 === A ? {} : A), t < 0 || r < 0 || t > 65535 || r > 65535) ) throw new Error(\"x/y invalid.\"); if (i 65535) throw new Error(\"Width/Height invalid.\"); if (u.length < i * o) throw new Error(\"Not enough pixels for the frame size.\"); var f = !0, l = A.palette; if ( ((void 0 !== l && null !== l) || ((f = !1), (l = s)), void 0 === l || null === l) ) throw new Error(\"Must supply either a local or global palette.\"); var h = c(l), d = 0; while ((h >>= 1)) ++d; h = 1 < d; var p = void 0 === A.delay ? 0 : A.delay, m = void 0 === A.disposal ? 0 : A.disposal; if (m < 0 || m > 3) throw new Error(\"Disposal out of range.\"); var b = !1, I = 0; if ( void 0 !== A.transparent && null !== A.transparent && ((b = !0), (I = A.transparent), I < 0 || I >= h) ) throw new Error(\"Transparent color index.\"); if ( ((0 !== m || b || 0 !== p) && ((e[a++] = 33), (e[a++] = 249), (e[a++] = 4), (e[a++] = (m < 2) | (!0 === b ? 1 : 0)), (e[a++] = 255 & p), (e[a++] = (p >> 8) & 255), (e[a++] = I), (e[a++] = 0)), (e[a++] = 44), (e[a++] = 255 & t), (e[a++] = (t >> 8) & 255), (e[a++] = 255 & r), (e[a++] = (r >> 8) & 255), (e[a++] = 255 & i), (e[a++] = (i >> 8) & 255), (e[a++] = 255 & o), (e[a++] = (o >> 8) & 255), (e[a++] = !0 === f ? 128 | (d - 1) : 0), !0 === f) ) for (var E = 0, y = l.length; E < y; ++E) { var B = l[E]; (e[a++] = (B >> 16) & 255), (e[a++] = (B >> 8) & 255), (e[a++] = 255 & B); } return (a = n(e, a, d < 2 ? 2 : d, u)), a; }), (this.end = function () { return !1 === g && ((e[a++] = 59), (g = !0)), a; }), (this.getOutputBuffer = function () { return e; }), (this.setOutputBuffer = function (t) { e = t; }), (this.getOutputBufferPosition = function () { return a; }), (this.setOutputBufferPosition = function (e) { a = e; }); } function n(e, t, r, i) { e[t++] = r; var n = t++, a = 1 < r, o = a - 1, s = a + 1, c = s + 1, u = r + 1, A = 0, f = 0; function l(r) { while (A >= r) (e[t++] = 255 & f), (f >>= 8), (A -= 8), t === n + 256 && ((e[n] = 255), (n = t++)); } function h(e) { (f |= e < A), (A += u), l(8); } var d = i[0] & o, g = {}; h(a); for (var p = 1, m = i.length; p < m; ++p) { var b = i[p] & o, I = (d < 8) | b, E = g[I]; if (void 0 === E) { (f |= d < A), (A += u); while (A >= 8) (e[t++] = 255 & f), (f >>= 8), (A -= 8), t === n + 256 && ((e[n] = 255), (n = t++)); 4096 === c ? (h(a), (c = s + 1), (u = r + 1), (g = {})) : (c >= 1 < u && ++u, (g[I] = c++)), (d = b); } else d = E; } return ( h(d), h(s), l(1), n + 1 === t ? (e[n] = 0) : ((e[n] = t - n - 1), (e[t++] = 0)), t ); } function a(e) { var t = 0; if ( 71 !== e[t++] || 73 !== e[t++] || 70 !== e[t++] || 56 !== e[t++] || 56 !== ((e[t++] + 1) & 253) || 97 !== e[t++] ) throw new Error(\"Invalid GIF 87a/89a header.\"); var r = e[t++] | (e[t++] < 8), i = e[t++] | (e[t++] < 8), n = e[t++], a = n >> 7, s = 7 & n, c = 1 < (s + 1); e[t++]; e[t++]; var u = null, A = null; a && ((u = t), (A = c), (t += 3 * c)); var f = !0, l = [], h = 0, d = null, g = 0, p = null; (this.width = r), (this.height = i); while (f && t < e.length) switch (e[t++]) { case 33: switch (e[t++]) { case 255: if ( 11 !== e[t] || (78 == e[t + 1] && 69 == e[t + 2] && 84 == e[t + 3] && 83 == e[t + 4] && 67 == e[t + 5] && 65 == e[t + 6] && 80 == e[t + 7] && 69 == e[t + 8] && 50 == e[t + 9] && 46 == e[t + 10] && 48 == e[t + 11] && 3 == e[t + 12] && 1 == e[t + 13] && 0 == e[t + 16]) ) (t += 14), (p = e[t++] | (e[t++] < 8)), t++; else { t += 12; while (1) { var m = e[t++]; if (!(m >= 0)) throw Error(\"Invalid block size\"); if (0 === m) break; t += m; } } break; case 249: if (4 !== e[t++] || 0 !== e[t + 4]) throw new Error(\"Invalid graphics extension block.\"); var b = e[t++]; (h = e[t++] | (e[t++] < 8)), (d = e[t++]), 0 === (1 & b) && (d = null), (g = (b >> 2) & 7), t++; break; case 254: while (1) { m = e[t++]; if (!(m >= 0)) throw Error(\"Invalid block size\"); if (0 === m) break; t += m; } break; default: throw new Error( \"Unknown graphic control label: 0x\" + e[t - 1].toString(16) ); } break; case 44: var I = e[t++] | (e[t++] < 8), E = e[t++] | (e[t++] < 8), y = e[t++] | (e[t++] < 8), B = e[t++] | (e[t++] < 8), v = e[t++], w = v >> 7, C = (v >> 6) & 1, _ = 7 & v, Q = 1 < (_ + 1), k = u, S = A, x = !1; if (w) { x = !0; (k = t), (S = Q), (t += 3 * Q); } var T = t; t++; while (1) { m = e[t++]; if (!(m >= 0)) throw Error(\"Invalid block size\"); if (0 === m) break; t += m; } l.push({ x: I, y: E, width: y, height: B, has_local_palette: x, palette_offset: k, palette_size: S, data_offset: T, data_length: t - T, transparent_index: d, interlaced: !!C, delay: h, disposal: g, }); break; case 59: f = !1; break; default: throw new Error(\"Unknown gif block: 0x\" + e[t - 1].toString(16)); } (this.numFrames = function () { return l.length; }), (this.loopCount = function () { return p; }), (this.frameInfo = function (e) { if (e < 0 || e >= l.length) throw new Error(\"Frame index out of range.\"); return l[e]; }), (this.decodeAndBlitFrameBGRA = function (t, i) { var n = this.frameInfo(t), a = n.width * n.height, s = new Uint8Array(a); o(e, n.data_offset, s, a); var c = n.palette_offset, u = n.transparent_index; null === u && (u = 256); var A = n.width, f = r - A, l = A, h = 4 * (n.y * r + n.x), d = 4 * ((n.y + n.height) * r + n.x), g = h, p = 4 * f; !0 === n.interlaced && (p += 4 * r * 7); for (var m = 8, b = 0, I = s.length; b < I; ++b) { var E = s[b]; if ( (0 === l && ((g += p), (l = A), g >= d && ((p = 4 * f + 4 * r * (m - 1)), (g = h + (A + f) * (m < 1)), (m >>= 1))), E === u) ) g += 4; else { var y = e[c + 3 * E], B = e[c + 3 * E + 1], v = e[c + 3 * E + 2]; (i[g++] = v), (i[g++] = B), (i[g++] = y), (i[g++] = 255); } --l; } }), (this.decodeAndBlitFrameRGBA = function (t, i) { var n = this.frameInfo(t), a = n.width * n.height, s = new Uint8Array(a); o(e, n.data_offset, s, a); var c = n.palette_offset, u = n.transparent_index; null === u && (u = 256); var A = n.width, f = r - A, l = A, h = 4 * (n.y * r + n.x), d = 4 * ((n.y + n.height) * r + n.x), g = h, p = 4 * f; !0 === n.interlaced && (p += 4 * r * 7); for (var m = 8, b = 0, I = s.length; b < I; ++b) { var E = s[b]; if ( (0 === l && ((g += p), (l = A), g >= d && ((p = 4 * f + 4 * r * (m - 1)), (g = h + (A + f) * (m < 1)), (m >>= 1))), E === u) ) g += 4; else { var y = e[c + 3 * E], B = e[c + 3 * E + 1], v = e[c + 3 * E + 2]; (i[g++] = y), (i[g++] = B), (i[g++] = v), (i[g++] = 255); } --l; } }); } function o(e, t, r, i) { var n = e[t++], a = 1 < n, o = a + 1, s = o + 1, c = n + 1, u = (1 < c) - 1, A = 0, f = 0, l = 0, h = e[t++], d = new Int32Array(4096), g = null; while (1) { while (A < 16) { if (0 === h) break; (f |= e[t++] < A), (A += 8), 1 === h ? (h = e[t++]) : --h; } if (A < c) break; var p = f & u; if (((f >>= c), (A -= c), p !== a)) { if (p === o) break; var m = p < s ? p : g, b = 0, I = m; while (I > a) (I = d[I] >> 8), ++b; var E = I, y = l + b + (m !== p ? 1 : 0); if (y > i) return void console.log( \"Warning, gif stream longer than expected.\" ); (r[l++] = E), (l += b); var B = l; m !== p && (r[l++] = E), (I = m); while (b--) (I = d[I]), (r[--B] = 255 & I), (I >>= 8); null !== g && s < 4096 && ((d[s++] = (g < 8) | E), s >= u + 1 && c < 12 && (++c, (u = (u < 1) | 1))), (g = p); } else (s = o + 1), (c = n + 1), (u = (1 < c) - 1), (g = null); } return ( l !== i && console.log(\"Warning, gif stream shorter than expected.\"), r ); } try { (t.GifWriter = i), (t.GifReader = a); } catch (s) {} }, \"8f5f\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.ListInfoTagValue = t.Header = void 0); const i = r(\"6f58\"); t.Header = { len: 8, get: (e, t) => ({ chunkID: e.toString(\"binary\", t, t + 4), chunkSize: e.readUInt32LE(t + 4), }), }; class n { constructor(e) { (this.tagHeader = e), (this.len = e.chunkSize), (this.len += 1 & this.len); } get(e, t) { return new i.StringType(this.tagHeader.chunkSize, \"ascii\").get(e, t); } } t.ListInfoTagValue = n; }, \"907a\": function (e, t, r) { \"use strict\"; var i = r(\"ebb5\"), n = r(\"07fa\"), a = r(\"5926\"), o = i.aTypedArray, s = i.exportTypedArrayMethod; s(\"at\", function (e) { var t = o(this), r = n(t), i = a(e), s = i >= 0 ? i : r + i; return s < 0 || s >= r ? void 0 : t[s]; }); }, \"90c9\": function (e, t, r) { \"use strict\"; var i = r(\"c591\").Buffer; t._dbcs = f; for ( var n = -1, a = -2, o = -10, s = -1e3, c = new Array(256), u = -1, A = 0; A < 256; A++ ) c[A] = n; function f(e, t) { if (((this.encodingName = e.encodingName), !e)) throw new Error(\"DBCS codec is called without the data.\"); if (!e.table) throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\"); var r = e.table(); (this.decodeTables = []), (this.decodeTables[0] = c.slice(0)), (this.decodeTableSeq = []); for (var i = 0; i < r.length; i++) this._addDecodeChunk(r[i]); if (\"function\" === typeof e.gb18030) { this.gb18030 = e.gb18030(); var o = this.decodeTables.length; this.decodeTables.push(c.slice(0)); var u = this.decodeTables.length; this.decodeTables.push(c.slice(0)); var A = this.decodeTables[0]; for (i = 129; i = e.length)) break; this._processRead(e); } } this._buffers && !this.writable && this._end(); } catch (t) { this.emit(\"error\", t); } }); }).call(this, r(\"4362\"), r(\"1c35\").Buffer); }, \"925e\": function (e, t, r) { (function (t, i, n) { var a = r(\"a9f1\"), o = r(\"3fb5\"), s = r(\"c90b\"), c = r(\"e372\"), u = r(\"d938\"), A = s.IncomingMessage, f = s.readyStates; function l(e, t) { return a.fetch && t ? \"fetch\" : a.mozchunkedarraybuffer ? \"moz-chunked-arraybuffer\" : a.msstream ? \"ms-stream\" : a.arraybuffer && e ? \"arraybuffer\" : a.vbArray && e ? \"text:vbarray\" : \"text\"; } var h = (e.exports = function (e) { var r, i = this; c.Writable.call(i), (i._opts = e), (i._body = []), (i._headers = {}), e.auth && i.setHeader( \"Authorization\", \"Basic \" + new t(e.auth).toString(\"base64\") ), Object.keys(e.headers).forEach(function (t) { i.setHeader(t, e.headers[t]); }); var n = !0; if ( \"disable-fetch\" === e.mode || (\"requestTimeout\" in e && !a.abortController) ) (n = !1), (r = !0); else if (\"prefer-streaming\" === e.mode) r = !1; else if (\"allow-wrong-content-type\" === e.mode) r = !a.overrideMimeType; else { if (e.mode && \"default\" !== e.mode && \"prefer-fast\" !== e.mode) throw new Error(\"Invalid value for opts.mode\"); r = !0; } (i._mode = l(r, n)), (i._fetchTimer = null), i.on(\"finish\", function () { i._onFinish(); }); }); function d(e) { try { var t = e.status; return null !== t && 0 !== t; } catch (r) { return !1; } } o(h, c.Writable), (h.prototype.setHeader = function (e, t) { var r = this, i = e.toLowerCase(); -1 === g.indexOf(i) && (r._headers[i] = { name: e, value: t }); }), (h.prototype.getHeader = function (e) { var t = this._headers[e.toLowerCase()]; return t ? t.value : null; }), (h.prototype.removeHeader = function (e) { var t = this; delete t._headers[e.toLowerCase()]; }), (h.prototype._onFinish = function () { var e = this; if (!e._destroyed) { var r = e._opts, o = e._headers, s = null; \"GET\" !== r.method && \"HEAD\" !== r.method && (s = a.arraybuffer ? u(t.concat(e._body)) : a.blobConstructor ? new i.Blob( e._body.map(function (e) { return u(e); }), { type: (o[\"content-type\"] || {}).value || \"\" } ) : t.concat(e._body).toString()); var c = []; if ( (Object.keys(o).forEach(function (e) { var t = o[e].name, r = o[e].value; Array.isArray(r) ? r.forEach(function (e) { c.push([t, e]); }) : c.push([t, r]); }), \"fetch\" === e._mode) ) { var A = null; if (a.abortController) { var l = new AbortController(); (A = l.signal), (e._fetchAbortController = l), \"requestTimeout\" in r && 0 !== r.requestTimeout && (e._fetchTimer = i.setTimeout(function () { e.emit(\"requestTimeout\"), e._fetchAbortController && e._fetchAbortController.abort(); }, r.requestTimeout)); } i.fetch(e._opts.url, { method: e._opts.method, headers: c, body: s || void 0, mode: \"cors\", credentials: r.withCredentials ? \"include\" : \"same-origin\", signal: A, }).then( function (t) { (e._fetchResponse = t), e._connect(); }, function (t) { i.clearTimeout(e._fetchTimer), e._destroyed || e.emit(\"error\", t); } ); } else { var h = (e._xhr = new i.XMLHttpRequest()); try { h.open(e._opts.method, e._opts.url, !0); } catch (d) { return void n.nextTick(function () { e.emit(\"error\", d); }); } \"responseType\" in h && (h.responseType = e._mode.split(\":\")[0]), \"withCredentials\" in h && (h.withCredentials = !!r.withCredentials), \"text\" === e._mode && \"overrideMimeType\" in h && h.overrideMimeType(\"text/plain; charset=x-user-defined\"), \"requestTimeout\" in r && ((h.timeout = r.requestTimeout), (h.ontimeout = function () { e.emit(\"requestTimeout\"); })), c.forEach(function (e) { h.setRequestHeader(e[0], e[1]); }), (e._response = null), (h.onreadystatechange = function () { switch (h.readyState) { case f.LOADING: case f.DONE: e._onXHRProgress(); break; } }), \"moz-chunked-arraybuffer\" === e._mode && (h.onprogress = function () { e._onXHRProgress(); }), (h.onerror = function () { e._destroyed || e.emit(\"error\", new Error(\"XHR error\")); }); try { h.send(s); } catch (d) { return void n.nextTick(function () { e.emit(\"error\", d); }); } } } }), (h.prototype._onXHRProgress = function () { var e = this; d(e._xhr) && !e._destroyed && (e._response || e._connect(), e._response._onXHRProgress()); }), (h.prototype._connect = function () { var e = this; e._destroyed || ((e._response = new A( e._xhr, e._fetchResponse, e._mode, e._fetchTimer )), e._response.on(\"error\", function (t) { e.emit(\"error\", t); }), e.emit(\"response\", e._response)); }), (h.prototype._write = function (e, t, r) { var i = this; i._body.push(e), r(); }), (h.prototype.abort = h.prototype.destroy = function () { var e = this; (e._destroyed = !0), i.clearTimeout(e._fetchTimer), e._response && (e._response._destroyed = !0), e._xhr ? e._xhr.abort() : e._fetchAbortController && e._fetchAbortController.abort(); }), (h.prototype.end = function (e, t, r) { var i = this; \"function\" === typeof e && ((r = e), (e = void 0)), c.Writable.prototype.end.call(i, e, t, r); }), (h.prototype.flushHeaders = function () {}), (h.prototype.setTimeout = function () {}), (h.prototype.setNoDelay = function () {}), (h.prototype.setSocketKeepAlive = function () {}); var g = [ \"accept-charset\", \"accept-encoding\", \"access-control-request-headers\", \"access-control-request-method\", \"connection\", \"content-length\", \"cookie\", \"cookie2\", \"date\", \"dnt\", \"expect\", \"host\", \"keep-alive\", \"origin\", \"referer\", \"te\", \"trailer\", \"transfer-encoding\", \"upgrade\", \"via\", ]; }).call(this, r(\"1c35\").Buffer, r(\"c8ba\"), r(\"4362\")); }, 9263: function (e, t, r) { \"use strict\"; var i = r(\"c65b\"), n = r(\"e330\"), a = r(\"577e\"), o = r(\"ad6d\"), s = r(\"9f7f\"), c = r(\"5692\"), u = r(\"7c73\"), A = r(\"69f3\").get, f = r(\"fce3\"), l = r(\"107c\"), h = c(\"native-string-replace\", String.prototype.replace), d = RegExp.prototype.exec, g = d, p = n(\"\".charAt), m = n(\"\".indexOf), b = n(\"\".replace), I = n(\"\".slice), E = (function () { var e = /a/, t = /b*/g; return ( i(d, e, \"a\"), i(d, t, \"a\"), 0 !== e.lastIndex || 0 !== t.lastIndex ); })(), y = s.BROKEN_CARET, B = void 0 !== /()??/.exec(\"\")[1], v = E || B || y || f || l; v && (g = function (e) { var t, r, n, s, c, f, l, v = this, w = A(v), C = a(e), _ = w.raw; if (_) return ( (_.lastIndex = v.lastIndex), (t = i(g, _, C)), (v.lastIndex = _.lastIndex), t ); var Q = w.groups, k = y && v.sticky, S = i(o, v), x = v.source, T = 0, D = C; if ( (k && ((S = b(S, \"y\", \"\")), -1 === m(S, \"g\") && (S += \"g\"), (D = I(C, v.lastIndex)), v.lastIndex > 0 && (!v.multiline || (v.multiline && \"\\n\" !== p(C, v.lastIndex - 1))) && ((x = \"(?: \" + x + \")\"), (D = \" \" + D), T++), (r = new RegExp(\"^(?:\" + x + \")\", S))), B && (r = new RegExp(\"^\" + x + \"$(?!\\\\s)\", S)), E && (n = v.lastIndex), (s = i(d, k ? r : v, D)), k ? s ? ((s.input = I(s.input, T)), (s[0] = I(s[0], T)), (s.index = v.lastIndex), (v.lastIndex += s[0].length)) : (v.lastIndex = 0) : E && s && (v.lastIndex = v.global ? s.index + s[0].length : n), B && s && s.length > 1 && i(h, s[0], r, function () { for (c = 1; c < arguments.length - 2; c++) void 0 === arguments[c] && (s[c] = void 0); }), s && Q) ) for (s.groups = f = u(null), c = 0; c < Q.length; c++) (l = Q[c]), (f[l[0]] = s[l[1]]); return s; }), (e.exports = g); }, 9490: function (e, t, r) { (function (e) { var i = r(\"925e\"), n = r(\"c90b\"), a = r(\"53a8\"), o = r(\"8c05\"), s = r(\"0b16\"), c = t; (c.request = function (t, r) { t = \"string\" === typeof t ? s.parse(t) : a(t); var n = -1 === e.location.protocol.search(/^https?:$/) ? \"http:\" : \"\", o = t.protocol || n, c = t.hostname || t.host, u = t.port, A = t.path || \"/\"; c && -1 !== c.indexOf(\":\") && (c = \"[\" + c + \"]\"), (t.url = (c ? o + \"//\" + c : \"\") + (u ? \":\" + u : \"\") + A), (t.method = (t.method || \"GET\").toUpperCase()), (t.headers = t.headers || {}); var f = new i(t); return r && f.on(\"response\", r), f; }), (c.get = function (e, t) { var r = c.request(e, t); return r.end(), r; }), (c.ClientRequest = i), (c.IncomingMessage = n.IncomingMessage), (c.Agent = function () {}), (c.Agent.defaultMaxSockets = 4), (c.globalAgent = new c.Agent()), (c.STATUS_CODES = o), (c.METHODS = [ \"CHECKOUT\", \"CONNECT\", \"COPY\", \"DELETE\", \"GET\", \"HEAD\", \"LOCK\", \"M-SEARCH\", \"MERGE\", \"MKACTIVITY\", \"MKCOL\", \"MOVE\", \"NOTIFY\", \"OPTIONS\", \"PATCH\", \"POST\", \"PROPFIND\", \"PROPPATCH\", \"PURGE\", \"PUT\", \"REPORT\", \"SEARCH\", \"SUBSCRIBE\", \"TRACE\", \"UNLOCK\", \"UNSUBSCRIBE\", ]); }).call(this, r(\"c8ba\")); }, \"94bb\": function (e, t, r) { \"use strict\"; for ( var i = [ r(\"d354\"), r(\"feb0\"), r(\"a58d\"), r(\"c642\"), r(\"6bda\"), r(\"3d0e\"), r(\"80bc\"), r(\"90c9\"), r(\"1c47\"), ], n = 0; n < i.length; n++ ) { e = i[n]; for (var a in e) Object.prototype.hasOwnProperty.call(e, a) && (t[a] = e[a]); } }, \"94ca\": function (e, t, r) { var i = r(\"d039\"), n = r(\"1626\"), a = /#|\\.prototype\\./, o = function (e, t) { var r = c[s(e)]; return r == A || (r != u && (n(t) ? i(t) : !!t)); }, s = (o.normalize = function (e) { return String(e).replace(a, \".\").toLowerCase(); }), c = (o.data = {}), u = (o.NATIVE = \"N\"), A = (o.POLYFILL = \"P\"); e.exports = o; }, \"94f4\": function (e) { e.exports = JSON.parse( '[[\"0\",\"\\\\u0000\",128],[\"a1\",\"｡\",62],[\"8140\",\" 、。，．・：；？！゛゜´｀¨＾￣＿ヽヾゝゞ〃仝々〆〇ー―‐／＼～∥｜…‥‘’“”（）〔〕［］｛｝〈\",9,\"＋－±×\"],[\"8180\",\"÷＝≠＜＞≦≧∞∴♂♀°′″℃￥＄￠￡％＃＆＊＠§☆★○●◎◇◆□■△▲▽▼※〒→←↑↓〓\"],[\"81b8\",\"∈∋⊆⊇⊂⊃∪∩\"],[\"81c8\",\"∧∨￢⇒⇔∀∃\"],[\"81da\",\"∠⊥⌒∂∇≡≒≪≫√∽∝∵∫∬\"],[\"81f0\",\"Å‰♯♭♪†‡¶\"],[\"81fc\",\"◯\"],[\"824f\",\"０\",9],[\"8260\",\"Ａ\",25],[\"8281\",\"ａ\",25],[\"829f\",\"ぁ\",82],[\"8340\",\"ァ\",62],[\"8380\",\"ム\",22],[\"839f\",\"Α\",16,\"Σ\",6],[\"83bf\",\"α\",16,\"σ\",6],[\"8440\",\"А\",5,\"ЁЖ\",25],[\"8470\",\"а\",5,\"ёж\",7],[\"8480\",\"о\",17],[\"849f\",\"─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂\"],[\"8740\",\"①\",19,\"Ⅰ\",9],[\"875f\",\"㍉㌔㌢㍍㌘㌧㌃㌶㍑㍗㌍㌦㌣㌫㍊㌻㎜㎝㎞㎎㎏㏄㎡\"],[\"877e\",\"㍻\"],[\"8780\",\"〝〟№㏍℡㊤\",4,\"㈱㈲㈹㍾㍽㍼≒≡∫∮∑√⊥∠∟⊿∵∩∪\"],[\"889f\",\"亜唖娃阿哀愛挨姶逢葵茜穐悪握渥旭葦芦鯵梓圧斡扱宛姐虻飴絢綾鮎或粟袷安庵按暗案闇鞍杏以伊位依偉囲夷委威尉惟意慰易椅為畏異移維緯胃萎衣謂違遺医井亥域育郁磯一壱溢逸稲茨芋鰯允印咽員因姻引飲淫胤蔭\"],[\"8940\",\"院陰隠韻吋右宇烏羽迂雨卯鵜窺丑碓臼渦嘘唄欝蔚鰻姥厩浦瓜閏噂云運雲荏餌叡営嬰影映曳栄永泳洩瑛盈穎頴英衛詠鋭液疫益駅悦謁越閲榎厭円\"],[\"8980\",\"園堰奄宴延怨掩援沿演炎焔煙燕猿縁艶苑薗遠鉛鴛塩於汚甥凹央奥往応押旺横欧殴王翁襖鴬鴎黄岡沖荻億屋憶臆桶牡乙俺卸恩温穏音下化仮何伽価佳加可嘉夏嫁家寡科暇果架歌河火珂禍禾稼箇花苛茄荷華菓蝦課嘩貨迦過霞蚊俄峨我牙画臥芽蛾賀雅餓駕介会解回塊壊廻快怪悔恢懐戒拐改\"],[\"8a40\",\"魁晦械海灰界皆絵芥蟹開階貝凱劾外咳害崖慨概涯碍蓋街該鎧骸浬馨蛙垣柿蛎鈎劃嚇各廓拡撹格核殻獲確穫覚角赫較郭閣隔革学岳楽額顎掛笠樫\"],[\"8a80\",\"橿梶鰍潟割喝恰括活渇滑葛褐轄且鰹叶椛樺鞄株兜竃蒲釜鎌噛鴨栢茅萱粥刈苅瓦乾侃冠寒刊勘勧巻喚堪姦完官寛干幹患感慣憾換敢柑桓棺款歓汗漢澗潅環甘監看竿管簡緩缶翰肝艦莞観諌貫還鑑間閑関陥韓館舘丸含岸巌玩癌眼岩翫贋雁頑顔願企伎危喜器基奇嬉寄岐希幾忌揮机旗既期棋棄\"],[\"8b40\",\"機帰毅気汽畿祈季稀紀徽規記貴起軌輝飢騎鬼亀偽儀妓宜戯技擬欺犠疑祇義蟻誼議掬菊鞠吉吃喫桔橘詰砧杵黍却客脚虐逆丘久仇休及吸宮弓急救\"],[\"8b80\",\"朽求汲泣灸球究窮笈級糾給旧牛去居巨拒拠挙渠虚許距鋸漁禦魚亨享京供侠僑兇競共凶協匡卿叫喬境峡強彊怯恐恭挟教橋況狂狭矯胸脅興蕎郷鏡響饗驚仰凝尭暁業局曲極玉桐粁僅勤均巾錦斤欣欽琴禁禽筋緊芹菌衿襟謹近金吟銀九倶句区狗玖矩苦躯駆駈駒具愚虞喰空偶寓遇隅串櫛釧屑屈\"],[\"8c40\",\"掘窟沓靴轡窪熊隈粂栗繰桑鍬勲君薫訓群軍郡卦袈祁係傾刑兄啓圭珪型契形径恵慶慧憩掲携敬景桂渓畦稽系経継繋罫茎荊蛍計詣警軽頚鶏芸迎鯨\"],[\"8c80\",\"劇戟撃激隙桁傑欠決潔穴結血訣月件倹倦健兼券剣喧圏堅嫌建憲懸拳捲検権牽犬献研硯絹県肩見謙賢軒遣鍵険顕験鹸元原厳幻弦減源玄現絃舷言諺限乎個古呼固姑孤己庫弧戸故枯湖狐糊袴股胡菰虎誇跨鈷雇顧鼓五互伍午呉吾娯後御悟梧檎瑚碁語誤護醐乞鯉交佼侯候倖光公功効勾厚口向\"],[\"8d40\",\"后喉坑垢好孔孝宏工巧巷幸広庚康弘恒慌抗拘控攻昂晃更杭校梗構江洪浩港溝甲皇硬稿糠紅紘絞綱耕考肯肱腔膏航荒行衡講貢購郊酵鉱砿鋼閤降\"],[\"8d80\",\"項香高鴻剛劫号合壕拷濠豪轟麹克刻告国穀酷鵠黒獄漉腰甑忽惚骨狛込此頃今困坤墾婚恨懇昏昆根梱混痕紺艮魂些佐叉唆嵯左差査沙瑳砂詐鎖裟坐座挫債催再最哉塞妻宰彩才採栽歳済災采犀砕砦祭斎細菜裁載際剤在材罪財冴坂阪堺榊肴咲崎埼碕鷺作削咋搾昨朔柵窄策索錯桜鮭笹匙冊刷\"],[\"8e40\",\"察拶撮擦札殺薩雑皐鯖捌錆鮫皿晒三傘参山惨撒散桟燦珊産算纂蚕讃賛酸餐斬暫残仕仔伺使刺司史嗣四士始姉姿子屍市師志思指支孜斯施旨枝止\"],[\"8e80\",\"死氏獅祉私糸紙紫肢脂至視詞詩試誌諮資賜雌飼歯事似侍児字寺慈持時次滋治爾璽痔磁示而耳自蒔辞汐鹿式識鴫竺軸宍雫七叱執失嫉室悉湿漆疾質実蔀篠偲柴芝屡蕊縞舎写射捨赦斜煮社紗者謝車遮蛇邪借勺尺杓灼爵酌釈錫若寂弱惹主取守手朱殊狩珠種腫趣酒首儒受呪寿授樹綬需囚収周\"],[\"8f40\",\"宗就州修愁拾洲秀秋終繍習臭舟蒐衆襲讐蹴輯週酋酬集醜什住充十従戎柔汁渋獣縦重銃叔夙宿淑祝縮粛塾熟出術述俊峻春瞬竣舜駿准循旬楯殉淳\"],[\"8f80\",\"準潤盾純巡遵醇順処初所暑曙渚庶緒署書薯藷諸助叙女序徐恕鋤除傷償勝匠升召哨商唱嘗奨妾娼宵将小少尚庄床廠彰承抄招掌捷昇昌昭晶松梢樟樵沼消渉湘焼焦照症省硝礁祥称章笑粧紹肖菖蒋蕉衝裳訟証詔詳象賞醤鉦鍾鐘障鞘上丈丞乗冗剰城場壌嬢常情擾条杖浄状畳穣蒸譲醸錠嘱埴飾\"],[\"9040\",\"拭植殖燭織職色触食蝕辱尻伸信侵唇娠寝審心慎振新晋森榛浸深申疹真神秦紳臣芯薪親診身辛進針震人仁刃塵壬尋甚尽腎訊迅陣靭笥諏須酢図厨\"],[\"9080\",\"逗吹垂帥推水炊睡粋翠衰遂酔錐錘随瑞髄崇嵩数枢趨雛据杉椙菅頗雀裾澄摺寸世瀬畝是凄制勢姓征性成政整星晴棲栖正清牲生盛精聖声製西誠誓請逝醒青静斉税脆隻席惜戚斥昔析石積籍績脊責赤跡蹟碩切拙接摂折設窃節説雪絶舌蝉仙先千占宣専尖川戦扇撰栓栴泉浅洗染潜煎煽旋穿箭線\"],[\"9140\",\"繊羨腺舛船薦詮賎践選遷銭銑閃鮮前善漸然全禅繕膳糎噌塑岨措曾曽楚狙疏疎礎祖租粗素組蘇訴阻遡鼠僧創双叢倉喪壮奏爽宋層匝惣想捜掃挿掻\"],[\"9180\",\"操早曹巣槍槽漕燥争痩相窓糟総綜聡草荘葬蒼藻装走送遭鎗霜騒像増憎臓蔵贈造促側則即息捉束測足速俗属賊族続卒袖其揃存孫尊損村遜他多太汰詑唾堕妥惰打柁舵楕陀駄騨体堆対耐岱帯待怠態戴替泰滞胎腿苔袋貸退逮隊黛鯛代台大第醍題鷹滝瀧卓啄宅托択拓沢濯琢託鐸濁諾茸凧蛸只\"],[\"9240\",\"叩但達辰奪脱巽竪辿棚谷狸鱈樽誰丹単嘆坦担探旦歎淡湛炭短端箪綻耽胆蛋誕鍛団壇弾断暖檀段男談値知地弛恥智池痴稚置致蜘遅馳築畜竹筑蓄\"],[\"9280\",\"逐秩窒茶嫡着中仲宙忠抽昼柱注虫衷註酎鋳駐樗瀦猪苧著貯丁兆凋喋寵帖帳庁弔張彫徴懲挑暢朝潮牒町眺聴脹腸蝶調諜超跳銚長頂鳥勅捗直朕沈珍賃鎮陳津墜椎槌追鎚痛通塚栂掴槻佃漬柘辻蔦綴鍔椿潰坪壷嬬紬爪吊釣鶴亭低停偵剃貞呈堤定帝底庭廷弟悌抵挺提梯汀碇禎程締艇訂諦蹄逓\"],[\"9340\",\"邸鄭釘鼎泥摘擢敵滴的笛適鏑溺哲徹撤轍迭鉄典填天展店添纏甜貼転顛点伝殿澱田電兎吐堵塗妬屠徒斗杜渡登菟賭途都鍍砥砺努度土奴怒倒党冬\"],[\"9380\",\"凍刀唐塔塘套宕島嶋悼投搭東桃梼棟盗淘湯涛灯燈当痘祷等答筒糖統到董蕩藤討謄豆踏逃透鐙陶頭騰闘働動同堂導憧撞洞瞳童胴萄道銅峠鴇匿得徳涜特督禿篤毒独読栃橡凸突椴届鳶苫寅酉瀞噸屯惇敦沌豚遁頓呑曇鈍奈那内乍凪薙謎灘捺鍋楢馴縄畷南楠軟難汝二尼弐迩匂賑肉虹廿日乳入\"],[\"9440\",\"如尿韮任妊忍認濡禰祢寧葱猫熱年念捻撚燃粘乃廼之埜嚢悩濃納能脳膿農覗蚤巴把播覇杷波派琶破婆罵芭馬俳廃拝排敗杯盃牌背肺輩配倍培媒梅\"],[\"9480\",\"楳煤狽買売賠陪這蝿秤矧萩伯剥博拍柏泊白箔粕舶薄迫曝漠爆縛莫駁麦函箱硲箸肇筈櫨幡肌畑畠八鉢溌発醗髪伐罰抜筏閥鳩噺塙蛤隼伴判半反叛帆搬斑板氾汎版犯班畔繁般藩販範釆煩頒飯挽晩番盤磐蕃蛮匪卑否妃庇彼悲扉批披斐比泌疲皮碑秘緋罷肥被誹費避非飛樋簸備尾微枇毘琵眉美\"],[\"9540\",\"鼻柊稗匹疋髭彦膝菱肘弼必畢筆逼桧姫媛紐百謬俵彪標氷漂瓢票表評豹廟描病秒苗錨鋲蒜蛭鰭品彬斌浜瀕貧賓頻敏瓶不付埠夫婦富冨布府怖扶敷\"],[\"9580\",\"斧普浮父符腐膚芙譜負賦赴阜附侮撫武舞葡蕪部封楓風葺蕗伏副復幅服福腹複覆淵弗払沸仏物鮒分吻噴墳憤扮焚奮粉糞紛雰文聞丙併兵塀幣平弊柄並蔽閉陛米頁僻壁癖碧別瞥蔑箆偏変片篇編辺返遍便勉娩弁鞭保舗鋪圃捕歩甫補輔穂募墓慕戊暮母簿菩倣俸包呆報奉宝峰峯崩庖抱捧放方朋\"],[\"9640\",\"法泡烹砲縫胞芳萌蓬蜂褒訪豊邦鋒飽鳳鵬乏亡傍剖坊妨帽忘忙房暴望某棒冒紡肪膨謀貌貿鉾防吠頬北僕卜墨撲朴牧睦穆釦勃没殆堀幌奔本翻凡盆\"],[\"9680\",\"摩磨魔麻埋妹昧枚毎哩槙幕膜枕鮪柾鱒桝亦俣又抹末沫迄侭繭麿万慢満漫蔓味未魅巳箕岬密蜜湊蓑稔脈妙粍民眠務夢無牟矛霧鵡椋婿娘冥名命明盟迷銘鳴姪牝滅免棉綿緬面麺摸模茂妄孟毛猛盲網耗蒙儲木黙目杢勿餅尤戻籾貰問悶紋門匁也冶夜爺耶野弥矢厄役約薬訳躍靖柳薮鑓愉愈油癒\"],[\"9740\",\"諭輸唯佑優勇友宥幽悠憂揖有柚湧涌猶猷由祐裕誘遊邑郵雄融夕予余与誉輿預傭幼妖容庸揚揺擁曜楊様洋溶熔用窯羊耀葉蓉要謡踊遥陽養慾抑欲\"],[\"9780\",\"沃浴翌翼淀羅螺裸来莱頼雷洛絡落酪乱卵嵐欄濫藍蘭覧利吏履李梨理璃痢裏裡里離陸律率立葎掠略劉流溜琉留硫粒隆竜龍侶慮旅虜了亮僚両凌寮料梁涼猟療瞭稜糧良諒遼量陵領力緑倫厘林淋燐琳臨輪隣鱗麟瑠塁涙累類令伶例冷励嶺怜玲礼苓鈴隷零霊麗齢暦歴列劣烈裂廉恋憐漣煉簾練聯\"],[\"9840\",\"蓮連錬呂魯櫓炉賂路露労婁廊弄朗楼榔浪漏牢狼篭老聾蝋郎六麓禄肋録論倭和話歪賄脇惑枠鷲亙亘鰐詫藁蕨椀湾碗腕\"],[\"989f\",\"弌丐丕个丱丶丼丿乂乖乘亂亅豫亊舒弍于亞亟亠亢亰亳亶从仍仄仆仂仗仞仭仟价伉佚估佛佝佗佇佶侈侏侘佻佩佰侑佯來侖儘俔俟俎俘俛俑俚俐俤俥倚倨倔倪倥倅伜俶倡倩倬俾俯們倆偃假會偕偐偈做偖偬偸傀傚傅傴傲\"],[\"9940\",\"僉僊傳僂僖僞僥僭僣僮價僵儉儁儂儖儕儔儚儡儺儷儼儻儿兀兒兌兔兢竸兩兪兮冀冂囘册冉冏冑冓冕冖冤冦冢冩冪冫决冱冲冰况冽凅凉凛几處凩凭\"],[\"9980\",\"凰凵凾刄刋刔刎刧刪刮刳刹剏剄剋剌剞剔剪剴剩剳剿剽劍劔劒剱劈劑辨辧劬劭劼劵勁勍勗勞勣勦飭勠勳勵勸勹匆匈甸匍匐匏匕匚匣匯匱匳匸區卆卅丗卉卍凖卞卩卮夘卻卷厂厖厠厦厥厮厰厶參簒雙叟曼燮叮叨叭叺吁吽呀听吭吼吮吶吩吝呎咏呵咎呟呱呷呰咒呻咀呶咄咐咆哇咢咸咥咬哄哈咨\"],[\"9a40\",\"咫哂咤咾咼哘哥哦唏唔哽哮哭哺哢唹啀啣啌售啜啅啖啗唸唳啝喙喀咯喊喟啻啾喘喞單啼喃喩喇喨嗚嗅嗟嗄嗜嗤嗔嘔嗷嘖嗾嗽嘛嗹噎噐營嘴嘶嘲嘸\"],[\"9a80\",\"噫噤嘯噬噪嚆嚀嚊嚠嚔嚏嚥嚮嚶嚴囂嚼囁囃囀囈囎囑囓囗囮囹圀囿圄圉圈國圍圓團圖嗇圜圦圷圸坎圻址坏坩埀垈坡坿垉垓垠垳垤垪垰埃埆埔埒埓堊埖埣堋堙堝塲堡塢塋塰毀塒堽塹墅墹墟墫墺壞墻墸墮壅壓壑壗壙壘壥壜壤壟壯壺壹壻壼壽夂夊夐夛梦夥夬夭夲夸夾竒奕奐奎奚奘奢奠奧奬奩\"],[\"9b40\",\"奸妁妝佞侫妣妲姆姨姜妍姙姚娥娟娑娜娉娚婀婬婉娵娶婢婪媚媼媾嫋嫂媽嫣嫗嫦嫩嫖嫺嫻嬌嬋嬖嬲嫐嬪嬶嬾孃孅孀孑孕孚孛孥孩孰孳孵學斈孺宀\"],[\"9b80\",\"它宦宸寃寇寉寔寐寤實寢寞寥寫寰寶寳尅將專對尓尠尢尨尸尹屁屆屎屓屐屏孱屬屮乢屶屹岌岑岔妛岫岻岶岼岷峅岾峇峙峩峽峺峭嶌峪崋崕崗嵜崟崛崑崔崢崚崙崘嵌嵒嵎嵋嵬嵳嵶嶇嶄嶂嶢嶝嶬嶮嶽嶐嶷嶼巉巍巓巒巖巛巫已巵帋帚帙帑帛帶帷幄幃幀幎幗幔幟幢幤幇幵并幺麼广庠廁廂廈廐廏\"],[\"9c40\",\"廖廣廝廚廛廢廡廨廩廬廱廳廰廴廸廾弃弉彝彜弋弑弖弩弭弸彁彈彌彎弯彑彖彗彙彡彭彳彷徃徂彿徊很徑徇從徙徘徠徨徭徼忖忻忤忸忱忝悳忿怡恠\"],[\"9c80\",\"怙怐怩怎怱怛怕怫怦怏怺恚恁恪恷恟恊恆恍恣恃恤恂恬恫恙悁悍惧悃悚悄悛悖悗悒悧悋惡悸惠惓悴忰悽惆悵惘慍愕愆惶惷愀惴惺愃愡惻惱愍愎慇愾愨愧慊愿愼愬愴愽慂慄慳慷慘慙慚慫慴慯慥慱慟慝慓慵憙憖憇憬憔憚憊憑憫憮懌懊應懷懈懃懆憺懋罹懍懦懣懶懺懴懿懽懼懾戀戈戉戍戌戔戛\"],[\"9d40\",\"戞戡截戮戰戲戳扁扎扞扣扛扠扨扼抂抉找抒抓抖拔抃抔拗拑抻拏拿拆擔拈拜拌拊拂拇抛拉挌拮拱挧挂挈拯拵捐挾捍搜捏掖掎掀掫捶掣掏掉掟掵捫\"],[\"9d80\",\"捩掾揩揀揆揣揉插揶揄搖搴搆搓搦搶攝搗搨搏摧摯摶摎攪撕撓撥撩撈撼據擒擅擇撻擘擂擱擧舉擠擡抬擣擯攬擶擴擲擺攀擽攘攜攅攤攣攫攴攵攷收攸畋效敖敕敍敘敞敝敲數斂斃變斛斟斫斷旃旆旁旄旌旒旛旙无旡旱杲昊昃旻杳昵昶昴昜晏晄晉晁晞晝晤晧晨晟晢晰暃暈暎暉暄暘暝曁暹曉暾暼\"],[\"9e40\",\"曄暸曖曚曠昿曦曩曰曵曷朏朖朞朦朧霸朮朿朶杁朸朷杆杞杠杙杣杤枉杰枩杼杪枌枋枦枡枅枷柯枴柬枳柩枸柤柞柝柢柮枹柎柆柧檜栞框栩桀桍栲桎\"],[\"9e80\",\"梳栫桙档桷桿梟梏梭梔條梛梃檮梹桴梵梠梺椏梍桾椁棊椈棘椢椦棡椌棍棔棧棕椶椒椄棗棣椥棹棠棯椨椪椚椣椡棆楹楷楜楸楫楔楾楮椹楴椽楙椰楡楞楝榁楪榲榮槐榿槁槓榾槎寨槊槝榻槃榧樮榑榠榜榕榴槞槨樂樛槿權槹槲槧樅榱樞槭樔槫樊樒櫁樣樓橄樌橲樶橸橇橢橙橦橈樸樢檐檍檠檄檢檣\"],[\"9f40\",\"檗蘗檻櫃櫂檸檳檬櫞櫑櫟檪櫚櫪櫻欅蘖櫺欒欖鬱欟欸欷盜欹飮歇歃歉歐歙歔歛歟歡歸歹歿殀殄殃殍殘殕殞殤殪殫殯殲殱殳殷殼毆毋毓毟毬毫毳毯\"],[\"9f80\",\"麾氈氓气氛氤氣汞汕汢汪沂沍沚沁沛汾汨汳沒沐泄泱泓沽泗泅泝沮沱沾沺泛泯泙泪洟衍洶洫洽洸洙洵洳洒洌浣涓浤浚浹浙涎涕濤涅淹渕渊涵淇淦涸淆淬淞淌淨淒淅淺淙淤淕淪淮渭湮渮渙湲湟渾渣湫渫湶湍渟湃渺湎渤滿渝游溂溪溘滉溷滓溽溯滄溲滔滕溏溥滂溟潁漑灌滬滸滾漿滲漱滯漲滌\"],[\"e040\",\"漾漓滷澆潺潸澁澀潯潛濳潭澂潼潘澎澑濂潦澳澣澡澤澹濆澪濟濕濬濔濘濱濮濛瀉瀋濺瀑瀁瀏濾瀛瀚潴瀝瀘瀟瀰瀾瀲灑灣炙炒炯烱炬炸炳炮烟烋烝\"],[\"e080\",\"烙焉烽焜焙煥煕熈煦煢煌煖煬熏燻熄熕熨熬燗熹熾燒燉燔燎燠燬燧燵燼燹燿爍爐爛爨爭爬爰爲爻爼爿牀牆牋牘牴牾犂犁犇犒犖犢犧犹犲狃狆狄狎狒狢狠狡狹狷倏猗猊猜猖猝猴猯猩猥猾獎獏默獗獪獨獰獸獵獻獺珈玳珎玻珀珥珮珞璢琅瑯琥珸琲琺瑕琿瑟瑙瑁瑜瑩瑰瑣瑪瑶瑾璋璞璧瓊瓏瓔珱\"],[\"e140\",\"瓠瓣瓧瓩瓮瓲瓰瓱瓸瓷甄甃甅甌甎甍甕甓甞甦甬甼畄畍畊畉畛畆畚畩畤畧畫畭畸當疆疇畴疊疉疂疔疚疝疥疣痂疳痃疵疽疸疼疱痍痊痒痙痣痞痾痿\"],[\"e180\",\"痼瘁痰痺痲痳瘋瘍瘉瘟瘧瘠瘡瘢瘤瘴瘰瘻癇癈癆癜癘癡癢癨癩癪癧癬癰癲癶癸發皀皃皈皋皎皖皓皙皚皰皴皸皹皺盂盍盖盒盞盡盥盧盪蘯盻眈眇眄眩眤眞眥眦眛眷眸睇睚睨睫睛睥睿睾睹瞎瞋瞑瞠瞞瞰瞶瞹瞿瞼瞽瞻矇矍矗矚矜矣矮矼砌砒礦砠礪硅碎硴碆硼碚碌碣碵碪碯磑磆磋磔碾碼磅磊磬\"],[\"e240\",\"磧磚磽磴礇礒礑礙礬礫祀祠祗祟祚祕祓祺祿禊禝禧齋禪禮禳禹禺秉秕秧秬秡秣稈稍稘稙稠稟禀稱稻稾稷穃穗穉穡穢穩龝穰穹穽窈窗窕窘窖窩竈窰\"],[\"e280\",\"窶竅竄窿邃竇竊竍竏竕竓站竚竝竡竢竦竭竰笂笏笊笆笳笘笙笞笵笨笶筐筺笄筍笋筌筅筵筥筴筧筰筱筬筮箝箘箟箍箜箚箋箒箏筝箙篋篁篌篏箴篆篝篩簑簔篦篥籠簀簇簓篳篷簗簍篶簣簧簪簟簷簫簽籌籃籔籏籀籐籘籟籤籖籥籬籵粃粐粤粭粢粫粡粨粳粲粱粮粹粽糀糅糂糘糒糜糢鬻糯糲糴糶糺紆\"],[\"e340\",\"紂紜紕紊絅絋紮紲紿紵絆絳絖絎絲絨絮絏絣經綉絛綏絽綛綺綮綣綵緇綽綫總綢綯緜綸綟綰緘緝緤緞緻緲緡縅縊縣縡縒縱縟縉縋縢繆繦縻縵縹繃縷\"],[\"e380\",\"縲縺繧繝繖繞繙繚繹繪繩繼繻纃緕繽辮繿纈纉續纒纐纓纔纖纎纛纜缸缺罅罌罍罎罐网罕罔罘罟罠罨罩罧罸羂羆羃羈羇羌羔羞羝羚羣羯羲羹羮羶羸譱翅翆翊翕翔翡翦翩翳翹飜耆耄耋耒耘耙耜耡耨耿耻聊聆聒聘聚聟聢聨聳聲聰聶聹聽聿肄肆肅肛肓肚肭冐肬胛胥胙胝胄胚胖脉胯胱脛脩脣脯腋\"],[\"e440\",\"隋腆脾腓腑胼腱腮腥腦腴膃膈膊膀膂膠膕膤膣腟膓膩膰膵膾膸膽臀臂膺臉臍臑臙臘臈臚臟臠臧臺臻臾舁舂舅與舊舍舐舖舩舫舸舳艀艙艘艝艚艟艤\"],[\"e480\",\"艢艨艪艫舮艱艷艸艾芍芒芫芟芻芬苡苣苟苒苴苳苺莓范苻苹苞茆苜茉苙茵茴茖茲茱荀茹荐荅茯茫茗茘莅莚莪莟莢莖茣莎莇莊荼莵荳荵莠莉莨菴萓菫菎菽萃菘萋菁菷萇菠菲萍萢萠莽萸蔆菻葭萪萼蕚蒄葷葫蒭葮蒂葩葆萬葯葹萵蓊葢蒹蒿蒟蓙蓍蒻蓚蓐蓁蓆蓖蒡蔡蓿蓴蔗蔘蔬蔟蔕蔔蓼蕀蕣蕘蕈\"],[\"e540\",\"蕁蘂蕋蕕薀薤薈薑薊薨蕭薔薛藪薇薜蕷蕾薐藉薺藏薹藐藕藝藥藜藹蘊蘓蘋藾藺蘆蘢蘚蘰蘿虍乕虔號虧虱蚓蚣蚩蚪蚋蚌蚶蚯蛄蛆蚰蛉蠣蚫蛔蛞蛩蛬\"],[\"e580\",\"蛟蛛蛯蜒蜆蜈蜀蜃蛻蜑蜉蜍蛹蜊蜴蜿蜷蜻蜥蜩蜚蝠蝟蝸蝌蝎蝴蝗蝨蝮蝙蝓蝣蝪蠅螢螟螂螯蟋螽蟀蟐雖螫蟄螳蟇蟆螻蟯蟲蟠蠏蠍蟾蟶蟷蠎蟒蠑蠖蠕蠢蠡蠱蠶蠹蠧蠻衄衂衒衙衞衢衫袁衾袞衵衽袵衲袂袗袒袮袙袢袍袤袰袿袱裃裄裔裘裙裝裹褂裼裴裨裲褄褌褊褓襃褞褥褪褫襁襄褻褶褸襌褝襠襞\"],[\"e640\",\"襦襤襭襪襯襴襷襾覃覈覊覓覘覡覩覦覬覯覲覺覽覿觀觚觜觝觧觴觸訃訖訐訌訛訝訥訶詁詛詒詆詈詼詭詬詢誅誂誄誨誡誑誥誦誚誣諄諍諂諚諫諳諧\"],[\"e680\",\"諤諱謔諠諢諷諞諛謌謇謚諡謖謐謗謠謳鞫謦謫謾謨譁譌譏譎證譖譛譚譫譟譬譯譴譽讀讌讎讒讓讖讙讚谺豁谿豈豌豎豐豕豢豬豸豺貂貉貅貊貍貎貔豼貘戝貭貪貽貲貳貮貶賈賁賤賣賚賽賺賻贄贅贊贇贏贍贐齎贓賍贔贖赧赭赱赳趁趙跂趾趺跏跚跖跌跛跋跪跫跟跣跼踈踉跿踝踞踐踟蹂踵踰踴蹊\"],[\"e740\",\"蹇蹉蹌蹐蹈蹙蹤蹠踪蹣蹕蹶蹲蹼躁躇躅躄躋躊躓躑躔躙躪躡躬躰軆躱躾軅軈軋軛軣軼軻軫軾輊輅輕輒輙輓輜輟輛輌輦輳輻輹轅轂輾轌轉轆轎轗轜\"],[\"e780\",\"轢轣轤辜辟辣辭辯辷迚迥迢迪迯邇迴逅迹迺逑逕逡逍逞逖逋逧逶逵逹迸遏遐遑遒逎遉逾遖遘遞遨遯遶隨遲邂遽邁邀邊邉邏邨邯邱邵郢郤扈郛鄂鄒鄙鄲鄰酊酖酘酣酥酩酳酲醋醉醂醢醫醯醪醵醴醺釀釁釉釋釐釖釟釡釛釼釵釶鈞釿鈔鈬鈕鈑鉞鉗鉅鉉鉤鉈銕鈿鉋鉐銜銖銓銛鉚鋏銹銷鋩錏鋺鍄錮\"],[\"e840\",\"錙錢錚錣錺錵錻鍜鍠鍼鍮鍖鎰鎬鎭鎔鎹鏖鏗鏨鏥鏘鏃鏝鏐鏈鏤鐚鐔鐓鐃鐇鐐鐶鐫鐵鐡鐺鑁鑒鑄鑛鑠鑢鑞鑪鈩鑰鑵鑷鑽鑚鑼鑾钁鑿閂閇閊閔閖閘閙\"],[\"e880\",\"閠閨閧閭閼閻閹閾闊濶闃闍闌闕闔闖關闡闥闢阡阨阮阯陂陌陏陋陷陜陞陝陟陦陲陬隍隘隕隗險隧隱隲隰隴隶隸隹雎雋雉雍襍雜霍雕雹霄霆霈霓霎霑霏霖霙霤霪霰霹霽霾靄靆靈靂靉靜靠靤靦靨勒靫靱靹鞅靼鞁靺鞆鞋鞏鞐鞜鞨鞦鞣鞳鞴韃韆韈韋韜韭齏韲竟韶韵頏頌頸頤頡頷頽顆顏顋顫顯顰\"],[\"e940\",\"顱顴顳颪颯颱颶飄飃飆飩飫餃餉餒餔餘餡餝餞餤餠餬餮餽餾饂饉饅饐饋饑饒饌饕馗馘馥馭馮馼駟駛駝駘駑駭駮駱駲駻駸騁騏騅駢騙騫騷驅驂驀驃\"],[\"e980\",\"騾驕驍驛驗驟驢驥驤驩驫驪骭骰骼髀髏髑髓體髞髟髢髣髦髯髫髮髴髱髷髻鬆鬘鬚鬟鬢鬣鬥鬧鬨鬩鬪鬮鬯鬲魄魃魏魍魎魑魘魴鮓鮃鮑鮖鮗鮟鮠鮨鮴鯀鯊鮹鯆鯏鯑鯒鯣鯢鯤鯔鯡鰺鯲鯱鯰鰕鰔鰉鰓鰌鰆鰈鰒鰊鰄鰮鰛鰥鰤鰡鰰鱇鰲鱆鰾鱚鱠鱧鱶鱸鳧鳬鳰鴉鴈鳫鴃鴆鴪鴦鶯鴣鴟鵄鴕鴒鵁鴿鴾鵆鵈\"],[\"ea40\",\"鵝鵞鵤鵑鵐鵙鵲鶉鶇鶫鵯鵺鶚鶤鶩鶲鷄鷁鶻鶸鶺鷆鷏鷂鷙鷓鷸鷦鷭鷯鷽鸚鸛鸞鹵鹹鹽麁麈麋麌麒麕麑麝麥麩麸麪麭靡黌黎黏黐黔黜點黝黠黥黨黯\"],[\"ea80\",\"黴黶黷黹黻黼黽鼇鼈皷鼕鼡鼬鼾齊齒齔齣齟齠齡齦齧齬齪齷齲齶龕龜龠堯槇遙瑤凜熙\"],[\"ed40\",\"纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏\"],[\"ed80\",\"塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱\"],[\"ee40\",\"犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙\"],[\"ee80\",\"蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑\"],[\"eeef\",\"ⅰ\",9,\"￢￤＇＂\"],[\"f040\",\"\",62],[\"f080\",\"\",124],[\"f140\",\"\",62],[\"f180\",\"\",124],[\"f240\",\"\",62],[\"f280\",\"\",124],[\"f340\",\"\",62],[\"f380\",\"\",124],[\"f440\",\"\",62],[\"f480\",\"\",124],[\"f540\",\"\",62],[\"f580\",\"\",124],[\"f640\",\"\",62],[\"f680\",\"\",124],[\"f740\",\"\",62],[\"f780\",\"\",124],[\"f840\",\"\",62],[\"f880\",\"\",124],[\"f940\",\"\"],[\"fa40\",\"ⅰ\",9,\"Ⅰ\",9,\"￢￤＇＂㈱№℡∵纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊\"],[\"fa80\",\"兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯\"],[\"fb40\",\"涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神\"],[\"fb80\",\"祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙\"],[\"fc40\",\"髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑\"]]' ); }, 9523: function (e, t) { function r(e, t, r) { return ( t in e ? Object.defineProperty(e, t, { value: r, enumerable: !0, configurable: !0, writable: !0, }) : (e[t] = r), e ); } (e.exports = r), (e.exports.__esModule = !0), (e.exports[\"default\"] = e.exports); }, \"95c9\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.BasicParser = void 0); class i { init(e, t, r) { return ( (this.metadata = e), (this.tokenizer = t), (this.options = r), this ); } } t.BasicParser = i; }, 9611: function (e, t, r) { \"use strict\"; (function (e) { Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.APEv2Parser = void 0); const i = r(\"34eb\"), n = r(\"21c2\"), a = r(\"d3ab\"), o = r(\"95c9\"), s = r(\"1d55\"), c = r(\"6f58\"), u = i(\"music-metadata:parser:APEv2\"), A = \"APEv2\", f = \"APETAGEX\"; class l extends o.BasicParser { constructor() { super(...arguments), (this.ape = {}); } static tryParseApeHeader(e, t, r) { const i = new l(); return i.init(e, t, r), i.tryParseApeHeader(); } static calculateDuration(e) { let t = e.totalFrames > 1 ? e.blocksPerFrame * (e.totalFrames - 1) : 0; return (t += e.finalFrameBlocks), t / e.sampleRate; } static async findApeFooterOffset(t, r) { const i = e.alloc(s.TagFooter.len); await t.randomRead(i, 0, s.TagFooter.len, r - s.TagFooter.len); const n = s.TagFooter.get(i, 0); if (\"APETAGEX\" === n.ID) return ( u(\"APE footer header at offset=\" + r), { footer: n, offset: r - n.size } ); } static parseTagFooter(e, t, r) { const i = s.TagFooter.get(t, t.length - s.TagFooter.len); if (i.ID !== f) throw new Error(\"Unexpected APEv2 Footer ID preamble value.\"); n.fromBuffer(t); const a = new l(); return a.init(e, n.fromBuffer(t), r), a.parseTags(i); } async tryParseApeHeader() { if ( this.tokenizer.fileInfo.size && this.tokenizer.fileInfo.size - this.tokenizer.position < s.TagFooter.len ) return void u(\"No APEv2 header found, end-of-file reached\"); const t = await this.tokenizer.peekToken(s.TagFooter); if (t.ID === f) return ( await this.tokenizer.ignore(s.TagFooter.len), this.parseTags(t) ); if ( (u(\"APEv2 header not found at offset=\" + this.tokenizer.position), this.tokenizer.fileInfo.size) ) { const t = this.tokenizer.fileInfo.size - this.tokenizer.position, r = e.alloc(t); return ( await this.tokenizer.readBuffer(r), l.parseTagFooter(this.metadata, r, this.options) ); } } async parse() { const e = await this.tokenizer.readToken(s.DescriptorParser); if (\"MAC \" !== e.ID) throw new Error(\"Unexpected descriptor ID\"); this.ape.descriptor = e; const t = e.descriptorBytes - s.DescriptorParser.len, r = await (t > 0 ? this.parseDescriptorExpansion(t) : this.parseHeader()); return ( await this.tokenizer.ignore(r.forwardBytes), this.tryParseApeHeader() ); } async parseTags(t) { const r = e.alloc(256); let i = t.size - s.TagFooter.len; u(`Parse APE tags at offset=${this.tokenizer.position}, size=${i}`); for (let n = 0; n < t.fields; n++) { if (i < s.TagItemHeader.len) { this.metadata.addWarning( `APEv2 Tag-header: ${ t.fields - n } items remaining, but no more tag data to read.` ); break; } const o = await this.tokenizer.readToken(s.TagItemHeader); (i -= s.TagItemHeader.len + o.size), await this.tokenizer.peekBuffer(r, { length: Math.min(r.length, i), }); let f = a.findZero(r, 0, r.length); const l = await this.tokenizer.readToken( new c.StringType(f, \"ascii\") ); switch ( (await this.tokenizer.ignore(1), (i -= l.length + 1), o.flags.dataType) ) { case s.DataType.text_utf8: { const e = await this.tokenizer.readToken( new c.StringType(o.size, \"utf8\") ), t = e.split(/\\x00/g); for (const r of t) this.metadata.addTag(A, l, r); break; } case s.DataType.binary: if (this.options.skipCovers) await this.tokenizer.ignore(o.size); else { const t = e.alloc(o.size); await this.tokenizer.readBuffer(t), (f = a.findZero(t, 0, t.length)); const r = t.toString(\"utf8\", 0, f), i = e.from(t.slice(f + 1)); this.metadata.addTag(A, l, { description: r, data: i }); } break; case s.DataType.external_info: u(\"Ignore external info \" + l), await this.tokenizer.ignore(o.size); break; default: throw new Error(\"Unexpected data-type: \" + o.flags.dataType); } } } async parseDescriptorExpansion(e) { return await this.tokenizer.ignore(e), this.parseHeader(); } async parseHeader() { const e = await this.tokenizer.readToken(s.Header); return ( this.metadata.setFormat(\"lossless\", !0), this.metadata.setFormat(\"container\", \"Monkey's Audio\"), this.metadata.setFormat(\"bitsPerSample\", e.bitsPerSample), this.metadata.setFormat(\"sampleRate\", e.sampleRate), this.metadata.setFormat(\"numberOfChannels\", e.channel), this.metadata.setFormat(\"duration\", l.calculateDuration(e)), { forwardBytes: this.ape.descriptor.seekTableBytes + this.ape.descriptor.headerDataBytes + this.ape.descriptor.apeFrameDataBytes + this.ape.descriptor.terminatingDataBytes, } ); } } t.APEv2Parser = l; }).call(this, r(\"1c35\").Buffer); }, \"966d\": function (e, t, r) { \"use strict\"; (function (t) { function r(e, r, i, n) { if (\"function\" !== typeof e) throw new TypeError('\"callback\" argument must be a function'); var a, o, s = arguments.length; switch (s) { case 0: case 1: return t.nextTick(e); case 2: return t.nextTick(function () { e.call(null, r); }); case 3: return t.nextTick(function () { e.call(null, r, i); }); case 4: return t.nextTick(function () { e.call(null, r, i, n); }); default: (a = new Array(s - 1)), (o = 0); while (o < a.length) a[o++] = arguments[o]; return t.nextTick(function () { e.apply(null, a); }); } } \"undefined\" === typeof t || !t.version || 0 === t.version.indexOf(\"v0.\") || (0 === t.version.indexOf(\"v1.\") && 0 !== t.version.indexOf(\"v1.8.\")) ? (e.exports = { nextTick: r }) : (e.exports = t); }).call(this, r(\"4362\")); }, \"96cf\": function (e, t, r) { var i = (function (e) { \"use strict\"; var t, r = Object.prototype, i = r.hasOwnProperty, n = \"function\" === typeof Symbol ? Symbol : {}, a = n.iterator || \"@@iterator\", o = n.asyncIterator || \"@@asyncIterator\", s = n.toStringTag || \"@@toStringTag\"; function c(e, t, r) { return ( Object.defineProperty(e, t, { value: r, enumerable: !0, configurable: !0, writable: !0, }), e[t] ); } try { c({}, \"\"); } catch (D) { c = function (e, t, r) { return (e[t] = r); }; } function u(e, t, r, i) { var n = t && t.prototype instanceof p ? t : p, a = Object.create(n.prototype), o = new S(i || []); return (a._invoke = C(e, r, o)), a; } function A(e, t, r) { try { return { type: \"normal\", arg: e.call(t, r) }; } catch (D) { return { type: \"throw\", arg: D }; } } e.wrap = u; var f = \"suspendedStart\", l = \"suspendedYield\", h = \"executing\", d = \"completed\", g = {}; function p() {} function m() {} function b() {} var I = {}; c(I, a, function () { return this; }); var E = Object.getPrototypeOf, y = E && E(E(x([]))); y && y !== r && i.call(y, a) && (I = y); var B = (b.prototype = p.prototype = Object.create(I)); function v(e) { [\"next\", \"throw\", \"return\"].forEach(function (t) { c(e, t, function (e) { return this._invoke(t, e); }); }); } function w(e, t) { function r(n, a, o, s) { var c = A(e[n], e, a); if (\"throw\" !== c.type) { var u = c.arg, f = u.value; return f && \"object\" === typeof f && i.call(f, \"__await\") ? t.resolve(f.__await).then( function (e) { r(\"next\", e, o, s); }, function (e) { r(\"throw\", e, o, s); } ) : t.resolve(f).then( function (e) { (u.value = e), o(u); }, function (e) { return r(\"throw\", e, o, s); } ); } s(c.arg); } var n; function a(e, i) { function a() { return new t(function (t, n) { r(e, i, t, n); }); } return (n = n ? n.then(a, a) : a()); } this._invoke = a; } function C(e, t, r) { var i = f; return function (n, a) { if (i === h) throw new Error(\"Generator is already running\"); if (i === d) { if (\"throw\" === n) throw a; return T(); } (r.method = n), (r.arg = a); while (1) { var o = r.delegate; if (o) { var s = _(o, r); if (s) { if (s === g) continue; return s; } } if (\"next\" === r.method) r.sent = r._sent = r.arg; else if (\"throw\" === r.method) { if (i === f) throw ((i = d), r.arg); r.dispatchException(r.arg); } else \"return\" === r.method && r.abrupt(\"return\", r.arg); i = h; var c = A(e, t, r); if (\"normal\" === c.type) { if (((i = r.done ? d : l), c.arg === g)) continue; return { value: c.arg, done: r.done }; } \"throw\" === c.type && ((i = d), (r.method = \"throw\"), (r.arg = c.arg)); } }; } function _(e, r) { var i = e.iterator[r.method]; if (i === t) { if (((r.delegate = null), \"throw\" === r.method)) { if ( e.iterator[\"return\"] && ((r.method = \"return\"), (r.arg = t), _(e, r), \"throw\" === r.method) ) return g; (r.method = \"throw\"), (r.arg = new TypeError( \"The iterator does not provide a 'throw' method\" )); } return g; } var n = A(i, e.iterator, r.arg); if (\"throw\" === n.type) return (r.method = \"throw\"), (r.arg = n.arg), (r.delegate = null), g; var a = n.arg; return a ? a.done ? ((r[e.resultName] = a.value), (r.next = e.nextLoc), \"return\" !== r.method && ((r.method = \"next\"), (r.arg = t)), (r.delegate = null), g) : a : ((r.method = \"throw\"), (r.arg = new TypeError(\"iterator result is not an object\")), (r.delegate = null), g); } function Q(e) { var t = { tryLoc: e[0] }; 1 in e && (t.catchLoc = e[1]), 2 in e && ((t.finallyLoc = e[2]), (t.afterLoc = e[3])), this.tryEntries.push(t); } function k(e) { var t = e.completion || {}; (t.type = \"normal\"), delete t.arg, (e.completion = t); } function S(e) { (this.tryEntries = [{ tryLoc: \"root\" }]), e.forEach(Q, this), this.reset(!0); } function x(e) { if (e) { var r = e[a]; if (r) return r.call(e); if (\"function\" === typeof e.next) return e; if (!isNaN(e.length)) { var n = -1, o = function r() { while (++n < e.length) if (i.call(e, n)) return (r.value = e[n]), (r.done = !1), r; return (r.value = t), (r.done = !0), r; }; return (o.next = o); } } return { next: T }; } function T() { return { value: t, done: !0 }; } return ( (m.prototype = b), c(B, \"constructor\", b), c(b, \"constructor\", m), (m.displayName = c(b, s, \"GeneratorFunction\")), (e.isGeneratorFunction = function (e) { var t = \"function\" === typeof e && e.constructor; return ( !!t && (t === m || \"GeneratorFunction\" === (t.displayName || t.name)) ); }), (e.mark = function (e) { return ( Object.setPrototypeOf ? Object.setPrototypeOf(e, b) : ((e.__proto__ = b), c(e, s, \"GeneratorFunction\")), (e.prototype = Object.create(B)), e ); }), (e.awrap = function (e) { return { __await: e }; }), v(w.prototype), c(w.prototype, o, function () { return this; }), (e.AsyncIterator = w), (e.async = function (t, r, i, n, a) { void 0 === a && (a = Promise); var o = new w(u(t, r, i, n), a); return e.isGeneratorFunction(r) ? o : o.next().then(function (e) { return e.done ? e.value : o.next(); }); }), v(B), c(B, s, \"Generator\"), c(B, a, function () { return this; }), c(B, \"toString\", function () { return \"[object Generator]\"; }), (e.keys = function (e) { var t = []; for (var r in e) t.push(r); return ( t.reverse(), function r() { while (t.length) { var i = t.pop(); if (i in e) return (r.value = i), (r.done = !1), r; } return (r.done = !0), r; } ); }), (e.values = x), (S.prototype = { constructor: S, reset: function (e) { if ( ((this.prev = 0), (this.next = 0), (this.sent = this._sent = t), (this.done = !1), (this.delegate = null), (this.method = \"next\"), (this.arg = t), this.tryEntries.forEach(k), !e) ) for (var r in this) \"t\" === r.charAt(0) && i.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function () { this.done = !0; var e = this.tryEntries[0], t = e.completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function (e) { if (this.done) throw e; var r = this; function n(i, n) { return ( (s.type = \"throw\"), (s.arg = e), (r.next = i), n && ((r.method = \"next\"), (r.arg = t)), !!n ); } for (var a = this.tryEntries.length - 1; a >= 0; --a) { var o = this.tryEntries[a], s = o.completion; if (\"root\" === o.tryLoc) return n(\"end\"); if (o.tryLoc > 1), (e |= e >>> 2), (e |= e >>> 4), (e |= e >>> 8), (e |= e >>> 16), e++), e ); } function N(e, t) { return e t.highWaterMark && (t.highWaterMark = R(e)), e = t.length ? ((r = t.decoder ? t.buffer.join(\"\") : 1 === t.buffer.length ? t.buffer.first() : t.buffer.concat(t.length)), t.buffer.clear()) : (r = t.buffer.consume(e, t.decoder)), r); var r; } function q(e) { var t = e._readableState; f(\"endReadable\", t.endEmitted), t.endEmitted || ((t.ended = !0), i.nextTick(K, t, e)); } function K(e, t) { if ( (f(\"endReadableNT\", e.endEmitted, e.length), !e.endEmitted && 0 === e.length && ((e.endEmitted = !0), (t.readable = !1), t.emit(\"end\"), e.autoDestroy)) ) { var r = t._writableState; (!r || (r.autoDestroy && r.finished)) && t.destroy(); } } function X(e, t) { for (var r = 0, i = e.length; r < i; r++) if (e[r] === t) return r; return -1; } (S.prototype.read = function (e) { f(\"read\", e), (e = parseInt(e, 10)); var t = this._readableState, r = e; if ( (0 !== e && (t.emittedReadable = !1), 0 === e && t.needReadable && ((0 !== t.highWaterMark ? t.length >= t.highWaterMark : t.length > 0) || t.ended)) ) return ( f(\"read: emitReadable\", t.length, t.ended), 0 === t.length && t.ended ? q(this) : L(this), null ); if (((e = N(e, t)), 0 === e && t.ended)) return 0 === t.length && q(this), null; var i, n = t.needReadable; return ( f(\"need readable\", n), (0 === t.length || t.length - e < t.highWaterMark) && ((n = !0), f(\"length less than watermark\", n)), t.ended || t.reading ? ((n = !1), f(\"reading or ended\", n)) : n && (f(\"do read\"), (t.reading = !0), (t.sync = !0), 0 === t.length && (t.needReadable = !0), this._read(t.highWaterMark), (t.sync = !1), t.reading || (e = N(r, t))), (i = e > 0 ? J(e, t) : null), null === i ? ((t.needReadable = t.length 1 && -1 !== X(n.pipes, e))) && !l && (f(\"false write response, pause\", n.awaitDrain), n.awaitDrain++), r.pause()); } function g(t) { f(\"onerror\", t), b(), e.removeListener(\"error\", g), 0 === a(e, \"error\") && C(e, t); } function p() { e.removeListener(\"finish\", m), b(); } function m() { f(\"onfinish\"), e.removeListener(\"close\", p), b(); } function b() { f(\"unpipe\"), r.unpipe(e); } return ( r.on(\"data\", d), Q(e, \"error\", g), e.once(\"close\", p), e.once(\"finish\", m), e.emit(\"pipe\", r), n.flowing || (f(\"pipe resume\"), r.resume()), e ); }), (S.prototype.unpipe = function (e) { var t = this._readableState, r = { hasUnpiped: !1 }; if (0 === t.pipesCount) return this; if (1 === t.pipesCount) return ( (e && e !== t.pipes) || (e || (e = t.pipes), (t.pipes = null), (t.pipesCount = 0), (t.flowing = !1), e && e.emit(\"unpipe\", this, r)), this ); if (!e) { var i = t.pipes, n = t.pipesCount; (t.pipes = null), (t.pipesCount = 0), (t.flowing = !1); for (var a = 0; a < n; a++) i[a].emit(\"unpipe\", this, { hasUnpiped: !1 }); return this; } var o = X(t.pipes, e); return ( -1 === o || (t.pipes.splice(o, 1), (t.pipesCount -= 1), 1 === t.pipesCount && (t.pipes = t.pipes[0]), e.emit(\"unpipe\", this, r)), this ); }), (S.prototype.on = function (e, t) { var r = o.prototype.on.call(this, e, t), n = this._readableState; return ( \"data\" === e ? ((n.readableListening = this.listenerCount(\"readable\") > 0), !1 !== n.flowing && this.resume()) : \"readable\" === e && (n.endEmitted || n.readableListening || ((n.readableListening = n.needReadable = !0), (n.flowing = !1), (n.emittedReadable = !1), f(\"on readable\", n.length, n.reading), n.length ? L(this) : n.reading || i.nextTick(j, this))), r ); }), (S.prototype.addListener = S.prototype.on), (S.prototype.removeListener = function (e, t) { var r = o.prototype.removeListener.call(this, e, t); return \"readable\" === e && i.nextTick(z, this), r; }), (S.prototype.removeAllListeners = function (e) { var t = o.prototype.removeAllListeners.apply(this, arguments); return (\"readable\" !== e && void 0 !== e) || i.nextTick(z, this), t; }), (S.prototype.resume = function () { var e = this._readableState; return ( e.flowing || (f(\"resume\"), (e.flowing = !e.readableListening), H(this, e)), (e.paused = !1), this ); }), (S.prototype.pause = function () { return ( f(\"call pause flowing=%j\", this._readableState.flowing), !1 !== this._readableState.flowing && (f(\"pause\"), (this._readableState.flowing = !1), this.emit(\"pause\")), (this._readableState.paused = !0), this ); }), (S.prototype.wrap = function (e) { var t = this, r = this._readableState, i = !1; for (var n in (e.on(\"end\", function () { if ((f(\"wrapped end\"), r.decoder && !r.ended)) { var e = r.decoder.end(); e && e.length && t.push(e); } t.push(null); }), e.on(\"data\", function (n) { if ( (f(\"wrapped data\"), r.decoder && (n = r.decoder.write(n)), (!r.objectMode || (null !== n && void 0 !== n)) && (r.objectMode || (n && n.length))) ) { var a = t.push(n); a || ((i = !0), e.pause()); } }), e)) void 0 === this[n] && \"function\" === typeof e[n] && (this[n] = (function (t) { return function () { return e[t].apply(e, arguments); }; })(n)); for (var a = 0; a < _.length; a++) e.on(_[a], this.emit.bind(this, _[a])); return ( (this._read = function (t) { f(\"wrapped _read\", t), i && ((i = !1), e.resume()); }), this ); }), \"function\" === typeof Symbol && (S.prototype[Symbol.asyncIterator] = function () { return void 0 === d && (d = r(\"82de\")), d(this); }), Object.defineProperty(S.prototype, \"readableHighWaterMark\", { enumerable: !1, get: function () { return this._readableState.highWaterMark; }, }), Object.defineProperty(S.prototype, \"readableBuffer\", { enumerable: !1, get: function () { return this._readableState && this._readableState.buffer; }, }), Object.defineProperty(S.prototype, \"readableFlowing\", { enumerable: !1, get: function () { return this._readableState.flowing; }, set: function (e) { this._readableState && (this._readableState.flowing = e); }, }), (S._fromList = J), Object.defineProperty(S.prototype, \"readableLength\", { enumerable: !1, get: function () { return this._readableState.length; }, }), \"function\" === typeof Symbol && (S.from = function (e, t) { return void 0 === g && (g = r(\"a3bc\")), g(S, e, t); }); }).call(this, r(\"c8ba\"), r(\"4362\")); }, bda5: function (e, t, r) { \"use strict\"; (function (e) { Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.VorbisParser = void 0); const i = r(\"6f58\"), n = r(\"34eb\"), a = r(\"599d\"), o = r(\"7230\"), s = n(\"music-metadata:parser:ogg:vorbis1\"); class c { constructor(e, t) { (this.metadata = e), (this.options = t), (this.pageSegments = []); } parsePage(t, r) { if (t.headerType.firstPage) this.parseFirstPage(t, r); else { if (t.headerType.continued) { if (0 === this.pageSegments.length) throw new Error(\"Cannot continue on previous page\"); this.pageSegments.push(r); } if (t.headerType.lastPage || !t.headerType.continued) { if (this.pageSegments.length > 0) { const t = e.concat(this.pageSegments); this.parseFullPage(t); } this.pageSegments = t.headerType.lastPage ? [] : [r]; } } t.headerType.lastPage && this.calculateDuration(t); } flush() { this.parseFullPage(e.concat(this.pageSegments)); } parseUserComment(e, t) { const r = new a.VorbisDecoder(e, t), i = r.parseUserComment(); return this.addTag(i.key, i.value), i.len; } addTag(e, t) { if (\"METADATA_BLOCK_PICTURE\" === e && \"string\" === typeof t) { if (this.options.skipCovers) return void s(\"Ignore picture\"); (t = o.VorbisPictureToken.fromBase64(t)), s(`Push picture: id=${e}, format=${t.format}`); } else s(`Push tag: id=${e}, value=${t}`); this.metadata.addTag(\"vorbis\", e, t); } calculateDuration(e) { this.metadata.format.sampleRate && e.absoluteGranulePosition >= 0 && (this.metadata.setFormat( \"numberOfSamples\", e.absoluteGranulePosition ), this.metadata.setFormat( \"duration\", this.metadata.format.numberOfSamples / this.metadata.format.sampleRate )); } parseFirstPage(e, t) { this.metadata.setFormat(\"codec\", \"Vorbis I\"), s(\"Parse first page\"); const r = o.CommonHeader.get(t, 0); if (\"vorbis\" !== r.vorbis) throw new Error(\"Metadata does not look like Vorbis\"); if (1 !== r.packetType) throw new Error( \"First Ogg page should be type 1: the identification header\" ); { const e = o.IdentificationHeader.get(t, o.CommonHeader.len); this.metadata.setFormat(\"sampleRate\", e.sampleRate), this.metadata.setFormat(\"bitrate\", e.bitrateNominal), this.metadata.setFormat(\"numberOfChannels\", e.channelMode), s( \"sample-rate=%s[hz], bitrate=%s[b/s], channel-mode=%s\", e.sampleRate, e.bitrateNominal, e.channelMode ); } } parseFullPage(e) { const t = o.CommonHeader.get(e, 0); switch ( (s( \"Parse full page: type=%s, byteLength=%s\", t.packetType, e.byteLength ), t.packetType) ) { case 3: return this.parseUserCommentList(e, o.CommonHeader.len); case 1: case 5: break; } } parseUserCommentList(e, t) { const r = i.UINT32_LE.get(e, t); (t += 4), (t += r); let n = i.UINT32_LE.get(e, t); t += 4; while (n-- > 0) t += this.parseUserComment(e, t); } } t.VorbisParser = c; }).call(this, r(\"1c35\").Buffer); }, be09: function (e, t, r) { (function (t) { var r; (r = \"undefined\" !== typeof window ? window : \"undefined\" !== typeof t ? t : \"undefined\" !== typeof self ? self : {}), (e.exports = r); }).call(this, r(\"c8ba\")); }, be7f: function (e, t, r) { \"use strict\"; var i = \"undefined\" !== typeof Uint8Array && \"undefined\" !== typeof Uint16Array && \"undefined\" !== typeof Int32Array; function n(e, t) { return Object.prototype.hasOwnProperty.call(e, t); } (t.assign = function (e) { var t = Array.prototype.slice.call(arguments, 1); while (t.length) { var r = t.shift(); if (r) { if (\"object\" !== typeof r) throw new TypeError(r + \"must be non-object\"); for (var i in r) n(r, i) && (e[i] = r[i]); } } return e; }), (t.shrinkBuf = function (e, t) { return e.length === t ? e : e.subarray ? e.subarray(0, t) : ((e.length = t), e); }); var a = { arraySet: function (e, t, r, i, n) { if (t.subarray && e.subarray) e.set(t.subarray(r, r + i), n); else for (var a = 0; a < i; a++) e[n + a] = t[r + a]; }, flattenChunks: function (e) { var t, r, i, n, a, o; for (i = 0, t = 0, r = e.length; t < r; t++) i += e[t].length; for (o = new Uint8Array(i), n = 0, t = 0, r = e.length; t < r; t++) (a = e[t]), o.set(a, n), (n += a.length); return o; }, }, o = { arraySet: function (e, t, r, i, n) { for (var a = 0; a < i; a++) e[n + a] = t[r + a]; }, flattenChunks: function (e) { return [].concat.apply([], e); }, }; (t.setTyped = function (e) { e ? ((t.Buf8 = Uint8Array), (t.Buf16 = Uint16Array), (t.Buf32 = Int32Array), t.assign(t, a)) : ((t.Buf8 = Array), (t.Buf16 = Array), (t.Buf32 = Array), t.assign(t, o)); }), t.setTyped(i); }, bef3: function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.Atom = void 0); const i = r(\"34eb\"), n = r(\"150c\"), a = i(\"music-metadata:parser:MP4:Atom\"); class o { constructor(e, t, r) { (this.header = e), (this.extended = t), (this.parent = r), (this.children = []), (this.atomPath = (this.parent ? this.parent.atomPath + \".\" : \"\") + this.header.name); } static async readAtom(e, t, r, i) { const s = e.position, c = await e.readToken(n.Header), u = c.length === BigInt(1); u && (c.length = await e.readToken(n.ExtendedSize)); const A = new o(c, c.length === BigInt(1), r), f = A.getPayloadLength(i); return ( a( `parse atom name=${A.atomPath}, extended=${A.extended}, offset=${s}, len=${A.header.length}` ), await A.readData(e, t, f), A ); } getHeaderLength() { return this.extended ? 16 : 8; } getPayloadLength(e) { return ( (this.header.length === BigInt(0) ? e : Number(this.header.length)) - this.getHeaderLength() ); } async readAtoms(e, t, r) { while (r > 0) { const i = await o.readAtom(e, t, this, r); this.children.push(i), (r -= i.header.length === BigInt(0) ? r : Number(i.header.length)); } } async readData(e, t, r) { switch (this.header.name) { case \"moov\": case \"udta\": case \"trak\": case \"mdia\": case \"minf\": case \"stbl\": case \"\": case \"ilst\": case \"tref\": return this.readAtoms(e, t, this.getPayloadLength(r)); case \"meta\": return ( await e.ignore(4), this.readAtoms(e, t, this.getPayloadLength(r) - 4) ); case \"mdhd\": case \"mvhd\": case \"tkhd\": case \"stsz\": case \"mdat\": default: return t(this, r); } } } t.Atom = o; }, c04e: function (e, t, r) { var i = r(\"da84\"), n = r(\"c65b\"), a = r(\"861d\"), o = r(\"d9b5\"), s = r(\"dc4a\"), c = r(\"485a\"), u = r(\"b622\"), A = i.TypeError, f = u(\"toPrimitive\"); e.exports = function (e, t) { if (!a(e) || o(e)) return e; var r, i = s(e, f); if (i) { if ((void 0 === t && (t = \"default\"), (r = n(i, e, t)), !a(r) || o(r))) return r; throw A(\"Can't convert object to primitive value\"); } return void 0 === t && (t = \"number\"), c(e, t); }; }, c057: function (e, t, r) { \"use strict\"; function i(e) { var t = \"RIFF\" === e.toString(\"ascii\", 0, 4), r = \"WEBP\" === e.toString(\"ascii\", 8, 12), i = \"VP8\" === e.toString(\"ascii\", 12, 15); return t && r && i; } function n(e) { var t = e.toString(\"ascii\", 12, 16); if (((e = e.slice(20, 30)), \"VP8X\" === t)) { var r = e[0], i = 0 === (192 & r), n = 0 === (1 & r); return !(!i || !n) && a(e); } if (\"VP8 \" === t && 47 !== e[0]) return s(e); var c = e.toString(\"hex\", 3, 6); return \"VP8L\" === t && \"9d012a\" !== c && o(e); } function a(e) { return { width: 1 + e.readUIntLE(4, 3), height: 1 + e.readUIntLE(7, 3) }; } function o(e) { return { width: 1 + (((63 & e[2]) < 8) | e[1]), height: 1 + (((15 & e[4]) < 10) | (e[3] < 2) | ((192 & e[2]) >> 6)), }; } function s(e) { return { width: 16383 & e.readInt16LE(6), height: 16383 & e.readInt16LE(8), }; } e.exports = { detect: i, calculate: n }; }, c135: function (e, t) { function r(e) { if (Array.isArray(e)) return e; } (e.exports = r), (e.exports.__esModule = !0), (e.exports[\"default\"] = e.exports); }, c198: function (e, t, r) { (function (t, i, n) { e.exports = i(r(\"21bf\"), r(\"1132\"), r(\"72fe\"), r(\"2b79\"), r(\"38ba\")); })(0, function (e) { return ( (function () { var t = e, r = t.lib, i = r.BlockCipher, n = t.algo, a = [], o = [], s = [], c = [], u = [], A = [], f = [], l = [], h = [], d = []; (function () { for (var e = [], t = 0; t < 256; t++) e[t] = t < 128 ? t < 1 : (t < 1) ^ 283; var r = 0, i = 0; for (t = 0; t < 256; t++) { var n = i ^ (i < 1) ^ (i < 2) ^ (i < 3) ^ (i < 4); (n = (n >>> 8) ^ (255 & n) ^ 99), (a[r] = n), (o[n] = r); var g = e[r], p = e[g], m = e[p], b = (257 * e[n]) ^ (16843008 * n); (s[r] = (b < 24) | (b >>> 8)), (c[r] = (b < 16) | (b >>> 16)), (u[r] = (b < 8) | (b >>> 24)), (A[r] = b); b = (16843009 * m) ^ (65537 * p) ^ (257 * g) ^ (16843008 * r); (f[n] = (b < 24) | (b >>> 8)), (l[n] = (b < 16) | (b >>> 16)), (h[n] = (b < 8) | (b >>> 24)), (d[n] = b), r ? ((r = g ^ e[e[e[m ^ g]]]), (i ^= e[e[i]])) : (r = i = 1); } })(); var g = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], p = (n.AES = i.extend({ _doReset: function () { if (!this._nRounds || this._keyPriorReset !== this._key) { for ( var e = (this._keyPriorReset = this._key), t = e.words, r = e.sigBytes / 4, i = (this._nRounds = r + 6), n = 4 * (i + 1), o = (this._keySchedule = []), s = 0; s < n; s++ ) s < r ? (o[s] = t[s]) : ((A = o[s - 1]), s % r ? r > 6 && s % r == 4 && (A = (a[A >>> 24] < 24) | (a[(A >>> 16) & 255] < 16) | (a[(A >>> 8) & 255] < 8) | a[255 & A]) : ((A = (A < 8) | (A >>> 24)), (A = (a[A >>> 24] < 24) | (a[(A >>> 16) & 255] < 16) | (a[(A >>> 8) & 255] < 8) | a[255 & A]), (A ^= g[(s / r) | 0] < 24)), (o[s] = o[s - r] ^ A)); for (var c = (this._invKeySchedule = []), u = 0; u < n; u++) { s = n - u; if (u % 4) var A = o[s]; else A = o[s - 4]; c[u] = u < 4 || s >> 8) & 255] ^ o[255 & u] ^ r[h++], m = i[f >>> 24] ^ n[(l >>> 16) & 255] ^ a[(u >>> 8) & 255] ^ o[255 & A] ^ r[h++], b = i[l >>> 24] ^ n[(u >>> 16) & 255] ^ a[(A >>> 8) & 255] ^ o[255 & f] ^ r[h++]; (u = g), (A = p), (f = m), (l = b); } (g = ((s[u >>> 24] < 24) | (s[(A >>> 16) & 255] < 16) | (s[(f >>> 8) & 255] < 8) | s[255 & l]) ^ r[h++]), (p = ((s[A >>> 24] < 24) | (s[(f >>> 16) & 255] < 16) | (s[(l >>> 8) & 255] < 8) | s[255 & u]) ^ r[h++]), (m = ((s[f >>> 24] < 24) | (s[(l >>> 16) & 255] < 16) | (s[(u >>> 8) & 255] < 8) | s[255 & A]) ^ r[h++]), (b = ((s[l >>> 24] < 24) | (s[(u >>> 16) & 255] < 16) | (s[(A >>> 8) & 255] < 8) | s[255 & f]) ^ r[h++]); (e[t] = g), (e[t + 1] = p), (e[t + 2] = m), (e[t + 3] = b); }, keySize: 8, })); t.AES = i._createHelper(p); })(), e.AES ); }); }, c1ac: function (e, t, r) { \"use strict\"; var i = r(\"ebb5\"), n = r(\"b727\").filter, a = r(\"1448\"), o = i.aTypedArray, s = i.exportTypedArrayMethod; s(\"filter\", function (e) { var t = n(o(this), e, arguments.length > 1 ? arguments[1] : void 0); return a(this, t); }); }, c240: function (e, t) { function r() { throw new TypeError( \"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\" ); } (e.exports = r), (e.exports.__esModule = !0), (e.exports[\"default\"] = e.exports); }, c2ae: function (e, t, r) { e.exports = r(\"e372\").PassThrough; }, c2d7: function (e, t, r) { \"use strict\"; var i = r(\"4ea4\"); Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.isNodePattern = o), (t.throwError = s), (t.scan = c), (t.scanIterator = u); var n = i(r(\"a34a\")), a = n[\"default\"].mark(u); function o(e) { if (\"undefined\" === typeof e) return !1; if (\"function\" !== typeof e) throw new TypeError(\"Callback must be a function\"); return !0; } function s(e, t) { if ( (\"string\" === typeof e && (e = new Error(e)), \"function\" === typeof t) ) return t.call(this, e); throw e; } function c(e, t, r, i, n, a) { (t = Math.round(t)), (r = Math.round(r)), (i = Math.round(i)), (n = Math.round(n)); for (var o = r; o < r + n; o++) for (var s = t; s < t + i; s++) { var c = (e.bitmap.width * o + s) < 2; a.call(e, s, o, c); } return e; } function u(e, t, r, i, o) { var s, c, u; return n[\"default\"].wrap(function (n) { while (1) switch ((n.prev = n.next)) { case 0: (t = Math.round(t)), (r = Math.round(r)), (i = Math.round(i)), (o = Math.round(o)), (s = r); case 5: if (!(s < r + o)) { n.next = 17; break; } c = t; case 7: if (!(c < t + i)) { n.next = 14; break; } return ( (u = (e.bitmap.width * s + c) < 2), (n.next = 11), { x: c, y: s, idx: u, image: e } ); case 11: c++, (n.next = 7); break; case 14: s++, (n.next = 5); break; case 17: case \"end\": return n.stop(); } }, a); } }, c430: function (e, t) { e.exports = !1; }, c4c0: function (e, t, r) { \"use strict\"; (function (t) { var i = r(\"3e8f\"), n = r(\"df7c\"), a = r(\"78b4\"), o = r(\"a2c0\"), s = 524288; function c(e, t) { var r = o(e, t); if (r in a) { var i = a[r].calculate(e, t); if (!1 !== i) return (i.type = r), i; } throw new TypeError( \"unsupported file type: \" + r + \" (file: \" + t + \")\" ); } function u(e, r) { i.open(e, \"r\", function (n, a) { if (n) return r(n); i.fstat(a, function (n, o) { if (n) return r(n); var c = o.size; if (c"},{"title":"","date":"2023-10-06T09:03:29.035Z","updated":"2023-10-06T07:06:02.000Z","comments":true,"path":"mypage/js/chunk-vendors.5db7ca01.js","permalink":"http://www.shelven.com/mypage/js/chunk-vendors.5db7ca01.js","excerpt":"","text":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([ [\"chunk-vendors\"], { \"00b4\": function (e, t, r) { \"use strict\"; r(\"ac1f\"); var n = r(\"23e7\"), i = r(\"da84\"), a = r(\"c65b\"), o = r(\"e330\"), s = r(\"1626\"), u = r(\"861d\"), c = (function () { var e = !1, t = /[ac]/; return ( (t.exec = function () { return (e = !0), /./.exec.apply(this, arguments); }), !0 === t.test(\"abc\") && e ); })(), l = i.Error, f = o(/./.test); n( { target: \"RegExp\", proto: !0, forced: !c }, { test: function (e) { var t = this.exec; if (!s(t)) return f(this, e); var r = a(t, this, e); if (null !== r && !u(r)) throw new l( \"RegExp exec method returned something other than an Object or null\" ); return !!r; }, } ); }, \"00ee\": function (e, t, r) { var n = r(\"b622\"), i = n(\"toStringTag\"), a = {}; (a[i] = \"z\"), (e.exports = \"[object z]\" === String(a)); }, \"00f6\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.SpeexParser = void 0); const n = r(\"34eb\"), i = r(\"04cc\"), a = r(\"bda5\"), o = n(\"music-metadata:parser:ogg:speex\"); class s extends a.VorbisParser { constructor(e, t, r) { super(e, t), (this.tokenizer = r); } parseFirstPage(e, t) { o(\"First Ogg/Speex page\"); const r = i.Header.get(t, 0); this.metadata.setFormat(\"codec\", \"Speex \" + r.version), this.metadata.setFormat(\"numberOfChannels\", r.nb_channels), this.metadata.setFormat(\"sampleRate\", r.rate), -1 !== r.bitrate && this.metadata.setFormat(\"bitrate\", r.bitrate); } } t.SpeexParser = s; }, \"01b4\": function (e, t) { var r = function () { (this.head = null), (this.tail = null); }; (r.prototype = { add: function (e) { var t = { item: e, next: null }; this.head ? (this.tail.next = t) : (this.head = t), (this.tail = t); }, get: function () { var e = this.head; if (e) return ( (this.head = e.next), this.tail === e && (this.tail = null), e.item ); }, }), (e.exports = r); }, \"0366\": function (e, t, r) { var n = r(\"e330\"), i = r(\"59ed\"), a = n(n.bind); e.exports = function (e, t) { return ( i(e), void 0 === t ? e : a ? a(e, t) : function () { return e.apply(t, arguments); } ); }; }, \"0383\": function (e, t, r) { \"use strict\"; var n = r(\"dbce\"), i = r(\"4ea4\"); Object.defineProperty(t, \"__esModule\", { value: !0 }), (t[\"default\"] = f); var a = i(r(\"448a\")), o = i(r(\"9523\")), s = i(r(\"278c\")), u = n(r(\"67ea\")); function c(e, t) { var r = Object.keys(e); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); t && (n = n.filter(function (t) { return Object.getOwnPropertyDescriptor(e, t).enumerable; })), r.push.apply(r, n); } return r; } function l(e) { for (var t = 1; t < arguments.length; t++) { var r = null != arguments[t] ? arguments[t] : {}; t % 2 ? c(r, !0).forEach(function (t) { (0, o[\"default\"])(e, t, r[t]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : c(r).forEach(function (t) { Object.defineProperty( e, t, Object.getOwnPropertyDescriptor(r, t) ); }); } return e; } function f(e) { var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : u[\"default\"], r = { hasAlpha: {}, encoders: {}, decoders: {}, class: {}, constants: {}, }; function n(e) { Object.entries(e).forEach(function (e) { var t = (0, s[\"default\"])(e, 2), n = t[0], i = t[1]; r[n] = l({}, r[n], {}, i); }); } function i(e) { var t = e(); Array.isArray(t.mime) ? u.addType.apply(void 0, (0, a[\"default\"])(t.mime)) : Object.entries(t.mime).forEach(function (e) { return u.addType.apply(void 0, (0, a[\"default\"])(e)); }), delete t.mime, n(t); } function o(e) { var t = e(u.jimpEvChange) || {}; t[\"class\"] || t.constants ? n(t) : n({ class: t }); } return ( e.types && (e.types.forEach(i), (t.decoders = l({}, t.decoders, {}, r.decoders)), (t.encoders = l({}, t.encoders, {}, r.encoders)), (t.hasAlpha = l({}, t.hasAlpha, {}, r.hasAlpha))), e.plugins && e.plugins.forEach(o), (0, u.addJimpMethods)(r[\"class\"], t), (0, u.addConstants)(r.constants, t), u[\"default\"] ); } }, \"03d6\": function (e, t, r) { var n = r(\"9c0e\"), i = r(\"6ca1\"), a = r(\"39ad\")(!1), o = r(\"5a94\")(\"IE_PROTO\"); e.exports = function (e, t) { var r, s = i(e), u = 0, c = []; for (r in s) r != o && n(s, r) && c.push(r); while (t.length > u) n(s, (r = t[u++])) && (~a(c, r) || c.push(r)); return c; }; }, \"03eb\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.joinArtists = t.MetadataCollector = void 0); const n = r(\"cec2\"), i = r(\"34eb\"), a = r(\"2819\"), o = r(\"a869\"), s = r(\"fc97\"), u = r(\"d3ab\"), c = r(\"31c8\"), l = i(\"music-metadata:collector\"), f = [ \"matroska\", \"APEv2\", \"vorbis\", \"ID3v2.4\", \"ID3v2.3\", \"ID3v2.2\", \"exif\", \"asf\", \"iTunes\", \"ID3v1\", ]; class h { constructor(e) { (this.opts = e), (this.format = { tagTypes: [], trackInfo: [] }), (this.native = {}), (this.common = { track: { no: null, of: null }, disk: { no: null, of: null }, movementIndex: {}, }), (this.quality = { warnings: [] }), (this.commonOrigin = {}), (this.originPriority = {}), (this.tagMapper = new o.CombinedTagMapper()); let t = 1; for (const r of f) this.originPriority[r] = t++; (this.originPriority.artificial = 500), (this.originPriority.id3v1 = 600); } hasAny() { return Object.keys(this.native).length > 0; } addStreamInfo(e) { l(`streamInfo: type=${n.TrackType[e.type]}, codec=${e.codecName}`), this.format.trackInfo.push(e); } setFormat(e, t) { l(`format: ${e} = ${t}`), (this.format[e] = t), this.opts.observer && this.opts.observer({ metadata: this, tag: { type: \"format\", id: e, value: t }, }); } addTag(e, t, r) { l(`tag ${e}.${t} = ${r}`), this.native[e] || (this.format.tagTypes.push(e), (this.native[e] = [])), this.native[e].push({ id: t, value: r }), this.toCommon(e, t, r); } addWarning(e) { this.quality.warnings.push({ message: e }); } postMap(e, t) { switch (t.id) { case \"artist\": if (this.commonOrigin.artist === this.originPriority[e]) return this.postMap(\"artificial\", { id: \"artists\", value: t.value, }); this.common.artists || this.setGenericTag(\"artificial\", { id: \"artists\", value: t.value, }); break; case \"artists\": if ( (!this.common.artist || this.commonOrigin.artist === this.originPriority.artificial) && (!this.common.artists || -1 === this.common.artists.indexOf(t.value)) ) { const e = (this.common.artists || []).concat([t.value]), r = d(e), n = { id: \"artist\", value: r }; this.setGenericTag(\"artificial\", n); } break; case \"picture\": return void this.postFixPicture(t.value).then((r) => { null !== r && ((t.value = r), this.setGenericTag(e, t)); }); case \"totaltracks\": return void (this.common.track.of = s.CommonTagMapper.toIntOrNull( t.value )); case \"totaldiscs\": return void (this.common.disk.of = s.CommonTagMapper.toIntOrNull( t.value )); case \"movementTotal\": return void (this.common.movementIndex.of = s.CommonTagMapper.toIntOrNull(t.value)); case \"track\": case \"disk\": case \"movementIndex\": const r = this.common[t.id].of; return ( (this.common[t.id] = s.CommonTagMapper.normalizeTrack(t.value)), void (this.common[t.id].of = null != r ? r : this.common[t.id].of) ); case \"year\": case \"originalyear\": t.value = parseInt(t.value, 10); break; case \"date\": const n = parseInt(t.value.substr(0, 4), 10); isNaN(n) || (this.common.year = n); break; case \"discogs_label_id\": case \"discogs_release_id\": case \"discogs_master_release_id\": case \"discogs_artist_id\": case \"discogs_votes\": t.value = \"string\" === typeof t.value ? parseInt(t.value, 10) : t.value; break; case \"replaygain_track_gain\": case \"replaygain_track_peak\": case \"replaygain_album_gain\": case \"replaygain_album_peak\": t.value = u.toRatio(t.value); break; case \"replaygain_track_minmax\": t.value = t.value.split(\",\").map((e) => parseInt(e, 10)); break; case \"replaygain_undo\": const i = t.value.split(\",\").map((e) => parseInt(e, 10)); t.value = { leftChannel: i[0], rightChannel: i[1] }; break; case \"gapless\": case \"compilation\": case \"podcast\": case \"showMovement\": t.value = \"1\" === t.value || 1 === t.value; break; case \"isrc\": if ( this.common[t.id] && -1 !== this.common[t.id].indexOf(t.value) ) return; break; default: } null !== t.value && this.setGenericTag(e, t); } toCommonMetadata() { return { format: this.format, native: this.native, quality: this.quality, common: this.common, }; } async postFixPicture(e) { if (e.data && e.data.length > 0) { if (!e.format) { const t = await c.fromBuffer(e.data); if (!t) return null; e.format = t.mime; } switch (((e.format = e.format.toLocaleLowerCase()), e.format)) { case \"image/jpg\": e.format = \"image/jpeg\"; } return e; } return this.addWarning(\"Empty picture tag found\"), null; } toCommon(e, t, r) { const n = { id: t, value: r }, i = this.tagMapper.mapTag(e, n, this); i && this.postMap(e, i); } setGenericTag(e, t) { l(`common.${t.id} = ${t.value}`); const r = this.commonOrigin[t.id] || 1e3, n = this.originPriority[e]; if (a.isSingleton(t.id)) { if (!(n 4 && n(e.slice(0, 4), i); }; }).call(this, r(\"1c35\").Buffer); }, \"04b7\": function (e, t) { e.exports = { exif: { 1: \"InteropIndex\", 2: \"InteropVersion\", 11: \"ProcessingSoftware\", 254: \"SubfileType\", 255: \"OldSubfileType\", 256: \"ImageWidth\", 257: \"ImageHeight\", 258: \"BitsPerSample\", 259: \"Compression\", 262: \"PhotometricInterpretation\", 263: \"Thresholding\", 264: \"CellWidth\", 265: \"CellLength\", 266: \"FillOrder\", 269: \"DocumentName\", 270: \"ImageDescription\", 271: \"Make\", 272: \"Model\", 273: \"StripOffsets\", 274: \"Orientation\", 277: \"SamplesPerPixel\", 278: \"RowsPerStrip\", 279: \"StripByteCounts\", 280: \"MinSampleValue\", 281: \"MaxSampleValue\", 282: \"XResolution\", 283: \"YResolution\", 284: \"PlanarConfiguration\", 285: \"PageName\", 286: \"XPosition\", 287: \"YPosition\", 288: \"FreeOffsets\", 289: \"FreeByteCounts\", 290: \"GrayResponseUnit\", 291: \"GrayResponseCurve\", 292: \"T4Options\", 293: \"T6Options\", 296: \"ResolutionUnit\", 297: \"PageNumber\", 300: \"ColorResponseUnit\", 301: \"TransferFunction\", 305: \"Software\", 306: \"ModifyDate\", 315: \"Artist\", 316: \"HostComputer\", 317: \"Predictor\", 318: \"WhitePoint\", 319: \"PrimaryChromaticities\", 320: \"ColorMap\", 321: \"HalftoneHints\", 322: \"TileWidth\", 323: \"TileLength\", 324: \"TileOffsets\", 325: \"TileByteCounts\", 326: \"BadFaxLines\", 327: \"CleanFaxData\", 328: \"ConsecutiveBadFaxLines\", 330: \"SubIFD\", 332: \"InkSet\", 333: \"InkNames\", 334: \"NumberofInks\", 336: \"DotRange\", 337: \"TargetPrinter\", 338: \"ExtraSamples\", 339: \"SampleFormat\", 340: \"SMinSampleValue\", 341: \"SMaxSampleValue\", 342: \"TransferRange\", 343: \"ClipPath\", 344: \"XClipPathUnits\", 345: \"YClipPathUnits\", 346: \"Indexed\", 347: \"JPEGTables\", 351: \"OPIProxy\", 400: \"GlobalParametersIFD\", 401: \"ProfileType\", 402: \"FaxProfile\", 403: \"CodingMethods\", 404: \"VersionYear\", 405: \"ModeNumber\", 433: \"Decode\", 434: \"DefaultImageColor\", 435: \"T82Options\", 437: \"JPEGTables\", 512: \"JPEGProc\", 513: \"ThumbnailOffset\", 514: \"ThumbnailLength\", 515: \"JPEGRestartInterval\", 517: \"JPEGLosslessPredictors\", 518: \"JPEGPointTransforms\", 519: \"JPEGQTables\", 520: \"JPEGDCTables\", 521: \"JPEGACTables\", 529: \"YCbCrCoefficients\", 530: \"YCbCrSubSampling\", 531: \"YCbCrPositioning\", 532: \"ReferenceBlackWhite\", 559: \"StripRowCounts\", 700: \"ApplicationNotes\", 999: \"USPTOMiscellaneous\", 4096: \"RelatedImageFileFormat\", 4097: \"RelatedImageWidth\", 4098: \"RelatedImageHeight\", 18246: \"Rating\", 18247: \"XP_DIP_XML\", 18248: \"StitchInfo\", 18249: \"RatingPercent\", 32781: \"ImageID\", 32931: \"WangTag1\", 32932: \"WangAnnotation\", 32933: \"WangTag3\", 32934: \"WangTag4\", 32995: \"Matteing\", 32996: \"DataType\", 32997: \"ImageDepth\", 32998: \"TileDepth\", 33405: \"Model2\", 33421: \"CFARepeatPatternDim\", 33422: \"CFAPattern2\", 33423: \"BatteryLevel\", 33424: \"KodakIFD\", 33432: \"Copyright\", 33434: \"ExposureTime\", 33437: \"FNumber\", 33445: \"MDFileTag\", 33446: \"MDScalePixel\", 33447: \"MDColorTable\", 33448: \"MDLabName\", 33449: \"MDSampleInfo\", 33450: \"MDPrepDate\", 33451: \"MDPrepTime\", 33452: \"MDFileUnits\", 33550: \"PixelScale\", 33589: \"AdventScale\", 33590: \"AdventRevision\", 33628: \"UIC1Tag\", 33629: \"UIC2Tag\", 33630: \"UIC3Tag\", 33631: \"UIC4Tag\", 33723: \"IPTC-NAA\", 33918: \"IntergraphPacketData\", 33919: \"IntergraphFlagRegisters\", 33920: \"IntergraphMatrix\", 33921: \"INGRReserved\", 33922: \"ModelTiePoint\", 34016: \"Site\", 34017: \"ColorSequence\", 34018: \"IT8Header\", 34019: \"RasterPadding\", 34020: \"BitsPerRunLength\", 34021: \"BitsPerExtendedRunLength\", 34022: \"ColorTable\", 34023: \"ImageColorIndicator\", 34024: \"BackgroundColorIndicator\", 34025: \"ImageColorValue\", 34026: \"BackgroundColorValue\", 34027: \"PixelIntensityRange\", 34028: \"TransparencyIndicator\", 34029: \"ColorCharacterization\", 34030: \"HCUsage\", 34031: \"TrapIndicator\", 34032: \"CMYKEquivalent\", 34118: \"SEMInfo\", 34152: \"AFCP_IPTC\", 34232: \"PixelMagicJBIGOptions\", 34264: \"ModelTransform\", 34306: \"WB_GRGBLevels\", 34310: \"LeafData\", 34377: \"PhotoshopSettings\", 34665: \"ExifOffset\", 34675: \"ICC_Profile\", 34687: \"TIFF_FXExtensions\", 34688: \"MultiProfiles\", 34689: \"SharedData\", 34690: \"T88Options\", 34732: \"ImageLayer\", 34735: \"GeoTiffDirectory\", 34736: \"GeoTiffDoubleParams\", 34737: \"GeoTiffAsciiParams\", 34850: \"ExposureProgram\", 34852: \"SpectralSensitivity\", 34853: \"GPSInfo\", 34855: \"ISO\", 34856: \"Opto-ElectricConvFactor\", 34857: \"Interlace\", 34858: \"TimeZoneOffset\", 34859: \"SelfTimerMode\", 34864: \"SensitivityType\", 34865: \"StandardOutputSensitivity\", 34866: \"RecommendedExposureIndex\", 34867: \"ISOSpeed\", 34868: \"ISOSpeedLatitudeyyy\", 34869: \"ISOSpeedLatitudezzz\", 34908: \"FaxRecvParams\", 34909: \"FaxSubAddress\", 34910: \"FaxRecvTime\", 34954: \"LeafSubIFD\", 36864: \"ExifVersion\", 36867: \"DateTimeOriginal\", 36868: \"CreateDate\", 37121: \"ComponentsConfiguration\", 37122: \"CompressedBitsPerPixel\", 37377: \"ShutterSpeedValue\", 37378: \"ApertureValue\", 37379: \"BrightnessValue\", 37380: \"ExposureCompensation\", 37381: \"MaxApertureValue\", 37382: \"SubjectDistance\", 37383: \"MeteringMode\", 37384: \"LightSource\", 37385: \"Flash\", 37386: \"FocalLength\", 37387: \"FlashEnergy\", 37388: \"SpatialFrequencyResponse\", 37389: \"Noise\", 37390: \"FocalPlaneXResolution\", 37391: \"FocalPlaneYResolution\", 37392: \"FocalPlaneResolutionUnit\", 37393: \"ImageNumber\", 37394: \"SecurityClassification\", 37395: \"ImageHistory\", 37396: \"SubjectArea\", 37397: \"ExposureIndex\", 37398: \"TIFF-EPStandardID\", 37399: \"SensingMethod\", 37434: \"CIP3DataFile\", 37435: \"CIP3Sheet\", 37436: \"CIP3Side\", 37439: \"StoNits\", 37500: \"MakerNote\", 37510: \"UserComment\", 37520: \"SubSecTime\", 37521: \"SubSecTimeOriginal\", 37522: \"SubSecTimeDigitized\", 37679: \"MSDocumentText\", 37680: \"MSPropertySetStorage\", 37681: \"MSDocumentTextPosition\", 37724: \"ImageSourceData\", 40091: \"XPTitle\", 40092: \"XPComment\", 40093: \"XPAuthor\", 40094: \"XPKeywords\", 40095: \"XPSubject\", 40960: \"FlashpixVersion\", 40961: \"ColorSpace\", 40962: \"ExifImageWidth\", 40963: \"ExifImageHeight\", 40964: \"RelatedSoundFile\", 40965: \"InteropOffset\", 41483: \"FlashEnergy\", 41484: \"SpatialFrequencyResponse\", 41485: \"Noise\", 41486: \"FocalPlaneXResolution\", 41487: \"FocalPlaneYResolution\", 41488: \"FocalPlaneResolutionUnit\", 41489: \"ImageNumber\", 41490: \"SecurityClassification\", 41491: \"ImageHistory\", 41492: \"SubjectLocation\", 41493: \"ExposureIndex\", 41494: \"TIFF-EPStandardID\", 41495: \"SensingMethod\", 41728: \"FileSource\", 41729: \"SceneType\", 41730: \"CFAPattern\", 41985: \"CustomRendered\", 41986: \"ExposureMode\", 41987: \"WhiteBalance\", 41988: \"DigitalZoomRatio\", 41989: \"FocalLengthIn35mmFormat\", 41990: \"SceneCaptureType\", 41991: \"GainControl\", 41992: \"Contrast\", 41993: \"Saturation\", 41994: \"Sharpness\", 41995: \"DeviceSettingDescription\", 41996: \"SubjectDistanceRange\", 42016: \"ImageUniqueID\", 42032: \"OwnerName\", 42033: \"SerialNumber\", 42034: \"LensInfo\", 42035: \"LensMake\", 42036: \"LensModel\", 42037: \"LensSerialNumber\", 42112: \"GDALMetadata\", 42113: \"GDALNoData\", 42240: \"Gamma\", 44992: \"ExpandSoftware\", 44993: \"ExpandLens\", 44994: \"ExpandFilm\", 44995: \"ExpandFilterLens\", 44996: \"ExpandScanner\", 44997: \"ExpandFlashLamp\", 48129: \"PixelFormat\", 48130: \"Transformation\", 48131: \"Uncompressed\", 48132: \"ImageType\", 48256: \"ImageWidth\", 48257: \"ImageHeight\", 48258: \"WidthResolution\", 48259: \"HeightResolution\", 48320: \"ImageOffset\", 48321: \"ImageByteCount\", 48322: \"AlphaOffset\", 48323: \"AlphaByteCount\", 48324: \"ImageDataDiscard\", 48325: \"AlphaDataDiscard\", 50215: \"OceScanjobDesc\", 50216: \"OceApplicationSelector\", 50217: \"OceIDNumber\", 50218: \"OceImageLogic\", 50255: \"Annotations\", 50341: \"PrintIM\", 50560: \"USPTOOriginalContentType\", 50706: \"DNGVersion\", 50707: \"DNGBackwardVersion\", 50708: \"UniqueCameraModel\", 50709: \"LocalizedCameraModel\", 50710: \"CFAPlaneColor\", 50711: \"CFALayout\", 50712: \"LinearizationTable\", 50713: \"BlackLevelRepeatDim\", 50714: \"BlackLevel\", 50715: \"BlackLevelDeltaH\", 50716: \"BlackLevelDeltaV\", 50717: \"WhiteLevel\", 50718: \"DefaultScale\", 50719: \"DefaultCropOrigin\", 50720: \"DefaultCropSize\", 50721: \"ColorMatrix1\", 50722: \"ColorMatrix2\", 50723: \"CameraCalibration1\", 50724: \"CameraCalibration2\", 50725: \"ReductionMatrix1\", 50726: \"ReductionMatrix2\", 50727: \"AnalogBalance\", 50728: \"AsShotNeutral\", 50729: \"AsShotWhiteXY\", 50730: \"BaselineExposure\", 50731: \"BaselineNoise\", 50732: \"BaselineSharpness\", 50733: \"BayerGreenSplit\", 50734: \"LinearResponseLimit\", 50735: \"CameraSerialNumber\", 50736: \"DNGLensInfo\", 50737: \"ChromaBlurRadius\", 50738: \"AntiAliasStrength\", 50739: \"ShadowScale\", 50740: \"DNGPrivateData\", 50741: \"MakerNoteSafety\", 50752: \"RawImageSegmentation\", 50778: \"CalibrationIlluminant1\", 50779: \"CalibrationIlluminant2\", 50780: \"BestQualityScale\", 50781: \"RawDataUniqueID\", 50784: \"AliasLayerMetadata\", 50827: \"OriginalRawFileName\", 50828: \"OriginalRawFileData\", 50829: \"ActiveArea\", 50830: \"MaskedAreas\", 50831: \"AsShotICCProfile\", 50832: \"AsShotPreProfileMatrix\", 50833: \"CurrentICCProfile\", 50834: \"CurrentPreProfileMatrix\", 50879: \"ColorimetricReference\", 50898: \"PanasonicTitle\", 50899: \"PanasonicTitle2\", 50931: \"CameraCalibrationSig\", 50932: \"ProfileCalibrationSig\", 50933: \"ProfileIFD\", 50934: \"AsShotProfileName\", 50935: \"NoiseReductionApplied\", 50936: \"ProfileName\", 50937: \"ProfileHueSatMapDims\", 50938: \"ProfileHueSatMapData1\", 50939: \"ProfileHueSatMapData2\", 50940: \"ProfileToneCurve\", 50941: \"ProfileEmbedPolicy\", 50942: \"ProfileCopyright\", 50964: \"ForwardMatrix1\", 50965: \"ForwardMatrix2\", 50966: \"PreviewApplicationName\", 50967: \"PreviewApplicationVersion\", 50968: \"PreviewSettingsName\", 50969: \"PreviewSettingsDigest\", 50970: \"PreviewColorSpace\", 50971: \"PreviewDateTime\", 50972: \"RawImageDigest\", 50973: \"OriginalRawFileDigest\", 50974: \"SubTileBlockSize\", 50975: \"RowInterleaveFactor\", 50981: \"ProfileLookTableDims\", 50982: \"ProfileLookTableData\", 51008: \"OpcodeList1\", 51009: \"OpcodeList2\", 51022: \"OpcodeList3\", 51041: \"NoiseProfile\", 51043: \"TimeCodes\", 51044: \"FrameRate\", 51058: \"TStop\", 51081: \"ReelName\", 51089: \"OriginalDefaultFinalSize\", 51090: \"OriginalBestQualitySize\", 51091: \"OriginalDefaultCropSize\", 51105: \"CameraLabel\", 51107: \"ProfileHueSatMapEncoding\", 51108: \"ProfileLookTableEncoding\", 51109: \"BaselineExposureOffset\", 51110: \"DefaultBlackRender\", 51111: \"NewRawImageDigest\", 51112: \"RawToPreviewGain\", 51125: \"DefaultUserCrop\", 59932: \"Padding\", 59933: \"OffsetSchema\", 65e3: \"OwnerName\", 65001: \"SerialNumber\", 65002: \"Lens\", 65024: \"KDC_IFD\", 65100: \"RawFile\", 65101: \"Converter\", 65102: \"WhiteBalance\", 65105: \"Exposure\", 65106: \"Shadows\", 65107: \"Brightness\", 65108: \"Contrast\", 65109: \"Saturation\", 65110: \"Sharpness\", 65111: \"Smoothness\", 65112: \"MoireFilter\", }, gps: { 0: \"GPSVersionID\", 1: \"GPSLatitudeRef\", 2: \"GPSLatitude\", 3: \"GPSLongitudeRef\", 4: \"GPSLongitude\", 5: \"GPSAltitudeRef\", 6: \"GPSAltitude\", 7: \"GPSTimeStamp\", 8: \"GPSSatellites\", 9: \"GPSStatus\", 10: \"GPSMeasureMode\", 11: \"GPSDOP\", 12: \"GPSSpeedRef\", 13: \"GPSSpeed\", 14: \"GPSTrackRef\", 15: \"GPSTrack\", 16: \"GPSImgDirectionRef\", 17: \"GPSImgDirection\", 18: \"GPSMapDatum\", 19: \"GPSDestLatitudeRef\", 20: \"GPSDestLatitude\", 21: \"GPSDestLongitudeRef\", 22: \"GPSDestLongitude\", 23: \"GPSDestBearingRef\", 24: \"GPSDestBearing\", 25: \"GPSDestDistanceRef\", 26: \"GPSDestDistance\", 27: \"GPSProcessingMethod\", 28: \"GPSAreaInformation\", 29: \"GPSDateStamp\", 30: \"GPSDifferential\", 31: \"GPSHPositioningError\", }, }; }, \"04cc\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.Header = void 0); const n = r(\"6f58\"), i = r(\"d3ab\"); t.Header = { len: 80, get: (e, t) => ({ speex: new n.StringType(8, \"ascii\").get(e, t + 0), version: i.trimRightNull(new n.StringType(20, \"ascii\").get(e, t + 8)), version_id: e.readInt32LE(t + 28), header_size: e.readInt32LE(t + 32), rate: e.readInt32LE(t + 36), mode: e.readInt32LE(t + 40), mode_bitstream_version: e.readInt32LE(t + 44), nb_channels: e.readInt32LE(t + 48), bitrate: e.readInt32LE(t + 52), frame_size: e.readInt32LE(t + 56), vbr: e.readInt32LE(t + 60), frames_per_packet: e.readInt32LE(t + 64), extra_headers: e.readInt32LE(t + 68), reserved1: e.readInt32LE(t + 72), reserved2: e.readInt32LE(t + 76), }), }; }, \"04d1\": function (e, t, r) { var n = r(\"342f\"), i = n.match(/firefox\\/(\\d+)/i); e.exports = !!i && +i[1]; }, \"051b\": function (e, t, r) { var n = r(\"1a14\"), i = r(\"10db\"); e.exports = r(\"0bad\") ? function (e, t, r) { return n.f(e, t, i(1, r)); } : function (e, t, r) { return (e[t] = r), e; }; }, \"0538\": function (e, t, r) { \"use strict\"; var n = r(\"da84\"), i = r(\"e330\"), a = r(\"59ed\"), o = r(\"861d\"), s = r(\"1a2d\"), u = r(\"f36a\"), c = n.Function, l = i([].concat), f = i([].join), h = {}, d = function (e, t, r) { if (!s(h, t)) { for (var n = [], i = 0; i < t; i++) n[i] = \"a[\" + i + \"]\"; h[t] = c(\"C,a\", \"return new C(\" + f(n, \",\") + \")\"); } return h[t](e, r); }; e.exports = c.bind || function (e) { var t = a(this), r = t.prototype, n = u(arguments, 1), i = function () { var r = l(n, u(arguments)); return this instanceof i ? d(t, r.length, r) : t.apply(e, r); }; return o(r) && (i.prototype = r), i; }; }, \"057f\": function (e, t, r) { var n = r(\"c6b6\"), i = r(\"fc6a\"), a = r(\"241c\").f, o = r(\"4dae\"), s = \"object\" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [], u = function (e) { try { return a(e); } catch (t) { return o(s); } }; e.exports.f = function (e) { return s && \"Window\" == n(e) ? u(e) : a(i(e)); }; }, \"05f5\": function (e, t, r) { var n = r(\"7a41\"), i = r(\"ef08\").document, a = n(i) && n(i.createElement); e.exports = function (e) { return a ? i.createElement(e) : {}; }; }, \"0662\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.TextEncodingToken = t.ExtendedHeader = t.ID3v2Header = t.UINT32SYNCSAFE = t.AttachedPictureType = void 0); const n = r(\"6f58\"), i = r(\"d3ab\"); (function (e) { (e[(e[\"Other\"] = 0)] = \"Other\"), (e[(e[\"32x32 pixels 'file icon' (PNG only)\"] = 1)] = \"32x32 pixels 'file icon' (PNG only)\"), (e[(e[\"Other file icon\"] = 2)] = \"Other file icon\"), (e[(e[\"Cover (front)\"] = 3)] = \"Cover (front)\"), (e[(e[\"Cover (back)\"] = 4)] = \"Cover (back)\"), (e[(e[\"Leaflet page\"] = 5)] = \"Leaflet page\"), (e[(e[\"Media (e.g. label side of CD)\"] = 6)] = \"Media (e.g. label side of CD)\"), (e[(e[\"Lead artist/lead performer/soloist\"] = 7)] = \"Lead artist/lead performer/soloist\"), (e[(e[\"Artist/performer\"] = 8)] = \"Artist/performer\"), (e[(e[\"Conductor\"] = 9)] = \"Conductor\"), (e[(e[\"Band/Orchestra\"] = 10)] = \"Band/Orchestra\"), (e[(e[\"Composer\"] = 11)] = \"Composer\"), (e[(e[\"Lyricist/text writer\"] = 12)] = \"Lyricist/text writer\"), (e[(e[\"Recording Location\"] = 13)] = \"Recording Location\"), (e[(e[\"During recording\"] = 14)] = \"During recording\"), (e[(e[\"During performance\"] = 15)] = \"During performance\"), (e[(e[\"Movie/video screen capture\"] = 16)] = \"Movie/video screen capture\"), (e[(e[\"A bright coloured fish\"] = 17)] = \"A bright coloured fish\"), (e[(e[\"Illustration\"] = 18)] = \"Illustration\"), (e[(e[\"Band/artist logotype\"] = 19)] = \"Band/artist logotype\"), (e[(e[\"Publisher/Studio logotype\"] = 20)] = \"Publisher/Studio logotype\"); })(t.AttachedPictureType || (t.AttachedPictureType = {})), (t.UINT32SYNCSAFE = { get: (e, t) => (127 & e[t + 3]) | (e[t + 2] < 7) | (e[t + 1] < 14) | (e[t] < 21), len: 4, }), (t.ID3v2Header = { len: 10, get: (e, r) => ({ fileIdentifier: new n.StringType(3, \"ascii\").get(e, r), version: { major: n.INT8.get(e, r + 3), revision: n.INT8.get(e, r + 4), }, flags: { unsynchronisation: i.getBit(e, r + 5, 7), isExtendedHeader: i.getBit(e, r + 5, 6), expIndicator: i.getBit(e, r + 5, 5), footer: i.getBit(e, r + 5, 4), }, size: t.UINT32SYNCSAFE.get(e, r + 6), }), }), (t.ExtendedHeader = { len: 10, get: (e, t) => ({ size: n.UINT32_BE.get(e, t), extendedFlags: n.UINT16_BE.get(e, t + 4), sizeOfPadding: n.UINT32_BE.get(e, t + 6), crcDataPresent: i.getBit(e, t + 4, 31), }), }), (t.TextEncodingToken = { len: 1, get: (e, t) => { switch (e.readUInt8(t)) { case 0: return { encoding: \"latin1\" }; case 1: return { encoding: \"utf16le\", bom: !0 }; case 2: return { encoding: \"utf16le\", bom: !1 }; case 3: return { encoding: \"utf8\", bom: !1 }; default: return { encoding: \"utf8\", bom: !1 }; } }, }); }, \"0676\": function (e, t) { function r() { throw new TypeError( \"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\" ); } (e.exports = r), (e.exports.__esModule = !0), (e.exports[\"default\"] = e.exports); }, \"06cf\": function (e, t, r) { var n = r(\"83ab\"), i = r(\"c65b\"), a = r(\"d1e7\"), o = r(\"5c6c\"), s = r(\"fc6a\"), u = r(\"a04b\"), c = r(\"1a2d\"), l = r(\"0cfb\"), f = Object.getOwnPropertyDescriptor; t.f = n ? f : function (e, t) { if (((e = s(e)), (t = u(t)), l)) try { return f(e, t); } catch (r) {} if (c(e, t)) return o(!i(a.f, e, t), e[t]); }; }, \"072d\": function (e, t, r) { \"use strict\"; var n = r(\"0bad\"), i = r(\"9876\"), a = r(\"fed5\"), o = r(\"1917\"), s = r(\"0983\"), u = r(\"9fbb\"), c = Object.assign; e.exports = !c || r(\"4b8b\")(function () { var e = {}, t = {}, r = Symbol(), n = \"abcdefghijklmnopqrst\"; return ( (e[r] = 7), n.split(\"\").forEach(function (e) { t[e] = e; }), 7 != c({}, e)[r] || Object.keys(c({}, t)).join(\"\") != n ); }) ? function (e, t) { var r = s(e), c = arguments.length, l = 1, f = a.f, h = o.f; while (c > l) { var d, A = u(arguments[l++]), p = f ? i(A).concat(f(A)) : i(A), g = p.length, m = 0; while (g > m) (d = p[m++]), (n && !h.call(A, d)) || (r[d] = A[d]); } return r; } : c; }, \"07a0\": function (e, t, r) { \"use strict\"; var n = r(\"4ea4\"); Object.defineProperty(t, \"__esModule\", { value: !0 }), (t[\"default\"] = void 0); var i = n(r(\"7037\")), a = r(\"c2d7\"), o = function () { return { displace: function (e, t, r) { if ( \"object\" !== (0, i[\"default\"])(e) || e.constructor !== this.constructor ) return a.throwError.call( this, \"The source must be a Jimp image\", r ); if (\"number\" !== typeof t) return a.throwError.call(this, \"factor must be a number\", r); var n = this.cloneQuiet(); return ( this.scanQuiet( 0, 0, this.bitmap.width, this.bitmap.height, function (r, i, a) { var o = (e.bitmap.data[a] / 256) * t; o = Math.round(o); var s = this.getPixelIndex(r + o, i); (this.bitmap.data[s] = n.bitmap.data[a]), (this.bitmap.data[s + 1] = n.bitmap.data[a + 1]), (this.bitmap.data[s + 2] = n.bitmap.data[a + 2]); } ), (0, a.isNodePattern)(r) && r.call(this, null, this), this ); }, }; }; t[\"default\"] = o; }, \"07f4\": function (e, t, r) { \"use strict\"; var n = r(\"be7f\"), i = 4, a = 0, o = 1, s = 2; function u(e) { var t = e.length; while (--t >= 0) e[t] = 0; } var c = 0, l = 1, f = 2, h = 3, d = 258, A = 29, p = 256, g = p + 1 + A, m = 30, b = 19, v = 2 * g + 1, y = 15, I = 16, E = 7, w = 256, C = 16, _ = 17, B = 18, x = [ 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, ], S = [ 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, ], k = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7], Q = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], T = 512, M = new Array(2 * (g + 2)); u(M); var D = new Array(2 * m); u(D); var R = new Array(T); u(R); var O = new Array(d - h + 1); u(O); var N = new Array(A); u(N); var F, L, P, U = new Array(m); function j(e, t, r, n, i) { (this.static_tree = e), (this.extra_bits = t), (this.extra_base = r), (this.elems = n), (this.max_length = i), (this.has_stree = e && e.length); } function z(e, t) { (this.dyn_tree = e), (this.max_code = 0), (this.stat_desc = t); } function G(e) { return e < 256 ? R[e] : R[256 + (e >>> 7)]; } function H(e, t) { (e.pending_buf[e.pending++] = 255 & t), (e.pending_buf[e.pending++] = (t >>> 8) & 255); } function W(e, t, r) { e.bi_valid > I - r ? ((e.bi_buf |= (t < e.bi_valid) & 65535), H(e, e.bi_buf), (e.bi_buf = t >> (I - e.bi_valid)), (e.bi_valid += r - I)) : ((e.bi_buf |= (t < e.bi_valid) & 65535), (e.bi_valid += r)); } function Y(e, t, r) { W(e, r[2 * t], r[2 * t + 1]); } function q(e, t) { var r = 0; do { (r |= 1 & e), (e >>>= 1), (r = 8), (e.bi_valid -= 8)); } function $(e, t) { var r, n, i, a, o, s, u = t.dyn_tree, c = t.max_code, l = t.stat_desc.static_tree, f = t.stat_desc.has_stree, h = t.stat_desc.extra_bits, d = t.stat_desc.extra_base, A = t.stat_desc.max_length, p = 0; for (a = 0; a c || (e.bl_count[a]++, (o = 0), n >= d && (o = h[n - d]), (s = u[2 * n]), (e.opt_len += s * (a + o)), f && (e.static_len += s * (l[2 * n + 1] + o))); if (0 !== p) { do { a = A - 1; while (0 === e.bl_count[a]) a--; e.bl_count[a]--, (e.bl_count[a + 1] += 2), e.bl_count[A]--, (p -= 2); } while (p > 0); for (a = A; 0 !== a; a--) { n = e.bl_count[a]; while (0 !== n) (i = e.heap[--r]), i > c || (u[2 * i + 1] !== a && ((e.opt_len += (a - u[2 * i + 1]) * u[2 * i]), (u[2 * i + 1] = a)), n--); } } } function K(e, t, r) { var n, i, a = new Array(y + 1), o = 0; for (n = 1; n >= 1) && (t += t)) 1 & n && (r += t); return r; }; }, \"11b0\": function (e, t, r) { function n(e) { if ( (\"undefined\" !== typeof Symbol && null != e[Symbol.iterator]) || null != e[\"@@iterator\"] ) return Array.from(e); } r(\"a4d3\"), r(\"e01a\"), r(\"d3b7\"), r(\"d28b\"), r(\"3ca3\"), r(\"ddb0\"), r(\"a630\"), (e.exports = n), (e.exports.__esModule = !0), (e.exports[\"default\"] = e.exports); }, 1276: function (e, t, r) { \"use strict\"; var n = r(\"2ba4\"), i = r(\"c65b\"), a = r(\"e330\"), o = r(\"d784\"), s = r(\"44e7\"), u = r(\"825a\"), c = r(\"1d80\"), l = r(\"4840\"), f = r(\"8aa5\"), h = r(\"50c4\"), d = r(\"577e\"), A = r(\"dc4a\"), p = r(\"4dae\"), g = r(\"14c3\"), m = r(\"9263\"), b = r(\"9f7f\"), v = r(\"d039\"), y = b.UNSUPPORTED_Y, I = 4294967295, E = Math.min, w = [].push, C = a(/./.exec), _ = a(w), B = a(\"\".slice), x = !v(function () { var e = /(?:)/, t = e.exec; e.exec = function () { return t.apply(this, arguments); }; var r = \"ab\".split(e); return 2 !== r.length || \"a\" !== r[0] || \"b\" !== r[1]; }); o( \"split\", function (e, t, r) { var a; return ( (a = \"c\" == \"abbc\".split(/(b)*/)[1] || 4 != \"test\".split(/(?:)/, -1).length || 2 != \"ab\".split(/(?:ab)*/).length || 4 != \".\".split(/(.?)(.?)/).length || \".\".split(/()()/).length > 1 || \"\".split(/.?/).length ? function (e, r) { var a = d(c(this)), o = void 0 === r ? I : r >>> 0; if (0 === o) return []; if (void 0 === e) return [a]; if (!s(e)) return i(t, a, e, o); var u, l, f, h = [], A = (e.ignoreCase ? \"i\" : \"\") + (e.multiline ? \"m\" : \"\") + (e.unicode ? \"u\" : \"\") + (e.sticky ? \"y\" : \"\"), g = 0, b = new RegExp(e.source, A + \"g\"); while ((u = i(m, b, a))) { if ( ((l = b.lastIndex), l > g && (_(h, B(a, g, u.index)), u.length > 1 && u.index < a.length && n(w, h, p(u, 1)), (f = u[0].length), (g = l), h.length >= o)) ) break; b.lastIndex === u.index && b.lastIndex++; } return ( g === a.length ? (!f && C(b, \"\")) || _(h, \"\") : _(h, B(a, g)), h.length > o ? p(h, 0, o) : h ); } : \"0\".split(void 0, 0).length ? function (e, r) { return void 0 === e && 0 === r ? [] : i(t, this, e, r); } : t), [ function (t, r) { var n = c(this), o = void 0 == t ? void 0 : A(t, e); return o ? i(o, t, n, r) : i(a, d(n), t, r); }, function (e, n) { var i = u(this), o = d(e), s = r(a, i, o, n, a !== t); if (s.done) return s.value; var c = l(i, RegExp), A = i.unicode, p = (i.ignoreCase ? \"i\" : \"\") + (i.multiline ? \"m\" : \"\") + (i.unicode ? \"u\" : \"\") + (y ? \"g\" : \"y\"), m = new c(y ? \"^(?:\" + i.source + \")\" : i, p), b = void 0 === n ? I : n >>> 0; if (0 === b) return []; if (0 === o.length) return null === g(m, o) ? [o] : []; var v = 0, w = 0, C = []; while (w < o.length) { m.lastIndex = y ? 0 : w; var x, S = g(m, y ? B(o, w) : o); if ( null === S || (x = E(h(m.lastIndex + (y ? w : 0)), o.length)) === v ) w = f(o, w, A); else { if ((_(C, B(o, v, w)), C.length === b)) return C; for (var k = 1; k 2 ? arguments[2] : void 0, f = o((void 0 === l ? s : i(l, s)) - c, s - u), h = 1; c < u && u < c + f && ((h = -1), (c += f - 1), (u += f - 1)); while (f-- > 0) c in r ? (r[u] = r[c]) : delete r[u], (u += h), (c += h); return r; }; }, 1468: function (e, t) { var r = 1e3, n = 60 * r, i = 60 * n, a = 24 * i, o = 7 * a, s = 365.25 * a; function u(e) { if (((e = String(e)), !(e.length > 100))) { var t = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec( e ); if (t) { var u = parseFloat(t[1]), c = (t[2] || \"ms\").toLowerCase(); switch (c) { case \"years\": case \"year\": case \"yrs\": case \"yr\": case \"y\": return u * s; case \"weeks\": case \"week\": case \"w\": return u * o; case \"days\": case \"day\": case \"d\": return u * a; case \"hours\": case \"hour\": case \"hrs\": case \"hr\": case \"h\": return u * i; case \"minutes\": case \"minute\": case \"mins\": case \"min\": case \"m\": return u * n; case \"seconds\": case \"second\": case \"secs\": case \"sec\": case \"s\": return u * r; case \"milliseconds\": case \"millisecond\": case \"msecs\": case \"msec\": case \"ms\": return u; default: return; } } } } function c(e) { var t = Math.abs(e); return t >= a ? Math.round(e / a) + \"d\" : t >= i ? Math.round(e / i) + \"h\" : t >= n ? Math.round(e / n) + \"m\" : t >= r ? Math.round(e / r) + \"s\" : e + \"ms\"; } function l(e) { var t = Math.abs(e); return t >= a ? f(e, t, a, \"day\") : t >= i ? f(e, t, i, \"hour\") : t >= n ? f(e, t, n, \"minute\") : t >= r ? f(e, t, r, \"second\") : e + \" ms\"; } function f(e, t, r, n) { var i = t >= 1.5 * r; return Math.round(e / r) + \" \" + n + (i ? \"s\" : \"\"); } e.exports = function (e, t) { t = t || {}; var r = typeof e; if (\"string\" === r && e.length > 0) return u(e); if (\"number\" === r && isFinite(e)) return t.long ? l(e) : c(e); throw new Error( \"val is not a non-empty string or a valid number. val=\" + JSON.stringify(e) ); }; }, \"14c3\": function (e, t, r) { var n = r(\"da84\"), i = r(\"c65b\"), a = r(\"825a\"), o = r(\"1626\"), s = r(\"c6b6\"), u = r(\"9263\"), c = n.TypeError; e.exports = function (e, t) { var r = e.exec; if (o(r)) { var n = i(r, e, t); return null !== n && a(n), n; } if (\"RegExp\" === s(e)) return i(u, e, t); throw c(\"RegExp#exec called on incompatible receiver\"); }; }, \"14e9\": function (e, t, r) { e.exports = (function (e) { var t = {}; function r(n) { if (t[n]) return t[n].exports; var i = (t[n] = { i: n, l: !1, exports: {} }); return e[n].call(i.exports, i, i.exports, r), (i.l = !0), i.exports; } return ( (r.m = e), (r.c = t), (r.d = function (e, t, n) { r.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: n }); }), (r.r = function (e) { \"undefined\" !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: \"Module\" }), Object.defineProperty(e, \"__esModule\", { value: !0 }); }), (r.t = function (e, t) { if ((1 & t && (e = r(e)), 8 & t)) return e; if (4 & t && \"object\" === typeof e && e && e.__esModule) return e; var n = Object.create(null); if ( (r.r(n), Object.defineProperty(n, \"default\", { enumerable: !0, value: e }), 2 & t && \"string\" != typeof e) ) for (var i in e) r.d( n, i, function (t) { return e[t]; }.bind(null, i) ); return n; }), (r.n = function (e) { var t = e && e.__esModule ? function () { return e[\"default\"]; } : function () { return e; }; return r.d(t, \"a\", t), t; }), (r.o = function (e, t) { return Object.prototype.hasOwnProperty.call(e, t); }), (r.p = \"/dist/\"), r((r.s = 132)) ); })({ 132: function (e, t, r) { \"use strict\"; r.r(t); var n = r(16), i = r(38), a = r.n(i), o = r(3), s = r(2), u = { vertical: { offset: \"offsetHeight\", scroll: \"scrollTop\", scrollSize: \"scrollHeight\", size: \"height\", key: \"vertical\", axis: \"Y\", client: \"clientY\", direction: \"top\", }, horizontal: { offset: \"offsetWidth\", scroll: \"scrollLeft\", scrollSize: \"scrollWidth\", size: \"width\", key: \"horizontal\", axis: \"X\", client: \"clientX\", direction: \"left\", }, }; function c(e) { var t = e.move, r = e.size, n = e.bar, i = {}, a = \"translate\" + n.axis + \"(\" + t + \"%)\"; return ( (i[n.size] = r), (i.transform = a), (i.msTransform = a), (i.webkitTransform = a), i ); } var l = { name: \"Bar\", props: { vertical: Boolean, size: String, move: Number }, computed: { bar: function () { return u[this.vertical ? \"vertical\" : \"horizontal\"]; }, wrap: function () { return this.$parent.wrap; }, }, render: function (e) { var t = this.size, r = this.move, n = this.bar; return e( \"div\", { class: [\"el-scrollbar__bar\", \"is-\" + n.key], on: { mousedown: this.clickTrackHandler }, }, [ e(\"div\", { ref: \"thumb\", class: \"el-scrollbar__thumb\", on: { mousedown: this.clickThumbHandler }, style: c({ size: t, move: r, bar: n }), }), ] ); }, methods: { clickThumbHandler: function (e) { e.ctrlKey || 2 === e.button || (this.startDrag(e), (this[this.bar.axis] = e.currentTarget[this.bar.offset] - (e[this.bar.client] - e.currentTarget.getBoundingClientRect()[ this.bar.direction ]))); }, clickTrackHandler: function (e) { var t = Math.abs( e.target.getBoundingClientRect()[this.bar.direction] - e[this.bar.client] ), r = this.$refs.thumb[this.bar.offset] / 2, n = (100 * (t - r)) / this.$el[this.bar.offset]; this.wrap[this.bar.scroll] = (n * this.wrap[this.bar.scrollSize]) / 100; }, startDrag: function (e) { e.stopImmediatePropagation(), (this.cursorDown = !0), Object(s[\"on\"])( document, \"mousemove\", this.mouseMoveDocumentHandler ), Object(s[\"on\"])( document, \"mouseup\", this.mouseUpDocumentHandler ), (document.onselectstart = function () { return !1; }); }, mouseMoveDocumentHandler: function (e) { if (!1 !== this.cursorDown) { var t = this[this.bar.axis]; if (t) { var r = -1 * (this.$el.getBoundingClientRect()[ this.bar.direction ] - e[this.bar.client]), n = this.$refs.thumb[this.bar.offset] - t, i = (100 * (r - n)) / this.$el[this.bar.offset]; this.wrap[this.bar.scroll] = (i * this.wrap[this.bar.scrollSize]) / 100; } } }, mouseUpDocumentHandler: function (e) { (this.cursorDown = !1), (this[this.bar.axis] = 0), Object(s[\"off\"])( document, \"mousemove\", this.mouseMoveDocumentHandler ), (document.onselectstart = null); }, }, destroyed: function () { Object(s[\"off\"])( document, \"mouseup\", this.mouseUpDocumentHandler ); }, }, f = { name: \"ElScrollbar\", components: { Bar: l }, props: { native: Boolean, wrapStyle: {}, wrapClass: {}, viewClass: {}, viewStyle: {}, noresize: Boolean, tag: { type: String, default: \"div\" }, }, data: function () { return { sizeWidth: \"0\", sizeHeight: \"0\", moveX: 0, moveY: 0 }; }, computed: { wrap: function () { return this.$refs.wrap; }, }, render: function (e) { var t = a()(), r = this.wrapStyle; if (t) { var n = \"-\" + t + \"px\", i = \"margin-bottom: \" + n + \"; margin-right: \" + n + \";\"; Array.isArray(this.wrapStyle) ? ((r = Object(o[\"toObject\"])(this.wrapStyle)), (r.marginRight = r.marginBottom = n)) : \"string\" === typeof this.wrapStyle ? (r += i) : (r = i); } var s = e( this.tag, { class: [\"el-scrollbar__view\", this.viewClass], style: this.viewStyle, ref: \"resize\", }, this.$slots.default ), u = e( \"div\", { ref: \"wrap\", style: r, on: { scroll: this.handleScroll }, class: [ this.wrapClass, \"el-scrollbar__wrap\", t ? \"\" : \"el-scrollbar__wrap--hidden-default\", ], }, [[s]] ), c = void 0; return ( (c = this.native ? [ e( \"div\", { ref: \"wrap\", class: [this.wrapClass, \"el-scrollbar__wrap\"], style: r, }, [[s]] ), ] : [ u, e(l, { attrs: { move: this.moveX, size: this.sizeWidth }, }), e(l, { attrs: { vertical: !0, move: this.moveY, size: this.sizeHeight, }, }), ]), e(\"div\", { class: \"el-scrollbar\" }, c) ); }, methods: { handleScroll: function () { var e = this.wrap; (this.moveY = (100 * e.scrollTop) / e.clientHeight), (this.moveX = (100 * e.scrollLeft) / e.clientWidth); }, update: function () { var e = void 0, t = void 0, r = this.wrap; r && ((e = (100 * r.clientHeight) / r.scrollHeight), (t = (100 * r.clientWidth) / r.scrollWidth), (this.sizeHeight = e < 100 ? e + \"%\" : \"\"), (this.sizeWidth = t < 100 ? t + \"%\" : \"\")); }, }, mounted: function () { this.native || (this.$nextTick(this.update), !this.noresize && Object(n[\"addResizeListener\"])( this.$refs.resize, this.update )); }, beforeDestroy: function () { this.native || (!this.noresize && Object(n[\"removeResizeListener\"])( this.$refs.resize, this.update )); }, install: function (e) { e.component(f.name, f); }, }; t[\"default\"] = f; }, 16: function (e, t) { e.exports = r(\"4010\"); }, 2: function (e, t) { e.exports = r(\"5924\"); }, 3: function (e, t) { e.exports = r(\"8122\"); }, 38: function (e, t) { e.exports = r(\"e62d\"); }, }); }, \"150c\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.ChapterText = t.StcoAtom = t.StszAtom = t.StscAtom = t.SampleToChunkToken = t.SttsAtom = t.TimeToSampleToken = t.SoundSampleDescriptionV0 = t.SoundSampleDescriptionVersion = t.StsdAtom = t.TrackHeaderAtom = t.NameAtom = t.DataAtom = t.MvhdAtom = t.MdhdAtom = t.FixedLengthAtom = t.mhdr = t.tkhd = t.ftyp = t.ExtendedSize = t.Header = void 0); const n = r(\"6f58\"), i = r(\"98a7\"), a = r(\"34eb\"), o = a(\"music-metadata:parser:MP4:atom\"); (t.Header = { len: 8, get: (e, t) => { const r = n.UINT32_BE.get(e, t); if (r < 0) throw new Error(\"Invalid atom header length\"); return { length: BigInt(r), name: new n.StringType(4, \"binary\").get(e, t + 4), }; }, put: (e, t, r) => ( n.UINT32_BE.put(e, t, Number(r.length)), i.FourCcToken.put(e, t + 4, r.name) ), }), (t.ExtendedSize = n.UINT64_BE), (t.ftyp = { len: 4, get: (e, t) => ({ type: new n.StringType(4, \"ascii\").get(e, t) }), }), (t.tkhd = { len: 4, get: (e, t) => ({ type: new n.StringType(4, \"ascii\").get(e, t) }), }), (t.mhdr = { len: 8, get: (e, t) => ({ version: n.UINT8.get(e, t), flags: n.UINT24_BE.get(e, t + 1), nextItemID: n.UINT32_BE.get(e, t + 4), }), }); class s { constructor(e, t, r) { if (((this.len = e), e < t)) throw new Error( `Atom ${r} expected to be ${t}, but specifies ${e} bytes long.` ); e > t && o( `Warning: atom ${r} expected to be ${t}, but was actually ${e} bytes long.` ); } } t.FixedLengthAtom = s; const u = { len: 4, get: (e, t) => { const r = n.UINT32_BE.get(e, t) - 2082844800; return new Date(1e3 * r); }, }; class c extends s { constructor(e) { super(e, 24, \"mdhd\"), (this.len = e); } get(e, t) { return { version: n.UINT8.get(e, t + 0), flags: n.UINT24_BE.get(e, t + 1), creationTime: u.get(e, t + 4), modificationTime: u.get(e, t + 8), timeScale: n.UINT32_BE.get(e, t + 12), duration: n.UINT32_BE.get(e, t + 16), language: n.UINT16_BE.get(e, t + 20), quality: n.UINT16_BE.get(e, t + 22), }; } } t.MdhdAtom = c; class l extends s { constructor(e) { super(e, 100, \"mvhd\"), (this.len = e); } get(e, t) { return { version: n.UINT8.get(e, t), flags: n.UINT24_BE.get(e, t + 1), creationTime: u.get(e, t + 4), modificationTime: u.get(e, t + 8), timeScale: n.UINT32_BE.get(e, t + 12), duration: n.UINT32_BE.get(e, t + 16), preferredRate: n.UINT32_BE.get(e, t + 20), preferredVolume: n.UINT16_BE.get(e, t + 24), previewTime: n.UINT32_BE.get(e, t + 72), previewDuration: n.UINT32_BE.get(e, t + 76), posterTime: n.UINT32_BE.get(e, t + 80), selectionTime: n.UINT32_BE.get(e, t + 84), selectionDuration: n.UINT32_BE.get(e, t + 88), currentTime: n.UINT32_BE.get(e, t + 92), nextTrackID: n.UINT32_BE.get(e, t + 96), }; } } t.MvhdAtom = l; class f { constructor(e) { this.len = e; } get(e, t) { return { type: { set: n.UINT8.get(e, t + 0), type: n.UINT24_BE.get(e, t + 1), }, locale: n.UINT24_BE.get(e, t + 4), value: new n.BufferType(this.len - 8).get(e, t + 8), }; } } t.DataAtom = f; class h { constructor(e) { this.len = e; } get(e, t) { return { version: n.UINT8.get(e, t), flags: n.UINT24_BE.get(e, t + 1), name: new n.StringType(this.len - 4, \"utf-8\").get(e, t + 4), }; } } t.NameAtom = h; class d { constructor(e) { this.len = e; } get(e, t) { return { version: n.UINT8.get(e, t), flags: n.UINT24_BE.get(e, t + 1), creationTime: u.get(e, t + 4), modificationTime: u.get(e, t + 8), trackId: n.UINT32_BE.get(e, t + 12), duration: n.UINT32_BE.get(e, t + 20), layer: n.UINT16_BE.get(e, t + 24), alternateGroup: n.UINT16_BE.get(e, t + 26), volume: n.UINT16_BE.get(e, t + 28), }; } } t.TrackHeaderAtom = d; const A = { len: 8, get: (e, t) => ({ version: n.UINT8.get(e, t), flags: n.UINT24_BE.get(e, t + 1), numberOfEntries: n.UINT32_BE.get(e, t + 4), }), }; class p { constructor(e) { this.len = e; } get(e, t) { return { dataFormat: i.FourCcToken.get(e, t), dataReferenceIndex: n.UINT16_BE.get(e, t + 10), description: new n.BufferType(this.len - 12).get(e, t + 12), }; } } class g { constructor(e) { this.len = e; } get(e, t) { const r = A.get(e, t); t += A.len; const i = []; for (let a = 0; a < r.numberOfEntries; ++a) { const r = n.UINT32_BE.get(e, t); (t += n.UINT32_BE.len), i.push(new p(r).get(e, t)), (t += r); } return { header: r, table: i }; } } (t.StsdAtom = g), (t.SoundSampleDescriptionVersion = { len: 8, get(e, t) { return { version: n.INT16_BE.get(e, t), revision: n.INT16_BE.get(e, t + 2), vendor: n.INT32_BE.get(e, t + 4), }; }, }), (t.SoundSampleDescriptionV0 = { len: 12, get(e, t) { return { numAudioChannels: n.INT16_BE.get(e, t + 0), sampleSize: n.INT16_BE.get(e, t + 2), compressionId: n.INT16_BE.get(e, t + 4), packetSize: n.INT16_BE.get(e, t + 6), sampleRate: n.UINT16_BE.get(e, t + 8) + n.UINT16_BE.get(e, t + 10) / 1e4, }; }, }); class m { constructor(e, t) { (this.len = e), (this.token = t); } get(e, t) { const r = n.INT32_BE.get(e, t + 4); return { version: n.INT8.get(e, t + 0), flags: n.INT24_BE.get(e, t + 1), numberOfEntries: r, entries: w(e, this.token, t + 8, this.len - 8, r), }; } } t.TimeToSampleToken = { len: 8, get(e, t) { return { count: n.INT32_BE.get(e, t + 0), duration: n.INT32_BE.get(e, t + 4), }; }, }; class b extends m { constructor(e) { super(e, t.TimeToSampleToken), (this.len = e); } } (t.SttsAtom = b), (t.SampleToChunkToken = { len: 12, get(e, t) { return { firstChunk: n.INT32_BE.get(e, t), samplesPerChunk: n.INT32_BE.get(e, t + 4), sampleDescriptionId: n.INT32_BE.get(e, t + 8), }; }, }); class v extends m { constructor(e) { super(e, t.SampleToChunkToken), (this.len = e); } } t.StscAtom = v; class y { constructor(e) { this.len = e; } get(e, t) { const r = n.INT32_BE.get(e, t + 8); return { version: n.INT8.get(e, t), flags: n.INT24_BE.get(e, t + 1), sampleSize: n.INT32_BE.get(e, t + 4), numberOfEntries: r, entries: w(e, n.INT32_BE, t + 12, this.len - 12, r), }; } } t.StszAtom = y; class I extends m { constructor(e) { super(e, n.INT32_BE), (this.len = e); } } t.StcoAtom = I; class E { constructor(e) { this.len = e; } get(e, t) { const r = n.INT16_BE.get(e, t + 0), i = new n.StringType(r, \"utf-8\"); return i.get(e, t + 2); } } function w(e, t, r, n, i) { if ( (o(`remainingLen=${n}, numberOfEntries=${i} * token-len=${t.len}`), 0 === n) ) return []; if (n !== i * t.len) throw new Error( \"mismatch number-of-entries with remaining atom-length\" ); const a = []; for (let o = 0; o < i; ++o) a.push(t.get(e, r)), (r += t.len); return a; } t.ChapterText = E; }, 1536: function (e, t, r) { \"use strict\"; (function (t) { var n = r(\"662d\"); function i(e, t, r, n, i) { for (var a = 0; a < r; a++) n[i + a] = e[t + a]; } function a(e, t, r) { for (var n = 0, i = t + r, a = t; a < i; a++) n += Math.abs(e[a]); return n; } function o(e, t, r, n, i, a) { for (var o = 0; o < r; o++) { var s = o >= a ? e[t + o - a] : 0, u = e[t + o] - s; n[i + o] = u; } } function s(e, t, r, n) { for (var i = 0, a = 0; a < r; a++) { var o = a >= n ? e[t + a - n] : 0, s = e[t + a] - o; i += Math.abs(s); } return i; } function u(e, t, r, n, i) { for (var a = 0; a < r; a++) { var o = t > 0 ? e[t + a - r] : 0, s = e[t + a] - o; n[i + a] = s; } } function c(e, t, r) { for (var n = 0, i = t + r, a = t; a < i; a++) { var o = t > 0 ? e[a - r] : 0, s = e[a] - o; n += Math.abs(s); } return n; } function l(e, t, r, n, i, a) { for (var o = 0; o < r; o++) { var s = o >= a ? e[t + o - a] : 0, u = t > 0 ? e[t + o - r] : 0, c = e[t + o] - ((s + u) >> 1); n[i + o] = c; } } function f(e, t, r, n) { for (var i = 0, a = 0; a < r; a++) { var o = a >= n ? e[t + a - n] : 0, s = t > 0 ? e[t + a - r] : 0, u = e[t + a] - ((o + s) >> 1); i += Math.abs(u); } return i; } function h(e, t, r, i, a, o) { for (var s = 0; s < r; s++) { var u = s >= o ? e[t + s - o] : 0, c = t > 0 ? e[t + s - r] : 0, l = t > 0 && s >= o ? e[t + s - (r + o)] : 0, f = e[t + s] - n(u, c, l); i[a + s] = f; } } function d(e, t, r, i) { for (var a = 0, o = 0; o < r; o++) { var s = o >= i ? e[t + o - i] : 0, u = t > 0 ? e[t + o - r] : 0, c = t > 0 && o >= i ? e[t + o - (r + i)] : 0, l = e[t + o] - n(s, u, c); a += Math.abs(l); } return a; } var A = { 0: i, 1: o, 2: u, 3: l, 4: h }, p = { 0: a, 1: s, 2: c, 3: f, 4: d }; e.exports = function (e, r, n, i, a) { var o; if (\"filterType\" in i && -1 !== i.filterType) { if (\"number\" !== typeof i.filterType) throw new Error(\"unrecognised filter types\"); o = [i.filterType]; } else o = [0, 1, 2, 3, 4]; 16 === i.bitDepth && (a *= 2); for ( var s = r * a, u = 0, c = 0, l = new t((s + 1) * n), f = o[0], h = 0; h < n; h++ ) { if (o.length > 1) for (var d = 1 / 0, g = 0; g < o.length; g++) { var m = p[o[g]](e, c, s, a); m < d && ((f = o[g]), (d = m)); } (l[u] = f), u++, A[f](e, c, s, l, u, a), (u += s), (c += s); } return l; }; }).call(this, r(\"1c35\").Buffer); }, \"159b\": function (e, t, r) { var n = r(\"da84\"), i = r(\"fdbc\"), a = r(\"785a\"), o = r(\"17c2\"), s = r(\"9112\"), u = function (e) { if (e && e.forEach !== o) try { s(e, \"forEach\", o); } catch (t) { e.forEach = o; } }; for (var c in i) i[c] && u(n[c] && n[c].prototype); u(a); }, \"15a0\": function (e, t, r) { \"use strict\"; (function (e) { Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.AbstractTokenizer = void 0); const n = r(\"e23d\"); class i { constructor(e) { (this.position = 0), (this.numBuffer = new Uint8Array(8)), (this.fileInfo = e || {}); } async readToken(t, r = this.position) { const i = e.alloc(t.len), a = await this.readBuffer(i, { position: r }); if (a < t.len) throw new n.EndOfStreamError(); return t.get(i, 0); } async peekToken(t, r = this.position) { const i = e.alloc(t.len), a = await this.peekBuffer(i, { position: r }); if (a < t.len) throw new n.EndOfStreamError(); return t.get(i, 0); } async readNumber(e) { const t = await this.readBuffer(this.numBuffer, { length: e.len }); if (t < e.len) throw new n.EndOfStreamError(); return e.get(this.numBuffer, 0); } async peekNumber(e) { const t = await this.peekBuffer(this.numBuffer, { length: e.len }); if (t < e.len) throw new n.EndOfStreamError(); return e.get(this.numBuffer, 0); } async ignore(e) { if (void 0 !== this.fileInfo.size) { const t = this.fileInfo.size - this.position; if (e > t) return (this.position += t), t; } return (this.position += e), e; } async close() {} normalizeOptions(e, t) { if (t && void 0 !== t.position && t.position < this.position) throw new Error( \"`options.position` must be equal or greater than `tokenizer.position`\" ); return t ? { mayBeLess: !0 === t.mayBeLess, offset: t.offset ? t.offset : 0, length: t.length ? t.length : e.length - (t.offset ? t.offset : 0), position: t.position ? t.position : this.position, } : { mayBeLess: !1, offset: 0, length: e.length, position: this.position, }; } } t.AbstractTokenizer = i; }).call(this, r(\"1c35\").Buffer); }, \"15bf\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.APEv2TagMapper = void 0); const n = r(\"53d6\"), i = { Title: \"title\", Artist: \"artist\", Artists: \"artists\", \"Album Artist\": \"albumartist\", Album: \"album\", Year: \"date\", Originalyear: \"originalyear\", Originaldate: \"originaldate\", Comment: \"comment\", Track: \"track\", Disc: \"disk\", DISCNUMBER: \"disk\", Genre: \"genre\", \"Cover Art (Front)\": \"picture\", \"Cover Art (Back)\": \"picture\", Composer: \"composer\", Lyrics: \"lyrics\", ALBUMSORT: \"albumsort\", TITLESORT: \"titlesort\", WORK: \"work\", ARTISTSORT: \"artistsort\", ALBUMARTISTSORT: \"albumartistsort\", COMPOSERSORT: \"composersort\", Lyricist: \"lyricist\", Writer: \"writer\", Conductor: \"conductor\", MixArtist: \"remixer\", Arranger: \"arranger\", Engineer: \"engineer\", Producer: \"producer\", DJMixer: \"djmixer\", Mixer: \"mixer\", Label: \"label\", Grouping: \"grouping\", Subtitle: \"subtitle\", DiscSubtitle: \"discsubtitle\", Compilation: \"compilation\", BPM: \"bpm\", Mood: \"mood\", Media: \"media\", CatalogNumber: \"catalognumber\", MUSICBRAINZ_ALBUMSTATUS: \"releasestatus\", MUSICBRAINZ_ALBUMTYPE: \"releasetype\", RELEASECOUNTRY: \"releasecountry\", Script: \"script\", Language: \"language\", Copyright: \"copyright\", LICENSE: \"license\", EncodedBy: \"encodedby\", EncoderSettings: \"encodersettings\", Barcode: \"barcode\", ISRC: \"isrc\", ASIN: \"asin\", musicbrainz_trackid: \"musicbrainz_recordingid\", musicbrainz_releasetrackid: \"musicbrainz_trackid\", MUSICBRAINZ_ALBUMID: \"musicbrainz_albumid\", MUSICBRAINZ_ARTISTID: \"musicbrainz_artistid\", MUSICBRAINZ_ALBUMARTISTID: \"musicbrainz_albumartistid\", MUSICBRAINZ_RELEASEGROUPID: \"musicbrainz_releasegroupid\", MUSICBRAINZ_WORKID: \"musicbrainz_workid\", MUSICBRAINZ_TRMID: \"musicbrainz_trmid\", MUSICBRAINZ_DISCID: \"musicbrainz_discid\", Acoustid_Id: \"acoustid_id\", ACOUSTID_FINGERPRINT: \"acoustid_fingerprint\", MUSICIP_PUID: \"musicip_puid\", Weblink: \"website\", REPLAYGAIN_TRACK_GAIN: \"replaygain_track_gain\", REPLAYGAIN_TRACK_PEAK: \"replaygain_track_peak\", MP3GAIN_MINMAX: \"replaygain_track_minmax\", MP3GAIN_UNDO: \"replaygain_undo\", }; class a extends n.CaseInsensitiveTagMap { constructor() { super([\"APEv2\"], i); } } t.APEv2TagMapper = a; }, 1609: function (e, t) { e.exports = function (e) { if (\"function\" != typeof e) throw TypeError(e + \" is not a function!\"); return e; }; }, 1626: function (e, t) { e.exports = function (e) { return \"function\" == typeof e; }; }, \"170b\": function (e, t, r) { \"use strict\"; var n = r(\"ebb5\"), i = r(\"50c4\"), a = r(\"23cb\"), o = r(\"b6b7\"), s = n.aTypedArray, u = n.exportTypedArrayMethod; u(\"subarray\", function (e, t) { var r = s(this), n = r.length, u = a(e, n), c = o(r); return new c( r.buffer, r.byteOffset + u * r.BYTES_PER_ELEMENT, i((void 0 === t ? n : a(t, n)) - u) ); }); }, 1717: function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t[\"default\"] = void 0); var n = r(\"c2d7\"), i = function () { return { gaussian: function (e, t) { if (\"number\" !== typeof e) return n.throwError.call(this, \"r must be a number\", t); if (e < 1) return n.throwError.call(this, \"r must be greater than 0\", t); for ( var r = Math.ceil(2.57 * e), i = 2 * r + 1, a = e * e * 2, o = a * Math.PI, s = [], u = 0; u < i; u++ ) { s[u] = []; for (var c = 0; c < i; c++) { var l = Math.pow(c - r, 2) + Math.pow(u - r, 2); s[u][c] = Math.exp(-l / a) / o; } } for (var f = 0; f < this.bitmap.height; f++) for (var h = 0; h < this.bitmap.width; h++) for ( var d = 0, A = 0, p = 0, g = 0, m = 0, b = 0; b < i; b++ ) { for (var v = 0; v < i; v++) { var y = Math.min( this.bitmap.width - 1, Math.max(0, v + h - r) ), I = Math.min( this.bitmap.height - 1, Math.max(0, b + f - r) ), E = s[b][v], w = (I * this.bitmap.width + y) < 2; (d += this.bitmap.data[w] * E), (A += this.bitmap.data[w + 1] * E), (p += this.bitmap.data[w + 2] * E), (g += this.bitmap.data[w + 3] * E), (m += E); } var C = (f * this.bitmap.width + h) < 2; (this.bitmap.data[C] = Math.round(d / m)), (this.bitmap.data[C + 1] = Math.round(A / m)), (this.bitmap.data[C + 2] = Math.round(p / m)), (this.bitmap.data[C + 3] = Math.round(g / m)); } return (0, n.isNodePattern)(t) && t.call(this, null, this), this; }, }; }; t[\"default\"] = i; }, \"17c2\": function (e, t, r) { \"use strict\"; var n = r(\"b727\").forEach, i = r(\"a640\"), a = i(\"forEach\"); e.exports = a ? [].forEach : function (e) { return n(this, e, arguments.length > 1 ? arguments[1] : void 0); }; }, \"17e1\": function (e, t, r) { (function (t, n) { e.exports = n(r(\"21bf\")); })(0, function (e) { return ( (function () { if (\"function\" == typeof ArrayBuffer) { var t = e, r = t.lib, n = r.WordArray, i = n.init, a = (n.init = function (e) { if ( (e instanceof ArrayBuffer && (e = new Uint8Array(e)), (e instanceof Int8Array || (\"undefined\" !== typeof Uint8ClampedArray && e instanceof Uint8ClampedArray) || e instanceof Int16Array || e instanceof Uint16Array || e instanceof Int32Array || e instanceof Uint32Array || e instanceof Float32Array || e instanceof Float64Array) && (e = new Uint8Array( e.buffer, e.byteOffset, e.byteLength )), e instanceof Uint8Array) ) { for (var t = e.byteLength, r = [], n = 0; n < t; n++) r[n >>> 2] |= e[n] < (24 - (n % 4) * 8); i.call(this, r, t); } else i.apply(this, arguments); }); a.prototype = n; } })(), e.lib.WordArray ); }); }, \"17ed\": function (e, t, r) { e.exports = { default: r(\"511f\"), __esModule: !0 }; }, \"182d\": function (e, t, r) { var n = r(\"da84\"), i = r(\"f8cd\"), a = n.RangeError; e.exports = function (e, t) { var r = i(e); if (r % t) throw a(\"Wrong offset\"); return r; }; }, 1836: function (e, t, r) { var n = r(\"6ca1\"), i = r(\"6438\").f, a = {}.toString, o = \"object\" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [], s = function (e) { try { return i(e); } catch (t) { return o.slice(); } }; e.exports.f = function (e) { return o && \"[object Window]\" == a.call(e) ? s(e) : i(n(e)); }; }, 1917: function (e, t) { t.f = {}.propertyIsEnumerable; }, 1951: function (e, t, r) {}, 1985: function (e, t, r) { (function (e, n) { var i; /*! https://mths.be/punycode v1.4.1 by @mathias */ (function (a) { t && t.nodeType, e && e.nodeType; var o = \"object\" == typeof n && n; o.global !== o && o.window !== o && o.self; var s, u = 2147483647, c = 36, l = 1, f = 26, h = 38, d = 700, A = 72, p = 128, g = \"-\", m = /^xn--/, b = /[^\\x20-\\x7E]/, v = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, y = { overflow: \"Overflow: input needs wider integers to process\", \"not-basic\": \"Illegal input >= 0x80 (not a basic code point)\", \"invalid-input\": \"Invalid input\", }, I = c - l, E = Math.floor, w = String.fromCharCode; function C(e) { throw new RangeError(y[e]); } function _(e, t) { var r = e.length, n = []; while (r--) n[r] = t(e[r]); return n; } function B(e, t) { var r = e.split(\"@\"), n = \"\"; r.length > 1 && ((n = r[0] + \"@\"), (e = r[1])), (e = e.replace(v, \".\")); var i = e.split(\".\"), a = _(i, t).join(\".\"); return n + a; } function x(e) { var t, r, n = [], i = 0, a = e.length; while (i < a) (t = e.charCodeAt(i++)), t >= 55296 && t = 0), this === e)) return 0; for ( var a = i - n, o = r - t, s = Math.min(a, o), u = this.slice(n, i), l = e.slice(t, r), f = 0; f < s; ++f ) if (u[f] !== l[f]) { (a = u[f]), (o = l[f]); break; } return a < o ? -1 : o < a ? 1 : 0; }), (c.prototype.includes = function (e, t, r) { return -1 !== this.indexOf(e, t, r); }), (c.prototype.indexOf = function (e, t, r) { return w(this, e, t, r, !0); }), (c.prototype.lastIndexOf = function (e, t, r) { return w(this, e, t, r, !1); }), (c.prototype.write = function (e, t, r, n) { if (void 0 === t) (n = \"utf8\"), (r = this.length), (t = 0); else if (void 0 === r && \"string\" === typeof t) (n = t), (r = this.length), (t = 0); else { if (!isFinite(t)) throw new Error( \"Buffer.write(string, encoding, offset[, length]) is no longer supported\" ); (t |= 0), isFinite(r) ? ((r |= 0), void 0 === n && (n = \"utf8\")) : ((n = r), (r = void 0)); } var i = this.length - t; if ( ((void 0 === r || r > i) && (r = i), (e.length > 0 && (r < 0 || t < 0)) || t > this.length) ) throw new RangeError(\"Attempt to write outside buffer bounds\"); n || (n = \"utf8\"); for (var a = !1; ; ) switch (n) { case \"hex\": return _(this, e, t, r); case \"utf8\": case \"utf-8\": return B(this, e, t, r); case \"ascii\": return x(this, e, t, r); case \"latin1\": case \"binary\": return S(this, e, t, r); case \"base64\": return k(this, e, t, r); case \"ucs2\": case \"ucs-2\": case \"utf16le\": case \"utf-16le\": return Q(this, e, t, r); default: if (a) throw new TypeError(\"Unknown encoding: \" + n); (n = (\"\" + n).toLowerCase()), (a = !0); } }), (c.prototype.toJSON = function () { return { type: \"Buffer\", data: Array.prototype.slice.call(this._arr || this, 0), }; }); var D = 4096; function R(e) { var t = e.length; if (t > 16), (this[t + 3] = e >>> 24)) : z(this, e, t, !0), t + 4 ); }), (c.prototype.writeInt32BE = function (e, t, r) { return ( (e = +e), (t |= 0), r || U(this, e, t, 4, 2147483647, -2147483648), e < 0 && (e = 4294967295 + e + 1), c.TYPED_ARRAY_SUPPORT ? ((this[t] = e >>> 24), (this[t + 1] = e >>> 16), (this[t + 2] = e >>> 8), (this[t + 3] = 255 & e)) : z(this, e, t, !1), t + 4 ); }), (c.prototype.writeFloatLE = function (e, t, r) { return H(this, e, t, !0, r); }), (c.prototype.writeFloatBE = function (e, t, r) { return H(this, e, t, !1, r); }), (c.prototype.writeDoubleLE = function (e, t, r) { return W(this, e, t, !0, r); }), (c.prototype.writeDoubleBE = function (e, t, r) { return W(this, e, t, !1, r); }), (c.prototype.copy = function (e, t, r, n) { if ( (r || (r = 0), n || 0 === n || (n = this.length), t >= e.length && (t = e.length), t || (t = 0), n > 0 && n < r && (n = r), n === r) ) return 0; if (0 === e.length || 0 === this.length) return 0; if (t < 0) throw new RangeError(\"targetStart out of bounds\"); if (r < 0 || r >= this.length) throw new RangeError(\"sourceStart out of bounds\"); if (n < 0) throw new RangeError(\"sourceEnd out of bounds\"); n > this.length && (n = this.length), e.length - t < n - r && (n = e.length - t + r); var i, a = n - r; if (this === e && r < t && t < n) for (i = a - 1; i >= 0; --i) e[i + t] = this[i + r]; else if (a < 1e3 || !c.TYPED_ARRAY_SUPPORT) for (i = 0; i < a; ++i) e[i + t] = this[i + r]; else Uint8Array.prototype.set.call(e, this.subarray(r, r + a), t); return a; }), (c.prototype.fill = function (e, t, r, n) { if (\"string\" === typeof e) { if ( (\"string\" === typeof t ? ((n = t), (t = 0), (r = this.length)) : \"string\" === typeof r && ((n = r), (r = this.length)), 1 === e.length) ) { var i = e.charCodeAt(0); i < 256 && (e = i); } if (void 0 !== n && \"string\" !== typeof n) throw new TypeError(\"encoding must be a string\"); if (\"string\" === typeof n && !c.isEncoding(n)) throw new TypeError(\"Unknown encoding: \" + n); } else \"number\" === typeof e && (e &= 255); if (t < 0 || this.length < t || this.length < r) throw new RangeError(\"Out of range index\"); if (r >>= 0), (r = void 0 === r ? this.length : r >>> 0), e || (e = 0), \"number\" === typeof e) ) for (a = t; a < r; ++a) this[a] = e; else { var o = c.isBuffer(e) ? e : K(new c(e, n).toString()), s = o.length; for (a = 0; a < r - t; ++a) this[a + t] = o[a % s]; } return this; }); var Y = /[^+\\/0-9A-Za-z-_]/g; function q(e) { if (((e = J(e).replace(Y, \"\")), e.length < 2)) return \"\"; while (e.length % 4 !== 0) e += \"=\"; return e; } function J(e) { return e.trim ? e.trim() : e.replace(/^\\s+|\\s+$/g, \"\"); } function $(e) { return e < 16 ? \"0\" + e.toString(16) : e.toString(16); } function K(e, t) { var r; t = t || 1 / 0; for (var n = e.length, i = null, a = [], o = 0; o < n; ++o) { if (((r = e.charCodeAt(o)), r > 55295 && r < 57344)) { if (!i) { if (r > 56319) { (t -= 3) > -1 && a.push(239, 191, 189); continue; } if (o + 1 === n) { (t -= 3) > -1 && a.push(239, 191, 189); continue; } i = r; continue; } if (r < 56320) { (t -= 3) > -1 && a.push(239, 191, 189), (i = r); continue; } r = 65536 + (((i - 55296) < 10) | (r - 56320)); } else i && (t -= 3) > -1 && a.push(239, 191, 189); if (((i = null), r < 128)) { if ((t -= 1) < 0) break; a.push(r); } else if (r < 2048) { if ((t -= 2) < 0) break; a.push((r >> 6) | 192, (63 & r) | 128); } else if (r < 65536) { if ((t -= 3) < 0) break; a.push((r >> 12) | 224, ((r >> 6) & 63) | 128, (63 & r) | 128); } else { if (!(r < 1114112)) throw new Error(\"Invalid code point\"); if ((t -= 4) < 0) break; a.push( (r >> 18) | 240, ((r >> 12) & 63) | 128, ((r >> 6) & 63) | 128, (63 & r) | 128 ); } } return a; } function V(e) { for (var t = [], r = 0; r < e.length; ++r) t.push(255 & e.charCodeAt(r)); return t; } function X(e, t) { for (var r, n, i, a = [], o = 0; o < e.length; ++o) { if ((t -= 2) < 0) break; (r = e.charCodeAt(o)), (n = r >> 8), (i = r % 256), a.push(i), a.push(n); } return a; } function Z(e) { return n.toByteArray(q(e)); } function ee(e, t, r, n) { for (var i = 0; i < n; ++i) { if (i + r >= t.length || i >= e.length) break; t[i + r] = e[i]; } return i; } function te(e) { return e !== e; } }).call(this, r(\"c8ba\")); }, \"1c47\": function (e, t, r) { \"use strict\"; e.exports = { shiftjis: { type: \"_dbcs\", table: function () { return r(\"94f4\"); }, encodeAdd: { \"¥\": 92, \"‾\": 126 }, encodeSkipVals: [{ from: 60736, to: 63808 }], }, csshiftjis: \"shiftjis\", mskanji: \"shiftjis\", sjis: \"shiftjis\", windows31j: \"shiftjis\", ms31j: \"shiftjis\", xsjis: \"shiftjis\", windows932: \"shiftjis\", ms932: \"shiftjis\", 932: \"shiftjis\", cp932: \"shiftjis\", eucjp: { type: \"_dbcs\", table: function () { return r(\"4981\"); }, encodeAdd: { \"¥\": 92, \"‾\": 126 }, }, gb2312: \"cp936\", gb231280: \"cp936\", gb23121980: \"cp936\", csgb2312: \"cp936\", csiso58gb231280: \"cp936\", euccn: \"cp936\", windows936: \"cp936\", ms936: \"cp936\", 936: \"cp936\", cp936: { type: \"_dbcs\", table: function () { return r(\"b2fd\"); }, }, gbk: { type: \"_dbcs\", table: function () { return r(\"b2fd\").concat(r(\"8474\")); }, }, xgbk: \"gbk\", isoir58: \"gbk\", gb18030: { type: \"_dbcs\", table: function () { return r(\"b2fd\").concat(r(\"8474\")); }, gb18030: function () { return r(\"7cf7\"); }, encodeSkipVals: [128], encodeAdd: { \"€\": 41699 }, }, chinese: \"gb18030\", windows949: \"cp949\", ms949: \"cp949\", 949: \"cp949\", cp949: { type: \"_dbcs\", table: function () { return r(\"e564\"); }, }, cseuckr: \"cp949\", csksc56011987: \"cp949\", euckr: \"cp949\", isoir149: \"cp949\", korean: \"cp949\", ksc56011987: \"cp949\", ksc56011989: \"cp949\", ksc5601: \"cp949\", windows950: \"cp950\", ms950: \"cp950\", 950: \"cp950\", cp950: { type: \"_dbcs\", table: function () { return r(\"86d7\"); }, }, big5: \"big5hkscs\", big5hkscs: { type: \"_dbcs\", table: function () { return r(\"86d7\").concat(r(\"71f0\")); }, encodeSkipVals: [ 36457, 36463, 36478, 36523, 36532, 36557, 36560, 36695, 36713, 36718, 36811, 36862, 36973, 36986, 37060, 37084, 37105, 37311, 37551, 37552, 37553, 37554, 37585, 37959, 38090, 38361, 38652, 39285, 39798, 39800, 39803, 39878, 39902, 39916, 39926, 40002, 40019, 40034, 40040, 40043, 40055, 40124, 40125, 40144, 40279, 40282, 40388, 40431, 40443, 40617, 40687, 40701, 40800, 40907, 41079, 41180, 41183, 36812, 37576, 38468, 38637, 41636, 41637, 41639, 41638, 41676, 41678, ], }, cnbig5: \"big5hkscs\", csbig5: \"big5hkscs\", xxbig5: \"big5hkscs\", }; }, \"1c7e\": function (e, t, r) { var n = r(\"b622\"), i = n(\"iterator\"), a = !1; try { var o = 0, s = { next: function () { return { done: !!o++ }; }, return: function () { a = !0; }, }; (s[i] = function () { return this; }), Array.from(s, function () { throw 2; }); } catch (u) {} e.exports = function (e, t) { if (!t && !a) return !1; var r = !1; try { var n = {}; (n[i] = function () { return { next: function () { return { done: (r = !0) }; }, }; }), e(n); } catch (u) {} return r; }; }, \"1cdc\": function (e, t, r) { var n = r(\"342f\"); e.exports = /(?:ipad|iphone|ipod).*applewebkit/i.test(n); }, \"1d55\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.isBitSet = t.parseTagFlags = t.TagField = t.TagItemHeader = t.TagFooter = t.Header = t.DescriptorParser = t.DataType = void 0); const n = r(\"6f58\"), i = r(\"98a7\"); (function (e) { (e[(e[\"text_utf8\"] = 0)] = \"text_utf8\"), (e[(e[\"binary\"] = 1)] = \"binary\"), (e[(e[\"external_info\"] = 2)] = \"external_info\"), (e[(e[\"reserved\"] = 3)] = \"reserved\"); })(t.DataType || (t.DataType = {})), (t.DescriptorParser = { len: 52, get: (e, t) => ({ ID: i.FourCcToken.get(e, t), version: n.UINT32_LE.get(e, t + 4) / 1e3, descriptorBytes: n.UINT32_LE.get(e, t + 8), headerBytes: n.UINT32_LE.get(e, t + 12), seekTableBytes: n.UINT32_LE.get(e, t + 16), headerDataBytes: n.UINT32_LE.get(e, t + 20), apeFrameDataBytes: n.UINT32_LE.get(e, t + 24), apeFrameDataBytesHigh: n.UINT32_LE.get(e, t + 28), terminatingDataBytes: n.UINT32_LE.get(e, t + 32), fileMD5: new n.BufferType(16).get(e, t + 36), }), }), (t.Header = { len: 24, get: (e, t) => ({ compressionLevel: n.UINT16_LE.get(e, t), formatFlags: n.UINT16_LE.get(e, t + 2), blocksPerFrame: n.UINT32_LE.get(e, t + 4), finalFrameBlocks: n.UINT32_LE.get(e, t + 8), totalFrames: n.UINT32_LE.get(e, t + 12), bitsPerSample: n.UINT16_LE.get(e, t + 16), channel: n.UINT16_LE.get(e, t + 18), sampleRate: n.UINT32_LE.get(e, t + 20), }), }), (t.TagFooter = { len: 32, get: (e, t) => ({ ID: new n.StringType(8, \"ascii\").get(e, t), version: n.UINT32_LE.get(e, t + 8), size: n.UINT32_LE.get(e, t + 12), fields: n.UINT32_LE.get(e, t + 16), flags: o(n.UINT32_LE.get(e, t + 20)), }), }), (t.TagItemHeader = { len: 8, get: (e, t) => ({ size: n.UINT32_LE.get(e, t), flags: o(n.UINT32_LE.get(e, t + 4)), }), }); const a = (e) => new n.BufferType(e.size - t.TagFooter.len); function o(e) { return { containsHeader: s(e, 31), containsFooter: s(e, 30), isHeader: s(e, 31), readOnly: s(e, 0), dataType: (6 & e) >> 1, }; } function s(e, t) { return 0 !== (e & (1 < t)); } (t.TagField = a), (t.parseTagFlags = o), (t.isBitSet = s); }, \"1d80\": function (e, t, r) { var n = r(\"da84\"), i = n.TypeError; e.exports = function (e) { if (void 0 == e) throw i(\"Can't call method on \" + e); return e; }; }, \"1da1\": function (e, t, r) { \"use strict\"; r.d(t, \"a\", function () { return i; }); r(\"d3b7\"); function n(e, t, r, n, i, a, o) { try { var s = e[a](o), u = s.value; } catch (c) { return void r(c); } s.done ? t(u) : Promise.resolve(u).then(n, i); } function i(e) { return function () { var t = this, r = arguments; return new Promise(function (i, a) { var o = e.apply(t, r); function s(e) { n(o, i, a, s, u, \"next\", e); } function u(e) { n(o, i, a, s, u, \"throw\", e); } s(void 0); }); }; } }, \"1dbf\": function (e, t, r) { \"use strict\"; var n = r(\"86a9\"), i = r(\"c733\"); (t.read = function (e, t) { return n(e, t || {}); }), (t.write = function (e, t) { return i(e, t); }); }, \"1dde\": function (e, t, r) { var n = r(\"d039\"), i = r(\"b622\"), a = r(\"2d00\"), o = i(\"species\"); e.exports = function (e) { return ( a >= 51 || !n(function () { var t = [], r = (t.constructor = {}); return ( (r[o] = function () { return { foo: 1 }; }), 1 !== t[e](Boolean).foo ); }) ); }; }, \"1e48\": function (e, t, r) { \"use strict\"; (function (e) { Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.ReadStreamTokenizer = void 0); const n = r(\"a046\"), i = r(\"20f8\"), a = 256e3; class o extends n.AbstractTokenizer { constructor(e, t) { super(t), (this.streamReader = new i.StreamReader(e)); } async getFileInfo() { return this.fileInfo; } async readBuffer(e, t) { let r = 0, n = e.length; if (t) { if ( (Number.isInteger(t.length) ? (n = t.length) : (n -= t.offset || 0), t.position) ) { const r = t.position - this.position; if (r > 0) return await this.ignore(r), this.readBuffer(e, t); if (r < 0) throw new Error( \"`options.position` must be equal or greater than `tokenizer.position`\" ); } t.offset && (r = t.offset); } if (0 === n) return 0; const a = await this.streamReader.read(e, r, n); if (((this.position += a), (!t || !t.mayBeLess) && a < n)) throw new i.EndOfStreamError(); return a; } async peekBuffer(t, r) { let n, a = 0, o = t.length; if ( r && (r.offset && (a = r.offset), Number.isInteger(r.length) ? (o = r.length) : (o -= r.offset || 0), r.position) ) { const i = r.position - this.position; if (i > 0) { const s = e.alloc(o + i); return ( (n = await this.peekBuffer(s, { mayBeLess: r.mayBeLess })), s.copy(t, a, i), n - i ); } if (i < 0) throw new Error( \"Cannot peek from a negative offset in a stream\" ); } try { n = await this.streamReader.peek(t, a, o); } catch (s) { if (r && r.mayBeLess && s instanceof i.EndOfStreamError) return 0; throw s; } if ((!r || !r.mayBeLess) && n < o) throw new i.EndOfStreamError(); return n; } async ignore(t) { const r = Math.min(a, t), n = e.alloc(r); let i = 0; while (i < t) { const e = t - i, a = await this.readBuffer(n, { length: Math.min(r, e) }); if (a < 0) return a; i += a; } return i; } } t.ReadStreamTokenizer = o; }).call(this, r(\"1c35\").Buffer); }, \"1e78\": function (e, t, r) { \"use strict\"; (function (e) { Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.hasID3v1Header = t.ID3v1Parser = t.Genres = void 0); const n = r(\"34eb\"), i = r(\"d3ab\"), a = r(\"6f58\"), o = r(\"95c9\"), s = r(\"9611\"), u = n(\"music-metadata:parser:ID3v1\"); t.Genres = [ \"Blues\", \"Classic Rock\", \"Country\", \"Dance\", \"Disco\", \"Funk\", \"Grunge\", \"Hip-Hop\", \"Jazz\", \"Metal\", \"New Age\", \"Oldies\", \"Other\", \"Pop\", \"R&B\", \"Rap\", \"Reggae\", \"Rock\", \"Techno\", \"Industrial\", \"Alternative\", \"Ska\", \"Death Metal\", \"Pranks\", \"Soundtrack\", \"Euro-Techno\", \"Ambient\", \"Trip-Hop\", \"Vocal\", \"Jazz+Funk\", \"Fusion\", \"Trance\", \"Classical\", \"Instrumental\", \"Acid\", \"House\", \"Game\", \"Sound Clip\", \"Gospel\", \"Noise\", \"Alt. Rock\", \"Bass\", \"Soul\", \"Punk\", \"Space\", \"Meditative\", \"Instrumental Pop\", \"Instrumental Rock\", \"Ethnic\", \"Gothic\", \"Darkwave\", \"Techno-Industrial\", \"Electronic\", \"Pop-Folk\", \"Eurodance\", \"Dream\", \"Southern Rock\", \"Comedy\", \"Cult\", \"Gangsta Rap\", \"Top 40\", \"Christian Rap\", \"Pop/Funk\", \"Jungle\", \"Native American\", \"Cabaret\", \"New Wave\", \"Psychedelic\", \"Rave\", \"Showtunes\", \"Trailer\", \"Lo-Fi\", \"Tribal\", \"Acid Punk\", \"Acid Jazz\", \"Polka\", \"Retro\", \"Musical\", \"Rock & Roll\", \"Hard Rock\", \"Folk\", \"Folk/Rock\", \"National Folk\", \"Swing\", \"Fast-Fusion\", \"Bebob\", \"Latin\", \"Revival\", \"Celtic\", \"Bluegrass\", \"Avantgarde\", \"Gothic Rock\", \"Progressive Rock\", \"Psychedelic Rock\", \"Symphonic Rock\", \"Slow Rock\", \"Big Band\", \"Chorus\", \"Easy Listening\", \"Acoustic\", \"Humour\", \"Speech\", \"Chanson\", \"Opera\", \"Chamber Music\", \"Sonata\", \"Symphony\", \"Booty Bass\", \"Primus\", \"Porn Groove\", \"Satire\", \"Slow Jam\", \"Club\", \"Tango\", \"Samba\", \"Folklore\", \"Ballad\", \"Power Ballad\", \"Rhythmic Soul\", \"Freestyle\", \"Duet\", \"Punk Rock\", \"Drum Solo\", \"A Cappella\", \"Euro-House\", \"Dance Hall\", \"Goa\", \"Drum & Bass\", \"Club-House\", \"Hardcore\", \"Terror\", \"Indie\", \"BritPop\", \"Negerpunk\", \"Polsk Punk\", \"Beat\", \"Christian Gangsta Rap\", \"Heavy Metal\", \"Black Metal\", \"Crossover\", \"Contemporary Christian\", \"Christian Rock\", \"Merengue\", \"Salsa\", \"Thrash Metal\", \"Anime\", \"JPop\", \"Synthpop\", \"Abstract\", \"Art Rock\", \"Baroque\", \"Bhangra\", \"Big Beat\", \"Breakbeat\", \"Chillout\", \"Downtempo\", \"Dub\", \"EBM\", \"Eclectic\", \"Electro\", \"Electroclash\", \"Emo\", \"Experimental\", \"Garage\", \"Global\", \"IDM\", \"Illbient\", \"Industro-Goth\", \"Jam Band\", \"Krautrock\", \"Leftfield\", \"Lounge\", \"Math Rock\", \"New Romantic\", \"Nu-Breakz\", \"Post-Punk\", \"Post-Rock\", \"Psytrance\", \"Shoegaze\", \"Space Rock\", \"Trop Rock\", \"World Music\", \"Neoclassical\", \"Audiobook\", \"Audio Theatre\", \"Neue Deutsche Welle\", \"Podcast\", \"Indie Rock\", \"G-Funk\", \"Dubstep\", \"Garage Rock\", \"Psybient\", ]; const c = { len: 128, get: (e, t) => { const r = new l(3).get(e, t); return \"TAG\" === r ? { header: r, title: new l(30).get(e, t + 3), artist: new l(30).get(e, t + 33), album: new l(30).get(e, t + 63), year: new l(4).get(e, t + 93), comment: new l(28).get(e, t + 97), zeroByte: a.UINT8.get(e, t + 127), track: a.UINT8.get(e, t + 126), genre: a.UINT8.get(e, t + 127), } : null; }, }; class l extends a.StringType { constructor(e) { super(e, \"binary\"); } get(e, t) { let r = super.get(e, t); return ( (r = i.trimRightNull(r)), (r = r.trim()), r.length > 0 ? r : void 0 ); } } class f extends o.BasicParser { static getGenre(e) { if (e < t.Genres.length) return t.Genres[e]; } async parse() { if (!this.tokenizer.fileInfo.size) return void u( \"Skip checking for ID3v1 because the file-size is unknown\" ); if (this.options.apeHeader) { this.tokenizer.ignore( this.options.apeHeader.offset - this.tokenizer.position ); const e = new s.APEv2Parser(); e.init(this.metadata, this.tokenizer, this.options), await e.parseTags(this.options.apeHeader.footer); } const e = this.tokenizer.fileInfo.size - c.len; if (this.tokenizer.position > e) return void u(\"Already consumed the last 128 bytes\"); const t = await this.tokenizer.readToken(c, e); if (t) { u( \"ID3v1 header found at: pos=%s\", this.tokenizer.fileInfo.size - c.len ); for (const r of [ \"title\", \"artist\", \"album\", \"comment\", \"track\", \"year\", ]) t[r] && \"\" !== t[r] && this.addTag(r, t[r]); const e = f.getGenre(t.genre); e && this.addTag(\"genre\", e); } else u( \"ID3v1 header not found at: pos=%s\", this.tokenizer.fileInfo.size - c.len ); } addTag(e, t) { this.metadata.addTag(\"ID3v1\", e, t); } } async function h(t) { if (t.fileSize >= 128) { const r = e.alloc(3); return ( await t.randomRead(r, 0, r.length, t.fileSize - 128), \"TAG\" === r.toString(\"binary\") ); } return !1; } (t.ID3v1Parser = f), (t.hasID3v1Header = h); }).call(this, r(\"1c35\").Buffer); }, \"1fb5\": function (e, t, r) { \"use strict\"; (t.byteLength = l), (t.toByteArray = h), (t.fromByteArray = p); for ( var n = [], i = [], a = \"undefined\" !== typeof Uint8Array ? Uint8Array : Array, o = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\", s = 0, u = o.length; s < u; ++s ) (n[s] = o[s]), (i[o.charCodeAt(s)] = s); function c(e) { var t = e.length; if (t % 4 > 0) throw new Error(\"Invalid string. Length must be a multiple of 4\"); var r = e.indexOf(\"=\"); -1 === r && (r = t); var n = r === t ? 0 : 4 - (r % 4); return [r, n]; } function l(e) { var t = c(e), r = t[0], n = t[1]; return (3 * (r + n)) / 4 - n; } function f(e, t, r) { return (3 * (t + r)) / 4 - r; } function h(e) { var t, r, n = c(e), o = n[0], s = n[1], u = new a(f(e, o, s)), l = 0, h = s > 0 ? o - 4 : o; for (r = 0; r < h; r += 4) (t = (i[e.charCodeAt(r)] < 18) | (i[e.charCodeAt(r + 1)] < 12) | (i[e.charCodeAt(r + 2)] < 6) | i[e.charCodeAt(r + 3)]), (u[l++] = (t >> 16) & 255), (u[l++] = (t >> 8) & 255), (u[l++] = 255 & t); return ( 2 === s && ((t = (i[e.charCodeAt(r)] < 2) | (i[e.charCodeAt(r + 1)] >> 4)), (u[l++] = 255 & t)), 1 === s && ((t = (i[e.charCodeAt(r)] < 10) | (i[e.charCodeAt(r + 1)] < 4) | (i[e.charCodeAt(r + 2)] >> 2)), (u[l++] = (t >> 8) & 255), (u[l++] = 255 & t)), u ); } function d(e) { return ( n[(e >> 18) & 63] + n[(e >> 12) & 63] + n[(e >> 6) & 63] + n[63 & e] ); } function A(e, t, r) { for (var n, i = [], a = t; a < r; a += 3) (n = ((e[a] < 16) & 16711680) + ((e[a + 1] < 8) & 65280) + (255 & e[a + 2])), i.push(d(n)); return i.join(\"\"); } function p(e) { for ( var t, r = e.length, i = r % 3, a = [], o = 16383, s = 0, u = r - i; s < u; s += o ) a.push(A(e, s, s + o > u ? u : s + o)); return ( 1 === i ? ((t = e[r - 1]), a.push(n[t >> 2] + n[(t < 4) & 63] + \"==\")) : 2 === i && ((t = (e[r - 2] < 8) + e[r - 1]), a.push(n[t >> 10] + n[(t >> 4) & 63] + n[(t < 2) & 63] + \"=\")), a.join(\"\") ); } (i[\"-\".charCodeAt(0)] = 62), (i[\"_\".charCodeAt(0)] = 63); }, 2090: function (e, t, r) { \"use strict\"; (function (e) { var n = r(\"4ea4\"); Object.defineProperty(t, \"__esModule\", { value: !0 }), (t[\"default\"] = void 0); var i = n(r(\"448a\")), a = n(r(\"66cb\")), o = r(\"c2d7\"); function s(e, t, r, n) { for ( var i = [0, 0, 0], a = (t.length - 1) / 2, o = 0; o < t.length; o += 1 ) for (var s = 0; s < t[o].length; s += 1) { var u = e.getPixelIndex(r + o - a, n + s - a); (i[0] += e.bitmap.data[u] * t[o][s]), (i[1] += e.bitmap.data[u + 1] * t[o][s]), (i[2] += e.bitmap.data[u + 2] * t[o][s]); } return i; } var u = function (e) { return \"undefined\" !== typeof e && null !== e; }; function c(e) { return ( this.scanQuiet( 0, 0, this.bitmap.width, this.bitmap.height, function (e, t, r) { var n = parseInt( 0.2126 * this.bitmap.data[r] + 0.7152 * this.bitmap.data[r + 1] + 0.0722 * this.bitmap.data[r + 2], 10 ); (this.bitmap.data[r] = n), (this.bitmap.data[r + 1] = n), (this.bitmap.data[r + 2] = n); } ), (0, o.isNodePattern)(e) && e.call(this, null, this), this ); } function l(e, t) { var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 50; return { r: (t.r - e.r) * (r / 100) + e.r, g: (t.g - e.g) * (r / 100) + e.g, b: (t.b - e.b) * (r / 100) + e.b, }; } function f(e, t) { var r = this; return e && Array.isArray(e) ? ((e = e.map(function (e) { return ( (\"xor\" !== e.apply && \"mix\" !== e.apply) || (e.params[0] = (0, a[\"default\"])(e.params[0]).toRgb()), e ); })), this.scanQuiet( 0, 0, this.bitmap.width, this.bitmap.height, function (n, s, u) { var c = { r: r.bitmap.data[u], g: r.bitmap.data[u + 1], b: r.bitmap.data[u + 2], }, f = function (e, t) { return r.constructor.limit255(c[e] + t); }; e.forEach(function (e) { if (\"mix\" === e.apply) c = l(c, e.params[0], e.params[1]); else if (\"tint\" === e.apply) c = l(c, { r: 255, g: 255, b: 255 }, e.params[0]); else if (\"shade\" === e.apply) c = l(c, { r: 0, g: 0, b: 0 }, e.params[0]); else if (\"xor\" === e.apply) c = { r: c.r ^ e.params[0].r, g: c.g ^ e.params[0].g, b: c.b ^ e.params[0].b, }; else if (\"red\" === e.apply) c.r = f(\"r\", e.params[0]); else if (\"green\" === e.apply) c.g = f(\"g\", e.params[0]); else if (\"blue\" === e.apply) c.b = f(\"b\", e.params[0]); else { var n; if ( (\"hue\" === e.apply && (e.apply = \"spin\"), (c = (0, a[\"default\"])(c)), !c[e.apply]) ) return o.throwError.call( r, \"action \" + e.apply + \" not supported\", t ); c = (n = c)[e.apply] .apply(n, (0, i[\"default\"])(e.params)) .toRgb(); } }), (r.bitmap.data[u] = c.r), (r.bitmap.data[u + 1] = c.g), (r.bitmap.data[u + 2] = c.b); } ), (0, o.isNodePattern)(t) && t.call(this, null, this), this) : o.throwError.call(this, \"actions must be an array\", t); } var h = function () { return { brightness: function (e, t) { return \"number\" !== typeof e ? o.throwError.call(this, \"val must be numbers\", t) : e < -1 || e > 1 ? o.throwError.call( this, \"val must be a number between -1 and +1\", t ) : (this.scanQuiet( 0, 0, this.bitmap.width, this.bitmap.height, function (t, r, n) { e < 0 ? ((this.bitmap.data[n] = this.bitmap.data[n] * (1 + e)), (this.bitmap.data[n + 1] = this.bitmap.data[n + 1] * (1 + e)), (this.bitmap.data[n + 2] = this.bitmap.data[n + 2] * (1 + e))) : ((this.bitmap.data[n] = this.bitmap.data[n] + (255 - this.bitmap.data[n]) * e), (this.bitmap.data[n + 1] = this.bitmap.data[n + 1] + (255 - this.bitmap.data[n + 1]) * e), (this.bitmap.data[n + 2] = this.bitmap.data[n + 2] + (255 - this.bitmap.data[n + 2]) * e)); } ), (0, o.isNodePattern)(t) && t.call(this, null, this), this); }, contrast: function (e, t) { if (\"number\" !== typeof e) return o.throwError.call(this, \"val must be numbers\", t); if (e < -1 || e > 1) return o.throwError.call( this, \"val must be a number between -1 and +1\", t ); var r = (e + 1) / (1 - e); function n(e) { return ( (e = Math.floor(r * (e - 127) + 127)), e < 0 ? 0 : e > 255 ? 255 : e ); } return ( this.scanQuiet( 0, 0, this.bitmap.width, this.bitmap.height, function (e, t, r) { (this.bitmap.data[r] = n(this.bitmap.data[r])), (this.bitmap.data[r + 1] = n(this.bitmap.data[r + 1])), (this.bitmap.data[r + 2] = n(this.bitmap.data[r + 2])); } ), (0, o.isNodePattern)(t) && t.call(this, null, this), this ); }, posterize: function (e, t) { return \"number\" !== typeof e ? o.throwError.call(this, \"n must be numbers\", t) : (e < 2 && (e = 2), this.scanQuiet( 0, 0, this.bitmap.width, this.bitmap.height, function (t, r, n) { (this.bitmap.data[n] = (Math.floor((this.bitmap.data[n] / 255) * (e - 1)) / (e - 1)) * 255), (this.bitmap.data[n + 1] = (Math.floor( (this.bitmap.data[n + 1] / 255) * (e - 1) ) / (e - 1)) * 255), (this.bitmap.data[n + 2] = (Math.floor( (this.bitmap.data[n + 2] / 255) * (e - 1) ) / (e - 1)) * 255); } ), (0, o.isNodePattern)(t) && t.call(this, null, this), this); }, greyscale: c, grayscale: c, opacity: function (e, t) { return \"number\" !== typeof e ? o.throwError.call(this, \"f must be a number\", t) : e < 0 || e > 1 ? o.throwError.call(this, \"f must be a number from 0 to 1\", t) : (this.scanQuiet( 0, 0, this.bitmap.width, this.bitmap.height, function (t, r, n) { var i = this.bitmap.data[n + 3] * e; this.bitmap.data[n + 3] = i; } ), (0, o.isNodePattern)(t) && t.call(this, null, this), this); }, sepia: function (e) { return ( this.scanQuiet( 0, 0, this.bitmap.width, this.bitmap.height, function (e, t, r) { var n = this.bitmap.data[r], i = this.bitmap.data[r + 1], a = this.bitmap.data[r + 2]; (n = 0.393 * n + 0.769 * i + 0.189 * a), (i = 0.349 * n + 0.686 * i + 0.168 * a), (a = 0.272 * n + 0.534 * i + 0.131 * a), (this.bitmap.data[r] = n < 255 ? n : 255), (this.bitmap.data[r + 1] = i < 255 ? i : 255), (this.bitmap.data[r + 2] = a < 255 ? a : 255); } ), (0, o.isNodePattern)(e) && e.call(this, null, this), this ); }, fade: function (e, t) { return \"number\" !== typeof e ? o.throwError.call(this, \"f must be a number\", t) : e < 0 || e > 1 ? o.throwError.call(this, \"f must be a number from 0 to 1\", t) : (this.opacity(1 - e), (0, o.isNodePattern)(t) && t.call(this, null, this), this); }, convolution: function (t, r, n) { \"function\" === typeof r && \"undefined\" === typeof n && ((n = r), (r = null)), r || (r = this.constructor.EDGE_EXTEND); var i, a, s, u, c, l, f, h, d, A, p = e.from(this.bitmap.data), g = t.length, m = t[0].length, b = Math.floor(g / 2), v = Math.floor(m / 2), y = -b, I = -v; return ( this.scanQuiet( 0, 0, this.bitmap.width, this.bitmap.height, function (e, n, o) { (u = 0), (s = 0), (a = 0); for (var g = y; g >> 4).toString(16)), n.push((15 & a).toString(16)); } return n.join(\"\"); }, parse: function (e) { for (var t = e.length, r = [], n = 0; n < t; n += 2) r[n >>> 3] |= parseInt(e.substr(n, 2), 16) < (24 - (n % 8) * 4); return new l.init(r, t / 2); }, }), d = (f.Latin1 = { stringify: function (e) { for ( var t = e.words, r = e.sigBytes, n = [], i = 0; i < r; i++ ) { var a = (t[i >>> 2] >>> (24 - (i % 4) * 8)) & 255; n.push(String.fromCharCode(a)); } return n.join(\"\"); }, parse: function (e) { for (var t = e.length, r = [], n = 0; n < t; n++) r[n >>> 2] |= (255 & e.charCodeAt(n)) < (24 - (n % 4) * 8); return new l.init(r, t); }, }), A = (f.Utf8 = { stringify: function (e) { try { return decodeURIComponent(escape(d.stringify(e))); } catch (t) { throw new Error(\"Malformed UTF-8 data\"); } }, parse: function (e) { return d.parse(unescape(encodeURIComponent(e))); }, }), p = (u.BufferedBlockAlgorithm = c.extend({ reset: function () { (this._data = new l.init()), (this._nDataBytes = 0); }, _append: function (e) { \"string\" == typeof e && (e = A.parse(e)), this._data.concat(e), (this._nDataBytes += e.sigBytes); }, _process: function (t) { var r, n = this._data, i = n.words, a = n.sigBytes, o = this.blockSize, s = 4 * o, u = a / s; u = t ? e.ceil(u) : e.max((0 | u) - this._minBufferSize, 0); var c = u * o, f = e.min(4 * c, a); if (c) { for (var h = 0; h < c; h += o) this._doProcessBlock(i, h); (r = i.splice(0, c)), (n.sigBytes -= f); } return new l.init(r, f); }, clone: function () { var e = c.clone.call(this); return (e._data = this._data.clone()), e; }, _minBufferSize: 0, })), g = ((u.Hasher = p.extend({ cfg: c.extend(), init: function (e) { (this.cfg = this.cfg.extend(e)), this.reset(); }, reset: function () { p.reset.call(this), this._doReset(); }, update: function (e) { return this._append(e), this._process(), this; }, finalize: function (e) { e && this._append(e); var t = this._doFinalize(); return t; }, blockSize: 16, _createHelper: function (e) { return function (t, r) { return new e.init(r).finalize(t); }; }, _createHmacHelper: function (e) { return function (t, r) { return new g.HMAC.init(e, r).finalize(t); }; }, })), (s.algo = {})); return s; })(Math); return e; }); }).call(this, r(\"c8ba\")); }, \"21c1\": function (e, t, r) { \"use strict\"; var n = /^GIF8[79]a/; function i(e) { var t = e.toString(\"ascii\", 0, 6); return n.test(t); } function a(e) { return { width: e.readUInt16LE(6), height: e.readUInt16LE(8) }; } e.exports = { detect: i, calculate: a }; }, \"21c2\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.fromBuffer = t.fromStream = t.EndOfStreamError = void 0); const n = r(\"1e48\"), i = r(\"377f\"); var a = r(\"20f8\"); function o(e, t) { return (t = t || {}), new n.ReadStreamTokenizer(e, t); } function s(e, t) { return new i.BufferTokenizer(e, t); } Object.defineProperty(t, \"EndOfStreamError\", { enumerable: !0, get: function () { return a.EndOfStreamError; }, }), (t.fromStream = o), (t.fromBuffer = s); }, 2236: function (e, t, r) { var n = r(\"5a43\"); function i(e) { if (Array.isArray(e)) return n(e); } (e.exports = i), (e.exports.__esModule = !0), (e.exports[\"default\"] = e.exports); }, 2266: function (e, t, r) { var n = r(\"da84\"), i = r(\"0366\"), a = r(\"c65b\"), o = r(\"825a\"), s = r(\"0d51\"), u = r(\"e95a\"), c = r(\"07fa\"), l = r(\"3a9b\"), f = r(\"9a1f\"), h = r(\"35a1\"), d = r(\"2a62\"), A = n.TypeError, p = function (e, t) { (this.stopped = e), (this.result = t); }, g = p.prototype; e.exports = function (e, t, r) { var n, m, b, v, y, I, E, w = r && r.that, C = !(!r || !r.AS_ENTRIES), _ = !(!r || !r.IS_ITERATOR), B = !(!r || !r.INTERRUPTED), x = i(t, w), S = function (e) { return n && d(n, \"normal\", e), new p(!0, e); }, k = function (e) { return C ? (o(e), B ? x(e[0], e[1], S) : x(e[0], e[1])) : B ? x(e, S) : x(e); }; if (_) n = e; else { if (((m = h(e)), !m)) throw A(s(e) + \" is not iterable\"); if (u(m)) { for (b = 0, v = c(e); v > b; b++) if (((y = k(e[b])), y && l(g, y))) return y; return new p(!1); } n = f(e, m); } I = n.next; while (!(E = a(I, n)).done) { try { y = k(E.value); } catch (Q) { d(n, \"throw\", Q); } if (\"object\" == typeof y && y && l(g, y)) return y; } return new p(!1); }; }, \"22d0\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.OggParser = t.SegmentTable = void 0); const n = r(\"6f58\"), i = r(\"34eb\"), a = r(\"d3ab\"), o = r(\"98a7\"), s = r(\"bda5\"), u = r(\"c73e\"), c = r(\"00f6\"), l = r(\"95c9\"), f = r(\"10a8\"), h = r(\"21c2\"), d = i(\"music-metadata:parser:ogg\"); class A { constructor(e) { this.len = e.page_segments; } static sum(e, t, r) { let n = 0; for (let i = t; i < t + r; ++i) n += e[i]; return n; } get(e, t) { return { totalPageSize: A.sum(e, t, this.len) }; } } t.SegmentTable = A; class p extends l.BasicParser { async parse() { d(\"pos=%s, parsePage()\", this.tokenizer.position); try { let e; do { if ( ((e = await this.tokenizer.readToken(p.Header)), \"OggS\" !== e.capturePattern) ) throw new Error(\"Invalid Ogg capture pattern\"); this.metadata.setFormat(\"container\", \"Ogg\"), (this.header = e), (this.pageNumber = e.pageSequenceNo), d(\"page#=%s, Ogg.id=%s\", e.pageSequenceNo, e.capturePattern); const t = await this.tokenizer.readToken(new A(e)); d(\"totalPageSize=%s\", t.totalPageSize); const r = await this.tokenizer.readToken( new n.BufferType(t.totalPageSize) ); if ( (d( \"firstPage=%s, lastPage=%s, continued=%s\", e.headerType.firstPage, e.headerType.lastPage, e.headerType.continued ), e.headerType.firstPage) ) { const e = new n.StringType(7, \"ascii\").get(r, 0); switch (e) { case \"\u0001vorbis\": d(\"Set page consumer to Ogg/Vorbis\"), (this.pageConsumer = new s.VorbisParser( this.metadata, this.options )); break; case \"OpusHea\": d(\"Set page consumer to Ogg/Opus\"), (this.pageConsumer = new u.OpusParser( this.metadata, this.options, this.tokenizer )); break; case \"Speex \": d(\"Set page consumer to Ogg/Speex\"), (this.pageConsumer = new c.SpeexParser( this.metadata, this.options, this.tokenizer )); break; case \"fishead\": case \"\\0theora\": d(\"Set page consumer to Ogg/Theora\"), (this.pageConsumer = new f.TheoraParser( this.metadata, this.options, this.tokenizer )); break; default: throw new Error( \"gg audio-codec not recognized (id=\" + e + \")\" ); } } this.pageConsumer.parsePage(e, r); } while (!e.headerType.lastPage); } catch (e) { if (e instanceof h.EndOfStreamError) this.metadata.addWarning( \"Last OGG-page is not marked with last-page flag\" ), d(\"End-of-stream\"), this.metadata.addWarning( \"Last OGG-page is not marked with last-page flag\" ), this.header && this.pageConsumer.calculateDuration(this.header); else { if (!e.message.startsWith(\"FourCC\")) throw e; this.pageNumber > 0 && (this.metadata.addWarning( \"Invalid FourCC ID, maybe last OGG-page is not marked with last-page flag\" ), this.pageConsumer.flush()); } } } } (t.OggParser = p), (p.Header = { len: 27, get: (e, t) => ({ capturePattern: o.FourCcToken.get(e, t), version: e.readUInt8(t + 4), headerType: { continued: a.getBit(e, t + 5, 0), firstPage: a.getBit(e, t + 5, 1), lastPage: a.getBit(e, t + 5, 2), }, absoluteGranulePosition: e.readIntLE(t + 6, 6), streamSerialNumber: n.UINT32_LE.get(e, t + 14), pageSequenceNo: n.UINT32_LE.get(e, t + 18), pageChecksum: n.UINT32_LE.get(e, t + 22), page_segments: e.readUInt8(t + 26), }), }); }, \"230b\": function (e, t, r) { \"use strict\"; (function (t) { var n = r(\"3022\"), i = r(\"91f2\"), a = r(\"e22f\"), o = (e.exports = function (e) { i.call(this); var r = [], n = this; (this._filter = new a(e, { read: this.read.bind(this), write: function (e) { r.push(e); }, complete: function () { n.emit(\"complete\", t.concat(r)); }, })), this._filter.start(); }); n.inherits(o, i); }).call(this, r(\"1c35\").Buffer); }, \"239f\": function (e, t, r) { var n = r(\"51f3\"); function i(e, t) { var r = new n(e, t); return function (e) { return r.convert(e); }; } (i.BIN = \"01\"), (i.OCT = \"01234567\"), (i.DEC = \"0123456789\"), (i.HEX = \"0123456789abcdef\"), (e.exports = i); }, \"23cb\": function (e, t, r) { var n = r(\"5926\"), i = Math.max, a = Math.min; e.exports = function (e, t) { var r = n(e); return r < 0 ? i(r + t, 0) : a(r, t); }; }, \"23e7\": function (e, t, r) { var n = r(\"da84\"), i = r(\"06cf\").f, a = r(\"9112\"), o = r(\"6eeb\"), s = r(\"ce4e\"), u = r(\"e893\"), c = r(\"94ca\"); e.exports = function (e, t) { var r, l, f, h, d, A, p = e.target, g = e.global, m = e.stat; if (((l = g ? n : m ? n[p] || s(p, {}) : (n[p] || {}).prototype), l)) for (f in t) { if ( ((d = t[f]), e.noTargetGet ? ((A = i(l, f)), (h = A && A.value)) : (h = l[f]), (r = c(g ? f : p + (m ? \".\" : \"#\") + f, e.forced)), !r && void 0 !== h) ) { if (typeof d == typeof h) continue; u(d, h); } (e.sham || (h && h.sham)) && a(d, \"sham\", !0), o(l, f, d, e); } }; }, \"241c\": function (e, t, r) { var n = r(\"ca84\"), i = r(\"7839\"), a = i.concat(\"length\", \"prototype\"); t.f = Object.getOwnPropertyNames || function (e) { return n(e, a); }; }, \"24f8\": function (e, t, r) { var n = r(\"9490\"), i = r(\"0b16\"), a = e.exports; for (var o in n) n.hasOwnProperty(o) && (a[o] = n[o]); function s(e) { if ( (\"string\" === typeof e && (e = i.parse(e)), e.protocol || (e.protocol = \"https:\"), \"https:\" !== e.protocol) ) throw new Error( 'Protocol \"' + e.protocol + '\" not supported. Expected \"https:\"' ); return e; } (a.request = function (e, t) { return (e = s(e)), n.request.call(this, e, t); }), (a.get = function (e, t) { return (e = s(e)), n.get.call(this, e, t); }); }, \"25a1\": function (e, t, r) { \"use strict\"; var n = r(\"ebb5\"), i = r(\"d58f\").right, a = n.aTypedArray, o = n.exportTypedArrayMethod; o(\"reduceRight\", function (e) { var t = arguments.length; return i(a(this), e, t, t > 1 ? arguments[1] : void 0); }); }, \"25f0\": function (e, t, r) { \"use strict\"; var n = r(\"e330\"), i = r(\"5e77\").PROPER, a = r(\"6eeb\"), o = r(\"825a\"), s = r(\"3a9b\"), u = r(\"577e\"), c = r(\"d039\"), l = r(\"ad6d\"), f = \"toString\", h = RegExp.prototype, d = h[f], A = n(l), p = c(function () { return \"/a/b\" != d.call({ source: \"a\", flags: \"b\" }); }), g = i && d.name != f; (p || g) && a( RegExp.prototype, f, function () { var e = o(this), t = u(e.source), r = e.flags, n = u(void 0 === r && s(h, e) && !(\"flags\" in h) ? A(e) : r); return \"/\" + t + \"/\" + n; }, { unsafe: !0 } ); }, \"25f1\": function (e, t, r) { \"use strict\"; r.d(t, \"a\", function () { return i; }); var n = r(\"1ab7\"); Object(n[\"b\"])().blob; const i = Object(n[\"b\"])().default; }, 2626: function (e, t, r) { \"use strict\"; var n = r(\"d066\"), i = r(\"9bf2\"), a = r(\"b622\"), o = r(\"83ab\"), s = a(\"species\"); e.exports = function (e) { var t = n(e), r = i.f; o && t && !t[s] && r(t, s, { configurable: !0, get: function () { return this; }, }); }; }, \"26dd\": function (e, t, r) { \"use strict\"; var n = r(\"6f4f\"), i = r(\"10db\"), a = r(\"92f0\"), o = {}; r(\"051b\")(o, r(\"cc15\")(\"iterator\"), function () { return this; }), (e.exports = function (e, t, r) { (e.prototype = n(o, { next: i(1, r) })), a(e, t + \" Iterator\"); }); }, 2706: function (e, t, r) { \"use strict\"; var n = r(\"c591\").Buffer; e.exports = function (e) { var t = e.Transform; function r(e, r) { (this.conv = e), (r = r || {}), (r.decodeStrings = !1), t.call(this, r); } function i(e, r) { (this.conv = e), (r = r || {}), (r.encoding = this.encoding = \"utf8\"), t.call(this, r); } return ( (r.prototype = Object.create(t.prototype, { constructor: { value: r }, })), (r.prototype._transform = function (e, t, r) { if (\"string\" != typeof e) return r( new Error(\"Iconv encoding stream needs strings as its input.\") ); try { var n = this.conv.write(e); n && n.length && this.push(n), r(); } catch (i) { r(i); } }), (r.prototype._flush = function (e) { try { var t = this.conv.end(); t && t.length && this.push(t), e(); } catch (r) { e(r); } }), (r.prototype.collect = function (e) { var t = []; return ( this.on(\"error\", e), this.on(\"data\", function (e) { t.push(e); }), this.on(\"end\", function () { e(null, n.concat(t)); }), this ); }), (i.prototype = Object.create(t.prototype, { constructor: { value: i }, })), (i.prototype._transform = function (e, t, r) { if (!n.isBuffer(e) && !(e instanceof Uint8Array)) return r( new Error(\"Iconv decoding stream needs buffers as its input.\") ); try { var i = this.conv.write(e); i && i.length && this.push(i, this.encoding), r(); } catch (a) { r(a); } }), (i.prototype._flush = function (e) { try { var t = this.conv.end(); t && t.length && this.push(t, this.encoding), e(); } catch (r) { e(r); } }), (i.prototype.collect = function (e) { var t = \"\"; return ( this.on(\"error\", e), this.on(\"data\", function (e) { t += e; }), this.on(\"end\", function () { e(null, t); }), this ); }), { IconvLiteEncoderStream: r, IconvLiteDecoderStream: i } ); }; }, 2767: function (e, t, r) { \"use strict\"; (function (e) { var n = r(\"2ad0\"), i = [ function () {}, function (e, t, r, n) { if (n === t.length) throw new Error(\"Ran out of data\"); var i = t[n]; (e[r] = i), (e[r + 1] = i), (e[r + 2] = i), (e[r + 3] = 255); }, function (e, t, r, n) { if (n + 1 >= t.length) throw new Error(\"Ran out of data\"); var i = t[n]; (e[r] = i), (e[r + 1] = i), (e[r + 2] = i), (e[r + 3] = t[n + 1]); }, function (e, t, r, n) { if (n + 2 >= t.length) throw new Error(\"Ran out of data\"); (e[r] = t[n]), (e[r + 1] = t[n + 1]), (e[r + 2] = t[n + 2]), (e[r + 3] = 255); }, function (e, t, r, n) { if (n + 3 >= t.length) throw new Error(\"Ran out of data\"); (e[r] = t[n]), (e[r + 1] = t[n + 1]), (e[r + 2] = t[n + 2]), (e[r + 3] = t[n + 3]); }, ], a = [ function () {}, function (e, t, r, n) { var i = t[0]; (e[r] = i), (e[r + 1] = i), (e[r + 2] = i), (e[r + 3] = n); }, function (e, t, r) { var n = t[0]; (e[r] = n), (e[r + 1] = n), (e[r + 2] = n), (e[r + 3] = t[1]); }, function (e, t, r, n) { (e[r] = t[0]), (e[r + 1] = t[1]), (e[r + 2] = t[2]), (e[r + 3] = n); }, function (e, t, r) { (e[r] = t[0]), (e[r + 1] = t[1]), (e[r + 2] = t[2]), (e[r + 3] = t[3]); }, ]; function o(e, t) { var r = [], n = 0; function i() { if (n === e.length) throw new Error(\"Ran out of data\"); var i, a, o, s, u, c, l, f, h = e[n]; switch ((n++, t)) { default: throw new Error(\"unrecognised depth\"); case 16: (l = e[n]), n++, r.push((h < 8) + l); break; case 4: (l = 15 & h), (f = h >> 4), r.push(f, l); break; case 2: (u = 3 & h), (c = (h >> 2) & 3), (l = (h >> 4) & 3), (f = (h >> 6) & 3), r.push(f, l, c, u); break; case 1: (i = 1 & h), (a = (h >> 1) & 1), (o = (h >> 2) & 1), (s = (h >> 3) & 1), (u = (h >> 4) & 1), (c = (h >> 5) & 1), (l = (h >> 6) & 1), (f = (h >> 7) & 1), r.push(f, l, c, u, s, o, a, i); break; } } return { get: function (e) { while (r.length < e) i(); var t = r.slice(0, e); return (r = r.slice(e)), t; }, resetAfterLine: function () { r.length = 0; }, end: function () { if (n !== e.length) throw new Error(\"extra data found\"); }, }; } function s(e, t, r, n, a, o) { for (var s = e.width, u = e.height, c = e.index, l = 0; l < u; l++) for (var f = 0; f < s; f++) { var h = r(f, l, c); i[n](t, a, h, o), (o += n); } return o; } function u(e, t, r, n, i, o) { for (var s = e.width, u = e.height, c = e.index, l = 0; l < u; l++) { for (var f = 0; f < s; f++) { var h = i.get(n), d = r(f, l, c); a[n](t, h, d, o); } i.resetAfterLine(); } } t.dataToBitMap = function (t, r) { var i, a = r.width, c = r.height, l = r.depth, f = r.bpp, h = r.interlace; if (8 !== l) var d = o(t, l); i = l this.bitmap.width / this.bitmap.height ? e / this.bitmap.width : t / this.bitmap.height; return ( this.scale(l, i), this.crop( ((this.bitmap.width - e) / 2) * u, ((this.bitmap.height - t) / 2) * c, e, t ), (0, n.isNodePattern)(a) && a.call(this, null, this), this ); }, }; }; t[\"default\"] = i; }, 2819: function (e, t, r) { \"use strict\"; function n(e) { return t.commonTags.hasOwnProperty(e) && !t.commonTags[e].multiple; } function i(e) { return !t.commonTags[e].multiple || t.commonTags[e].unique; } Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.isUnique = t.isSingleton = t.commonTags = void 0), (t.commonTags = { year: { multiple: !1 }, track: { multiple: !1 }, disk: { multiple: !1 }, title: { multiple: !1 }, artist: { multiple: !1 }, artists: { multiple: !0, unique: !0 }, albumartist: { multiple: !1 }, album: { multiple: !1 }, date: { multiple: !1 }, originaldate: { multiple: !1 }, originalyear: { multiple: !1 }, comment: { multiple: !0, unique: !1 }, genre: { multiple: !0, unique: !0 }, picture: { multiple: !0, unique: !0 }, composer: { multiple: !0, unique: !0 }, lyrics: { multiple: !0, unique: !1 }, albumsort: { multiple: !1, unique: !0 }, titlesort: { multiple: !1, unique: !0 }, work: { multiple: !1, unique: !0 }, artistsort: { multiple: !1, unique: !0 }, albumartistsort: { multiple: !1, unique: !0 }, composersort: { multiple: !1, unique: !0 }, lyricist: { multiple: !0, unique: !0 }, writer: { multiple: !0, unique: !0 }, conductor: { multiple: !0, unique: !0 }, remixer: { multiple: !0, unique: !0 }, arranger: { multiple: !0, unique: !0 }, engineer: { multiple: !0, unique: !0 }, producer: { multiple: !0, unique: !0 }, technician: { multiple: !0, unique: !0 }, djmixer: { multiple: !0, unique: !0 }, mixer: { multiple: !0, unique: !0 }, label: { multiple: !0, unique: !0 }, grouping: { multiple: !1 }, subtitle: { multiple: !0 }, discsubtitle: { multiple: !1 }, totaltracks: { multiple: !1 }, totaldiscs: { multiple: !1 }, compilation: { multiple: !1 }, rating: { multiple: !0 }, bpm: { multiple: !1 }, mood: { multiple: !1 }, media: { multiple: !1 }, catalognumber: { multiple: !0, unique: !0 }, tvShow: { multiple: !1 }, tvShowSort: { multiple: !1 }, tvSeason: { multiple: !1 }, tvEpisode: { multiple: !1 }, tvEpisodeId: { multiple: !1 }, tvNetwork: { multiple: !1 }, podcast: { multiple: !1 }, podcasturl: { multiple: !1 }, releasestatus: { multiple: !1 }, releasetype: { multiple: !0 }, releasecountry: { multiple: !1 }, script: { multiple: !1 }, language: { multiple: !1 }, copyright: { multiple: !1 }, license: { multiple: !1 }, encodedby: { multiple: !1 }, encodersettings: { multiple: !1 }, gapless: { multiple: !1 }, barcode: { multiple: !1 }, isrc: { multiple: !0 }, asin: { multiple: !1 }, musicbrainz_recordingid: { multiple: !1 }, musicbrainz_trackid: { multiple: !1 }, musicbrainz_albumid: { multiple: !1 }, musicbrainz_artistid: { multiple: !0 }, musicbrainz_albumartistid: { multiple: !0 }, musicbrainz_releasegroupid: { multiple: !1 }, musicbrainz_workid: { multiple: !1 }, musicbrainz_trmid: { multiple: !1 }, musicbrainz_discid: { multiple: !1 }, acoustid_id: { multiple: !1 }, acoustid_fingerprint: { multiple: !1 }, musicip_puid: { multiple: !1 }, musicip_fingerprint: { multiple: !1 }, website: { multiple: !1 }, \"performer:instrument\": { multiple: !0, unique: !0 }, averageLevel: { multiple: !1 }, peakLevel: { multiple: !1 }, notes: { multiple: !0, unique: !1 }, key: { multiple: !1 }, originalalbum: { multiple: !1 }, originalartist: { multiple: !1 }, discogs_artist_id: { multiple: !0, unique: !0 }, discogs_release_id: { multiple: !1 }, discogs_label_id: { multiple: !1 }, discogs_master_release_id: { multiple: !1 }, discogs_votes: { multiple: !1 }, discogs_rating: { multiple: !1 }, replaygain_track_peak: { multiple: !1 }, replaygain_track_gain: { multiple: !1 }, replaygain_album_peak: { multiple: !1 }, replaygain_album_gain: { multiple: !1 }, replaygain_track_minmax: { multiple: !1 }, replaygain_album_minmax: { multiple: !1 }, replaygain_undo: { multiple: !1 }, description: { multiple: !0 }, longDescription: { multiple: !1 }, category: { multiple: !0 }, hdVideo: { multiple: !1 }, keywords: { multiple: !0 }, movement: { multiple: !1 }, movementIndex: { multiple: !1 }, movementTotal: { multiple: !1 }, podcastId: { multiple: !1 }, showMovement: { multiple: !1 }, stik: { multiple: !1 }, }), (t.isSingleton = n), (t.isUnique = i); }, 2877: function (e, t, r) { \"use strict\"; function n(e, t, r, n, i, a, o, s) { var u, c = \"function\" === typeof e ? e.options : e; if ( (t && ((c.render = t), (c.staticRenderFns = r), (c._compiled = !0)), n && (c.functional = !0), a && (c._scopeId = \"data-v-\" + a), o ? ((u = function (e) { (e = e || (this.$vnode && this.$vnode.ssrContext) || (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext)), e || \"undefined\" === typeof __VUE_SSR_CONTEXT__ || (e = __VUE_SSR_CONTEXT__), i && i.call(this, e), e && e._registeredComponents && e._registeredComponents.add(o); }), (c._ssrRegister = u)) : i && (u = s ? function () { i.call( this, (c.functional ? this.parent : this).$root.$options .shadowRoot ); } : i), u) ) if (c.functional) { c._injectStyles = u; var l = c.render; c.render = function (e, t) { return u.call(t), l(e, t); }; } else { var f = c.beforeCreate; c.beforeCreate = f ? [].concat(f, u) : [u]; } return { exports: e, options: c }; } r.d(t, \"a\", function () { return n; }); }, \"289b\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.ReplayGain = void 0); const n = r(\"d3ab\"); var i, a; (function (e) { (e[(e[\"not_set\"] = 0)] = \"not_set\"), (e[(e[\"radio\"] = 1)] = \"radio\"), (e[(e[\"audiophile\"] = 2)] = \"audiophile\"); })(i || (i = {})), (function (e) { (e[(e[\"unspecified\"] = 0)] = \"unspecified\"), (e[(e[\"engineer\"] = 1)] = \"engineer\"), (e[(e[\"user\"] = 2)] = \"user\"), (e[(e[\"automatic\"] = 3)] = \"automatic\"), (e[(e[\"rms_average\"] = 4)] = \"rms_average\"); })(a || (a = {})), (t.ReplayGain = { len: 2, get: (e, t) => { const r = n.getBitAllignedNumber(e, t, 0, 3), i = n.getBitAllignedNumber(e, t, 6, 1), a = n.getBitAllignedNumber(e, t, 7, 9) / 10; if (r > 0) return { type: n.getBitAllignedNumber(e, t, 0, 3), origin: n.getBitAllignedNumber(e, t, 3, 3), adjustment: i ? -a : a, }; }, }); }, \"28a0\": function (e, t) { \"function\" === typeof Object.create ? (e.exports = function (e, t) { (e.super_ = t), (e.prototype = Object.create(t.prototype, { constructor: { value: e, enumerable: !1, writable: !0, configurable: !0, }, })); }) : (e.exports = function (e, t) { e.super_ = t; var r = function () {}; (r.prototype = t.prototype), (e.prototype = new r()), (e.prototype.constructor = e); }); }, 2954: function (e, t, r) { \"use strict\"; var n = r(\"ebb5\"), i = r(\"b6b7\"), a = r(\"d039\"), o = r(\"f36a\"), s = n.aTypedArray, u = n.exportTypedArrayMethod, c = a(function () { new Int8Array(1).slice(); }); u( \"slice\", function (e, t) { var r = o(s(this), e, t), n = i(this), a = 0, u = r.length, c = new n(u); while (u > a) c[a] = r[a++]; return c; }, c ); }, 2956: function (e, t, r) { \"use strict\"; const n = r(\"d9d3\"), { Gif: i, GifError: a } = r(\"480c\"), { GifCodec: o } = r(\"51d2\"), { GifFrame: s } = r(\"ad0b\"), u = r(\"2bbd\"); e.exports = { BitmapImage: n, Gif: i, GifCodec: o, GifFrame: s, GifUtil: u, GifError: a, }; }, \"299c\": function (e, t, r) { e.exports = (function (e) { var t = {}; function r(n) { if (t[n]) return t[n].exports; var i = (t[n] = { i: n, l: !1, exports: {} }); return e[n].call(i.exports, i, i.exports, r), (i.l = !0), i.exports; } return ( (r.m = e), (r.c = t), (r.d = function (e, t, n) { r.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: n }); }), (r.r = function (e) { \"undefined\" !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: \"Module\" }), Object.defineProperty(e, \"__esModule\", { value: !0 }); }), (r.t = function (e, t) { if ((1 & t && (e = r(e)), 8 & t)) return e; if (4 & t && \"object\" === typeof e && e && e.__esModule) return e; var n = Object.create(null); if ( (r.r(n), Object.defineProperty(n, \"default\", { enumerable: !0, value: e }), 2 & t && \"string\" != typeof e) ) for (var i in e) r.d( n, i, function (t) { return e[t]; }.bind(null, i) ); return n; }), (r.n = function (e) { var t = e && e.__esModule ? function () { return e[\"default\"]; } : function () { return e; }; return r.d(t, \"a\", t), t; }), (r.o = function (e, t) { return Object.prototype.hasOwnProperty.call(e, t); }), (r.p = \"/dist/\"), r((r.s = 140)) ); })({ 140: function (e, t, r) { \"use strict\"; r.r(t); var n = r(5), i = r.n(n), a = r(18), o = r.n(a), s = r(2), u = r(3), c = r(7), l = r.n(c), f = { name: \"ElTooltip\", mixins: [i.a], props: { openDelay: { type: Number, default: 0 }, disabled: Boolean, manual: Boolean, effect: { type: String, default: \"dark\" }, arrowOffset: { type: Number, default: 0 }, popperClass: String, content: String, visibleArrow: { default: !0 }, transition: { type: String, default: \"el-fade-in-linear\" }, popperOptions: { default: function () { return { boundariesPadding: 10, gpuAcceleration: !1 }; }, }, enterable: { type: Boolean, default: !0 }, hideAfter: { type: Number, default: 0 }, tabindex: { type: Number, default: 0 }, }, data: function () { return { tooltipId: \"el-tooltip-\" + Object(u[\"generateId\"])(), timeoutPending: null, focusing: !1, }; }, beforeCreate: function () { var e = this; this.$isServer || ((this.popperVM = new l.a({ data: { node: \"\" }, render: function (e) { return this.node; }, }).$mount()), (this.debounceClose = o()(200, function () { return e.handleClosePopper(); }))); }, render: function (e) { var t = this; this.popperVM && (this.popperVM.node = e( \"transition\", { attrs: { name: this.transition }, on: { afterLeave: this.doDestroy }, }, [ e( \"div\", { on: { mouseleave: function () { t.setExpectedState(!1), t.debounceClose(); }, mouseenter: function () { t.setExpectedState(!0); }, }, ref: \"popper\", attrs: { role: \"tooltip\", id: this.tooltipId, \"aria-hidden\": this.disabled || !this.showPopper ? \"true\" : \"false\", }, directives: [ { name: \"show\", value: !this.disabled && this.showPopper, }, ], class: [ \"el-tooltip__popper\", \"is-\" + this.effect, this.popperClass, ], }, [this.$slots.content || this.content] ), ] )); var r = this.getFirstElement(); if (!r) return null; var n = (r.data = r.data || {}); return (n.staticClass = this.addTooltipClass(n.staticClass)), r; }, mounted: function () { var e = this; (this.referenceElm = this.$el), 1 === this.$el.nodeType && (this.$el.setAttribute(\"aria-describedby\", this.tooltipId), this.$el.setAttribute(\"tabindex\", this.tabindex), Object(s[\"on\"])(this.referenceElm, \"mouseenter\", this.show), Object(s[\"on\"])(this.referenceElm, \"mouseleave\", this.hide), Object(s[\"on\"])(this.referenceElm, \"focus\", function () { if (e.$slots.default && e.$slots.default.length) { var t = e.$slots.default[0].componentInstance; t && t.focus ? t.focus() : e.handleFocus(); } else e.handleFocus(); }), Object(s[\"on\"])(this.referenceElm, \"blur\", this.handleBlur), Object(s[\"on\"])( this.referenceElm, \"click\", this.removeFocusing )), this.value && this.popperVM && this.popperVM.$nextTick(function () { e.value && e.updatePopper(); }); }, watch: { focusing: function (e) { e ? Object(s[\"addClass\"])(this.referenceElm, \"focusing\") : Object(s[\"removeClass\"])(this.referenceElm, \"focusing\"); }, }, methods: { show: function () { this.setExpectedState(!0), this.handleShowPopper(); }, hide: function () { this.setExpectedState(!1), this.debounceClose(); }, handleFocus: function () { (this.focusing = !0), this.show(); }, handleBlur: function () { (this.focusing = !1), this.hide(); }, removeFocusing: function () { this.focusing = !1; }, addTooltipClass: function (e) { return e ? \"el-tooltip \" + e.replace(\"el-tooltip\", \"\") : \"el-tooltip\"; }, handleShowPopper: function () { var e = this; this.expectedState && !this.manual && (clearTimeout(this.timeout), (this.timeout = setTimeout(function () { e.showPopper = !0; }, this.openDelay)), this.hideAfter > 0 && (this.timeoutPending = setTimeout(function () { e.showPopper = !1; }, this.hideAfter))); }, handleClosePopper: function () { (this.enterable && this.expectedState) || this.manual || (clearTimeout(this.timeout), this.timeoutPending && clearTimeout(this.timeoutPending), (this.showPopper = !1), this.disabled && this.doDestroy()); }, setExpectedState: function (e) { !1 === e && clearTimeout(this.timeoutPending), (this.expectedState = e); }, getFirstElement: function () { var e = this.$slots.default; if (!Array.isArray(e)) return null; for (var t = null, r = 0; r < e.length; r++) e[r] && e[r].tag && (t = e[r]); return t; }, }, beforeDestroy: function () { this.popperVM && this.popperVM.$destroy(); }, destroyed: function () { var e = this.referenceElm; 1 === e.nodeType && (Object(s[\"off\"])(e, \"mouseenter\", this.show), Object(s[\"off\"])(e, \"mouseleave\", this.hide), Object(s[\"off\"])(e, \"focus\", this.handleFocus), Object(s[\"off\"])(e, \"blur\", this.handleBlur), Object(s[\"off\"])(e, \"click\", this.removeFocusing)); }, install: function (e) { e.component(f.name, f); }, }; t[\"default\"] = f; }, 18: function (e, t) { e.exports = r(\"0e15\"); }, 2: function (e, t) { e.exports = r(\"5924\"); }, 3: function (e, t) { e.exports = r(\"8122\"); }, 5: function (e, t) { e.exports = r(\"e974\"); }, 7: function (e, t) { e.exports = r(\"2b0e\"); }, }); }, \"2a62\": function (e, t, r) { var n = r(\"c65b\"), i = r(\"825a\"), a = r(\"dc4a\"); e.exports = function (e, t, r) { var o, s; i(e); try { if (((o = a(e, \"return\")), !o)) { if (\"throw\" === t) throw r; return r; } o = n(o, e); } catch (u) { (s = !0), (o = u); } if (\"throw\" === t) throw r; if (s) throw o; return i(o), r; }; }, \"2ad0\": function (e, t, r) { \"use strict\"; var n = [ { x: [0], y: [0] }, { x: [4], y: [0] }, { x: [0, 4], y: [4] }, { x: [2, 6], y: [0, 4] }, { x: [0, 2, 4, 6], y: [2, 6] }, { x: [1, 3, 5, 7], y: [0, 2, 4, 6] }, { x: [0, 1, 2, 3, 4, 5, 6, 7], y: [1, 3, 5, 7] }, ]; (t.getImagePasses = function (e, t) { for ( var r = [], i = e % 8, a = t % 8, o = (e - i) / 8, s = (t - a) / 8, u = 0; u < n.length; u++ ) { for ( var c = n[u], l = o * c.x.length, f = s * c.y.length, h = 0; h < c.x.length; h++ ) { if (!(c.x[h] < i)) break; l++; } for (h = 0; h < c.y.length; h++) { if (!(c.y[h] < a)) break; f++; } l > 0 && f > 0 && r.push({ width: l, height: f, index: u }); } return r; }), (t.getInterlaceIterator = function (e) { return function (t, r, i) { var a = t % n[i].x.length, o = ((t - a) / n[i].x.length) * 8 + n[i].x[a], s = r % n[i].y.length, u = ((r - s) / n[i].y.length) * 8 + n[i].y[s]; return 4 * o + u * e * 4; }; }); }, \"2b0e\": function (e, t, r) { \"use strict\"; r.r(t), function (e) { /*! * Vue.js v2.6.14 * (c) 2014-2021 Evan You * Released under the MIT License. */ var r = Object.freeze({}); function n(e) { return void 0 === e || null === e; } function i(e) { return void 0 !== e && null !== e; } function a(e) { return !0 === e; } function o(e) { return !1 === e; } function s(e) { return ( \"string\" === typeof e || \"number\" === typeof e || \"symbol\" === typeof e || \"boolean\" === typeof e ); } function u(e) { return null !== e && \"object\" === typeof e; } var c = Object.prototype.toString; function l(e) { return \"[object Object]\" === c.call(e); } function f(e) { return \"[object RegExp]\" === c.call(e); } function h(e) { var t = parseFloat(String(e)); return t >= 0 && Math.floor(t) === t && isFinite(e); } function d(e) { return ( i(e) && \"function\" === typeof e.then && \"function\" === typeof e.catch ); } function A(e) { return null == e ? \"\" : Array.isArray(e) || (l(e) && e.toString === c) ? JSON.stringify(e, null, 2) : String(e); } function p(e) { var t = parseFloat(e); return isNaN(t) ? e : t; } function g(e, t) { for ( var r = Object.create(null), n = e.split(\",\"), i = 0; i < n.length; i++ ) r[n[i]] = !0; return t ? function (e) { return r[e.toLowerCase()]; } : function (e) { return r[e]; }; } g(\"slot,component\", !0); var m = g(\"key,ref,slot,slot-scope,is\"); function b(e, t) { if (e.length) { var r = e.indexOf(t); if (r > -1) return e.splice(r, 1); } } var v = Object.prototype.hasOwnProperty; function y(e, t) { return v.call(e, t); } function I(e) { var t = Object.create(null); return function (r) { var n = t[r]; return n || (t[r] = e(r)); }; } var E = /-(\\w)/g, w = I(function (e) { return e.replace(E, function (e, t) { return t ? t.toUpperCase() : \"\"; }); }), C = I(function (e) { return e.charAt(0).toUpperCase() + e.slice(1); }), _ = /\\B([A-Z])/g, B = I(function (e) { return e.replace(_, \"-$1\").toLowerCase(); }); function x(e, t) { function r(r) { var n = arguments.length; return n ? n > 1 ? e.apply(t, arguments) : e.call(t, r) : e.call(t); } return (r._length = e.length), r; } function S(e, t) { return e.bind(t); } var k = Function.prototype.bind ? S : x; function Q(e, t) { t = t || 0; var r = e.length - t, n = new Array(r); while (r--) n[r] = e[r + t]; return n; } function T(e, t) { for (var r in t) e[r] = t[r]; return e; } function M(e) { for (var t = {}, r = 0; r < e.length; r++) e[r] && T(t, e[r]); return t; } function D(e, t, r) {} var R = function (e, t, r) { return !1; }, O = function (e) { return e; }; function N(e, t) { if (e === t) return !0; var r = u(e), n = u(t); if (!r || !n) return !r && !n && String(e) === String(t); try { var i = Array.isArray(e), a = Array.isArray(t); if (i && a) return ( e.length === t.length && e.every(function (e, r) { return N(e, t[r]); }) ); if (e instanceof Date && t instanceof Date) return e.getTime() === t.getTime(); if (i || a) return !1; var o = Object.keys(e), s = Object.keys(t); return ( o.length === s.length && o.every(function (r) { return N(e[r], t[r]); }) ); } catch (c) { return !1; } } function F(e, t) { for (var r = 0; r < e.length; r++) if (N(e[r], t)) return r; return -1; } function L(e) { var t = !1; return function () { t || ((t = !0), e.apply(this, arguments)); }; } var P = \"data-server-rendered\", U = [\"component\", \"directive\", \"filter\"], j = [ \"beforeCreate\", \"created\", \"beforeMount\", \"mounted\", \"beforeUpdate\", \"updated\", \"beforeDestroy\", \"destroyed\", \"activated\", \"deactivated\", \"errorCaptured\", \"serverPrefetch\", ], z = { optionMergeStrategies: Object.create(null), silent: !1, productionTip: !1, devtools: !1, performance: !1, errorHandler: null, warnHandler: null, ignoredElements: [], keyCodes: Object.create(null), isReservedTag: R, isReservedAttr: R, isUnknownElement: R, getTagNamespace: D, parsePlatformTagName: O, mustUseProp: R, async: !0, _lifecycleHooks: j, }, G = /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/; function H(e) { var t = (e + \"\").charCodeAt(0); return 36 === t || 95 === t; } function W(e, t, r, n) { Object.defineProperty(e, t, { value: r, enumerable: !!n, writable: !0, configurable: !0, }); } var Y = new RegExp(\"[^\" + G.source + \".$_\\\\d]\"); function q(e) { if (!Y.test(e)) { var t = e.split(\".\"); return function (e) { for (var r = 0; r < t.length; r++) { if (!e) return; e = e[t[r]]; } return e; }; } } var J, $ = \"__proto__\" in {}, K = \"undefined\" !== typeof window, V = \"undefined\" !== typeof WXEnvironment && !!WXEnvironment.platform, X = V && WXEnvironment.platform.toLowerCase(), Z = K && window.navigator.userAgent.toLowerCase(), ee = Z && /msie|trident/.test(Z), te = Z && Z.indexOf(\"msie 9.0\") > 0, re = Z && Z.indexOf(\"edge/\") > 0, ne = (Z && Z.indexOf(\"android\"), (Z && /iphone|ipad|ipod|ios/.test(Z)) || \"ios\" === X), ie = (Z && /chrome\\/\\d+/.test(Z), Z && /phantomjs/.test(Z), Z && Z.match(/firefox\\/(\\d+)/)), ae = {}.watch, oe = !1; if (K) try { var se = {}; Object.defineProperty(se, \"passive\", { get: function () { oe = !0; }, }), window.addEventListener(\"test-passive\", null, se); } catch (Co) {} var ue = function () { return ( void 0 === J && (J = !K && !V && \"undefined\" !== typeof e && e[\"process\"] && \"server\" === e[\"process\"].env.VUE_ENV), J ); }, ce = K && window.__VUE_DEVTOOLS_GLOBAL_HOOK__; function le(e) { return \"function\" === typeof e && /native code/.test(e.toString()); } var fe, he = \"undefined\" !== typeof Symbol && le(Symbol) && \"undefined\" !== typeof Reflect && le(Reflect.ownKeys); fe = \"undefined\" !== typeof Set && le(Set) ? Set : (function () { function e() { this.set = Object.create(null); } return ( (e.prototype.has = function (e) { return !0 === this.set[e]; }), (e.prototype.add = function (e) { this.set[e] = !0; }), (e.prototype.clear = function () { this.set = Object.create(null); }), e ); })(); var de = D, Ae = 0, pe = function () { (this.id = Ae++), (this.subs = []); }; (pe.prototype.addSub = function (e) { this.subs.push(e); }), (pe.prototype.removeSub = function (e) { b(this.subs, e); }), (pe.prototype.depend = function () { pe.target && pe.target.addDep(this); }), (pe.prototype.notify = function () { var e = this.subs.slice(); for (var t = 0, r = e.length; t < r; t++) e[t].update(); }), (pe.target = null); var ge = []; function me(e) { ge.push(e), (pe.target = e); } function be() { ge.pop(), (pe.target = ge[ge.length - 1]); } var ve = function (e, t, r, n, i, a, o, s) { (this.tag = e), (this.data = t), (this.children = r), (this.text = n), (this.elm = i), (this.ns = void 0), (this.context = a), (this.fnContext = void 0), (this.fnOptions = void 0), (this.fnScopeId = void 0), (this.key = t && t.key), (this.componentOptions = o), (this.componentInstance = void 0), (this.parent = void 0), (this.raw = !1), (this.isStatic = !1), (this.isRootInsert = !0), (this.isComment = !1), (this.isCloned = !1), (this.isOnce = !1), (this.asyncFactory = s), (this.asyncMeta = void 0), (this.isAsyncPlaceholder = !1); }, ye = { child: { configurable: !0 } }; (ye.child.get = function () { return this.componentInstance; }), Object.defineProperties(ve.prototype, ye); var Ie = function (e) { void 0 === e && (e = \"\"); var t = new ve(); return (t.text = e), (t.isComment = !0), t; }; function Ee(e) { return new ve(void 0, void 0, void 0, String(e)); } function we(e) { var t = new ve( e.tag, e.data, e.children && e.children.slice(), e.text, e.elm, e.context, e.componentOptions, e.asyncFactory ); return ( (t.ns = e.ns), (t.isStatic = e.isStatic), (t.key = e.key), (t.isComment = e.isComment), (t.fnContext = e.fnContext), (t.fnOptions = e.fnOptions), (t.fnScopeId = e.fnScopeId), (t.asyncMeta = e.asyncMeta), (t.isCloned = !0), t ); } var Ce = Array.prototype, _e = Object.create(Ce), Be = [ \"push\", \"pop\", \"shift\", \"unshift\", \"splice\", \"sort\", \"reverse\", ]; Be.forEach(function (e) { var t = Ce[e]; W(_e, e, function () { var r = [], n = arguments.length; while (n--) r[n] = arguments[n]; var i, a = t.apply(this, r), o = this.__ob__; switch (e) { case \"push\": case \"unshift\": i = r; break; case \"splice\": i = r.slice(2); break; } return i && o.observeArray(i), o.dep.notify(), a; }); }); var xe = Object.getOwnPropertyNames(_e), Se = !0; function ke(e) { Se = e; } var Qe = function (e) { (this.value = e), (this.dep = new pe()), (this.vmCount = 0), W(e, \"__ob__\", this), Array.isArray(e) ? ($ ? Te(e, _e) : Me(e, _e, xe), this.observeArray(e)) : this.walk(e); }; function Te(e, t) { e.__proto__ = t; } function Me(e, t, r) { for (var n = 0, i = r.length; n < i; n++) { var a = r[n]; W(e, a, t[a]); } } function De(e, t) { var r; if (u(e) && !(e instanceof ve)) return ( y(e, \"__ob__\") && e.__ob__ instanceof Qe ? (r = e.__ob__) : Se && !ue() && (Array.isArray(e) || l(e)) && Object.isExtensible(e) && !e._isVue && (r = new Qe(e)), t && r && r.vmCount++, r ); } function Re(e, t, r, n, i) { var a = new pe(), o = Object.getOwnPropertyDescriptor(e, t); if (!o || !1 !== o.configurable) { var s = o && o.get, u = o && o.set; (s && !u) || 2 !== arguments.length || (r = e[t]); var c = !i && De(r); Object.defineProperty(e, t, { enumerable: !0, configurable: !0, get: function () { var t = s ? s.call(e) : r; return ( pe.target && (a.depend(), c && (c.dep.depend(), Array.isArray(t) && Fe(t))), t ); }, set: function (t) { var n = s ? s.call(e) : r; t === n || (t !== t && n !== n) || (s && !u) || (u ? u.call(e, t) : (r = t), (c = !i && De(t)), a.notify()); }, }); } } function Oe(e, t, r) { if (Array.isArray(e) && h(t)) return (e.length = Math.max(e.length, t)), e.splice(t, 1, r), r; if (t in e && !(t in Object.prototype)) return (e[t] = r), r; var n = e.__ob__; return e._isVue || (n && n.vmCount) ? r : n ? (Re(n.value, t, r), n.dep.notify(), r) : ((e[t] = r), r); } function Ne(e, t) { if (Array.isArray(e) && h(t)) e.splice(t, 1); else { var r = e.__ob__; e._isVue || (r && r.vmCount) || (y(e, t) && (delete e[t], r && r.dep.notify())); } } function Fe(e) { for (var t = void 0, r = 0, n = e.length; r < n; r++) (t = e[r]), t && t.__ob__ && t.__ob__.dep.depend(), Array.isArray(t) && Fe(t); } (Qe.prototype.walk = function (e) { for (var t = Object.keys(e), r = 0; r < t.length; r++) Re(e, t[r]); }), (Qe.prototype.observeArray = function (e) { for (var t = 0, r = e.length; t < r; t++) De(e[t]); }); var Le = z.optionMergeStrategies; function Pe(e, t) { if (!t) return e; for ( var r, n, i, a = he ? Reflect.ownKeys(t) : Object.keys(t), o = 0; o < a.length; o++ ) (r = a[o]), \"__ob__\" !== r && ((n = e[r]), (i = t[r]), y(e, r) ? n !== i && l(n) && l(i) && Pe(n, i) : Oe(e, r, i)); return e; } function Ue(e, t, r) { return r ? function () { var n = \"function\" === typeof t ? t.call(r, r) : t, i = \"function\" === typeof e ? e.call(r, r) : e; return n ? Pe(n, i) : i; } : t ? e ? function () { return Pe( \"function\" === typeof t ? t.call(this, this) : t, \"function\" === typeof e ? e.call(this, this) : e ); } : t : e; } function je(e, t) { var r = t ? (e ? e.concat(t) : Array.isArray(t) ? t : [t]) : e; return r ? ze(r) : r; } function ze(e) { for (var t = [], r = 0; r < e.length; r++) -1 === t.indexOf(e[r]) && t.push(e[r]); return t; } function Ge(e, t, r, n) { var i = Object.create(e || null); return t ? T(i, t) : i; } (Le.data = function (e, t, r) { return r ? Ue(e, t, r) : t && \"function\" !== typeof t ? e : Ue(e, t); }), j.forEach(function (e) { Le[e] = je; }), U.forEach(function (e) { Le[e + \"s\"] = Ge; }), (Le.watch = function (e, t, r, n) { if ((e === ae && (e = void 0), t === ae && (t = void 0), !t)) return Object.create(e || null); if (!e) return t; var i = {}; for (var a in (T(i, e), t)) { var o = i[a], s = t[a]; o && !Array.isArray(o) && (o = [o]), (i[a] = o ? o.concat(s) : Array.isArray(s) ? s : [s]); } return i; }), (Le.props = Le.methods = Le.inject = Le.computed = function (e, t, r, n) { if (!e) return t; var i = Object.create(null); return T(i, e), t && T(i, t), i; }), (Le.provide = Ue); var He = function (e, t) { return void 0 === t ? e : t; }; function We(e, t) { var r = e.props; if (r) { var n, i, a, o = {}; if (Array.isArray(r)) { n = r.length; while (n--) (i = r[n]), \"string\" === typeof i && ((a = w(i)), (o[a] = { type: null })); } else if (l(r)) for (var s in r) (i = r[s]), (a = w(s)), (o[a] = l(i) ? i : { type: i }); else 0; e.props = o; } } function Ye(e, t) { var r = e.inject; if (r) { var n = (e.inject = {}); if (Array.isArray(r)) for (var i = 0; i < r.length; i++) n[r[i]] = { from: r[i] }; else if (l(r)) for (var a in r) { var o = r[a]; n[a] = l(o) ? T({ from: a }, o) : { from: o }; } else 0; } } function qe(e) { var t = e.directives; if (t) for (var r in t) { var n = t[r]; \"function\" === typeof n && (t[r] = { bind: n, update: n }); } } function Je(e, t, r) { if ( (\"function\" === typeof t && (t = t.options), We(t, r), Ye(t, r), qe(t), !t._base && (t.extends && (e = Je(e, t.extends, r)), t.mixins)) ) for (var n = 0, i = t.mixins.length; n < i; n++) e = Je(e, t.mixins[n], r); var a, o = {}; for (a in e) s(a); for (a in t) y(e, a) || s(a); function s(n) { var i = Le[n] || He; o[n] = i(e[n], t[n], r, n); } return o; } function $e(e, t, r, n) { if (\"string\" === typeof r) { var i = e[t]; if (y(i, r)) return i[r]; var a = w(r); if (y(i, a)) return i[a]; var o = C(a); if (y(i, o)) return i[o]; var s = i[r] || i[a] || i[o]; return s; } } function Ke(e, t, r, n) { var i = t[e], a = !y(r, e), o = r[e], s = tt(Boolean, i.type); if (s > -1) if (a && !y(i, \"default\")) o = !1; else if (\"\" === o || o === B(e)) { var u = tt(String, i.type); (u < 0 || s < u) && (o = !0); } if (void 0 === o) { o = Ve(n, i, e); var c = Se; ke(!0), De(o), ke(c); } return o; } function Ve(e, t, r) { if (y(t, \"default\")) { var n = t.default; return e && e.$options.propsData && void 0 === e.$options.propsData[r] && void 0 !== e._props[r] ? e._props[r] : \"function\" === typeof n && \"Function\" !== Ze(t.type) ? n.call(e) : n; } } var Xe = /^\\s*function (\\w+)/; function Ze(e) { var t = e && e.toString().match(Xe); return t ? t[1] : \"\"; } function et(e, t) { return Ze(e) === Ze(t); } function tt(e, t) { if (!Array.isArray(t)) return et(t, e) ? 0 : -1; for (var r = 0, n = t.length; r < n; r++) if (et(t[r], e)) return r; return -1; } function rt(e, t, r) { me(); try { if (t) { var n = t; while ((n = n.$parent)) { var i = n.$options.errorCaptured; if (i) for (var a = 0; a < i.length; a++) try { var o = !1 === i[a].call(n, e, t, r); if (o) return; } catch (Co) { it(Co, n, \"errorCaptured hook\"); } } } it(e, t, r); } finally { be(); } } function nt(e, t, r, n, i) { var a; try { (a = r ? e.apply(t, r) : e.call(t)), a && !a._isVue && d(a) && !a._handled && (a.catch(function (e) { return rt(e, n, i + \" (Promise/async)\"); }), (a._handled = !0)); } catch (Co) { rt(Co, n, i); } return a; } function it(e, t, r) { if (z.errorHandler) try { return z.errorHandler.call(null, e, t, r); } catch (Co) { Co !== e && at(Co, null, \"config.errorHandler\"); } at(e, t, r); } function at(e, t, r) { if ((!K && !V) || \"undefined\" === typeof console) throw e; console.error(e); } var ot, st = !1, ut = [], ct = !1; function lt() { ct = !1; var e = ut.slice(0); ut.length = 0; for (var t = 0; t < e.length; t++) e[t](); } if (\"undefined\" !== typeof Promise && le(Promise)) { var ft = Promise.resolve(); (ot = function () { ft.then(lt), ne && setTimeout(D); }), (st = !0); } else if ( ee || \"undefined\" === typeof MutationObserver || (!le(MutationObserver) && \"[object MutationObserverConstructor]\" !== MutationObserver.toString()) ) ot = \"undefined\" !== typeof setImmediate && le(setImmediate) ? function () { setImmediate(lt); } : function () { setTimeout(lt, 0); }; else { var ht = 1, dt = new MutationObserver(lt), At = document.createTextNode(String(ht)); dt.observe(At, { characterData: !0 }), (ot = function () { (ht = (ht + 1) % 2), (At.data = String(ht)); }), (st = !0); } function pt(e, t) { var r; if ( (ut.push(function () { if (e) try { e.call(t); } catch (Co) { rt(Co, t, \"nextTick\"); } else r && r(t); }), ct || ((ct = !0), ot()), !e && \"undefined\" !== typeof Promise) ) return new Promise(function (e) { r = e; }); } var gt = new fe(); function mt(e) { bt(e, gt), gt.clear(); } function bt(e, t) { var r, n, i = Array.isArray(e); if (!((!i && !u(e)) || Object.isFrozen(e) || e instanceof ve)) { if (e.__ob__) { var a = e.__ob__.dep.id; if (t.has(a)) return; t.add(a); } if (i) { r = e.length; while (r--) bt(e[r], t); } else { (n = Object.keys(e)), (r = n.length); while (r--) bt(e[n[r]], t); } } } var vt = I(function (e) { var t = \"&\" === e.charAt(0); e = t ? e.slice(1) : e; var r = \"~\" === e.charAt(0); e = r ? e.slice(1) : e; var n = \"!\" === e.charAt(0); return ( (e = n ? e.slice(1) : e), { name: e, once: r, capture: n, passive: t } ); }); function yt(e, t) { function r() { var e = arguments, n = r.fns; if (!Array.isArray(n)) return nt(n, null, arguments, t, \"v-on handler\"); for (var i = n.slice(), a = 0; a < i.length; a++) nt(i[a], null, e, t, \"v-on handler\"); } return (r.fns = e), r; } function It(e, t, r, i, o, s) { var u, c, l, f; for (u in e) (c = e[u]), (l = t[u]), (f = vt(u)), n(c) || (n(l) ? (n(c.fns) && (c = e[u] = yt(c, s)), a(f.once) && (c = e[u] = o(f.name, c, f.capture)), r(f.name, c, f.capture, f.passive, f.params)) : c !== l && ((l.fns = c), (e[u] = l))); for (u in t) n(e[u]) && ((f = vt(u)), i(f.name, t[u], f.capture)); } function Et(e, t, r) { var o; e instanceof ve && (e = e.data.hook || (e.data.hook = {})); var s = e[t]; function u() { r.apply(this, arguments), b(o.fns, u); } n(s) ? (o = yt([u])) : i(s.fns) && a(s.merged) ? ((o = s), o.fns.push(u)) : (o = yt([s, u])), (o.merged = !0), (e[t] = o); } function wt(e, t, r) { var a = t.options.props; if (!n(a)) { var o = {}, s = e.attrs, u = e.props; if (i(s) || i(u)) for (var c in a) { var l = B(c); Ct(o, u, c, l, !0) || Ct(o, s, c, l, !1); } return o; } } function Ct(e, t, r, n, a) { if (i(t)) { if (y(t, r)) return (e[r] = t[r]), a || delete t[r], !0; if (y(t, n)) return (e[r] = t[n]), a || delete t[n], !0; } return !1; } function _t(e) { for (var t = 0; t < e.length; t++) if (Array.isArray(e[t])) return Array.prototype.concat.apply([], e); return e; } function Bt(e) { return s(e) ? [Ee(e)] : Array.isArray(e) ? St(e) : void 0; } function xt(e) { return i(e) && i(e.text) && o(e.isComment); } function St(e, t) { var r, o, u, c, l = []; for (r = 0; r < e.length; r++) (o = e[r]), n(o) || \"boolean\" === typeof o || ((u = l.length - 1), (c = l[u]), Array.isArray(o) ? o.length > 0 && ((o = St(o, (t || \"\") + \"_\" + r)), xt(o[0]) && xt(c) && ((l[u] = Ee(c.text + o[0].text)), o.shift()), l.push.apply(l, o)) : s(o) ? xt(c) ? (l[u] = Ee(c.text + o)) : \"\" !== o && l.push(Ee(o)) : xt(o) && xt(c) ? (l[u] = Ee(c.text + o.text)) : (a(e._isVList) && i(o.tag) && n(o.key) && i(t) && (o.key = \"__vlist\" + t + \"_\" + r + \"__\"), l.push(o))); return l; } function kt(e) { var t = e.$options.provide; t && (e._provided = \"function\" === typeof t ? t.call(e) : t); } function Qt(e) { var t = Tt(e.$options.inject, e); t && (ke(!1), Object.keys(t).forEach(function (r) { Re(e, r, t[r]); }), ke(!0)); } function Tt(e, t) { if (e) { for ( var r = Object.create(null), n = he ? Reflect.ownKeys(e) : Object.keys(e), i = 0; i < n.length; i++ ) { var a = n[i]; if (\"__ob__\" !== a) { var o = e[a].from, s = t; while (s) { if (s._provided && y(s._provided, o)) { r[a] = s._provided[o]; break; } s = s.$parent; } if (!s) if (\"default\" in e[a]) { var u = e[a].default; r[a] = \"function\" === typeof u ? u.call(t) : u; } else 0; } } return r; } } function Mt(e, t) { if (!e || !e.length) return {}; for (var r = {}, n = 0, i = e.length; n < i; n++) { var a = e[n], o = a.data; if ( (o && o.attrs && o.attrs.slot && delete o.attrs.slot, (a.context !== t && a.fnContext !== t) || !o || null == o.slot) ) (r.default || (r.default = [])).push(a); else { var s = o.slot, u = r[s] || (r[s] = []); \"template\" === a.tag ? u.push.apply(u, a.children || []) : u.push(a); } } for (var c in r) r[c].every(Dt) && delete r[c]; return r; } function Dt(e) { return (e.isComment && !e.asyncFactory) || \" \" === e.text; } function Rt(e) { return e.isComment && e.asyncFactory; } function Ot(e, t, n) { var i, a = Object.keys(t).length > 0, o = e ? !!e.$stable : !a, s = e && e.$key; if (e) { if (e._normalized) return e._normalized; if (o && n && n !== r && s === n.$key && !a && !n.$hasNormal) return n; for (var u in ((i = {}), e)) e[u] && \"$\" !== u[0] && (i[u] = Nt(t, u, e[u])); } else i = {}; for (var c in t) c in i || (i[c] = Ft(t, c)); return ( e && Object.isExtensible(e) && (e._normalized = i), W(i, \"$stable\", o), W(i, \"$key\", s), W(i, \"$hasNormal\", a), i ); } function Nt(e, t, r) { var n = function () { var e = arguments.length ? r.apply(null, arguments) : r({}); e = e && \"object\" === typeof e && !Array.isArray(e) ? [e] : Bt(e); var t = e && e[0]; return e && (!t || (1 === e.length && t.isComment && !Rt(t))) ? void 0 : e; }; return ( r.proxy && Object.defineProperty(e, t, { get: n, enumerable: !0, configurable: !0, }), n ); } function Ft(e, t) { return function () { return e[t]; }; } function Lt(e, t) { var r, n, a, o, s; if (Array.isArray(e) || \"string\" === typeof e) for (r = new Array(e.length), n = 0, a = e.length; n < a; n++) r[n] = t(e[n], n); else if (\"number\" === typeof e) for (r = new Array(e), n = 0; n < e; n++) r[n] = t(n + 1, n); else if (u(e)) if (he && e[Symbol.iterator]) { r = []; var c = e[Symbol.iterator](), l = c.next(); while (!l.done) r.push(t(l.value, r.length)), (l = c.next()); } else for ( o = Object.keys(e), r = new Array(o.length), n = 0, a = o.length; n < a; n++ ) (s = o[n]), (r[n] = t(e[s], s, n)); return i(r) || (r = []), (r._isVList = !0), r; } function Pt(e, t, r, n) { var i, a = this.$scopedSlots[e]; a ? ((r = r || {}), n && (r = T(T({}, n), r)), (i = a(r) || (\"function\" === typeof t ? t() : t))) : (i = this.$slots[e] || (\"function\" === typeof t ? t() : t)); var o = r && r.slot; return o ? this.$createElement(\"template\", { slot: o }, i) : i; } function Ut(e) { return $e(this.$options, \"filters\", e, !0) || O; } function jt(e, t) { return Array.isArray(e) ? -1 === e.indexOf(t) : e !== t; } function zt(e, t, r, n, i) { var a = z.keyCodes[t] || r; return i && n && !z.keyCodes[t] ? jt(i, n) : a ? jt(a, e) : n ? B(n) !== t : void 0 === e; } function Gt(e, t, r, n, i) { if (r) if (u(r)) { var a; Array.isArray(r) && (r = M(r)); var o = function (o) { if (\"class\" === o || \"style\" === o || m(o)) a = e; else { var s = e.attrs && e.attrs.type; a = n || z.mustUseProp(t, s, o) ? e.domProps || (e.domProps = {}) : e.attrs || (e.attrs = {}); } var u = w(o), c = B(o); if (!(u in a) && !(c in a) && ((a[o] = r[o]), i)) { var l = e.on || (e.on = {}); l[\"update:\" + o] = function (e) { r[o] = e; }; } }; for (var s in r) o(s); } else; return e; } function Ht(e, t) { var r = this._staticTrees || (this._staticTrees = []), n = r[e]; return ( (n && !t) || ((n = r[e] = this.$options.staticRenderFns[e].call( this._renderProxy, null, this )), Yt(n, \"__static__\" + e, !1)), n ); } function Wt(e, t, r) { return Yt(e, \"__once__\" + t + (r ? \"_\" + r : \"\"), !0), e; } function Yt(e, t, r) { if (Array.isArray(e)) for (var n = 0; n < e.length; n++) e[n] && \"string\" !== typeof e[n] && qt(e[n], t + \"_\" + n, r); else qt(e, t, r); } function qt(e, t, r) { (e.isStatic = !0), (e.key = t), (e.isOnce = r); } function Jt(e, t) { if (t) if (l(t)) { var r = (e.on = e.on ? T({}, e.on) : {}); for (var n in t) { var i = r[n], a = t[n]; r[n] = i ? [].concat(i, a) : a; } } else; return e; } function $t(e, t, r, n) { t = t || { $stable: !r }; for (var i = 0; i < e.length; i++) { var a = e[i]; Array.isArray(a) ? $t(a, t, r) : a && (a.proxy && (a.fn.proxy = !0), (t[a.key] = a.fn)); } return n && (t.$key = n), t; } function Kt(e, t) { for (var r = 0; r < t.length; r += 2) { var n = t[r]; \"string\" === typeof n && n && (e[t[r]] = t[r + 1]); } return e; } function Vt(e, t) { return \"string\" === typeof e ? t + e : e; } function Xt(e) { (e._o = Wt), (e._n = p), (e._s = A), (e._l = Lt), (e._t = Pt), (e._q = N), (e._i = F), (e._m = Ht), (e._f = Ut), (e._k = zt), (e._b = Gt), (e._v = Ee), (e._e = Ie), (e._u = $t), (e._g = Jt), (e._d = Kt), (e._p = Vt); } function Zt(e, t, n, i, o) { var s, u = this, c = o.options; y(i, \"_uid\") ? ((s = Object.create(i)), (s._original = i)) : ((s = i), (i = i._original)); var l = a(c._compiled), f = !l; (this.data = e), (this.props = t), (this.children = n), (this.parent = i), (this.listeners = e.on || r), (this.injections = Tt(c.inject, i)), (this.slots = function () { return ( u.$slots || Ot(e.scopedSlots, (u.$slots = Mt(n, i))), u.$slots ); }), Object.defineProperty(this, \"scopedSlots\", { enumerable: !0, get: function () { return Ot(e.scopedSlots, this.slots()); }, }), l && ((this.$options = c), (this.$slots = this.slots()), (this.$scopedSlots = Ot(e.scopedSlots, this.$slots))), c._scopeId ? (this._c = function (e, t, r, n) { var a = hr(s, e, t, r, n, f); return ( a && !Array.isArray(a) && ((a.fnScopeId = c._scopeId), (a.fnContext = i)), a ); }) : (this._c = function (e, t, r, n) { return hr(s, e, t, r, n, f); }); } function er(e, t, n, a, o) { var s = e.options, u = {}, c = s.props; if (i(c)) for (var l in c) u[l] = Ke(l, c, t || r); else i(n.attrs) && rr(u, n.attrs), i(n.props) && rr(u, n.props); var f = new Zt(n, u, o, a, e), h = s.render.call(null, f._c, f); if (h instanceof ve) return tr(h, n, f.parent, s, f); if (Array.isArray(h)) { for ( var d = Bt(h) || [], A = new Array(d.length), p = 0; p < d.length; p++ ) A[p] = tr(d[p], n, f.parent, s, f); return A; } } function tr(e, t, r, n, i) { var a = we(e); return ( (a.fnContext = r), (a.fnOptions = n), t.slot && ((a.data || (a.data = {})).slot = t.slot), a ); } function rr(e, t) { for (var r in t) e[w(r)] = t[r]; } Xt(Zt.prototype); var nr = { init: function (e, t) { if ( e.componentInstance && !e.componentInstance._isDestroyed && e.data.keepAlive ) { var r = e; nr.prepatch(r, r); } else { var n = (e.componentInstance = or(e, Qr)); n.$mount(t ? e.elm : void 0, t); } }, prepatch: function (e, t) { var r = t.componentOptions, n = (t.componentInstance = e.componentInstance); Or(n, r.propsData, r.listeners, t, r.children); }, insert: function (e) { var t = e.context, r = e.componentInstance; r._isMounted || ((r._isMounted = !0), Pr(r, \"mounted\")), e.data.keepAlive && (t._isMounted ? Xr(r) : Fr(r, !0)); }, destroy: function (e) { var t = e.componentInstance; t._isDestroyed || (e.data.keepAlive ? Lr(t, !0) : t.$destroy()); }, }, ir = Object.keys(nr); function ar(e, t, r, o, s) { if (!n(e)) { var c = r.$options._base; if ((u(e) && (e = c.extend(e)), \"function\" === typeof e)) { var l; if (n(e.cid) && ((l = e), (e = Er(l, c)), void 0 === e)) return Ir(l, t, r, o, s); (t = t || {}), En(e), i(t.model) && cr(e.options, t); var f = wt(t, e, s); if (a(e.options.functional)) return er(e, f, t, r, o); var h = t.on; if (((t.on = t.nativeOn), a(e.options.abstract))) { var d = t.slot; (t = {}), d && (t.slot = d); } sr(t); var A = e.options.name || s, p = new ve( \"vue-component-\" + e.cid + (A ? \"-\" + A : \"\"), t, void 0, void 0, void 0, r, { Ctor: e, propsData: f, listeners: h, tag: s, children: o, }, l ); return p; } } } function or(e, t) { var r = { _isComponent: !0, _parentVnode: e, parent: t }, n = e.data.inlineTemplate; return ( i(n) && ((r.render = n.render), (r.staticRenderFns = n.staticRenderFns)), new e.componentOptions.Ctor(r) ); } function sr(e) { for (var t = e.hook || (e.hook = {}), r = 0; r < ir.length; r++) { var n = ir[r], i = t[n], a = nr[n]; i === a || (i && i._merged) || (t[n] = i ? ur(a, i) : a); } } function ur(e, t) { var r = function (r, n) { e(r, n), t(r, n); }; return (r._merged = !0), r; } function cr(e, t) { var r = (e.model && e.model.prop) || \"value\", n = (e.model && e.model.event) || \"input\"; (t.attrs || (t.attrs = {}))[r] = t.model.value; var a = t.on || (t.on = {}), o = a[n], s = t.model.callback; i(o) ? (Array.isArray(o) ? -1 === o.indexOf(s) : o !== s) && (a[n] = [s].concat(o)) : (a[n] = s); } var lr = 1, fr = 2; function hr(e, t, r, n, i, o) { return ( (Array.isArray(r) || s(r)) && ((i = n), (n = r), (r = void 0)), a(o) && (i = fr), dr(e, t, r, n, i) ); } function dr(e, t, r, n, a) { if (i(r) && i(r.__ob__)) return Ie(); if ((i(r) && i(r.is) && (t = r.is), !t)) return Ie(); var o, s, u; (Array.isArray(n) && \"function\" === typeof n[0] && ((r = r || {}), (r.scopedSlots = { default: n[0] }), (n.length = 0)), a === fr ? (n = Bt(n)) : a === lr && (n = _t(n)), \"string\" === typeof t) ? ((s = (e.$vnode && e.$vnode.ns) || z.getTagNamespace(t)), (o = z.isReservedTag(t) ? new ve(z.parsePlatformTagName(t), r, n, void 0, void 0, e) : (r && r.pre) || !i((u = $e(e.$options, \"components\", t))) ? new ve(t, r, n, void 0, void 0, e) : ar(u, r, e, n, t))) : (o = ar(t, r, e, n)); return Array.isArray(o) ? o : i(o) ? (i(s) && Ar(o, s), i(r) && pr(r), o) : Ie(); } function Ar(e, t, r) { if ( ((e.ns = t), \"foreignObject\" === e.tag && ((t = void 0), (r = !0)), i(e.children)) ) for (var o = 0, s = e.children.length; o < s; o++) { var u = e.children[o]; i(u.tag) && (n(u.ns) || (a(r) && \"svg\" !== u.tag)) && Ar(u, t, r); } } function pr(e) { u(e.style) && mt(e.style), u(e.class) && mt(e.class); } function gr(e) { (e._vnode = null), (e._staticTrees = null); var t = e.$options, n = (e.$vnode = t._parentVnode), i = n && n.context; (e.$slots = Mt(t._renderChildren, i)), (e.$scopedSlots = r), (e._c = function (t, r, n, i) { return hr(e, t, r, n, i, !1); }), (e.$createElement = function (t, r, n, i) { return hr(e, t, r, n, i, !0); }); var a = n && n.data; Re(e, \"$attrs\", (a && a.attrs) || r, null, !0), Re(e, \"$listeners\", t._parentListeners || r, null, !0); } var mr, br = null; function vr(e) { Xt(e.prototype), (e.prototype.$nextTick = function (e) { return pt(e, this); }), (e.prototype._render = function () { var e, t = this, r = t.$options, n = r.render, i = r._parentVnode; i && (t.$scopedSlots = Ot( i.data.scopedSlots, t.$slots, t.$scopedSlots )), (t.$vnode = i); try { (br = t), (e = n.call(t._renderProxy, t.$createElement)); } catch (Co) { rt(Co, t, \"render\"), (e = t._vnode); } finally { br = null; } return ( Array.isArray(e) && 1 === e.length && (e = e[0]), e instanceof ve || (e = Ie()), (e.parent = i), e ); }); } function yr(e, t) { return ( (e.__esModule || (he && \"Module\" === e[Symbol.toStringTag])) && (e = e.default), u(e) ? t.extend(e) : e ); } function Ir(e, t, r, n, i) { var a = Ie(); return ( (a.asyncFactory = e), (a.asyncMeta = { data: t, context: r, children: n, tag: i }), a ); } function Er(e, t) { if (a(e.error) && i(e.errorComp)) return e.errorComp; if (i(e.resolved)) return e.resolved; var r = br; if ( (r && i(e.owners) && -1 === e.owners.indexOf(r) && e.owners.push(r), a(e.loading) && i(e.loadingComp)) ) return e.loadingComp; if (r && !i(e.owners)) { var o = (e.owners = [r]), s = !0, c = null, l = null; r.$on(\"hook:destroyed\", function () { return b(o, r); }); var f = function (e) { for (var t = 0, r = o.length; t < r; t++) o[t].$forceUpdate(); e && ((o.length = 0), null !== c && (clearTimeout(c), (c = null)), null !== l && (clearTimeout(l), (l = null))); }, h = L(function (r) { (e.resolved = yr(r, t)), s ? (o.length = 0) : f(!0); }), A = L(function (t) { i(e.errorComp) && ((e.error = !0), f(!0)); }), p = e(h, A); return ( u(p) && (d(p) ? n(e.resolved) && p.then(h, A) : d(p.component) && (p.component.then(h, A), i(p.error) && (e.errorComp = yr(p.error, t)), i(p.loading) && ((e.loadingComp = yr(p.loading, t)), 0 === p.delay ? (e.loading = !0) : (c = setTimeout(function () { (c = null), n(e.resolved) && n(e.error) && ((e.loading = !0), f(!1)); }, p.delay || 200))), i(p.timeout) && (l = setTimeout(function () { (l = null), n(e.resolved) && A(null); }, p.timeout)))), (s = !1), e.loading ? e.loadingComp : e.resolved ); } } function wr(e) { if (Array.isArray(e)) for (var t = 0; t < e.length; t++) { var r = e[t]; if (i(r) && (i(r.componentOptions) || Rt(r))) return r; } } function Cr(e) { (e._events = Object.create(null)), (e._hasHookEvent = !1); var t = e.$options._parentListeners; t && Sr(e, t); } function _r(e, t) { mr.$on(e, t); } function Br(e, t) { mr.$off(e, t); } function xr(e, t) { var r = mr; return function n() { var i = t.apply(null, arguments); null !== i && r.$off(e, n); }; } function Sr(e, t, r) { (mr = e), It(t, r || {}, _r, Br, xr, e), (mr = void 0); } function kr(e) { var t = /^hook:/; (e.prototype.$on = function (e, r) { var n = this; if (Array.isArray(e)) for (var i = 0, a = e.length; i < a; i++) n.$on(e[i], r); else (n._events[e] || (n._events[e] = [])).push(r), t.test(e) && (n._hasHookEvent = !0); return n; }), (e.prototype.$once = function (e, t) { var r = this; function n() { r.$off(e, n), t.apply(r, arguments); } return (n.fn = t), r.$on(e, n), r; }), (e.prototype.$off = function (e, t) { var r = this; if (!arguments.length) return (r._events = Object.create(null)), r; if (Array.isArray(e)) { for (var n = 0, i = e.length; n < i; n++) r.$off(e[n], t); return r; } var a, o = r._events[e]; if (!o) return r; if (!t) return (r._events[e] = null), r; var s = o.length; while (s--) if (((a = o[s]), a === t || a.fn === t)) { o.splice(s, 1); break; } return r; }), (e.prototype.$emit = function (e) { var t = this, r = t._events[e]; if (r) { r = r.length > 1 ? Q(r) : r; for ( var n = Q(arguments, 1), i = 'event handler for \"' + e + '\"', a = 0, o = r.length; a < o; a++ ) nt(r[a], t, n, t, i); } return t; }); } var Qr = null; function Tr(e) { var t = Qr; return ( (Qr = e), function () { Qr = t; } ); } function Mr(e) { var t = e.$options, r = t.parent; if (r && !t.abstract) { while (r.$options.abstract && r.$parent) r = r.$parent; r.$children.push(e); } (e.$parent = r), (e.$root = r ? r.$root : e), (e.$children = []), (e.$refs = {}), (e._watcher = null), (e._inactive = null), (e._directInactive = !1), (e._isMounted = !1), (e._isDestroyed = !1), (e._isBeingDestroyed = !1); } function Dr(e) { (e.prototype._update = function (e, t) { var r = this, n = r.$el, i = r._vnode, a = Tr(r); (r._vnode = e), (r.$el = i ? r.__patch__(i, e) : r.__patch__(r.$el, e, t, !1)), a(), n && (n.__vue__ = null), r.$el && (r.$el.__vue__ = r), r.$vnode && r.$parent && r.$vnode === r.$parent._vnode && (r.$parent.$el = r.$el); }), (e.prototype.$forceUpdate = function () { var e = this; e._watcher && e._watcher.update(); }), (e.prototype.$destroy = function () { var e = this; if (!e._isBeingDestroyed) { Pr(e, \"beforeDestroy\"), (e._isBeingDestroyed = !0); var t = e.$parent; !t || t._isBeingDestroyed || e.$options.abstract || b(t.$children, e), e._watcher && e._watcher.teardown(); var r = e._watchers.length; while (r--) e._watchers[r].teardown(); e._data.__ob__ && e._data.__ob__.vmCount--, (e._isDestroyed = !0), e.__patch__(e._vnode, null), Pr(e, \"destroyed\"), e.$off(), e.$el && (e.$el.__vue__ = null), e.$vnode && (e.$vnode.parent = null); } }); } function Rr(e, t, r) { var n; return ( (e.$el = t), e.$options.render || (e.$options.render = Ie), Pr(e, \"beforeMount\"), (n = function () { e._update(e._render(), r); }), new rn( e, n, D, { before: function () { e._isMounted && !e._isDestroyed && Pr(e, \"beforeUpdate\"); }, }, !0 ), (r = !1), null == e.$vnode && ((e._isMounted = !0), Pr(e, \"mounted\")), e ); } function Or(e, t, n, i, a) { var o = i.data.scopedSlots, s = e.$scopedSlots, u = !!( (o && !o.$stable) || (s !== r && !s.$stable) || (o && e.$scopedSlots.$key !== o.$key) || (!o && e.$scopedSlots.$key) ), c = !!(a || e.$options._renderChildren || u); if ( ((e.$options._parentVnode = i), (e.$vnode = i), e._vnode && (e._vnode.parent = i), (e.$options._renderChildren = a), (e.$attrs = i.data.attrs || r), (e.$listeners = n || r), t && e.$options.props) ) { ke(!1); for ( var l = e._props, f = e.$options._propKeys || [], h = 0; h < f.length; h++ ) { var d = f[h], A = e.$options.props; l[d] = Ke(d, A, t, e); } ke(!0), (e.$options.propsData = t); } n = n || r; var p = e.$options._parentListeners; (e.$options._parentListeners = n), Sr(e, n, p), c && ((e.$slots = Mt(a, i.context)), e.$forceUpdate()); } function Nr(e) { while (e && (e = e.$parent)) if (e._inactive) return !0; return !1; } function Fr(e, t) { if (t) { if (((e._directInactive = !1), Nr(e))) return; } else if (e._directInactive) return; if (e._inactive || null === e._inactive) { e._inactive = !1; for (var r = 0; r < e.$children.length; r++) Fr(e.$children[r]); Pr(e, \"activated\"); } } function Lr(e, t) { if ((!t || ((e._directInactive = !0), !Nr(e))) && !e._inactive) { e._inactive = !0; for (var r = 0; r < e.$children.length; r++) Lr(e.$children[r]); Pr(e, \"deactivated\"); } } function Pr(e, t) { me(); var r = e.$options[t], n = t + \" hook\"; if (r) for (var i = 0, a = r.length; i < a; i++) nt(r[i], e, null, e, n); e._hasHookEvent && e.$emit(\"hook:\" + t), be(); } var Ur = [], jr = [], zr = {}, Gr = !1, Hr = !1, Wr = 0; function Yr() { (Wr = Ur.length = jr.length = 0), (zr = {}), (Gr = Hr = !1); } var qr = 0, Jr = Date.now; if (K && !ee) { var $r = window.performance; $r && \"function\" === typeof $r.now && Jr() > document.createEvent(\"Event\").timeStamp && (Jr = function () { return $r.now(); }); } function Kr() { var e, t; for ( qr = Jr(), Hr = !0, Ur.sort(function (e, t) { return e.id - t.id; }), Wr = 0; Wr < Ur.length; Wr++ ) (e = Ur[Wr]), e.before && e.before(), (t = e.id), (zr[t] = null), e.run(); var r = jr.slice(), n = Ur.slice(); Yr(), Zr(r), Vr(n), ce && z.devtools && ce.emit(\"flush\"); } function Vr(e) { var t = e.length; while (t--) { var r = e[t], n = r.vm; n._watcher === r && n._isMounted && !n._isDestroyed && Pr(n, \"updated\"); } } function Xr(e) { (e._inactive = !1), jr.push(e); } function Zr(e) { for (var t = 0; t < e.length; t++) (e[t]._inactive = !0), Fr(e[t], !0); } function en(e) { var t = e.id; if (null == zr[t]) { if (((zr[t] = !0), Hr)) { var r = Ur.length - 1; while (r > Wr && Ur[r].id > e.id) r--; Ur.splice(r + 1, 0, e); } else Ur.push(e); Gr || ((Gr = !0), pt(Kr)); } } var tn = 0, rn = function (e, t, r, n, i) { (this.vm = e), i && (e._watcher = this), e._watchers.push(this), n ? ((this.deep = !!n.deep), (this.user = !!n.user), (this.lazy = !!n.lazy), (this.sync = !!n.sync), (this.before = n.before)) : (this.deep = this.user = this.lazy = this.sync = !1), (this.cb = r), (this.id = ++tn), (this.active = !0), (this.dirty = this.lazy), (this.deps = []), (this.newDeps = []), (this.depIds = new fe()), (this.newDepIds = new fe()), (this.expression = \"\"), \"function\" === typeof t ? (this.getter = t) : ((this.getter = q(t)), this.getter || (this.getter = D)), (this.value = this.lazy ? void 0 : this.get()); }; (rn.prototype.get = function () { var e; me(this); var t = this.vm; try { e = this.getter.call(t, t); } catch (Co) { if (!this.user) throw Co; rt(Co, t, 'getter for watcher \"' + this.expression + '\"'); } finally { this.deep && mt(e), be(), this.cleanupDeps(); } return e; }), (rn.prototype.addDep = function (e) { var t = e.id; this.newDepIds.has(t) || (this.newDepIds.add(t), this.newDeps.push(e), this.depIds.has(t) || e.addSub(this)); }), (rn.prototype.cleanupDeps = function () { var e = this.deps.length; while (e--) { var t = this.deps[e]; this.newDepIds.has(t.id) || t.removeSub(this); } var r = this.depIds; (this.depIds = this.newDepIds), (this.newDepIds = r), this.newDepIds.clear(), (r = this.deps), (this.deps = this.newDeps), (this.newDeps = r), (this.newDeps.length = 0); }), (rn.prototype.update = function () { this.lazy ? (this.dirty = !0) : this.sync ? this.run() : en(this); }), (rn.prototype.run = function () { if (this.active) { var e = this.get(); if (e !== this.value || u(e) || this.deep) { var t = this.value; if (((this.value = e), this.user)) { var r = 'callback for watcher \"' + this.expression + '\"'; nt(this.cb, this.vm, [e, t], this.vm, r); } else this.cb.call(this.vm, e, t); } } }), (rn.prototype.evaluate = function () { (this.value = this.get()), (this.dirty = !1); }), (rn.prototype.depend = function () { var e = this.deps.length; while (e--) this.deps[e].depend(); }), (rn.prototype.teardown = function () { if (this.active) { this.vm._isBeingDestroyed || b(this.vm._watchers, this); var e = this.deps.length; while (e--) this.deps[e].removeSub(this); this.active = !1; } }); var nn = { enumerable: !0, configurable: !0, get: D, set: D }; function an(e, t, r) { (nn.get = function () { return this[t][r]; }), (nn.set = function (e) { this[t][r] = e; }), Object.defineProperty(e, r, nn); } function on(e) { e._watchers = []; var t = e.$options; t.props && sn(e, t.props), t.methods && pn(e, t.methods), t.data ? un(e) : De((e._data = {}), !0), t.computed && fn(e, t.computed), t.watch && t.watch !== ae && gn(e, t.watch); } function sn(e, t) { var r = e.$options.propsData || {}, n = (e._props = {}), i = (e.$options._propKeys = []), a = !e.$parent; a || ke(!1); var o = function (a) { i.push(a); var o = Ke(a, t, r, e); Re(n, a, o), a in e || an(e, \"_props\", a); }; for (var s in t) o(s); ke(!0); } function un(e) { var t = e.$options.data; (t = e._data = \"function\" === typeof t ? cn(t, e) : t || {}), l(t) || (t = {}); var r = Object.keys(t), n = e.$options.props, i = (e.$options.methods, r.length); while (i--) { var a = r[i]; 0, (n && y(n, a)) || H(a) || an(e, \"_data\", a); } De(t, !0); } function cn(e, t) { me(); try { return e.call(t, t); } catch (Co) { return rt(Co, t, \"data()\"), {}; } finally { be(); } } var ln = { lazy: !0 }; function fn(e, t) { var r = (e._computedWatchers = Object.create(null)), n = ue(); for (var i in t) { var a = t[i], o = \"function\" === typeof a ? a : a.get; 0, n || (r[i] = new rn(e, o || D, D, ln)), i in e || hn(e, i, a); } } function hn(e, t, r) { var n = !ue(); \"function\" === typeof r ? ((nn.get = n ? dn(t) : An(r)), (nn.set = D)) : ((nn.get = r.get ? n && !1 !== r.cache ? dn(t) : An(r.get) : D), (nn.set = r.set || D)), Object.defineProperty(e, t, nn); } function dn(e) { return function () { var t = this._computedWatchers && this._computedWatchers[e]; if (t) return ( t.dirty && t.evaluate(), pe.target && t.depend(), t.value ); }; } function An(e) { return function () { return e.call(this, this); }; } function pn(e, t) { e.$options.props; for (var r in t) e[r] = \"function\" !== typeof t[r] ? D : k(t[r], e); } function gn(e, t) { for (var r in t) { var n = t[r]; if (Array.isArray(n)) for (var i = 0; i < n.length; i++) mn(e, r, n[i]); else mn(e, r, n); } } function mn(e, t, r, n) { return ( l(r) && ((n = r), (r = r.handler)), \"string\" === typeof r && (r = e[r]), e.$watch(t, r, n) ); } function bn(e) { var t = { get: function () { return this._data; }, }, r = { get: function () { return this._props; }, }; Object.defineProperty(e.prototype, \"$data\", t), Object.defineProperty(e.prototype, \"$props\", r), (e.prototype.$set = Oe), (e.prototype.$delete = Ne), (e.prototype.$watch = function (e, t, r) { var n = this; if (l(t)) return mn(n, e, t, r); (r = r || {}), (r.user = !0); var i = new rn(n, e, t, r); if (r.immediate) { var a = 'callback for immediate watcher \"' + i.expression + '\"'; me(), nt(t, n, [i.value], n, a), be(); } return function () { i.teardown(); }; }); } var vn = 0; function yn(e) { e.prototype._init = function (e) { var t = this; (t._uid = vn++), (t._isVue = !0), e && e._isComponent ? In(t, e) : (t.$options = Je(En(t.constructor), e || {}, t)), (t._renderProxy = t), (t._self = t), Mr(t), Cr(t), gr(t), Pr(t, \"beforeCreate\"), Qt(t), on(t), kt(t), Pr(t, \"created\"), t.$options.el && t.$mount(t.$options.el); }; } function In(e, t) { var r = (e.$options = Object.create(e.constructor.options)), n = t._parentVnode; (r.parent = t.parent), (r._parentVnode = n); var i = n.componentOptions; (r.propsData = i.propsData), (r._parentListeners = i.listeners), (r._renderChildren = i.children), (r._componentTag = i.tag), t.render && ((r.render = t.render), (r.staticRenderFns = t.staticRenderFns)); } function En(e) { var t = e.options; if (e.super) { var r = En(e.super), n = e.superOptions; if (r !== n) { e.superOptions = r; var i = wn(e); i && T(e.extendOptions, i), (t = e.options = Je(r, e.extendOptions)), t.name && (t.components[t.name] = e); } } return t; } function wn(e) { var t, r = e.options, n = e.sealedOptions; for (var i in r) r[i] !== n[i] && (t || (t = {}), (t[i] = r[i])); return t; } function Cn(e) { this._init(e); } function _n(e) { e.use = function (e) { var t = this._installedPlugins || (this._installedPlugins = []); if (t.indexOf(e) > -1) return this; var r = Q(arguments, 1); return ( r.unshift(this), \"function\" === typeof e.install ? e.install.apply(e, r) : \"function\" === typeof e && e.apply(null, r), t.push(e), this ); }; } function Bn(e) { e.mixin = function (e) { return (this.options = Je(this.options, e)), this; }; } function xn(e) { e.cid = 0; var t = 1; e.extend = function (e) { e = e || {}; var r = this, n = r.cid, i = e._Ctor || (e._Ctor = {}); if (i[n]) return i[n]; var a = e.name || r.options.name; var o = function (e) { this._init(e); }; return ( (o.prototype = Object.create(r.prototype)), (o.prototype.constructor = o), (o.cid = t++), (o.options = Je(r.options, e)), (o[\"super\"] = r), o.options.props && Sn(o), o.options.computed && kn(o), (o.extend = r.extend), (o.mixin = r.mixin), (o.use = r.use), U.forEach(function (e) { o[e] = r[e]; }), a && (o.options.components[a] = o), (o.superOptions = r.options), (o.extendOptions = e), (o.sealedOptions = T({}, o.options)), (i[n] = o), o ); }; } function Sn(e) { var t = e.options.props; for (var r in t) an(e.prototype, \"_props\", r); } function kn(e) { var t = e.options.computed; for (var r in t) hn(e.prototype, r, t[r]); } function Qn(e) { U.forEach(function (t) { e[t] = function (e, r) { return r ? (\"component\" === t && l(r) && ((r.name = r.name || e), (r = this.options._base.extend(r))), \"directive\" === t && \"function\" === typeof r && (r = { bind: r, update: r }), (this.options[t + \"s\"][e] = r), r) : this.options[t + \"s\"][e]; }; }); } function Tn(e) { return e && (e.Ctor.options.name || e.tag); } function Mn(e, t) { return Array.isArray(e) ? e.indexOf(t) > -1 : \"string\" === typeof e ? e.split(\",\").indexOf(t) > -1 : !!f(e) && e.test(t); } function Dn(e, t) { var r = e.cache, n = e.keys, i = e._vnode; for (var a in r) { var o = r[a]; if (o) { var s = o.name; s && !t(s) && Rn(r, a, n, i); } } } function Rn(e, t, r, n) { var i = e[t]; !i || (n && i.tag === n.tag) || i.componentInstance.$destroy(), (e[t] = null), b(r, t); } yn(Cn), bn(Cn), kr(Cn), Dr(Cn), vr(Cn); var On = [String, RegExp, Array], Nn = { name: \"keep-alive\", abstract: !0, props: { include: On, exclude: On, max: [String, Number] }, methods: { cacheVNode: function () { var e = this, t = e.cache, r = e.keys, n = e.vnodeToCache, i = e.keyToCache; if (n) { var a = n.tag, o = n.componentInstance, s = n.componentOptions; (t[i] = { name: Tn(s), tag: a, componentInstance: o }), r.push(i), this.max && r.length > parseInt(this.max) && Rn(t, r[0], r, this._vnode), (this.vnodeToCache = null); } }, }, created: function () { (this.cache = Object.create(null)), (this.keys = []); }, destroyed: function () { for (var e in this.cache) Rn(this.cache, e, this.keys); }, mounted: function () { var e = this; this.cacheVNode(), this.$watch(\"include\", function (t) { Dn(e, function (e) { return Mn(t, e); }); }), this.$watch(\"exclude\", function (t) { Dn(e, function (e) { return !Mn(t, e); }); }); }, updated: function () { this.cacheVNode(); }, render: function () { var e = this.$slots.default, t = wr(e), r = t && t.componentOptions; if (r) { var n = Tn(r), i = this, a = i.include, o = i.exclude; if ((a && (!n || !Mn(a, n))) || (o && n && Mn(o, n))) return t; var s = this, u = s.cache, c = s.keys, l = null == t.key ? r.Ctor.cid + (r.tag ? \"::\" + r.tag : \"\") : t.key; u[l] ? ((t.componentInstance = u[l].componentInstance), b(c, l), c.push(l)) : ((this.vnodeToCache = t), (this.keyToCache = l)), (t.data.keepAlive = !0); } return t || (e && e[0]); }, }, Fn = { KeepAlive: Nn }; function Ln(e) { var t = { get: function () { return z; }, }; Object.defineProperty(e, \"config\", t), (e.util = { warn: de, extend: T, mergeOptions: Je, defineReactive: Re, }), (e.set = Oe), (e.delete = Ne), (e.nextTick = pt), (e.observable = function (e) { return De(e), e; }), (e.options = Object.create(null)), U.forEach(function (t) { e.options[t + \"s\"] = Object.create(null); }), (e.options._base = e), T(e.options.components, Fn), _n(e), Bn(e), xn(e), Qn(e); } Ln(Cn), Object.defineProperty(Cn.prototype, \"$isServer\", { get: ue }), Object.defineProperty(Cn.prototype, \"$ssrContext\", { get: function () { return this.$vnode && this.$vnode.ssrContext; }, }), Object.defineProperty(Cn, \"FunctionalRenderContext\", { value: Zt }), (Cn.version = \"2.6.14\"); var Pn = g(\"style,class\"), Un = g(\"input,textarea,option,select,progress\"), jn = function (e, t, r) { return ( (\"value\" === r && Un(e) && \"button\" !== t) || (\"selected\" === r && \"option\" === e) || (\"checked\" === r && \"input\" === e) || (\"muted\" === r && \"video\" === e) ); }, zn = g(\"contenteditable,draggable,spellcheck\"), Gn = g(\"events,caret,typing,plaintext-only\"), Hn = function (e, t) { return $n(t) || \"false\" === t ? \"false\" : \"contenteditable\" === e && Gn(t) ? t : \"true\"; }, Wn = g( \"allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible\" ), Yn = \"http://www.w3.org/1999/xlink\", qn = function (e) { return \":\" === e.charAt(5) && \"xlink\" === e.slice(0, 5); }, Jn = function (e) { return qn(e) ? e.slice(6, e.length) : \"\"; }, $n = function (e) { return null == e || !1 === e; }; function Kn(e) { var t = e.data, r = e, n = e; while (i(n.componentInstance)) (n = n.componentInstance._vnode), n && n.data && (t = Vn(n.data, t)); while (i((r = r.parent))) r && r.data && (t = Vn(t, r.data)); return Xn(t.staticClass, t.class); } function Vn(e, t) { return { staticClass: Zn(e.staticClass, t.staticClass), class: i(e.class) ? [e.class, t.class] : t.class, }; } function Xn(e, t) { return i(e) || i(t) ? Zn(e, ei(t)) : \"\"; } function Zn(e, t) { return e ? (t ? e + \" \" + t : e) : t || \"\"; } function ei(e) { return Array.isArray(e) ? ti(e) : u(e) ? ri(e) : \"string\" === typeof e ? e : \"\"; } function ti(e) { for (var t, r = \"\", n = 0, a = e.length; n < a; n++) i((t = ei(e[n]))) && \"\" !== t && (r && (r += \" \"), (r += t)); return r; } function ri(e) { var t = \"\"; for (var r in e) e[r] && (t && (t += \" \"), (t += r)); return t; } var ni = { svg: \"http://www.w3.org/2000/svg\", math: \"http://www.w3.org/1998/Math/MathML\", }, ii = g( \"html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot\" ), ai = g( \"svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view\", !0 ), oi = function (e) { return ii(e) || ai(e); }; function si(e) { return ai(e) ? \"svg\" : \"math\" === e ? \"math\" : void 0; } var ui = Object.create(null); function ci(e) { if (!K) return !0; if (oi(e)) return !1; if (((e = e.toLowerCase()), null != ui[e])) return ui[e]; var t = document.createElement(e); return e.indexOf(\"-\") > -1 ? (ui[e] = t.constructor === window.HTMLUnknownElement || t.constructor === window.HTMLElement) : (ui[e] = /HTMLUnknownElement/.test(t.toString())); } var li = g(\"text,number,password,search,email,tel,url\"); function fi(e) { if (\"string\" === typeof e) { var t = document.querySelector(e); return t || document.createElement(\"div\"); } return e; } function hi(e, t) { var r = document.createElement(e); return ( \"select\" !== e || (t.data && t.data.attrs && void 0 !== t.data.attrs.multiple && r.setAttribute(\"multiple\", \"multiple\")), r ); } function di(e, t) { return document.createElementNS(ni[e], t); } function Ai(e) { return document.createTextNode(e); } function pi(e) { return document.createComment(e); } function gi(e, t, r) { e.insertBefore(t, r); } function mi(e, t) { e.removeChild(t); } function bi(e, t) { e.appendChild(t); } function vi(e) { return e.parentNode; } function yi(e) { return e.nextSibling; } function Ii(e) { return e.tagName; } function Ei(e, t) { e.textContent = t; } function wi(e, t) { e.setAttribute(t, \"\"); } var Ci = Object.freeze({ createElement: hi, createElementNS: di, createTextNode: Ai, createComment: pi, insertBefore: gi, removeChild: mi, appendChild: bi, parentNode: vi, nextSibling: yi, tagName: Ii, setTextContent: Ei, setStyleScope: wi, }), _i = { create: function (e, t) { Bi(t); }, update: function (e, t) { e.data.ref !== t.data.ref && (Bi(e, !0), Bi(t)); }, destroy: function (e) { Bi(e, !0); }, }; function Bi(e, t) { var r = e.data.ref; if (i(r)) { var n = e.context, a = e.componentInstance || e.elm, o = n.$refs; t ? Array.isArray(o[r]) ? b(o[r], a) : o[r] === a && (o[r] = void 0) : e.data.refInFor ? Array.isArray(o[r]) ? o[r].indexOf(a) < 0 && o[r].push(a) : (o[r] = [a]) : (o[r] = a); } } var xi = new ve(\"\", {}, []), Si = [\"create\", \"activate\", \"update\", \"remove\", \"destroy\"]; function ki(e, t) { return ( e.key === t.key && e.asyncFactory === t.asyncFactory && ((e.tag === t.tag && e.isComment === t.isComment && i(e.data) === i(t.data) && Qi(e, t)) || (a(e.isAsyncPlaceholder) && n(t.asyncFactory.error))) ); } function Qi(e, t) { if (\"input\" !== e.tag) return !0; var r, n = i((r = e.data)) && i((r = r.attrs)) && r.type, a = i((r = t.data)) && i((r = r.attrs)) && r.type; return n === a || (li(n) && li(a)); } function Ti(e, t, r) { var n, a, o = {}; for (n = t; n this.subscribe({ next(t) { n.next && n.next(t), e.next(t); }, error(t) { n.error && n.error(t), e.error(t); }, complete() { n.complete && n.complete(), e.complete(); }, start(e) { n.start && n.start(e); }, }) ); } forEach(e) { return new Promise((t, r) => { if (\"function\" !== typeof e) return void r(new TypeError(e + \" is not a function\")); function n() { i.unsubscribe(), t(void 0); } const i = this.subscribe({ next(t) { try { e(t, n); } catch (a) { r(a), i.unsubscribe(); } }, error(e) { r(e); }, complete() { t(void 0); }, }); }); } map(e) { if (\"function\" !== typeof e) throw new TypeError(e + \" is not a function\"); const t = l(this); return new t((t) => this.subscribe({ next(r) { let n = r; try { n = e(r); } catch (i) { return t.error(i); } t.next(n); }, error(e) { t.error(e); }, complete() { t.complete(); }, }) ); } filter(e) { if (\"function\" !== typeof e) throw new TypeError(e + \" is not a function\"); const t = l(this); return new t((t) => this.subscribe({ next(r) { try { if (!e(r)) return; } catch (n) { return t.error(n); } t.next(r); }, error(e) { t.error(e); }, complete() { t.complete(); }, }) ); } reduce(e, t) { if (\"function\" !== typeof e) throw new TypeError(e + \" is not a function\"); const r = l(this), n = arguments.length > 1; let i = !1, a = t; return new r((t) => this.subscribe({ next(r) { const o = !i; if (((i = !0), !o || n)) try { a = e(a, r); } catch (s) { return t.error(s); } else a = r; }, error(e) { t.error(e); }, complete() { if (!i && !n) return t.error( new TypeError(\"Cannot reduce an empty sequence\") ); t.next(a), t.complete(); }, }) ); } concat(...e) { const t = l(this); return new t((r) => { let n, i = 0; function a(o) { n = o.subscribe({ next(e) { r.next(e); }, error(e) { r.error(e); }, complete() { i === e.length ? ((n = void 0), r.complete()) : a(t.from(e[i++])); }, }); } return ( a(this), () => { n && (n.unsubscribe(), (n = void 0)); } ); }); } flatMap(e) { if (\"function\" !== typeof e) throw new TypeError(e + \" is not a function\"); const t = l(this); return new t((r) => { const n = [], i = this.subscribe({ next(i) { let o; if (e) try { o = e(i); } catch (u) { return r.error(u); } else o = i; const s = t.from(o).subscribe({ next(e) { r.next(e); }, error(e) { r.error(e); }, complete() { const e = n.indexOf(s); e >= 0 && n.splice(e, 1), a(); }, }); n.push(s); }, error(e) { r.error(e); }, complete() { a(); }, }); function a() { i.closed && 0 === n.length && r.complete(); } return () => { n.forEach((e) => e.unsubscribe()), i.unsubscribe(); }; }); } [(Symbol.observable, s)]() { return this; } static from(e) { const t = \"function\" === typeof this ? this : I; if (null == e) throw new TypeError(e + \" is not an object\"); const r = c(e, s); if (r) { const n = r.call(e); if (Object(n) !== n) throw new TypeError(n + \" is not an object\"); return f(n) && n.constructor === t ? n : new t((e) => n.subscribe(e)); } if (i(\"iterator\")) { const r = c(e, o); if (r) return new t((t) => { d(() => { if (!t.closed) { for (const n of r.call(e)) if ((t.next(n), t.closed)) return; t.complete(); } }); }); } if (Array.isArray(e)) return new t((t) => { d(() => { if (!t.closed) { for (const r of e) if ((t.next(r), t.closed)) return; t.complete(); } }); }); throw new TypeError(e + \" is not observable\"); } static of(...e) { const t = \"function\" === typeof this ? this : I; return new t((t) => { d(() => { if (!t.closed) { for (const r of e) if ((t.next(r), t.closed)) return; t.complete(); } }); }); } static get [u]() { return this; } } n() && Object.defineProperty(I, Symbol(\"extensions\"), { value: { symbol: s, hostReportError: h }, configurable: !0, }); t[\"a\"] = I; }, \"2f9a\": function (e, t) { e.exports = function () {}; }, \"301c\": function (e, t, r) { r(\"e198\")(\"asyncIterator\"); }, 3022: function (e, t, r) { (function (e) { var n = Object.getOwnPropertyDescriptors || function (e) { for (var t = Object.keys(e), r = {}, n = 0; n < t.length; n++) r[t[n]] = Object.getOwnPropertyDescriptor(e, t[n]); return r; }, i = /%[sdj%]/g; (t.format = function (e) { if (!E(e)) { for (var t = [], r = 0; r < arguments.length; r++) t.push(s(arguments[r])); return t.join(\" \"); } r = 1; for ( var n = arguments, a = n.length, o = String(e).replace(i, function (e) { if (\"%%\" === e) return \"%\"; if (r >= a) return e; switch (e) { case \"%s\": return String(n[r++]); case \"%d\": return Number(n[r++]); case \"%j\": try { return JSON.stringify(n[r++]); } catch (t) { return \"[Circular]\"; } default: return e; } }), u = n[r]; r < a; u = n[++r] ) v(u) || !B(u) ? (o += \" \" + u) : (o += \" \" + s(u)); return o; }), (t.deprecate = function (r, n) { if (\"undefined\" !== typeof e && !0 === e.noDeprecation) return r; if (\"undefined\" === typeof e) return function () { return t.deprecate(r, n).apply(this, arguments); }; var i = !1; function a() { if (!i) { if (e.throwDeprecation) throw new Error(n); e.traceDeprecation ? console.trace(n) : console.error(n), (i = !0); } return r.apply(this, arguments); } return a; }); var a, o = {}; function s(e, r) { var n = { seen: [], stylize: c }; return ( arguments.length >= 3 && (n.depth = arguments[2]), arguments.length >= 4 && (n.colors = arguments[3]), b(r) ? (n.showHidden = r) : r && t._extend(n, r), C(n.showHidden) && (n.showHidden = !1), C(n.depth) && (n.depth = 2), C(n.colors) && (n.colors = !1), C(n.customInspect) && (n.customInspect = !0), n.colors && (n.stylize = u), f(n, e, n.depth) ); } function u(e, t) { var r = s.styles[t]; return r ? \"\u001b[\" + s.colors[r][0] + \"m\" + e + \"\u001b[\" + s.colors[r][1] + \"m\" : e; } function c(e, t) { return e; } function l(e) { var t = {}; return ( e.forEach(function (e, r) { t[e] = !0; }), t ); } function f(e, r, n) { if ( e.customInspect && r && k(r.inspect) && r.inspect !== t.inspect && (!r.constructor || r.constructor.prototype !== r) ) { var i = r.inspect(n, e); return E(i) || (i = f(e, i, n)), i; } var a = h(e, r); if (a) return a; var o = Object.keys(r), s = l(o); if ( (e.showHidden && (o = Object.getOwnPropertyNames(r)), S(r) && (o.indexOf(\"message\") >= 0 || o.indexOf(\"description\") >= 0)) ) return d(r); if (0 === o.length) { if (k(r)) { var u = r.name ? \": \" + r.name : \"\"; return e.stylize(\"[Function\" + u + \"]\", \"special\"); } if (_(r)) return e.stylize(RegExp.prototype.toString.call(r), \"regexp\"); if (x(r)) return e.stylize(Date.prototype.toString.call(r), \"date\"); if (S(r)) return d(r); } var c, b = \"\", v = !1, y = [\"{\", \"}\"]; if ((m(r) && ((v = !0), (y = [\"[\", \"]\"])), k(r))) { var I = r.name ? \": \" + r.name : \"\"; b = \" [Function\" + I + \"]\"; } return ( _(r) && (b = \" \" + RegExp.prototype.toString.call(r)), x(r) && (b = \" \" + Date.prototype.toUTCString.call(r)), S(r) && (b = \" \" + d(r)), 0 !== o.length || (v && 0 != r.length) ? n < 0 ? _(r) ? e.stylize(RegExp.prototype.toString.call(r), \"regexp\") : e.stylize(\"[Object]\", \"special\") : (e.seen.push(r), (c = v ? A(e, r, n, s, o) : o.map(function (t) { return p(e, r, n, s, t, v); })), e.seen.pop(), g(c, b, y)) : y[0] + b + y[1] ); } function h(e, t) { if (C(t)) return e.stylize(\"undefined\", \"undefined\"); if (E(t)) { var r = \"'\" + JSON.stringify(t) .replace(/^\"|\"$/g, \"\") .replace(/'/g, \"\\\\'\") .replace(/\\\\\"/g, '\"') + \"'\"; return e.stylize(r, \"string\"); } return I(t) ? e.stylize(\"\" + t, \"number\") : b(t) ? e.stylize(\"\" + t, \"boolean\") : v(t) ? e.stylize(\"null\", \"null\") : void 0; } function d(e) { return \"[\" + Error.prototype.toString.call(e) + \"]\"; } function A(e, t, r, n, i) { for (var a = [], o = 0, s = t.length; o < s; ++o) O(t, String(o)) ? a.push(p(e, t, r, n, String(o), !0)) : a.push(\"\"); return ( i.forEach(function (i) { i.match(/^\\d+$/) || a.push(p(e, t, r, n, i, !0)); }), a ); } function p(e, t, r, n, i, a) { var o, s, u; if ( ((u = Object.getOwnPropertyDescriptor(t, i) || { value: t[i] }), u.get ? (s = u.set ? e.stylize(\"[Getter/Setter]\", \"special\") : e.stylize(\"[Getter]\", \"special\")) : u.set && (s = e.stylize(\"[Setter]\", \"special\")), O(n, i) || (o = \"[\" + i + \"]\"), s || (e.seen.indexOf(u.value) < 0 ? ((s = v(r) ? f(e, u.value, null) : f(e, u.value, r - 1)), s.indexOf(\"\\n\") > -1 && (s = a ? s .split(\"\\n\") .map(function (e) { return \" \" + e; }) .join(\"\\n\") .substr(2) : \"\\n\" + s .split(\"\\n\") .map(function (e) { return \" \" + e; }) .join(\"\\n\"))) : (s = e.stylize(\"[Circular]\", \"special\"))), C(o)) ) { if (a && i.match(/^\\d+$/)) return s; (o = JSON.stringify(\"\" + i)), o.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/) ? ((o = o.substr(1, o.length - 2)), (o = e.stylize(o, \"name\"))) : ((o = o .replace(/'/g, \"\\\\'\") .replace(/\\\\\"/g, '\"') .replace(/(^\"|\"$)/g, \"'\")), (o = e.stylize(o, \"string\"))); } return o + \": \" + s; } function g(e, t, r) { var n = e.reduce(function (e, t) { return ( t.indexOf(\"\\n\") >= 0 && 0, e + t.replace(/\\u001b\\[\\d\\d?m/g, \"\").length + 1 ); }, 0); return n > 60 ? r[0] + (\"\" === t ? \"\" : t + \"\\n \") + \" \" + e.join(\",\\n \") + \" \" + r[1] : r[0] + t + \" \" + e.join(\", \") + \" \" + r[1]; } function m(e) { return Array.isArray(e); } function b(e) { return \"boolean\" === typeof e; } function v(e) { return null === e; } function y(e) { return null == e; } function I(e) { return \"number\" === typeof e; } function E(e) { return \"string\" === typeof e; } function w(e) { return \"symbol\" === typeof e; } function C(e) { return void 0 === e; } function _(e) { return B(e) && \"[object RegExp]\" === T(e); } function B(e) { return \"object\" === typeof e && null !== e; } function x(e) { return B(e) && \"[object Date]\" === T(e); } function S(e) { return B(e) && (\"[object Error]\" === T(e) || e instanceof Error); } function k(e) { return \"function\" === typeof e; } function Q(e) { return ( null === e || \"boolean\" === typeof e || \"number\" === typeof e || \"string\" === typeof e || \"symbol\" === typeof e || \"undefined\" === typeof e ); } function T(e) { return Object.prototype.toString.call(e); } function M(e) { return e < 10 ? \"0\" + e.toString(10) : e.toString(10); } (t.debuglog = function (r) { if ( (C(a) && (a = Object({ NODE_ENV: \"production\", BASE_URL: \"\" }).NODE_DEBUG || \"\"), (r = r.toUpperCase()), !o[r]) ) if (new RegExp(\"\\\\b\" + r + \"\\\\b\", \"i\").test(a)) { var n = e.pid; o[r] = function () { var e = t.format.apply(t, arguments); console.error(\"%s %d: %s\", r, n, e); }; } else o[r] = function () {}; return o[r]; }), (t.inspect = s), (s.colors = { bold: [1, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], white: [37, 39], grey: [90, 39], black: [30, 39], blue: [34, 39], cyan: [36, 39], green: [32, 39], magenta: [35, 39], red: [31, 39], yellow: [33, 39], }), (s.styles = { special: \"cyan\", number: \"yellow\", boolean: \"yellow\", undefined: \"grey\", null: \"bold\", string: \"green\", date: \"magenta\", regexp: \"red\", }), (t.isArray = m), (t.isBoolean = b), (t.isNull = v), (t.isNullOrUndefined = y), (t.isNumber = I), (t.isString = E), (t.isSymbol = w), (t.isUndefined = C), (t.isRegExp = _), (t.isObject = B), (t.isDate = x), (t.isError = S), (t.isFunction = k), (t.isPrimitive = Q), (t.isBuffer = r(\"d60a\")); var D = [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", ]; function R() { var e = new Date(), t = [M(e.getHours()), M(e.getMinutes()), M(e.getSeconds())].join( \":\" ); return [e.getDate(), D[e.getMonth()], t].join(\" \"); } function O(e, t) { return Object.prototype.hasOwnProperty.call(e, t); } (t.log = function () { console.log(\"%s - %s\", R(), t.format.apply(t, arguments)); }), (t.inherits = r(\"28a0\")), (t._extend = function (e, t) { if (!t || !B(t)) return e; var r = Object.keys(t), n = r.length; while (n--) e[r[n]] = t[r[n]]; return e; }); var N = \"undefined\" !== typeof Symbol ? Symbol(\"util.promisify.custom\") : void 0; function F(e, t) { if (!e) { var r = new Error(\"Promise was rejected with a falsy value\"); (r.reason = e), (e = r); } return t(e); } function L(t) { if (\"function\" !== typeof t) throw new TypeError( 'The \"original\" argument must be of type Function' ); function r() { for (var r = [], n = 0; n < arguments.length; n++) r.push(arguments[n]); var i = r.pop(); if (\"function\" !== typeof i) throw new TypeError(\"The last argument must be of type Function\"); var a = this, o = function () { return i.apply(a, arguments); }; t.apply(this, r).then( function (t) { e.nextTick(o, null, t); }, function (t) { e.nextTick(F, t, o); } ); } return ( Object.setPrototypeOf(r, Object.getPrototypeOf(t)), Object.defineProperties(r, n(t)), r ); } (t.promisify = function (e) { if (\"function\" !== typeof e) throw new TypeError( 'The \"original\" argument must be of type Function' ); if (N && e[N]) { var t = e[N]; if (\"function\" !== typeof t) throw new TypeError( 'The \"util.promisify.custom\" argument must be of type Function' ); return ( Object.defineProperty(t, N, { value: t, enumerable: !1, writable: !1, configurable: !0, }), t ); } function t() { for ( var t, r, n = new Promise(function (e, n) { (t = e), (r = n); }), i = [], a = 0; a < arguments.length; a++ ) i.push(arguments[a]); i.push(function (e, n) { e ? r(e) : t(n); }); try { e.apply(this, i); } catch (o) { r(o); } return n; } return ( Object.setPrototypeOf(t, Object.getPrototypeOf(e)), N && Object.defineProperty(t, N, { value: t, enumerable: !1, writable: !1, configurable: !0, }), Object.defineProperties(t, n(e)) ); }), (t.promisify.custom = N), (t.callbackify = L); }).call(this, r(\"4362\")); }, \"30c8\": function (e, t, r) { (function (t) { function r(e) { (this.buffer = e.data), (this.width = e.width), (this.height = e.height), (this.extraBytes = this.width % 4), (this.rgbSize = this.height * (3 * this.width + this.extraBytes)), (this.headerInfoSize = 40), (this.data = []), (this.flag = \"BM\"), (this.reserved = 0), (this.offset = 54), (this.fileSize = this.rgbSize + this.offset), (this.planes = 1), (this.bitPP = 24), (this.compress = 0), (this.hr = 0), (this.vr = 0), (this.colors = 0), (this.importantColors = 0); } (r.prototype.encode = function () { var e = new t(this.offset + this.rgbSize); (this.pos = 0), e.write(this.flag, this.pos, 2), (this.pos += 2), e.writeUInt32LE(this.fileSize, this.pos), (this.pos += 4), e.writeUInt32LE(this.reserved, this.pos), (this.pos += 4), e.writeUInt32LE(this.offset, this.pos), (this.pos += 4), e.writeUInt32LE(this.headerInfoSize, this.pos), (this.pos += 4), e.writeUInt32LE(this.width, this.pos), (this.pos += 4), e.writeInt32LE(-this.height, this.pos), (this.pos += 4), e.writeUInt16LE(this.planes, this.pos), (this.pos += 2), e.writeUInt16LE(this.bitPP, this.pos), (this.pos += 2), e.writeUInt32LE(this.compress, this.pos), (this.pos += 4), e.writeUInt32LE(this.rgbSize, this.pos), (this.pos += 4), e.writeUInt32LE(this.hr, this.pos), (this.pos += 4), e.writeUInt32LE(this.vr, this.pos), (this.pos += 4), e.writeUInt32LE(this.colors, this.pos), (this.pos += 4), e.writeUInt32LE(this.importantColors, this.pos), (this.pos += 4); for ( var r = 0, n = 3 * this.width + this.extraBytes, i = 0; i < this.height; i++ ) { for (var a = 0; a < this.width; a++) { var o = this.pos + i * n + 3 * a; r++, (e[o] = this.buffer[r++]), (e[o + 1] = this.buffer[r++]), (e[o + 2] = this.buffer[r++]); } if (this.extraBytes > 0) { var s = this.pos + i * n + 3 * this.width; e.fill(0, s, s + this.extraBytes); } } return e; }), (e.exports = function (e, t) { \"undefined\" === typeof t && (t = 100); var n = new r(e), i = n.encode(); return { data: i, width: e.width, height: e.height }; }); }).call(this, r(\"1c35\").Buffer); }, \"31c8\": function (module, exports, __webpack_require__) { \"use strict\"; (function (Buffer) { const Token = __webpack_require__(\"3a92\"), strtok3 = __webpack_require__(\"f682\"), { stringToBytes: stringToBytes, tarHeaderChecksumMatches: tarHeaderChecksumMatches, uint32SyncSafeToken: uint32SyncSafeToken, } = __webpack_require__(\"aa60\"), supported = __webpack_require__(\"8104\"), minimumBytes = 4100; async function fromStream(e) { const t = await strtok3.fromStream(e); try { return await fromTokenizer(t); } finally { await t.close(); } } async function fromBuffer(e) { if ( !( e instanceof Uint8Array || e instanceof ArrayBuffer || Buffer.isBuffer(e) ) ) throw new TypeError( `Expected the \\`input\\` argument to be of type \\`Uint8Array\\` or \\`Buffer\\` or \\`ArrayBuffer\\`, got \\`${typeof e}\\`` ); const t = e instanceof Buffer ? e : Buffer.from(e); if (!(t && t.length > 1)) return; const r = strtok3.fromBuffer(t); return fromTokenizer(r); } function _check(e, t, r) { r = { offset: 0, ...r }; for (const [n, i] of t.entries()) if (r.mask) { if (i !== (r.mask[n] & e[n + r.offset])) return !1; } else if (i !== e[n + r.offset]) return !1; return !0; } async function fromTokenizer(e) { try { return _fromTokenizer(e); } catch (t) { if (!(t instanceof strtok3.EndOfStreamError)) throw t; } } async function _fromTokenizer(e) { let t = Buffer.alloc(minimumBytes); const r = 12, n = (e, r) => _check(t, e, r), i = (e, t) => n(stringToBytes(e), t); if ( (e.fileInfo.size || (e.fileInfo.size = Number.MAX_SAFE_INTEGER), await e.peekBuffer(t, { length: r, mayBeLess: !0 }), n([66, 77])) ) return { ext: \"bmp\", mime: \"image/bmp\" }; if (n([11, 119])) return { ext: \"ac3\", mime: \"audio/vnd.dolby.dd-raw\" }; if (n([120, 1])) return { ext: \"dmg\", mime: \"application/x-apple-diskimage\" }; if (n([77, 90])) return { ext: \"exe\", mime: \"application/x-msdownload\" }; if (n([37, 33])) return ( await e.peekBuffer(t, { length: 24, mayBeLess: !0 }), i(\"PS-Adobe-\", { offset: 2 }) && i(\" EPSF-\", { offset: 14 }) ? { ext: \"eps\", mime: \"application/eps\" } : { ext: \"ps\", mime: \"application/postscript\" } ); if (n([31, 160]) || n([31, 157])) return { ext: \"Z\", mime: \"application/x-compress\" }; if (n([255, 216, 255])) return { ext: \"jpg\", mime: \"image/jpeg\" }; if (n([73, 73, 188])) return { ext: \"jxr\", mime: \"image/vnd.ms-photo\" }; if (n([31, 139, 8])) return { ext: \"gz\", mime: \"application/gzip\" }; if (n([66, 90, 104])) return { ext: \"bz2\", mime: \"application/x-bzip2\" }; if (i(\"ID3\")) { await e.ignore(6); const t = await e.readToken(uint32SyncSafeToken); return e.position + t > e.fileInfo.size ? { ext: \"mp3\", mime: \"audio/mpeg\" } : (await e.ignore(t), fromTokenizer(e)); } if (i(\"MP+\")) return { ext: \"mpc\", mime: \"audio/x-musepack\" }; if ((67 === t[0] || 70 === t[0]) && n([87, 83], { offset: 1 })) return { ext: \"swf\", mime: \"application/x-shockwave-flash\" }; if (n([71, 73, 70])) return { ext: \"gif\", mime: \"image/gif\" }; if (i(\"FLIF\")) return { ext: \"flif\", mime: \"image/flif\" }; if (i(\"8BPS\")) return { ext: \"psd\", mime: \"image/vnd.adobe.photoshop\" }; if (i(\"WEBP\", { offset: 8 })) return { ext: \"webp\", mime: \"image/webp\" }; if (i(\"MPCK\")) return { ext: \"mpc\", mime: \"audio/x-musepack\" }; if (i(\"FORM\")) return { ext: \"aif\", mime: \"audio/aiff\" }; if (i(\"icns\", { offset: 0 })) return { ext: \"icns\", mime: \"image/icns\" }; if (n([80, 75, 3, 4])) { try { while (e.position + 30 < e.fileInfo.size) { await e.readBuffer(t, { length: 30 }); const r = { compressedSize: t.readUInt32LE(18), uncompressedSize: t.readUInt32LE(22), filenameLength: t.readUInt16LE(26), extraFieldLength: t.readUInt16LE(28), }; if ( ((r.filename = await e.readToken( new Token.StringType(r.filenameLength, \"utf-8\") )), await e.ignore(r.extraFieldLength), \"META-INF/mozilla.rsa\" === r.filename) ) return { ext: \"xpi\", mime: \"application/x-xpinstall\" }; if ( r.filename.endsWith(\".rels\") || r.filename.endsWith(\".xml\") ) { const e = r.filename.split(\"/\")[0]; switch (e) { case \"_rels\": break; case \"word\": return { ext: \"docx\", mime: \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\", }; case \"ppt\": return { ext: \"pptx\", mime: \"application/vnd.openxmlformats-officedocument.presentationml.presentation\", }; case \"xl\": return { ext: \"xlsx\", mime: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\", }; default: break; } } if (r.filename.startsWith(\"xl/\")) return { ext: \"xlsx\", mime: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\", }; if ( r.filename.startsWith(\"3D/\") && r.filename.endsWith(\".model\") ) return { ext: \"3mf\", mime: \"model/3mf\" }; if ( \"mimetype\" === r.filename && r.compressedSize === r.uncompressedSize ) { const t = await e.readToken( new Token.StringType(r.compressedSize, \"utf-8\") ); switch (t) { case \"application/epub+zip\": return { ext: \"epub\", mime: \"application/epub+zip\" }; case \"application/vnd.oasis.opendocument.text\": return { ext: \"odt\", mime: \"application/vnd.oasis.opendocument.text\", }; case \"application/vnd.oasis.opendocument.spreadsheet\": return { ext: \"ods\", mime: \"application/vnd.oasis.opendocument.spreadsheet\", }; case \"application/vnd.oasis.opendocument.presentation\": return { ext: \"odp\", mime: \"application/vnd.oasis.opendocument.presentation\", }; default: } } if (0 === r.compressedSize) { let r = -1; while (r < 0 && e.position < e.fileInfo.size) await e.peekBuffer(t, { mayBeLess: !0 }), (r = t.indexOf(\"504B0304\", 0, \"hex\")), await e.ignore(r >= 0 ? r : t.length); } else await e.ignore(r.compressedSize); } } catch (l) { if (!(l instanceof strtok3.EndOfStreamError)) throw l; } return { ext: \"zip\", mime: \"application/zip\" }; } if (i(\"OggS\")) { await e.ignore(28); const t = Buffer.alloc(8); return ( await e.readBuffer(t), _check(t, [79, 112, 117, 115, 72, 101, 97, 100]) ? { ext: \"opus\", mime: \"audio/opus\" } : _check(t, [128, 116, 104, 101, 111, 114, 97]) ? { ext: \"ogv\", mime: \"video/ogg\" } : _check(t, [1, 118, 105, 100, 101, 111, 0]) ? { ext: \"ogm\", mime: \"video/ogg\" } : _check(t, [127, 70, 76, 65, 67]) ? { ext: \"oga\", mime: \"audio/ogg\" } : _check(t, [83, 112, 101, 101, 120, 32, 32]) ? { ext: \"spx\", mime: \"audio/ogg\" } : _check(t, [1, 118, 111, 114, 98, 105, 115]) ? { ext: \"ogg\", mime: \"audio/ogg\" } : { ext: \"ogx\", mime: \"application/ogg\" } ); } if ( n([80, 75]) && (3 === t[2] || 5 === t[2] || 7 === t[2]) && (4 === t[3] || 6 === t[3] || 8 === t[3]) ) return { ext: \"zip\", mime: \"application/zip\" }; if (i(\"ftyp\", { offset: 4 }) && 0 !== (96 & t[8])) { const e = t.toString(\"binary\", 8, 12).replace(\"\\0\", \" \").trim(); switch (e) { case \"avif\": return { ext: \"avif\", mime: \"image/avif\" }; case \"mif1\": return { ext: \"heic\", mime: \"image/heif\" }; case \"msf1\": return { ext: \"heic\", mime: \"image/heif-sequence\" }; case \"heic\": case \"heix\": return { ext: \"heic\", mime: \"image/heic\" }; case \"hevc\": case \"hevx\": return { ext: \"heic\", mime: \"image/heic-sequence\" }; case \"qt\": return { ext: \"mov\", mime: \"video/quicktime\" }; case \"M4V\": case \"M4VH\": case \"M4VP\": return { ext: \"m4v\", mime: \"video/x-m4v\" }; case \"M4P\": return { ext: \"m4p\", mime: \"video/mp4\" }; case \"M4B\": return { ext: \"m4b\", mime: \"audio/mp4\" }; case \"M4A\": return { ext: \"m4a\", mime: \"audio/x-m4a\" }; case \"F4V\": return { ext: \"f4v\", mime: \"video/mp4\" }; case \"F4P\": return { ext: \"f4p\", mime: \"video/mp4\" }; case \"F4A\": return { ext: \"f4a\", mime: \"audio/mp4\" }; case \"F4B\": return { ext: \"f4b\", mime: \"audio/mp4\" }; case \"crx\": return { ext: \"cr3\", mime: \"image/x-canon-cr3\" }; default: return e.startsWith(\"3g\") ? e.startsWith(\"3g2\") ? { ext: \"3g2\", mime: \"video/3gpp2\" } : { ext: \"3gp\", mime: \"video/3gpp\" } : { ext: \"mp4\", mime: \"video/mp4\" }; } } if (i(\"MThd\")) return { ext: \"mid\", mime: \"audio/midi\" }; if ( i(\"wOFF\") && (n([0, 1, 0, 0], { offset: 4 }) || i(\"OTTO\", { offset: 4 })) ) return { ext: \"woff\", mime: \"font/woff\" }; if ( i(\"wOF2\") && (n([0, 1, 0, 0], { offset: 4 }) || i(\"OTTO\", { offset: 4 })) ) return { ext: \"woff2\", mime: \"font/woff2\" }; if (n([212, 195, 178, 161]) || n([161, 178, 195, 212])) return { ext: \"pcap\", mime: \"application/vnd.tcpdump.pcap\" }; if (i(\"DSD \")) return { ext: \"dsf\", mime: \"audio/x-dsf\" }; if (i(\"LZIP\")) return { ext: \"lz\", mime: \"application/x-lzip\" }; if (i(\"fLaC\")) return { ext: \"flac\", mime: \"audio/x-flac\" }; if (n([66, 80, 71, 251])) return { ext: \"bpg\", mime: \"image/bpg\" }; if (i(\"wvpk\")) return { ext: \"wv\", mime: \"audio/wavpack\" }; if (i(\"%PDF\")) { await e.ignore(1350); const t = 10485760, r = Buffer.alloc(Math.min(t, e.fileInfo.size)); return ( await e.readBuffer(r, { mayBeLess: !0 }), r.includes(Buffer.from(\"AIPrivateData\")) ? { ext: \"ai\", mime: \"application/postscript\" } : { ext: \"pdf\", mime: \"application/pdf\" } ); } if (n([0, 97, 115, 109])) return { ext: \"wasm\", mime: \"application/wasm\" }; if (n([73, 73, 42, 0])) return i(\"CR\", { offset: 8 }) ? { ext: \"cr2\", mime: \"image/x-canon-cr2\" } : n([28, 0, 254, 0], { offset: 8 }) || n([31, 0, 11, 0], { offset: 8 }) ? { ext: \"nef\", mime: \"image/x-nikon-nef\" } : n([8, 0, 0, 0], { offset: 4 }) && (n([45, 0, 254, 0], { offset: 8 }) || n([39, 0, 254, 0], { offset: 8 })) ? { ext: \"dng\", mime: \"image/x-adobe-dng\" } : ((t = Buffer.alloc(24)), await e.peekBuffer(t), (n([16, 251, 134, 1], { offset: 4 }) || n([8, 0, 0, 0], { offset: 4 })) && n([0, 254, 0, 4, 0, 1, 0, 0, 0, 1, 0, 0, 0, 3, 1], { offset: 9, }) ? { ext: \"arw\", mime: \"image/x-sony-arw\" } : { ext: \"tif\", mime: \"image/tiff\" }); if (n([77, 77, 0, 42])) return { ext: \"tif\", mime: \"image/tiff\" }; if (i(\"MAC \")) return { ext: \"ape\", mime: \"audio/ape\" }; if (n([26, 69, 223, 163])) { async function a() { const t = await e.peekNumber(Token.UINT8); let r = 128, n = 0; while (0 === (t & r)) ++n, (r >>= 1); const i = Buffer.alloc(n + 1); return await e.readBuffer(i), i; } async function o() { const e = await a(), t = await a(); t[0] ^= 128 >> (t.length - 1); const r = Math.min(6, t.length); return { id: e.readUIntBE(0, e.length), len: t.readUIntBE(t.length - r, r), }; } async function s(t, r) { while (r > 0) { const t = await o(); if (17026 === t.id) return e.readToken(new Token.StringType(t.len, \"utf-8\")); await e.ignore(t.len), --r; } } const t = await o(), r = await s(1, t.len); switch (r) { case \"webm\": return { ext: \"webm\", mime: \"video/webm\" }; case \"matroska\": return { ext: \"mkv\", mime: \"video/x-matroska\" }; default: return; } } if (n([82, 73, 70, 70])) { if (n([65, 86, 73], { offset: 8 })) return { ext: \"avi\", mime: \"video/vnd.avi\" }; if (n([87, 65, 86, 69], { offset: 8 })) return { ext: \"wav\", mime: \"audio/vnd.wave\" }; if (n([81, 76, 67, 77], { offset: 8 })) return { ext: \"qcp\", mime: \"audio/qcelp\" }; } if (i(\"SQLi\")) return { ext: \"sqlite\", mime: \"application/x-sqlite3\" }; if (n([78, 69, 83, 26])) return { ext: \"nes\", mime: \"application/x-nintendo-nes-rom\" }; if (i(\"Cr24\")) return { ext: \"crx\", mime: \"application/x-google-chrome-extension\", }; if (i(\"MSCF\") || i(\"ISc(\")) return { ext: \"cab\", mime: \"application/vnd.ms-cab-compressed\" }; if (n([237, 171, 238, 219])) return { ext: \"rpm\", mime: \"application/x-rpm\" }; if (n([197, 208, 211, 198])) return { ext: \"eps\", mime: \"application/eps\" }; if (n([40, 181, 47, 253])) return { ext: \"zst\", mime: \"application/zstd\" }; if (n([79, 84, 84, 79, 0])) return { ext: \"otf\", mime: \"font/otf\" }; if (i(\"#!AMR\")) return { ext: \"amr\", mime: \"audio/amr\" }; if (i(\"{\\\\rtf\")) return { ext: \"rtf\", mime: \"application/rtf\" }; if (n([70, 76, 86, 1])) return { ext: \"flv\", mime: \"video/x-flv\" }; if (i(\"IMPM\")) return { ext: \"it\", mime: \"audio/x-it\" }; if ( i(\"-lh0-\", { offset: 2 }) || i(\"-lh1-\", { offset: 2 }) || i(\"-lh2-\", { offset: 2 }) || i(\"-lh3-\", { offset: 2 }) || i(\"-lh4-\", { offset: 2 }) || i(\"-lh5-\", { offset: 2 }) || i(\"-lh6-\", { offset: 2 }) || i(\"-lh7-\", { offset: 2 }) || i(\"-lzs-\", { offset: 2 }) || i(\"-lz4-\", { offset: 2 }) || i(\"-lz5-\", { offset: 2 }) || i(\"-lhd-\", { offset: 2 }) ) return { ext: \"lzh\", mime: \"application/x-lzh-compressed\" }; if (n([0, 0, 1, 186])) { if (n([33], { offset: 4, mask: [241] })) return { ext: \"mpg\", mime: \"video/MP1S\" }; if (n([68], { offset: 4, mask: [196] })) return { ext: \"mpg\", mime: \"video/MP2P\" }; } if (i(\"ITSF\")) return { ext: \"chm\", mime: \"application/vnd.ms-htmlhelp\" }; if (n([253, 55, 122, 88, 90, 0])) return { ext: \"xz\", mime: \"application/x-xz\" }; if (i(\"= 1); return r > 0 ? r : 1; } function y(e, t, r, i, a) { if (r.interlaced) throw new o(\"writing interlaced GIFs is not supported\"); const s = b(t, r, i), u = { delay: r.delayCentisecs, disposal: r.disposalMethod, transparent: s.transparentIndex, }; a && (g(i), (u.palette = i.colors)); try { let t, i = e.getOutputBuffer(), a = e.getOutputBufferPosition(), o = !0; while (o) if ( ((t = e.addFrame( r.xOffset, r.yOffset, r.bitmap.width, r.bitmap.height, s.buffer, u )), (o = !1), t >= i.length - 1) ) { const t = new n(1.5 * i.length); i.copy(t), e.setOutputBuffer(t), e.setOutputBufferPosition(a), (i = t), (o = !0); } return i; } catch (c) { throw new o(c); } } t.GifCodec = f; }).call(this, r(\"4362\"), r(\"1c35\").Buffer); }, \"51f3\": function (e, t, r) { \"use strict\"; function n(e, t) { if (!e || !t || !e.length || !t.length) throw new Error(\"Bad alphabet\"); (this.srcAlphabet = e), (this.dstAlphabet = t); } (n.prototype.convert = function (e) { var t, r, n, i = {}, a = this.srcAlphabet.length, o = this.dstAlphabet.length, s = e.length, u = \"string\" === typeof e ? \"\" : []; if (!this.isValid(e)) throw new Error( 'Number \"' + e + '\" contains of non-alphabetic digits (' + this.srcAlphabet + \")\" ); if (this.srcAlphabet === this.dstAlphabet) return e; for (t = 0; t < s; t++) i[t] = this.srcAlphabet.indexOf(e[t]); do { for (r = 0, n = 0, t = 0; t < s; t++) (r = r * a + i[t]), r >= o ? ((i[n++] = parseInt(r / o, 10)), (r %= o)) : n > 0 && (i[n++] = 0); (s = n), (u = this.dstAlphabet.slice(r, r + 1).concat(u)); } while (0 !== n); return u; }), (n.prototype.isValid = function (e) { for (var t = 0; t < e.length; ++t) if (-1 === this.srcAlphabet.indexOf(e[t])) return !1; return !0; }), (e.exports = n); }, 5228: function (e, t, r) { var n = r(\"9832\"); function i() { return (0, eval)(\"this\"); } e.exports = { create: function (e, t) { if (((t = t || i()), e instanceof t.ArrayBuffer)) { var a = r(\"dbc1\"); return new n(new a(e, 0, e.byteLength, !0, t)); } var o = r(\"aebd\"); return new n(new o(e, 0, e.length, !0)); }, }; }, \"52ad\": function (e, t, r) { \"use strict\"; (function (e) { var n = r(\"4ea4\"); Object.defineProperty(t, \"__esModule\", { value: !0 }), (t[\"default\"] = void 0); var i = n(r(\"9523\")), a = n(r(\"8f44\")), o = r(\"2956\"), s = \"image/gif\", u = function () { return { mime: (0, i[\"default\"])({}, s, [\"gif\"]), constants: { MIME_GIF: s }, decoders: (0, i[\"default\"])({}, s, function (t) { var r = new a[\"default\"].GifReader(t), n = e.alloc(r.width * r.height * 4); return ( r.decodeAndBlitFrameRGBA(0, n), { data: n, width: r.width, height: r.height } ); }), encoders: (0, i[\"default\"])({}, s, function (e) { var t = new o.BitmapImage(e.bitmap); o.GifUtil.quantizeDekker(t, 256); var r = new o.GifFrame(t), n = new o.GifCodec(); return n.encodeGif([r], {}).then(function (e) { return e.buffer; }); }), }; }; t[\"default\"] = u; }).call(this, r(\"1c35\").Buffer); }, 5319: function (e, t, r) { \"use strict\"; var n = r(\"2ba4\"), i = r(\"c65b\"), a = r(\"e330\"), o = r(\"d784\"), s = r(\"d039\"), u = r(\"825a\"), c = r(\"1626\"), l = r(\"5926\"), f = r(\"50c4\"), h = r(\"577e\"), d = r(\"1d80\"), A = r(\"8aa5\"), p = r(\"dc4a\"), g = r(\"0cb2\"), m = r(\"14c3\"), b = r(\"b622\"), v = b(\"replace\"), y = Math.max, I = Math.min, E = a([].concat), w = a([].push), C = a(\"\".indexOf), _ = a(\"\".slice), B = function (e) { return void 0 === e ? e : String(e); }, x = (function () { return \"$0\" === \"a\".replace(/./, \"$0\"); })(), S = (function () { return !!/./[v] && \"\" === /./[v](\"a\", \"$0\"); })(), k = !s(function () { var e = /./; return ( (e.exec = function () { var e = []; return (e.groups = { a: \"7\" }), e; }), \"7\" !== \"\".replace(e, \"$\") ); }); o( \"replace\", function (e, t, r) { var a = S ? \"$\" : \"$0\"; return [ function (e, r) { var n = d(this), a = void 0 == e ? void 0 : p(e, v); return a ? i(a, e, n, r) : i(t, h(n), e, r); }, function (e, i) { var o = u(this), s = h(e); if (\"string\" == typeof i && -1 === C(i, a) && -1 === C(i, \"$ ADTS\"), (this.version = 2 === this.versionIndex ? 4 : 2), (this.container = \"ADTS/MPEG-\" + this.version); const r = o.getBitAllignedNumber(e, t + 2, 0, 2); (this.codec = \"AAC\"), (this.codecProfile = f.AudioObjectTypes[r]), c(\"MPEG-4 audio-codec=\" + this.codec); const n = o.getBitAllignedNumber(e, t + 2, 2, 4); (this.samplingRate = f.SamplingFrequencies[n]), c(\"sampling-rate=\" + this.samplingRate); const i = o.getBitAllignedNumber(e, t + 2, 7, 3); (this.mp4ChannelConfig = h[i]), c(\"channel-config=\" + this.mp4ChannelConfig.join(\"+\")), (this.frameLength = o.getBitAllignedNumber(e, t + 3, 6, 2) < 11); } calcBitrate() { if (0 === this.bitrateIndex || 15 === this.bitrateIndex) return; const e = `${Math.floor(this.version)}${this.layer}`; return d.bitrate_index[this.bitrateIndex][e]; } calcSamplingRate() { return 3 === this.sampRateFreqIndex ? null : d.sampling_rate_freq_index[this.version][ this.sampRateFreqIndex ]; } } (d.SyncByte1 = 255), (d.SyncByte2 = 224), (d.VersionID = [2.5, null, 2, 1]), (d.LayerDescription = [0, 3, 2, 1]), (d.ChannelMode = [\"stereo\", \"joint_stereo\", \"dual_channel\", \"mono\"]), (d.bitrate_index = { 1: { 11: 32, 12: 32, 13: 32, 21: 32, 22: 8, 23: 8 }, 2: { 11: 64, 12: 48, 13: 40, 21: 48, 22: 16, 23: 16 }, 3: { 11: 96, 12: 56, 13: 48, 21: 56, 22: 24, 23: 24 }, 4: { 11: 128, 12: 64, 13: 56, 21: 64, 22: 32, 23: 32 }, 5: { 11: 160, 12: 80, 13: 64, 21: 80, 22: 40, 23: 40 }, 6: { 11: 192, 12: 96, 13: 80, 21: 96, 22: 48, 23: 48 }, 7: { 11: 224, 12: 112, 13: 96, 21: 112, 22: 56, 23: 56 }, 8: { 11: 256, 12: 128, 13: 112, 21: 128, 22: 64, 23: 64 }, 9: { 11: 288, 12: 160, 13: 128, 21: 144, 22: 80, 23: 80 }, 10: { 11: 320, 12: 192, 13: 160, 21: 160, 22: 96, 23: 96 }, 11: { 11: 352, 12: 224, 13: 192, 21: 176, 22: 112, 23: 112 }, 12: { 11: 384, 12: 256, 13: 224, 21: 192, 22: 128, 23: 128 }, 13: { 11: 416, 12: 320, 13: 256, 21: 224, 22: 144, 23: 144 }, 14: { 11: 448, 12: 384, 13: 320, 21: 256, 22: 160, 23: 160 }, }), (d.sampling_rate_freq_index = { 1: { 0: 44100, 1: 48e3, 2: 32e3 }, 2: { 0: 22050, 1: 24e3, 2: 16e3 }, 2.5: { 0: 11025, 1: 12e3, 2: 8e3 }, }), (d.samplesInFrameTable = [ [0, 384, 1152, 1152], [0, 384, 1152, 576], ]); const A = { len: 4, get: (e, t) => new d(e, t) }; function p(e) { return \"V\" + Math.floor((100 - e) / 10); } class g extends s.AbstractID3Parser { constructor() { super(...arguments), (this.frameCount = 0), (this.syncFrameCount = -1), (this.countSkipFrameData = 0), (this.totalDataLength = 0), (this.bitrates = []), (this.calculateEofDuration = !1), (this.buf_frame_header = e.alloc(4)), (this.syncPeek = { buf: e.alloc(l), len: 0 }); } async _parse() { this.metadata.setFormat(\"lossless\", !1); try { let e = !1; while (!e) await this.sync(), (e = await this.parseCommonMpegHeader()); } catch (e) { if (!(e instanceof i.EndOfStreamError)) throw e; if ((c(\"End-of-stream\"), this.calculateEofDuration)) { const e = this.frameCount * this.samplesPerFrame; this.metadata.setFormat(\"numberOfSamples\", e); const t = e / this.metadata.format.sampleRate; c(`Calculate duration at EOF: ${t} sec.`, t), this.metadata.setFormat(\"duration\", t); } } } finalize() { const e = this.metadata.format, t = this.metadata.native.hasOwnProperty(\"ID3v1\"); if (e.duration && this.tokenizer.fileInfo.size) { const r = this.tokenizer.fileInfo.size - this.mpegOffset - (t ? 128 : 0); e.codecProfile && \"V\" === e.codecProfile[0] && this.metadata.setFormat(\"bitrate\", (8 * r) / e.duration); } else if ( this.tokenizer.fileInfo.size && \"CBR\" === e.codecProfile ) { const r = this.tokenizer.fileInfo.size - this.mpegOffset - (t ? 128 : 0), n = Math.round(r / this.frame_size) * this.samplesPerFrame; this.metadata.setFormat(\"numberOfSamples\", n); const i = n / e.sampleRate; c(\"Calculate CBR duration based on file size: %s\", i), this.metadata.setFormat(\"duration\", i); } } async sync() { let e = !1; while (1) { let t = 0; if ( ((this.syncPeek.len = await this.tokenizer.peekBuffer( this.syncPeek.buf, { length: l, mayBeLess: !0 } )), this.syncPeek.len 3 && void 0 !== arguments[3] ? arguments[3] : {}, s = arguments.length > 4 ? arguments[4] : void 0; if ( (\"function\" === typeof n && ((s = n), (n = {})), !(e instanceof this.constructor)) ) return i.throwError.call(this, \"The source must be a Jimp image\", s); if (\"number\" !== typeof t || \"number\" !== typeof r) return i.throwError.call(this, \"x and y must be numbers\", s); var u = n, c = u.mode, l = u.opacitySource, f = u.opacityDest; c || (c = a.BLEND_SOURCE_OVER), (\"number\" !== typeof l || l < 0 || l > 1) && (l = 1), (\"number\" !== typeof f || f < 0 || f > 1) && (f = 1); var h = o[c]; (t = Math.round(t)), (r = Math.round(r)); var d = this; return ( 1 !== f && d.opacity(f), e.scanQuiet( 0, 0, e.bitmap.width, e.bitmap.height, function (e, n, i) { var o = d.getPixelIndex(t + e, r + n, a.EDGE_CROP), s = h( { r: this.bitmap.data[i + 0] / 255, g: this.bitmap.data[i + 1] / 255, b: this.bitmap.data[i + 2] / 255, a: this.bitmap.data[i + 3] / 255, }, { r: d.bitmap.data[o + 0] / 255, g: d.bitmap.data[o + 1] / 255, b: d.bitmap.data[o + 2] / 255, a: d.bitmap.data[o + 3] / 255, }, l ); (d.bitmap.data[o + 0] = this.constructor.limit255(255 * s.r)), (d.bitmap.data[o + 1] = this.constructor.limit255(255 * s.g)), (d.bitmap.data[o + 2] = this.constructor.limit255(255 * s.b)), (d.bitmap.data[o + 3] = this.constructor.limit255(255 * s.a)); } ), (0, i.isNodePattern)(s) && s.call(this, null, this), this ); } }, \"5e77\": function (e, t, r) { var n = r(\"83ab\"), i = r(\"1a2d\"), a = Function.prototype, o = n && Object.getOwnPropertyDescriptor, s = i(a, \"name\"), u = s && \"something\" === function () {}.name, c = s && (!n || (n && o(a, \"name\").configurable)); e.exports = { EXISTS: s, PROPER: u, CONFIGURABLE: c }; }, \"5ea2\": function (e, t, r) { \"use strict\"; (function (e) { Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.MP4Parser = void 0); const n = r(\"34eb\"), i = r(\"6f58\"), a = r(\"95c9\"), o = r(\"bef3\"), s = r(\"150c\"), u = r(\"1e78\"), c = r(\"cec2\"), l = n(\"music-metadata:parser:MP4\"), f = \"iTunes\", h = { raw: { lossy: !1, format: \"raw\" }, MAC3: { lossy: !0, format: \"MACE 3:1\" }, MAC6: { lossy: !0, format: \"MACE 6:1\" }, ima4: { lossy: !0, format: \"IMA 4:1\" }, ulaw: { lossy: !0, format: \"uLaw 2:1\" }, alaw: { lossy: !0, format: \"uLaw 2:1\" }, Qclp: { lossy: !0, format: \"QUALCOMM PureVoice\" }, \".mp3\": { lossy: !0, format: \"MPEG-1 layer 3\" }, alac: { lossy: !1, format: \"ALAC\" }, \"ac-3\": { lossy: !0, format: \"AC-3\" }, mp4a: { lossy: !0, format: \"MPEG-4/AAC\" }, mp4s: { lossy: !0, format: \"MP4S\" }, c608: { lossy: !0, format: \"CEA-608\" }, c708: { lossy: !0, format: \"CEA-708\" }, }; function d(e, t, r) { return r.indexOf(e) === t; } class A extends a.BasicParser { constructor() { super(...arguments), (this.atomParsers = { mvhd: async (e) => { const t = await this.tokenizer.readToken(new s.MvhdAtom(e)); this.metadata.setFormat(\"creationTime\", t.creationTime), this.metadata.setFormat( \"modificationTime\", t.modificationTime ); }, mdhd: async (e) => { const t = await this.tokenizer.readToken(new s.MdhdAtom(e)), r = this.getTrackDescription(); (r.creationTime = t.creationTime), (r.modificationTime = t.modificationTime), (r.timeScale = t.timeScale), (r.duration = t.duration); }, chap: async (e) => { const t = this.getTrackDescription(), r = []; while (e >= i.UINT32_BE.len) r.push(await this.tokenizer.readNumber(i.UINT32_BE)), (e -= i.UINT32_BE.len); t.chapterList = r; }, tkhd: async (e) => { const t = await this.tokenizer.readToken( new s.TrackHeaderAtom(e) ); this.tracks.push(t); }, mdat: async (e) => { if ( ((this.audioLengthInBytes = e), this.calculateBitRate(), this.options.includeChapters) ) { const t = this.tracks.filter((e) => e.chapterList); if (1 === t.length) { const r = t[0].chapterList, n = this.tracks.filter( (e) => -1 !== r.indexOf(e.trackId) ); if (1 === n.length) return this.parseChapterTrack(n[0], t[0], e); } } await this.tokenizer.ignore(e); }, ftyp: async (e) => { const t = []; while (e > 0) { const r = await this.tokenizer.readToken(s.ftyp); e -= s.ftyp.len; const n = r.type.replace(/\\W/g, \"\"); n.length > 0 && t.push(n); } l(\"ftyp: \" + t.join(\"/\")); const r = t.filter(d).join(\"/\"); this.metadata.setFormat(\"container\", r); }, stsd: async (e) => { const t = await this.tokenizer.readToken(new s.StsdAtom(e)), r = this.getTrackDescription(); r.soundSampleDescription = t.table.map((e) => this.parseSoundSampleDescription(e) ); }, stsc: async (e) => { const t = await this.tokenizer.readToken(new s.StscAtom(e)); this.getTrackDescription().sampleToChunkTable = t.entries; }, stts: async (e) => { const t = await this.tokenizer.readToken(new s.SttsAtom(e)); this.getTrackDescription().timeToSampleTable = t.entries; }, stsz: async (e) => { const t = await this.tokenizer.readToken(new s.StszAtom(e)), r = this.getTrackDescription(); (r.sampleSize = t.sampleSize), (r.sampleSizeTable = t.entries); }, stco: async (e) => { const t = await this.tokenizer.readToken(new s.StcoAtom(e)); this.getTrackDescription().chunkOffsetTable = t.entries; }, date: async (e) => { const t = await this.tokenizer.readToken( new i.StringType(e, \"utf-8\") ); this.addTag(\"date\", t); }, }); } static read_BE_Signed_Integer(e) { return 8 === e.length ? Number(e.readBigInt64BE(0)) : e.readIntBE(0, e.length); } static read_BE_Unsigned_Integer(e) { return 8 === e.length ? Number(e.readBigUInt64BE(0)) : e.readUIntBE(0, e.length); } async parse() { this.tracks = []; let e = this.tokenizer.fileInfo.size; while (!this.tokenizer.fileInfo.size || e > 0) { try { const e = await this.tokenizer.peekToken(s.Header); if (\"\\0\\0\\0\\0\" === e.name) { const e = `Error at offset=${this.tokenizer.position}: box.id=0`; l(e), this.addWarning(e); break; } } catch (n) { const e = `Error at offset=${this.tokenizer.position}: ${n.message}`; l(e), this.addWarning(e); break; } const t = await o.Atom.readAtom( this.tokenizer, (e, t) => this.handleAtom(e, t), null, e ); e -= t.header.length === BigInt(0) ? e : Number(t.header.length); } const t = []; this.tracks.forEach((e) => { const r = []; e.soundSampleDescription.forEach((e) => { const t = {}, n = h[e.dataFormat]; if ( (n ? (r.push(n.format), (t.codecName = n.format)) : (t.codecName = ``), e.description) ) { const { description: r } = e; r.sampleRate > 0 && ((t.type = c.TrackType.audio), (t.audio = { samplingFrequency: r.sampleRate, bitDepth: r.sampleSize, channels: r.numAudioChannels, })); } this.metadata.addStreamInfo(t); }), r.length >= 1 && t.push(r.join(\"/\")); }), t.length > 0 && this.metadata.setFormat(\"codec\", t.filter(d).join(\"+\")); const r = this.tracks.filter( (e) => e.soundSampleDescription.length >= 1 && e.soundSampleDescription[0].description && e.soundSampleDescription[0].description.numAudioChannels > 0 ); if (r.length >= 1) { const e = r[0], t = e.duration / e.timeScale; this.metadata.setFormat(\"duration\", t); const n = e.soundSampleDescription[0]; n.description && (this.metadata.setFormat( \"sampleRate\", n.description.sampleRate ), this.metadata.setFormat( \"bitsPerSample\", n.description.sampleSize ), this.metadata.setFormat( \"numberOfChannels\", n.description.numAudioChannels )); const i = h[n.dataFormat]; i && this.metadata.setFormat(\"lossless\", !i.lossy), this.calculateBitRate(); } } async handleAtom(e, t) { if (e.parent) switch (e.parent.header.name) { case \"ilst\": case \"\": return this.parseMetadataItemData(e); } if (this.atomParsers[e.header.name]) return this.atomParsers[e.header.name](t); l( `No parser for atom path=${e.atomPath}, payload-len=${t}, ignoring atom` ), await this.tokenizer.ignore(t); } getTrackDescription() { return this.tracks[this.tracks.length - 1]; } calculateBitRate() { this.audioLengthInBytes && this.metadata.format.duration && this.metadata.setFormat( \"bitrate\", (8 * this.audioLengthInBytes) / this.metadata.format.duration ); } addTag(e, t) { this.metadata.addTag(f, e, t); } addWarning(e) { l(\"Warning: \" + e), this.metadata.addWarning(e); } parseMetadataItemData(e) { let t = e.header.name; return e.readAtoms( this.tokenizer, async (e, r) => { const n = e.getPayloadLength(r); switch (e.header.name) { case \"data\": return this.parseValueAtom(t, e); case \"name\": const r = await this.tokenizer.readToken(new s.NameAtom(n)); t += \":\" + r.name; break; case \"mean\": const a = await this.tokenizer.readToken(new s.NameAtom(n)); t += \":\" + a.name; break; default: const o = await this.tokenizer.readToken( new i.BufferType(n) ); this.addWarning( \"Unsupported meta-item: \" + t + \"[\" + e.header.name + \"] => value=\" + o.toString(\"hex\") + \" ascii=\" + o.toString(\"ascii\") ); } }, e.getPayloadLength(0) ); } async parseValueAtom(t, r) { const n = await this.tokenizer.readToken( new s.DataAtom(Number(r.header.length) - s.Header.len) ); if (0 !== n.type.set) throw new Error(\"Unsupported type-set != 0: \" + n.type.set); switch (n.type.type) { case 0: switch (t) { case \"trkn\": case \"disk\": const e = i.UINT8.get(n.value, 3), r = i.UINT8.get(n.value, 5); this.addTag(t, e + \"/\" + r); break; case \"gnre\": const a = i.UINT8.get(n.value, 1), o = u.Genres[a - 1]; this.addTag(t, o); break; default: } break; case 1: case 18: this.addTag(t, n.value.toString(\"utf-8\")); break; case 13: if (this.options.skipCovers) break; this.addTag(t, { format: \"image/jpeg\", data: e.from(n.value) }); break; case 14: if (this.options.skipCovers) break; this.addTag(t, { format: \"image/png\", data: e.from(n.value) }); break; case 21: this.addTag(t, A.read_BE_Signed_Integer(n.value)); break; case 22: this.addTag(t, A.read_BE_Unsigned_Integer(n.value)); break; case 65: this.addTag(t, n.value.readInt8(0)); break; case 66: this.addTag(t, n.value.readInt16BE(0)); break; case 67: this.addTag(t, n.value.readInt32BE(0)); break; default: this.addWarning( `atom key=${t}, has unknown well-known-type (data-type): ${n.type.type}` ); } } parseSoundSampleDescription(e) { const t = { dataFormat: e.dataFormat, dataReferenceIndex: e.dataReferenceIndex, }; let r = 0; const n = s.SoundSampleDescriptionVersion.get(e.description, r); return ( (r += s.SoundSampleDescriptionVersion.len), 0 === n.version || 1 === n.version ? (t.description = s.SoundSampleDescriptionV0.get( e.description, r )) : l(`Warning: sound-sample-description ${n} not implemented`), t ); } async parseChapterTrack(e, t, r) { if ( !e.sampleSize && e.chunkOffsetTable.length !== e.sampleSizeTable.length ) throw new Error( \"Expected equal chunk-offset-table & sample-size-table length.\" ); const n = []; for (let i = 0; i < e.chunkOffsetTable.length && r > 0; ++i) { const a = e.chunkOffsetTable[i], o = a - this.tokenizer.position, u = e.sampleSize > 0 ? e.sampleSize : e.sampleSizeTable[i]; if (((r -= o + u), r < 0)) throw new Error(\"Chapter chunk exceeding token length\"); await this.tokenizer.ignore(o); const c = await this.tokenizer.readToken(new s.ChapterText(u)); l(`Chapter ${i + 1}: ${c}`); const f = { title: c, sampleOffset: this.findSampleOffset(t, this.tokenizer.position), }; l( `Chapter title=${f.title}, offset=${f.sampleOffset}/${this.tracks[0].duration}` ), n.push(f); } this.metadata.setFormat(\"chapters\", n), await this.tokenizer.ignore(r); } findSampleOffset(e, t) { let r = 0; e.timeToSampleTable.forEach((e) => { r += e.count * e.duration; }), l(\"Total duration=\" + r); let n = 0; while (n < e.chunkOffsetTable.length && e.chunkOffsetTable[n] < t) ++n; return this.getChunkDuration(n + 1, e); } getChunkDuration(e, t) { let r = 0, n = t.timeToSampleTable[r].count, i = t.timeToSampleTable[r].duration, a = 1, o = this.getSamplesPerChunk(a, t.sampleToChunkTable), s = 0; while (a < e) { const e = Math.min(n, o); (s += e * i), (n -= e), (o -= e), 0 === o ? (++a, (o = this.getSamplesPerChunk(a, t.sampleToChunkTable))) : (++r, (n = t.timeToSampleTable[r].count), (i = t.timeToSampleTable[r].duration)); } return s; } getSamplesPerChunk(e, t) { for (let r = 0; r < t.length - 1; ++r) if (e >= t[r].firstChunk && e < t[r + 1].firstChunk) return t[r].samplesPerChunk; return t[t.length - 1].samplesPerChunk; } } t.MP4Parser = A; }).call(this, r(\"1c35\").Buffer); }, \"5f4b\": function (e, t, r) { \"use strict\"; var n; r.d(t, \"a\", function () { return n; }), (function (e) { (e[\"internalError\"] = \"internalError\"), (e[\"message\"] = \"message\"), (e[\"termination\"] = \"termination\"); })(n || (n = {})); }, \"5f96\": function (e, t, r) { \"use strict\"; var n = r(\"ebb5\"), i = r(\"e330\"), a = n.aTypedArray, o = n.exportTypedArrayMethod, s = i([].join); o(\"join\", function (e) { return s(a(this), e); }); }, \"5fb2\": function (e, t, r) { \"use strict\"; var n = r(\"da84\"), i = r(\"e330\"), a = 2147483647, o = 36, s = 1, u = 26, c = 38, l = 700, f = 72, h = 128, d = \"-\", A = /[^\\0-\\u007E]/, p = /[.\\u3002\\uFF0E\\uFF61]/g, g = \"Overflow: input needs wider integers to process\", m = o - s, b = n.RangeError, v = i(p.exec), y = Math.floor, I = String.fromCharCode, E = i(\"\".charCodeAt), w = i([].join), C = i([].push), _ = i(\"\".replace), B = i(\"\".split), x = i(\"\".toLowerCase), S = function (e) { var t = [], r = 0, n = e.length; while (r < n) { var i = E(e, r++); if (i >= 55296 && i 1) (e = y(e / m)), (n += o); return y(n + ((m + 1) * e) / (e + c)); }, T = function (e) { var t = []; e = S(e); var r, n, i = e.length, c = h, l = 0, A = f; for (r = 0; r < e.length; r++) (n = e[r]), n < 128 && C(t, I(n)); var p = t.length, m = p; p && C(t, d); while (m < i) { var v = a; for (r = 0; r < e.length; r++) (n = e[r]), n >= c && n < v && (v = n); var E = m + 1; if (v - c > y((a - l) / E)) throw b(g); for (l += (v - c) * E, c = v, r = 0; r < e.length; r++) { if (((n = e[r]), n < c && ++l > a)) throw b(g); if (n == c) { var _ = l, B = o; while (1) { var x = B = A + u ? u : B - A; if (_ < x) break; var T = _ - x, M = o - x; C(t, I(k(x + (T % M)))), (_ = y(T / M)), (B += o); } C(t, I(k(_))), (A = Q(l, E, m == p)), (l = 0), m++; } } l++, c++; } return w(t, \"\"); }; e.exports = function (e) { var t, r, n = [], i = B(_(x(e), p, \".\"), \".\"); for (t = 0; t < i.length; t++) (r = i[t]), C(n, v(A, r) ? \"xn--\" + T(r) : r); return w(n, \".\"); }; }, 6030: function (e, t, r) { \"use strict\"; function n(e) { var t = e.toString(\"hex\", 0, 2); return \"ffd8\" === t; } function i(e, t) { return { height: e.readUInt16BE(t), width: e.readUInt16BE(t + 2) }; } function a(e, t) { if (t > e.length) throw new TypeError(\"Corrupt JPG, exceeded buffer limits\"); if (255 !== e[t]) throw new TypeError(\"Invalid JPG, marker table corrupted\"); } function o(e) { var t, r; e = e.slice(4); while (e.length) { if ( ((t = e.readUInt16BE(0)), a(e, t), (r = e[t + 1]), 192 === r || 193 === r || 194 === r) ) return i(e, t + 5); e = e.slice(t + 2); } throw new TypeError(\"Invalid JPG, no size found\"); } e.exports = { detect: n, calculate: o }; }, \"605d\": function (e, t, r) { var n = r(\"c6b6\"), i = r(\"da84\"); e.exports = \"process\" == n(i.process); }, 6069: function (e, t) { e.exports = \"object\" == typeof window; }, \"60b9\": function (e, t, r) { (t = e.exports = r(\"bd7a\")), (t.Stream = t), (t.Readable = t), (t.Writable = r(\"b84d\")), (t.Duplex = r(\"845f\")), (t.Transform = r(\"8a58\")), (t.PassThrough = r(\"c6d6\")), (t.finished = r(\"fd17\")), (t.pipeline = r(\"7e5b\")); }, \"60bd\": function (e, t, r) { \"use strict\"; var n = r(\"da84\"), i = r(\"d039\"), a = r(\"e330\"), o = r(\"ebb5\"), s = r(\"e260\"), u = r(\"b622\"), c = u(\"iterator\"), l = n.Uint8Array, f = a(s.values), h = a(s.keys), d = a(s.entries), A = o.aTypedArray, p = o.exportTypedArrayMethod, g = l && l.prototype, m = !i(function () { g[c].call([1]); }), b = !!g && g.values && g[c] === g.values && \"values\" === g.values.name, v = function () { return f(A(this)); }; p( \"entries\", function () { return d(A(this)); }, m ), p( \"keys\", function () { return h(A(this)); }, m ), p(\"values\", v, m || !b, { name: \"values\" }), p(c, v, m || !b, { name: \"values\" }); }, \"60da\": function (e, t, r) { \"use strict\"; var n = r(\"83ab\"), i = r(\"e330\"), a = r(\"c65b\"), o = r(\"d039\"), s = r(\"df75\"), u = r(\"7418\"), c = r(\"d1e7\"), l = r(\"7b0b\"), f = r(\"44ad\"), h = Object.assign, d = Object.defineProperty, A = i([].concat); e.exports = !h || o(function () { if ( n && 1 !== h( { b: 1 }, h( d({}, \"a\", { enumerable: !0, get: function () { d(this, \"b\", { value: 3, enumerable: !1 }); }, }), { b: 2 } ) ).b ) return !0; var e = {}, t = {}, r = Symbol(), i = \"abcdefghijklmnopqrst\"; return ( (e[r] = 7), i.split(\"\").forEach(function (e) { t[e] = e; }), 7 != h({}, e)[r] || s(h({}, t)).join(\"\") != i ); }) ? function (e, t) { var r = l(e), i = arguments.length, o = 1, h = u.f, d = c.f; while (i > o) { var p, g = f(arguments[o++]), m = h ? A(s(g), h(g)) : s(g), b = m.length, v = 0; while (b > v) (p = m[v++]), (n && !a(d, g, p)) || (r[p] = g[p]); } return r; } : h; }, 6167: function (e, t, r) { \"use strict\"; var n, i; \"function\" === typeof Symbol && Symbol.iterator; (function (a, o) { (n = o), (i = \"function\" === typeof n ? n.call(t, r, t, e) : n), void 0 === i || (e.exports = i); })(0, function () { var e = window, t = { placement: \"bottom\", gpuAcceleration: !0, offset: 0, boundariesElement: \"viewport\", boundariesPadding: 5, preventOverflowOrder: [\"left\", \"right\", \"top\", \"bottom\"], flipBehavior: \"flip\", arrowElement: \"[x-arrow]\", arrowOffset: 0, modifiers: [ \"shift\", \"offset\", \"preventOverflow\", \"keepTogether\", \"arrow\", \"flip\", \"applyStyle\", ], modifiersIgnored: [], forceAbsolute: !1, }; function r(e, r, n) { (this._reference = e.jquery ? e[0] : e), (this.state = {}); var i = \"undefined\" === typeof r || null === r, a = r && \"[object Object]\" === Object.prototype.toString.call(r); return ( (this._popper = i || a ? this.parse(a ? r : {}) : r.jquery ? r[0] : r), (this._options = Object.assign({}, t, n)), (this._options.modifiers = this._options.modifiers.map( function (e) { if (-1 === this._options.modifiersIgnored.indexOf(e)) return ( \"applyStyle\" === e && this._popper.setAttribute( \"x-placement\", this._options.placement ), this.modifiers[e] || e ); }.bind(this) )), (this.state.position = this._getPosition( this._popper, this._reference )), f(this._popper, { position: this.state.position, top: 0 }), this.update(), this._setupEventListeners(), this ); } function n(t) { var r = t.style.display, n = t.style.visibility; (t.style.display = \"block\"), (t.style.visibility = \"hidden\"); t.offsetWidth; var i = e.getComputedStyle(t), a = parseFloat(i.marginTop) + parseFloat(i.marginBottom), o = parseFloat(i.marginLeft) + parseFloat(i.marginRight), s = { width: t.offsetWidth + o, height: t.offsetHeight + a }; return (t.style.display = r), (t.style.visibility = n), s; } function i(e) { var t = { left: \"right\", right: \"left\", bottom: \"top\", top: \"bottom\", }; return e.replace(/left|right|bottom|top/g, function (e) { return t[e]; }); } function a(e) { var t = Object.assign({}, e); return (t.right = t.left + t.width), (t.bottom = t.top + t.height), t; } function o(e, t) { var r, n = 0; for (r in e) { if (e[r] === t) return n; n++; } return null; } function s(t, r) { var n = e.getComputedStyle(t, null); return n[r]; } function u(t) { var r = t.offsetParent; return r !== e.document.body && r ? r : e.document.documentElement; } function c(t) { var r = t.parentNode; return r ? r === e.document ? e.document.body.scrollTop || e.document.body.scrollLeft ? e.document.body : e.document.documentElement : -1 !== [\"scroll\", \"auto\"].indexOf(s(r, \"overflow\")) || -1 !== [\"scroll\", \"auto\"].indexOf(s(r, \"overflow-x\")) || -1 !== [\"scroll\", \"auto\"].indexOf(s(r, \"overflow-y\")) ? r : c(t.parentNode) : t; } function l(t) { return ( t !== e.document.body && (\"fixed\" === s(t, \"position\") || (t.parentNode ? l(t.parentNode) : t)) ); } function f(e, t) { function r(e) { return \"\" !== e && !isNaN(parseFloat(e)) && isFinite(e); } Object.keys(t).forEach(function (n) { var i = \"\"; -1 !== [\"width\", \"height\", \"top\", \"right\", \"bottom\", \"left\"].indexOf( n ) && r(t[n]) && (i = \"px\"), (e.style[n] = t[n] + i); }); } function h(e) { var t = {}; return e && \"[object Function]\" === t.toString.call(e); } function d(e) { var t = { width: e.offsetWidth, height: e.offsetHeight, left: e.offsetLeft, top: e.offsetTop, }; return (t.right = t.left + t.width), (t.bottom = t.top + t.height), t; } function A(e) { var t = e.getBoundingClientRect(), r = -1 != navigator.userAgent.indexOf(\"MSIE\"), n = r && \"HTML\" === e.tagName ? -e.scrollTop : t.top; return { left: t.left, top: n, right: t.right, bottom: t.bottom, width: t.right - t.left, height: t.bottom - n, }; } function p(e, t, r) { var n = A(e), i = A(t); if (r) { var a = c(t); (i.top += a.scrollTop), (i.bottom += a.scrollTop), (i.left += a.scrollLeft), (i.right += a.scrollLeft); } var o = { top: n.top - i.top, left: n.left - i.left, bottom: n.top - i.top + n.height, right: n.left - i.left + n.width, width: n.width, height: n.height, }; return o; } function g(t) { for ( var r = [\"\", \"ms\", \"webkit\", \"moz\", \"o\"], n = 0; n < r.length; n++ ) { var i = r[n] ? r[n] + t.charAt(0).toUpperCase() + t.slice(1) : t; if (\"undefined\" !== typeof e.document.body.style[i]) return i; } return null; } return ( (r.prototype.destroy = function () { return ( this._popper.removeAttribute(\"x-placement\"), (this._popper.style.left = \"\"), (this._popper.style.position = \"\"), (this._popper.style.top = \"\"), (this._popper.style[g(\"transform\")] = \"\"), this._removeEventListeners(), this._options.removeOnDestroy && this._popper.remove(), this ); }), (r.prototype.update = function () { var e = { instance: this, styles: {} }; (e.placement = this._options.placement), (e._originalPlacement = this._options.placement), (e.offsets = this._getOffsets( this._popper, this._reference, e.placement )), (e.boundaries = this._getBoundaries( e, this._options.boundariesPadding, this._options.boundariesElement )), (e = this.runModifiers(e, this._options.modifiers)), \"function\" === typeof this.state.updateCallback && this.state.updateCallback(e); }), (r.prototype.onCreate = function (e) { return e(this), this; }), (r.prototype.onUpdate = function (e) { return (this.state.updateCallback = e), this; }), (r.prototype.parse = function (t) { var r = { tagName: \"div\", classNames: [\"popper\"], attributes: [], parent: e.document.body, content: \"\", contentType: \"text\", arrowTagName: \"div\", arrowClassNames: [\"popper__arrow\"], arrowAttributes: [\"x-arrow\"], }; t = Object.assign({}, r, t); var n = e.document, i = n.createElement(t.tagName); if ( (s(i, t.classNames), u(i, t.attributes), \"node\" === t.contentType ? i.appendChild(t.content.jquery ? t.content[0] : t.content) : \"html\" === t.contentType ? (i.innerHTML = t.content) : (i.textContent = t.content), t.arrowTagName) ) { var a = n.createElement(t.arrowTagName); s(a, t.arrowClassNames), u(a, t.arrowAttributes), i.appendChild(a); } var o = t.parent.jquery ? t.parent[0] : t.parent; if (\"string\" === typeof o) { if ( ((o = n.querySelectorAll(t.parent)), o.length > 1 && console.warn( \"WARNING: the given `parent` query(\" + t.parent + \") matched more than one element, the first one will be used\" ), 0 === o.length) ) throw \"ERROR: the given `parent` doesn't exists!\"; o = o[0]; } return ( o.length > 1 && o instanceof Element === !1 && (console.warn( \"WARNING: you have passed as parent a list of elements, the first one will be used\" ), (o = o[0])), o.appendChild(i), i ); function s(e, t) { t.forEach(function (t) { e.classList.add(t); }); } function u(e, t) { t.forEach(function (t) { e.setAttribute(t.split(\":\")[0], t.split(\":\")[1] || \"\"); }); } }), (r.prototype._getPosition = function (e, t) { var r = u(t); if (this._options.forceAbsolute) return \"absolute\"; var n = l(t, r); return n ? \"fixed\" : \"absolute\"; }), (r.prototype._getOffsets = function (e, t, r) { r = r.split(\"-\")[0]; var i = {}; i.position = this.state.position; var a = \"fixed\" === i.position, o = p(t, u(e), a), s = n(e); return ( -1 !== [\"right\", \"left\"].indexOf(r) ? ((i.top = o.top + o.height / 2 - s.height / 2), (i.left = \"left\" === r ? o.left - s.width : o.right)) : ((i.left = o.left + o.width / 2 - s.width / 2), (i.top = \"top\" === r ? o.top - s.height : o.bottom)), (i.width = s.width), (i.height = s.height), { popper: i, reference: o } ); }), (r.prototype._setupEventListeners = function () { if ( ((this.state.updateBound = this.update.bind(this)), e.addEventListener(\"resize\", this.state.updateBound), \"window\" !== this._options.boundariesElement) ) { var t = c(this._reference); (t !== e.document.body && t !== e.document.documentElement) || (t = e), t.addEventListener(\"scroll\", this.state.updateBound), (this.state.scrollTarget = t); } }), (r.prototype._removeEventListeners = function () { e.removeEventListener(\"resize\", this.state.updateBound), \"window\" !== this._options.boundariesElement && this.state.scrollTarget && (this.state.scrollTarget.removeEventListener( \"scroll\", this.state.updateBound ), (this.state.scrollTarget = null)), (this.state.updateBound = null); }), (r.prototype._getBoundaries = function (t, r, n) { var i, a, o = {}; if (\"window\" === n) { var s = e.document.body, l = e.document.documentElement; (a = Math.max( s.scrollHeight, s.offsetHeight, l.clientHeight, l.scrollHeight, l.offsetHeight )), (i = Math.max( s.scrollWidth, s.offsetWidth, l.clientWidth, l.scrollWidth, l.offsetWidth )), (o = { top: 0, right: i, bottom: a, left: 0 }); } else if (\"viewport\" === n) { var f = u(this._popper), h = c(this._popper), A = d(f), p = function (e) { return e == document.body ? Math.max( document.documentElement.scrollTop, document.body.scrollTop ) : e.scrollTop; }, g = function (e) { return e == document.body ? Math.max( document.documentElement.scrollLeft, document.body.scrollLeft ) : e.scrollLeft; }, m = \"fixed\" === t.offsets.popper.position ? 0 : p(h), b = \"fixed\" === t.offsets.popper.position ? 0 : g(h); o = { top: 0 - (A.top - m), right: e.document.documentElement.clientWidth - (A.left - b), bottom: e.document.documentElement.clientHeight - (A.top - m), left: 0 - (A.left - b), }; } else o = u(this._popper) === n ? { top: 0, left: 0, right: n.clientWidth, bottom: n.clientHeight, } : d(n); return ( (o.left += r), (o.right -= r), (o.top = o.top + r), (o.bottom = o.bottom - r), o ); }), (r.prototype.runModifiers = function (e, t, r) { var n = t.slice(); return ( void 0 !== r && (n = this._options.modifiers.slice( 0, o(this._options.modifiers, r) )), n.forEach( function (t) { h(t) && (e = t.call(this, e)); }.bind(this) ), e ); }), (r.prototype.isModifierRequired = function (e, t) { var r = o(this._options.modifiers, e); return !!this._options.modifiers.slice(0, r).filter(function (e) { return e === t; }).length; }), (r.prototype.modifiers = {}), (r.prototype.modifiers.applyStyle = function (e) { var t, r = { position: e.offsets.popper.position }, n = Math.round(e.offsets.popper.left), i = Math.round(e.offsets.popper.top); return ( this._options.gpuAcceleration && (t = g(\"transform\")) ? ((r[t] = \"translate3d(\" + n + \"px, \" + i + \"px, 0)\"), (r.top = 0), (r.left = 0)) : ((r.left = n), (r.top = i)), Object.assign(r, e.styles), f(this._popper, r), this._popper.setAttribute(\"x-placement\", e.placement), this.isModifierRequired( this.modifiers.applyStyle, this.modifiers.arrow ) && e.offsets.arrow && f(e.arrowElement, e.offsets.arrow), e ); }), (r.prototype.modifiers.shift = function (e) { var t = e.placement, r = t.split(\"-\")[0], n = t.split(\"-\")[1]; if (n) { var i = e.offsets.reference, o = a(e.offsets.popper), s = { y: { start: { top: i.top }, end: { top: i.top + i.height - o.height }, }, x: { start: { left: i.left }, end: { left: i.left + i.width - o.width }, }, }, u = -1 !== [\"bottom\", \"top\"].indexOf(r) ? \"x\" : \"y\"; e.offsets.popper = Object.assign(o, s[u][n]); } return e; }), (r.prototype.modifiers.preventOverflow = function (e) { var t = this._options.preventOverflowOrder, r = a(e.offsets.popper), n = { left: function () { var t = r.left; return ( r.left < e.boundaries.left && (t = Math.max(r.left, e.boundaries.left)), { left: t } ); }, right: function () { var t = r.left; return ( r.right > e.boundaries.right && (t = Math.min(r.left, e.boundaries.right - r.width)), { left: t } ); }, top: function () { var t = r.top; return ( r.top < e.boundaries.top && (t = Math.max(r.top, e.boundaries.top)), { top: t } ); }, bottom: function () { var t = r.top; return ( r.bottom > e.boundaries.bottom && (t = Math.min(r.top, e.boundaries.bottom - r.height)), { top: t } ); }, }; return ( t.forEach(function (t) { e.offsets.popper = Object.assign(r, n[t]()); }), e ); }), (r.prototype.modifiers.keepTogether = function (e) { var t = a(e.offsets.popper), r = e.offsets.reference, n = Math.floor; return ( t.right < n(r.left) && (e.offsets.popper.left = n(r.left) - t.width), t.left > n(r.right) && (e.offsets.popper.left = n(r.right)), t.bottom < n(r.top) && (e.offsets.popper.top = n(r.top) - t.height), t.top > n(r.bottom) && (e.offsets.popper.top = n(r.bottom)), e ); }), (r.prototype.modifiers.flip = function (e) { if ( !this.isModifierRequired( this.modifiers.flip, this.modifiers.preventOverflow ) ) return ( console.warn( \"WARNING: preventOverflow modifier is required by flip modifier in order to work, be sure to include it before flip!\" ), e ); if (e.flipped && e.placement === e._originalPlacement) return e; var t = e.placement.split(\"-\")[0], r = i(t), n = e.placement.split(\"-\")[1] || \"\", o = []; return ( (o = \"flip\" === this._options.flipBehavior ? [t, r] : this._options.flipBehavior), o.forEach( function (s, u) { if (t === s && o.length !== u + 1) { (t = e.placement.split(\"-\")[0]), (r = i(t)); var c = a(e.offsets.popper), l = -1 !== [\"right\", \"bottom\"].indexOf(t); ((l && Math.floor(e.offsets.reference[t]) > Math.floor(c[r])) || (!l && Math.floor(e.offsets.reference[t]) < Math.floor(c[r]))) && ((e.flipped = !0), (e.placement = o[u + 1]), n && (e.placement += \"-\" + n), (e.offsets.popper = this._getOffsets( this._popper, this._reference, e.placement ).popper), (e = this.runModifiers( e, this._options.modifiers, this._flip ))); } }.bind(this) ), e ); }), (r.prototype.modifiers.offset = function (e) { var t = this._options.offset, r = e.offsets.popper; return ( -1 !== e.placement.indexOf(\"left\") ? (r.top -= t) : -1 !== e.placement.indexOf(\"right\") ? (r.top += t) : -1 !== e.placement.indexOf(\"top\") ? (r.left -= t) : -1 !== e.placement.indexOf(\"bottom\") && (r.left += t), e ); }), (r.prototype.modifiers.arrow = function (e) { var t = this._options.arrowElement, r = this._options.arrowOffset; if ( (\"string\" === typeof t && (t = this._popper.querySelector(t)), !t) ) return e; if (!this._popper.contains(t)) return ( console.warn( \"WARNING: `arrowElement` must be child of its popper element!\" ), e ); if ( !this.isModifierRequired( this.modifiers.arrow, this.modifiers.keepTogether ) ) return ( console.warn( \"WARNING: keepTogether modifier is required by arrow modifier in order to work, be sure to include it before arrow!\" ), e ); var i = {}, o = e.placement.split(\"-\")[0], s = a(e.offsets.popper), u = e.offsets.reference, c = -1 !== [\"left\", \"right\"].indexOf(o), l = c ? \"height\" : \"width\", f = c ? \"top\" : \"left\", h = c ? \"left\" : \"top\", d = c ? \"bottom\" : \"right\", A = n(t)[l]; u[d] - A < s[f] && (e.offsets.popper[f] -= s[f] - (u[d] - A)), u[f] + A > s[d] && (e.offsets.popper[f] += u[f] + A - s[d]); var p = u[f] + (r || u[l] / 2 - A / 2), g = p - s[f]; return ( (g = Math.max(Math.min(s[l] - A - 8, g), 8)), (i[f] = g), (i[h] = \"\"), (e.offsets.arrow = i), (e.arrowElement = t), e ); }), Object.assign || Object.defineProperty(Object, \"assign\", { enumerable: !1, configurable: !0, writable: !0, value: function (e) { if (void 0 === e || null === e) throw new TypeError( \"Cannot convert first argument to object\" ); for (var t = Object(e), r = 1; r < arguments.length; r++) { var n = arguments[r]; if (void 0 !== n && null !== n) { n = Object(n); for ( var i = Object.keys(n), a = 0, o = i.length; a < o; a++ ) { var s = i[a], u = Object.getOwnPropertyDescriptor(n, s); void 0 !== u && u.enumerable && (t[s] = n[s]); } } } return t; }, }), r ); }); }, \"618c\": function (e, t, r) { \"use strict\"; (function (t) { var n = r(\"ab33\"), i = r(\"3372\"), a = (e.exports = function (e, t) { (this._options = e), (e.checkCRC = !1 !== e.checkCRC), (this._hasIHDR = !1), (this._hasIEND = !1), (this._emittedHeadersFinished = !1), (this._palette = []), (this._colorType = 0), (this._chunks = {}), (this._chunks[n.TYPE_IHDR] = this._handleIHDR.bind(this)), (this._chunks[n.TYPE_IEND] = this._handleIEND.bind(this)), (this._chunks[n.TYPE_IDAT] = this._handleIDAT.bind(this)), (this._chunks[n.TYPE_PLTE] = this._handlePLTE.bind(this)), (this._chunks[n.TYPE_tRNS] = this._handleTRNS.bind(this)), (this._chunks[n.TYPE_gAMA] = this._handleGAMA.bind(this)), (this.read = t.read), (this.error = t.error), (this.metadata = t.metadata), (this.gamma = t.gamma), (this.transColor = t.transColor), (this.palette = t.palette), (this.parsed = t.parsed), (this.inflateData = t.inflateData), (this.finished = t.finished), (this.simpleTransparency = t.simpleTransparency), (this.headersFinished = t.headersFinished || function () {}); }); (a.prototype.start = function () { this.read(n.PNG_SIGNATURE.length, this._parseSignature.bind(this)); }), (a.prototype._parseSignature = function (e) { for (var t = n.PNG_SIGNATURE, r = 0; r < t.length; r++) if (e[r] !== t[r]) return void this.error(new Error(\"Invalid file signature\")); this.read(8, this._parseChunkBegin.bind(this)); }), (a.prototype._parseChunkBegin = function (e) { for ( var r = e.readUInt32BE(0), a = e.readUInt32BE(4), o = \"\", s = 4; s < 8; s++ ) o += String.fromCharCode(e[s]); var u = Boolean(32 & e[4]); if (this._hasIHDR || a === n.TYPE_IHDR) { if ( ((this._crc = new i()), this._crc.write(new t(o)), this._chunks[a]) ) return this._chunks[a](r); u ? this.read(r + 4, this._skipChunk.bind(this)) : this.error(new Error(\"Unsupported critical chunk type \" + o)); } else this.error(new Error(\"Expected IHDR on beggining\")); }), (a.prototype._skipChunk = function () { this.read(8, this._parseChunkBegin.bind(this)); }), (a.prototype._handleChunkEnd = function () { this.read(4, this._parseChunkEnd.bind(this)); }), (a.prototype._parseChunkEnd = function (e) { var t = e.readInt32BE(0), r = this._crc.crc32(); this._options.checkCRC && r !== t ? this.error(new Error(\"Crc error - \" + t + \" - \" + r)) : this._hasIEND || this.read(8, this._parseChunkBegin.bind(this)); }), (a.prototype._handleIHDR = function (e) { this.read(e, this._parseIHDR.bind(this)); }), (a.prototype._parseIHDR = function (e) { this._crc.write(e); var t = e.readUInt32BE(0), r = e.readUInt32BE(4), i = e[8], a = e[9], o = e[10], s = e[11], u = e[12]; if (8 === i || 4 === i || 2 === i || 1 === i || 16 === i) if (a in n.COLORTYPE_TO_BPP_MAP) if (0 === o) if (0 === s) if (0 === u || 1 === u) { this._colorType = a; var c = n.COLORTYPE_TO_BPP_MAP[this._colorType]; (this._hasIHDR = !0), this.metadata({ width: t, height: r, depth: i, interlace: Boolean(u), palette: Boolean(a & n.COLORTYPE_PALETTE), color: Boolean(a & n.COLORTYPE_COLOR), alpha: Boolean(a & n.COLORTYPE_ALPHA), bpp: c, colorType: a, }), this._handleChunkEnd(); } else this.error(new Error(\"Unsupported interlace method\")); else this.error(new Error(\"Unsupported filter method\")); else this.error(new Error(\"Unsupported compression method\")); else this.error(new Error(\"Unsupported color type\")); else this.error(new Error(\"Unsupported bit depth \" + i)); }), (a.prototype._handlePLTE = function (e) { this.read(e, this._parsePLTE.bind(this)); }), (a.prototype._parsePLTE = function (e) { this._crc.write(e); for (var t = Math.floor(e.length / 3), r = 0; r < t; r++) this._palette.push([e[3 * r], e[3 * r + 1], e[3 * r + 2], 255]); this.palette(this._palette), this._handleChunkEnd(); }), (a.prototype._handleTRNS = function (e) { this.simpleTransparency(), this.read(e, this._parseTRNS.bind(this)); }), (a.prototype._parseTRNS = function (e) { if ( (this._crc.write(e), this._colorType === n.COLORTYPE_PALETTE_COLOR) ) { if (0 === this._palette.length) return void this.error( new Error(\"Transparency chunk must be after palette\") ); if (e.length > this._palette.length) return void this.error( new Error(\"More transparent colors than palette size\") ); for (var t = 0; t < e.length; t++) this._palette[t][3] = e[t]; this.palette(this._palette); } this._colorType === n.COLORTYPE_GRAYSCALE && this.transColor([e.readUInt16BE(0)]), this._colorType === n.COLORTYPE_COLOR && this.transColor([ e.readUInt16BE(0), e.readUInt16BE(2), e.readUInt16BE(4), ]), this._handleChunkEnd(); }), (a.prototype._handleGAMA = function (e) { this.read(e, this._parseGAMA.bind(this)); }), (a.prototype._parseGAMA = function (e) { this._crc.write(e), this.gamma(e.readUInt32BE(0) / n.GAMMA_DIVISION), this._handleChunkEnd(); }), (a.prototype._handleIDAT = function (e) { this._emittedHeadersFinished || ((this._emittedHeadersFinished = !0), this.headersFinished()), this.read(-e, this._parseIDAT.bind(this, e)); }), (a.prototype._parseIDAT = function (e, t) { if ( (this._crc.write(t), this._colorType === n.COLORTYPE_PALETTE_COLOR && 0 === this._palette.length) ) throw new Error(\"Expected palette not found\"); this.inflateData(t); var r = e - t.length; r > 0 ? this._handleIDAT(r) : this._handleChunkEnd(); }), (a.prototype._handleIEND = function (e) { this.read(e, this._parseIEND.bind(this)); }), (a.prototype._parseIEND = function (e) { this._crc.write(e), (this._hasIEND = !0), this._handleChunkEnd(), this.finished && this.finished(); }); }).call(this, r(\"1c35\").Buffer); }, 6205: function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t[\"default\"] = void 0); var n = r(\"c2d7\"), i = function () { return { scale: function (e, t, r) { if (\"number\" !== typeof e) return n.throwError.call(this, \"f must be a number\", r); if (e < 0) return n.throwError.call( this, \"f must be a positive number\", r ); \"function\" === typeof t && \"undefined\" === typeof r && ((r = t), (t = null)); var i = this.bitmap.width * e, a = this.bitmap.height * e; return ( this.resize(i, a, t), (0, n.isNodePattern)(r) && r.call(this, null, this), this ); }, scaleToFit: function (e, t, r, i) { if (\"number\" !== typeof e || \"number\" !== typeof t) return n.throwError.call(this, \"w and h must be numbers\", i); \"function\" === typeof r && \"undefined\" === typeof i && ((i = r), (r = null)); var a = e / t > this.bitmap.width / this.bitmap.height ? t / this.bitmap.height : e / this.bitmap.width; return ( this.scale(a, r), (0, n.isNodePattern)(i) && i.call(this, null, this), this ); }, }; }; t[\"default\"] = i; }, \"621a\": function (e, t, r) { \"use strict\"; var n = r(\"da84\"), i = r(\"e330\"), a = r(\"83ab\"), o = r(\"a981\"), s = r(\"5e77\"), u = r(\"9112\"), c = r(\"e2cc\"), l = r(\"d039\"), f = r(\"19aa\"), h = r(\"5926\"), d = r(\"50c4\"), A = r(\"0b25\"), p = r(\"77a7\"), g = r(\"e163\"), m = r(\"d2bb\"), b = r(\"241c\").f, v = r(\"9bf2\").f, y = r(\"81d5\"), I = r(\"4dae\"), E = r(\"d44e\"), w = r(\"69f3\"), C = s.PROPER, _ = s.CONFIGURABLE, B = w.get, x = w.set, S = \"ArrayBuffer\", k = \"DataView\", Q = \"prototype\", T = \"Wrong length\", M = \"Wrong index\", D = n[S], R = D, O = R && R[Q], N = n[k], F = N && N[Q], L = Object.prototype, P = n.Array, U = n.RangeError, j = i(y), z = i([].reverse), G = p.pack, H = p.unpack, W = function (e) { return [255 & e]; }, Y = function (e) { return [255 & e, (e >> 8) & 255]; }, q = function (e) { return [255 & e, (e >> 8) & 255, (e >> 16) & 255, (e >> 24) & 255]; }, J = function (e) { return (e[3] < 24) | (e[2] < 16) | (e[1] < 8) | e[0]; }, $ = function (e) { return G(e, 23, 4); }, K = function (e) { return G(e, 52, 8); }, V = function (e, t) { v(e[Q], t, { get: function () { return B(this)[t]; }, }); }, X = function (e, t, r, n) { var i = A(r), a = B(e); if (i + t > a.byteLength) throw U(M); var o = B(a.buffer).bytes, s = i + a.byteOffset, u = I(o, s, s + t); return n ? u : z(u); }, Z = function (e, t, r, n, i, a) { var o = A(r), s = B(e); if (o + t > s.byteLength) throw U(M); for ( var u = B(s.buffer).bytes, c = o + s.byteOffset, l = n(+i), f = 0; f < t; f++ ) u[c + f] = l[a ? f : t - f - 1]; }; if (o) { var ee = C && D.name !== S; if ( l(function () { D(1); }) && l(function () { new D(-1); }) && !l(function () { return new D(), new D(1.5), new D(NaN), ee && !_; }) ) ee && _ && u(D, \"name\", S); else { (R = function (e) { return f(this, O), new D(A(e)); }), (R[Q] = O); for (var te, re = b(D), ne = 0; re.length > ne; ) (te = re[ne++]) in R || u(R, te, D[te]); O.constructor = R; } m && g(F) !== L && m(F, L); var ie = new N(new R(2)), ae = i(F.setInt8); ie.setInt8(0, 2147483648), ie.setInt8(1, 2147483649), (!ie.getInt8(0) && ie.getInt8(1)) || c( F, { setInt8: function (e, t) { ae(this, e, (t < 24) >> 24); }, setUint8: function (e, t) { ae(this, e, (t < 24) >> 24); }, }, { unsafe: !0 } ); } else (R = function (e) { f(this, O); var t = A(e); x(this, { bytes: j(P(t), 0), byteLength: t }), a || (this.byteLength = t); }), (O = R[Q]), (N = function (e, t, r) { f(this, F), f(e, O); var n = B(e).byteLength, i = h(t); if (i < 0 || i > n) throw U(\"Wrong offset\"); if (((r = void 0 === r ? n - i : d(r)), i + r > n)) throw U(T); x(this, { buffer: e, byteLength: r, byteOffset: i }), a || ((this.buffer = e), (this.byteLength = r), (this.byteOffset = i)); }), (F = N[Q]), a && (V(R, \"byteLength\"), V(N, \"buffer\"), V(N, \"byteLength\"), V(N, \"byteOffset\")), c(F, { getInt8: function (e) { return (X(this, 1, e)[0] < 24) >> 24; }, getUint8: function (e) { return X(this, 1, e)[0]; }, getInt16: function (e) { var t = X( this, 2, e, arguments.length > 1 ? arguments[1] : void 0 ); return (((t[1] < 8) | t[0]) < 16) >> 16; }, getUint16: function (e) { var t = X( this, 2, e, arguments.length > 1 ? arguments[1] : void 0 ); return (t[1] < 8) | t[0]; }, getInt32: function (e) { return J( X(this, 4, e, arguments.length > 1 ? arguments[1] : void 0) ); }, getUint32: function (e) { return ( J( X(this, 4, e, arguments.length > 1 ? arguments[1] : void 0) ) >>> 0 ); }, getFloat32: function (e) { return H( X(this, 4, e, arguments.length > 1 ? arguments[1] : void 0), 23 ); }, getFloat64: function (e) { return H( X(this, 8, e, arguments.length > 1 ? arguments[1] : void 0), 52 ); }, setInt8: function (e, t) { Z(this, 1, e, W, t); }, setUint8: function (e, t) { Z(this, 1, e, W, t); }, setInt16: function (e, t) { Z(this, 2, e, Y, t, arguments.length > 2 ? arguments[2] : void 0); }, setUint16: function (e, t) { Z(this, 2, e, Y, t, arguments.length > 2 ? arguments[2] : void 0); }, setInt32: function (e, t) { Z(this, 4, e, q, t, arguments.length > 2 ? arguments[2] : void 0); }, setUint32: function (e, t) { Z(this, 4, e, q, t, arguments.length > 2 ? arguments[2] : void 0); }, setFloat32: function (e, t) { Z(this, 4, e, $, t, arguments.length > 2 ? arguments[2] : void 0); }, setFloat64: function (e, t) { Z(this, 8, e, K, t, arguments.length > 2 ? arguments[2] : void 0); }, }); E(R, S), E(N, k), (e.exports = { ArrayBuffer: R, DataView: N }); }, 6220: function (e, t, r) { \"use strict\"; var n = 8, i = 4, a = 4; function o(e) { return \"icns\" === e.toString(\"ascii\", 0, 4); } var s = { ICON: 32, \"ICN#\": 32, \"icm#\": 16, icm4: 16, icm8: 16, \"ics#\": 16, ics4: 16, ics8: 16, is32: 16, s8mk: 16, icp4: 16, icl4: 32, icl8: 32, il32: 32, l8mk: 32, icp5: 32, ic11: 32, ich4: 48, ich8: 48, ih32: 48, h8mk: 48, icp6: 64, ic12: 32, it32: 128, t8mk: 128, ic07: 128, ic08: 256, ic13: 256, ic09: 512, ic14: 512, ic10: 1024, }; function u(e, t) { var r = t + a; return [e.toString(\"ascii\", t, r), e.readUInt32BE(r)]; } function c(e) { var t = s[e]; return { width: t, height: t, type: e }; } function l(e) { var t, r, a, o = e.length, s = n, l = e.readUInt32BE(i); if (((t = u(e, s)), (r = c(t[0])), (s += t[1]), s === l)) return r; a = { width: r.width, height: r.height, images: [r] }; while (s < l && s < o) (t = u(e, s)), (r = c(t[0])), (s += t[1]), a.images.push(r); return a; } e.exports = { detect: o, calculate: l }; }, \"62e4\": function (e, t) { e.exports = function (e) { return ( e.webpackPolyfill || ((e.deprecate = function () {}), (e.paths = []), e.children || (e.children = []), Object.defineProperty(e, \"loaded\", { enumerable: !0, get: function () { return e.l; }, }), Object.defineProperty(e, \"id\", { enumerable: !0, get: function () { return e.i; }, }), (e.webpackPolyfill = 1)), e ); }; }, \"640f\": function (e, t, r) { (function (t, n) { e.exports = n(r(\"21bf\")); })(0, function (e) { return e.enc.Hex; }); }, 6438: function (e, t, r) { var n = r(\"03d6\"), i = r(\"9742\").concat(\"length\", \"prototype\"); t.f = Object.getOwnPropertyNames || function (e) { return n(e, i); }; }, 6444: function (e, t) { var r = function (e) { return e.replace(/^\\s+|\\s+$/g, \"\"); }, n = function (e) { return \"[object Array]\" === Object.prototype.toString.call(e); }; e.exports = function (e) { if (!e) return {}; for (var t = {}, i = r(e).split(\"\\n\"), a = 0; a < i.length; a++) { var o = i[a], s = o.indexOf(\":\"), u = r(o.slice(0, s)).toLowerCase(), c = r(o.slice(s + 1)); \"undefined\" === typeof t[u] ? (t[u] = c) : n(t[u]) ? t[u].push(c) : (t[u] = [t[u], c]); } return t; }; }, \"649e\": function (e, t, r) { \"use strict\"; var n = r(\"ebb5\"), i = r(\"b727\").some, a = n.aTypedArray, o = n.exportTypedArrayMethod; o(\"some\", function (e) { return i(a(this), e, arguments.length > 1 ? arguments[1] : void 0); }); }, \"64a4\": function (e, t, r) { \"use strict\"; (function (e) { Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.ID3v2Parser = void 0); const n = r(\"6f58\"), i = r(\"d3ab\"), a = r(\"41db\"), o = r(\"0662\"); class s { static removeUnsyncBytes(e) { let t = 0, r = 0; while (t < e.length - 1) t !== r && (e[r] = e[t]), (t += 255 === e[t] && 0 === e[t + 1] ? 2 : 1), r++; return t < e.length && (e[r++] = e[t]), e.slice(0, r); } static getFrameHeaderLength(e) { switch (e) { case 2: return 6; case 3: case 4: return 10; default: throw new Error(\"header versionIndex is incorrect\"); } } static readFrameFlags(e) { return { status: { tag_alter_preservation: i.getBit(e, 0, 6), file_alter_preservation: i.getBit(e, 0, 5), read_only: i.getBit(e, 0, 4), }, format: { grouping_identity: i.getBit(e, 1, 7), compression: i.getBit(e, 1, 3), encryption: i.getBit(e, 1, 2), unsynchronisation: i.getBit(e, 1, 1), data_length_indicator: i.getBit(e, 1, 0), }, }; } static readFrameData(e, t, r, n, i) { const o = new a.FrameParser(r, i); switch (r) { case 2: return o.readData(e, t.id, n); case 3: case 4: return ( t.flags.format.unsynchronisation && (e = s.removeUnsyncBytes(e)), t.flags.format.data_length_indicator && (e = e.slice(4, e.length)), o.readData(e, t.id, n) ); default: throw new Error(\"Unexpected majorVer: \" + r); } } static makeDescriptionTagName(e, t) { return e + (t ? \":\" + t : \"\"); } async parse(e, t, r) { (this.tokenizer = t), (this.metadata = e), (this.options = r); const n = await this.tokenizer.readToken(o.ID3v2Header); if (\"ID3\" !== n.fileIdentifier) throw new Error( \"expected ID3-header file-identifier 'ID3' was not found\" ); return ( (this.id3Header = n), (this.headerType = \"ID3v2.\" + n.version.major), n.flags.isExtendedHeader ? this.parseExtendedHeader() : this.parseId3Data(n.size) ); } async parseExtendedHeader() { const e = await this.tokenizer.readToken(o.ExtendedHeader), t = e.size - o.ExtendedHeader.len; return t > 0 ? this.parseExtendedHeaderData(t, e.size) : this.parseId3Data(this.id3Header.size - e.size); } async parseExtendedHeaderData(t, r) { const n = e.alloc(t); return ( await this.tokenizer.readBuffer(n, { length: t }), this.parseId3Data(this.id3Header.size - r) ); } async parseId3Data(t) { const r = e.alloc(t); await this.tokenizer.readBuffer(r, { length: t }); for (const e of this.parseMetadata(r)) if (\"TXXX\" === e.id) { if (e.value) for (const t of e.value.text) this.addTag( s.makeDescriptionTagName(e.id, e.value.description), t ); } else if (\"COM\" === e.id) for (const t of e.value) this.addTag( s.makeDescriptionTagName(e.id, t.description), t.text ); else if (\"COMM\" === e.id) for (const t of e.value) this.addTag(s.makeDescriptionTagName(e.id, t.description), t); else if (Array.isArray(e.value)) for (const t of e.value) this.addTag(e.id, t); else this.addTag(e.id, e.value); } addTag(e, t) { this.metadata.addTag(this.headerType, e, t); } parseMetadata(e) { let t = 0; const r = []; while (1) { if (t === e.length) break; const n = s.getFrameHeaderLength(this.id3Header.version.major); if (t + n > e.length) { this.metadata.addWarning(\"Illegal ID3v2 tag length\"); break; } const i = e.slice(t, (t += n)), a = this.readFrameHeader(i, this.id3Header.version.major), o = e.slice(t, (t += a.length)), u = s.readFrameData( o, a, this.id3Header.version.major, !this.options.skipCovers, this.metadata ); u && r.push({ id: a.id, value: u }); } return r; } readFrameHeader(e, t) { let r; switch (t) { case 2: (r = { id: e.toString(\"ascii\", 0, 3), length: n.UINT24_BE.get(e, 3), }), r.id.match(/[A-Z0-9]{3}/g) || this.metadata.addWarning( `Invalid ID3v2.${this.id3Header.version.major} frame-header-ID: ${r.id}` ); break; case 3: case 4: (r = { id: e.toString(\"ascii\", 0, 4), length: (4 === t ? o.UINT32SYNCSAFE : n.UINT32_BE).get(e, 4), flags: s.readFrameFlags(e.slice(8, 10)), }), r.id.match(/[A-Z0-9]{4}/g) || this.metadata.addWarning( `Invalid ID3v2.${this.id3Header.version.major} frame-header-ID: ${r.id}` ); break; default: throw new Error(\"Unexpected majorVer: \" + t); } return r; } } t.ID3v2Parser = s; }).call(this, r(\"1c35\").Buffer); }, 6547: function (e, t, r) { var n = r(\"e330\"), i = r(\"5926\"), a = r(\"577e\"), o = r(\"1d80\"), s = n(\"\".charAt), u = n(\"\".charCodeAt), c = n(\"\".slice), l = function (e) { return function (t, r) { var n, l, f = a(o(t)), h = i(r), d = f.length; return h < 0 || h >= d ? e ? \"\" : void 0 : ((n = u(f, h)), n < 55296 || n > 56319 || h + 1 === d || (l = u(f, h + 1)) < 56320 || l > 57343 ? e ? s(f, h) : n : e ? c(f, h, h + 2) : l - 56320 + ((n - 55296) < 10) + 65536); }; }; e.exports = { codeAt: l(!1), charAt: l(!0) }; }, 6566: function (e, t, r) { \"use strict\"; var n = r(\"9bf2\").f, i = r(\"7c73\"), a = r(\"e2cc\"), o = r(\"0366\"), s = r(\"19aa\"), u = r(\"2266\"), c = r(\"7dd0\"), l = r(\"2626\"), f = r(\"83ab\"), h = r(\"f183\").fastKey, d = r(\"69f3\"), A = d.set, p = d.getterFor; e.exports = { getConstructor: function (e, t, r, c) { var l = e(function (e, n) { s(e, d), A(e, { type: t, index: i(null), first: void 0, last: void 0, size: 0, }), f || (e.size = 0), void 0 != n && u(n, e[c], { that: e, AS_ENTRIES: r }); }), d = l.prototype, g = p(t), m = function (e, t, r) { var n, i, a = g(e), o = b(e, t); return ( o ? (o.value = r) : ((a.last = o = { index: (i = h(t, !0)), key: t, value: r, previous: (n = a.last), next: void 0, removed: !1, }), a.first || (a.first = o), n && (n.next = o), f ? a.size++ : e.size++, \"F\" !== i && (a.index[i] = o)), e ); }, b = function (e, t) { var r, n = g(e), i = h(t); if (\"F\" !== i) return n.index[i]; for (r = n.first; r; r = r.next) if (r.key == t) return r; }; return ( a(d, { clear: function () { var e = this, t = g(e), r = t.index, n = t.first; while (n) (n.removed = !0), n.previous && (n.previous = n.previous.next = void 0), delete r[n.index], (n = n.next); (t.first = t.last = void 0), f ? (t.size = 0) : (e.size = 0); }, delete: function (e) { var t = this, r = g(t), n = b(t, e); if (n) { var i = n.next, a = n.previous; delete r.index[n.index], (n.removed = !0), a && (a.next = i), i && (i.previous = a), r.first == n && (r.first = i), r.last == n && (r.last = a), f ? r.size-- : t.size--; } return !!n; }, forEach: function (e) { var t, r = g(this), n = o(e, arguments.length > 1 ? arguments[1] : void 0); while ((t = t ? t.next : r.first)) { n(t.value, t.key, this); while (t && t.removed) t = t.previous; } }, has: function (e) { return !!b(this, e); }, }), a( d, r ? { get: function (e) { var t = b(this, e); return t && t.value; }, set: function (e, t) { return m(this, 0 === e ? 0 : e, t); }, } : { add: function (e) { return m(this, (e = 0 === e ? 0 : e), e); }, } ), f && n(d, \"size\", { get: function () { return g(this).size; }, }), l ); }, setStrong: function (e, t, r) { var n = t + \" Iterator\", i = p(t), a = p(n); c( e, t, function (e, t) { A(this, { type: n, target: e, state: i(e), kind: t, last: void 0, }); }, function () { var e = a(this), t = e.kind, r = e.last; while (r && r.removed) r = r.previous; return e.target && (e.last = r = r ? r.next : e.state.first) ? \"keys\" == t ? { value: r.key, done: !1 } : \"values\" == t ? { value: r.value, done: !1 } : { value: [r.key, r.value], done: !1 } : ((e.target = void 0), { value: void 0, done: !0 }); }, r ? \"entries\" : \"values\", !r, !0 ), l(t); }, }; }, \"656c\": function (e, t, r) { (function (t, n, i, a) { var o = (function () { var e = \"undefined\" !== typeof document && document.currentScript ? document.currentScript.src : void 0; return ( (e = e || t), function (t) { t = t || {}; var o, s, u = \"undefined\" !== typeof t ? t : {}; u[\"ready\"] = new Promise(function (e, t) { (o = e), (s = t); }); var c, l = {}; for (c in u) u.hasOwnProperty(c) && (l[c] = u[c]); var f, h, d, A, p, g = [], m = \"object\" === typeof window, b = \"function\" === typeof importScripts, v = \"object\" === typeof n && \"object\" === typeof n.versions && \"string\" === typeof n.versions.node, y = \"\"; function I(e) { return u[\"locateFile\"] ? u[\"locateFile\"](e, y) : y + e; } function E(e) { if (!(e instanceof qt)) { var t = e; C(\"exiting due to exception: \" + t); } } v ? ((y = b ? r(\"df7c\").dirname(y) + \"/\" : i + \"/\"), (f = function (e, t) { var n = jt(e); return n ? t ? n : n.toString() : (A || (A = r(\"3e8f\")), p || (p = r(\"df7c\")), (e = p[\"normalize\"](e)), A[\"readFileSync\"](e, t ? null : \"utf8\")); }), (d = function (e) { var t = f(e, !0); return t.buffer || (t = new Uint8Array(t)), T(t.buffer), t; }), (h = function (e, t, n) { var i = jt(e); i && t(i), A || (A = r(\"3e8f\")), p || (p = r(\"df7c\")), (e = p[\"normalize\"](e)), A[\"readFile\"](e, function (e, r) { e ? n(e) : t(r.buffer); }); }), n[\"argv\"].length > 1 && n[\"argv\"][1].replace(/\\\\/g, \"/\"), (g = n[\"argv\"].slice(2)), n[\"on\"](\"uncaughtException\", function (e) { if (!(e instanceof qt)) throw e; }), n[\"on\"](\"unhandledRejection\", function (e) { throw e; }), function (e, t) { if (se()) throw ((n[\"exitCode\"] = e), t); E(t), n[\"exit\"](e); }, (u[\"inspect\"] = function () { return \"[Emscripten Module object]\"; })) : (m || b) && (b ? (y = self.location.href) : \"undefined\" !== typeof document && document.currentScript && (y = document.currentScript.src), e && (y = e), (y = 0 !== y.indexOf(\"blob:\") ? y.substr( 0, y.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1 ) : \"\"), (f = function (e) { try { var t = new XMLHttpRequest(); return t.open(\"GET\", e, !1), t.send(null), t.responseText; } catch (C) { var r = jt(e); if (r) return Lt(r); throw C; } }), b && (d = function (e) { try { var t = new XMLHttpRequest(); return ( t.open(\"GET\", e, !1), (t.responseType = \"arraybuffer\"), t.send(null), new Uint8Array(t.response) ); } catch (C) { var r = jt(e); if (r) return r; throw C; } }), (h = function (e, t, r) { var n = new XMLHttpRequest(); n.open(\"GET\", e, !0), (n.responseType = \"arraybuffer\"), (n.onload = function () { if (200 == n.status || (0 == n.status && n.response)) t(n.response); else { var i = jt(e); i ? t(i.buffer) : r(); } }), (n.onerror = r), n.send(null); })); var w = u[\"print\"] || console.log.bind(console), C = u[\"printErr\"] || console.warn.bind(console); for (c in l) l.hasOwnProperty(c) && (u[c] = l[c]); (l = null), u[\"arguments\"] && (g = u[\"arguments\"]), u[\"thisProgram\"] && u[\"thisProgram\"], u[\"quit\"] && u[\"quit\"]; var _, B = function (e) { e; }; u[\"wasmBinary\"] && (_ = u[\"wasmBinary\"]); var x, S = u[\"noExitRuntime\"] || !0; function k(e, t, r) { switch ( ((t = t || \"i8\"), \"*\" === t.charAt(t.length - 1) && (t = \"i32\"), t) ) { case \"i1\": return P[e >> 0]; case \"i8\": return P[e >> 0]; case \"i16\": return j[e >> 1]; case \"i32\": return G[e >> 2]; case \"i64\": return G[e >> 2]; case \"float\": return W[e >> 2]; case \"double\": return Number(Y[e >> 3]); default: ve(\"invalid type for getValue: \" + t); } return null; } \"object\" !== typeof WebAssembly && ve(\"no native wasm support detected\"); var Q = !1; function T(e, t) { e || ve(\"Assertion failed: \" + t); } var M = \"undefined\" !== typeof TextDecoder ? new TextDecoder(\"utf8\") : void 0; function D(e, t, r) { var n = t + r, i = t; while (e[i] && !(i >= n)) ++i; if (i - t > 16 && e.subarray && M) return M.decode(e.subarray(t, i)); var a = \"\"; while (t < i) { var o = e[t++]; if (128 & o) { var s = 63 & e[t++]; if (192 != (224 & o)) { var u = 63 & e[t++]; if ( ((o = 224 == (240 & o) ? ((15 & o) < 12) | (s < 6) | u : ((7 & o) < 18) | (s < 12) | (u < 6) | (63 & e[t++])), o < 65536) ) a += String.fromCharCode(o); else { var c = o - 65536; a += String.fromCharCode( 55296 | (c >> 10), 56320 | (1023 & c) ); } } else a += String.fromCharCode(((31 & o) < 6) | s); } else a += String.fromCharCode(o); } return a; } function R(e, t) { return e ? D(U, e, t) : \"\"; } function O(e, t, r, n) { if (!(n > 0)) return 0; for (var i = r, a = r + n - 1, o = 0; o < e.length; ++o) { var s = e.charCodeAt(o); if (s >= 55296 && s 10), 56320 | (1023 & a) ); } else n += String.fromCharCode(i); } return n; } function X(e, t, r) { if ((void 0 === r && (r = 2147483647), r < 4)) return 0; for (var n = t, i = n + r - 4, a = 0; a < e.length; ++a) { var o = e.charCodeAt(a); if (o >= 55296 && o i)) break; } return (G[t >> 2] = 0), t - n; } function Z(e) { for (var t = 0, r = 0; r < e.length; ++r) { var n = e.charCodeAt(r); n >= 55296 && n 0; } function ue() { if (u[\"preRun\"]) { \"function\" == typeof u[\"preRun\"] && (u[\"preRun\"] = [u[\"preRun\"]]); while (u[\"preRun\"].length) fe(u[\"preRun\"].shift()); } xe(ne); } function ce() { !0, xe(ie); } function le() { if (u[\"postRun\"]) { \"function\" == typeof u[\"postRun\"] && (u[\"postRun\"] = [u[\"postRun\"]]); while (u[\"postRun\"].length) de(u[\"postRun\"].shift()); } xe(ae); } function fe(e) { ne.unshift(e); } function he(e) { ie.unshift(e); } function de(e) { ae.unshift(e); } var Ae = 0, pe = null, ge = null; function me(e) { Ae++, u[\"monitorRunDependencies\"] && u[\"monitorRunDependencies\"](Ae); } function be(e) { if ( (Ae--, u[\"monitorRunDependencies\"] && u[\"monitorRunDependencies\"](Ae), 0 == Ae && (null !== pe && (clearInterval(pe), (pe = null)), ge)) ) { var t = ge; (ge = null), t(); } } function ve(e) { u[\"onAbort\"] && u[\"onAbort\"](e), (e = \"Aborted(\" + e + \")\"), C(e), (Q = !0), 1, (e += \". Build with -s ASSERTIONS=1 for more info.\"); var t = new WebAssembly.RuntimeError(e); throw (s(t), t); } (u[\"preloadedImages\"] = {}), (u[\"preloadedAudios\"] = {}); var ye, Ie = \"data:application/octet-stream;base64,\"; function Ee(e) { return e.startsWith(Ie); } function we(e) { return e.startsWith(\"file://\"); } function Ce(e) { try { if (e == ye && _) return new Uint8Array(_); var t = jt(e); if (t) return t; if (d) return d(e); throw \"both async and sync fetching of the wasm failed\"; } catch (C) { ve(C); } } function _e() { if (!_ && (m || b)) { if (\"function\" === typeof fetch && !we(ye)) return fetch(ye, { credentials: \"same-origin\" }) .then(function (e) { if (!e[\"ok\"]) throw ( \"failed to load wasm binary file at '\" + ye + \"'\" ); return e[\"arrayBuffer\"](); }) .catch(function () { return Ce(ye); }); if (h) return new Promise(function (e, t) { h( ye, function (t) { e(new Uint8Array(t)); }, t ); }); } return Promise.resolve().then(function () { return Ce(ye); }); } function Be() { var e = { a: Gt }; function t(e, t) { var r = e.exports; (u[\"asm\"] = r), (x = u[\"asm\"][\"r\"]), te(x.buffer), (re = u[\"asm\"][\"u\"]), he(u[\"asm\"][\"s\"]), be(\"wasm-instantiate\"); } function r(e) { t(e[\"instance\"]); } function n(t) { return _e() .then(function (t) { return WebAssembly.instantiate(t, e); }) .then(function (e) { return e; }) .then(t, function (e) { C(\"failed to asynchronously prepare wasm: \" + e), ve(e); }); } function i() { return _ || \"function\" !== typeof WebAssembly.instantiateStreaming || Ee(ye) || we(ye) || \"function\" !== typeof fetch ? n(r) : fetch(ye, { credentials: \"same-origin\" }).then(function ( t ) { var i = WebAssembly.instantiateStreaming(t, e); return i.then(r, function (e) { return ( C(\"wasm streaming compile failed: \" + e), C(\"falling back to ArrayBuffer instantiation\"), n(r) ); }); }); } if ((me(\"wasm-instantiate\"), u[\"instantiateWasm\"])) try { var a = u[\"instantiateWasm\"](e, t); return a; } catch (o) { return ( C( \"Module.instantiateWasm callback failed with error: \" + o ), !1 ); } return i().catch(s), {}; } function xe(e) { while (e.length > 0) { var t = e.shift(); if (\"function\" != typeof t) { var r = t.func; \"number\" === typeof r ? void 0 === t.arg ? ke(r)() : ke(r)(t.arg) : r(void 0 === t.arg ? null : t.arg); } else t(u); } } (ye = \"data:application/octet-stream;base64,\"), Ee(ye) || (ye = I(ye)); var Se = []; function ke(e) { var t = Se[e]; return ( t || (e >= Se.length && (Se.length = e + 1), (Se[e] = t = re.get(e))), t ); } function Qe(e, t, r, n, i) {} function Te(e) { switch (e) { case 1: return 0; case 2: return 1; case 4: return 2; case 8: return 3; default: throw new TypeError(\"Unknown type size: \" + e); } } function Me() { for (var e = new Array(256), t = 0; t < 256; ++t) e[t] = String.fromCharCode(t); De = e; } var De = void 0; function Re(e) { var t = \"\", r = e; while (U[r]) t += De[U[r++]]; return t; } var Oe = {}, Ne = {}, Fe = {}, Le = 48, Pe = 57; function Ue(e) { if (void 0 === e) return \"_unknown\"; e = e.replace(/[^a-zA-Z0-9_]/g, \"$\"); var t = e.charCodeAt(0); return t >= Le && t a]); }, destructorFunction: null, }); } var Ke = [], Ve = [ {}, { value: void 0 }, { value: null }, { value: !0 }, { value: !1 }, ]; function Xe(e) { e > 4 && 0 === --Ve[e].refcount && ((Ve[e] = void 0), Ke.push(e)); } function Ze() { for (var e = 0, t = 5; t < Ve.length; ++t) void 0 !== Ve[t] && ++e; return e; } function et() { for (var e = 5; e < Ve.length; ++e) if (void 0 !== Ve[e]) return Ve[e]; return null; } function tt() { (u[\"count_emval_handles\"] = Ze), (u[\"get_first_emval\"] = et); } var rt = { toValue: function (e) { return ( e || He(\"Cannot use deleted val. handle = \" + e), Ve[e].value ); }, toHandle: function (e) { switch (e) { case void 0: return 1; case null: return 2; case !0: return 3; case !1: return 4; default: var t = Ke.length ? Ke.pop() : Ve.length; return (Ve[t] = { refcount: 1, value: e }), t; } }, }; function nt(e) { return this[\"fromWireType\"](H[e >> 2]); } function it(e, t) { (t = Re(t)), Je(e, { name: t, fromWireType: function (e) { var t = rt.toValue(e); return Xe(e), t; }, toWireType: function (e, t) { return rt.toHandle(t); }, argPackAdvance: 8, readValueFromPointer: nt, destructorFunction: null, }); } function at(e) { if (null === e) return \"null\"; var t = typeof e; return \"object\" === t || \"array\" === t || \"function\" === t ? e.toString() : \"\" + e; } function ot(e, t) { switch (t) { case 2: return function (e) { return this[\"fromWireType\"](W[e >> 2]); }; case 3: return function (e) { return this[\"fromWireType\"](Y[e >> 3]); }; default: throw new TypeError(\"Unknown float type: \" + e); } } function st(e, t, r) { var n = Te(r); (t = Re(t)), Je(e, { name: t, fromWireType: function (e) { return e; }, toWireType: function (e, t) { return t; }, argPackAdvance: 8, readValueFromPointer: ot(t, n), destructorFunction: null, }); } function ut(e) { while (e.length) { var t = e.pop(), r = e.pop(); r(t); } } function ct(e, t, r, n, i) { var a = t.length; a < 2 && He( \"argTypes array size mismatch! Must at least get return value and 'this' types!\" ); for ( var o = null !== t[1] && null !== r, s = !1, u = 1; u < t.length; ++u ) if (null !== t[u] && void 0 === t[u].destructorFunction) { s = !0; break; } var c = \"void\" !== t[0].name, l = a - 2, f = new Array(l), h = [], d = []; return function () { var r; arguments.length !== l && He( \"function \" + e + \" called with \" + arguments.length + \" arguments, expected \" + l + \" args!\" ), (d.length = 0), (h.length = o ? 2 : 1), (h[0] = i), o && ((r = t[1].toWireType(d, this)), (h[1] = r)); for (var a = 0; a < l; ++a) (f[a] = t[a + 2].toWireType(d, arguments[a])), h.push(f[a]); var u = n.apply(null, h); function A(e) { if (s) ut(d); else for (var n = o ? 1 : 2; n < t.length; n++) { var i = 1 === n ? r : f[n - 2]; null !== t[n].destructorFunction && t[n].destructorFunction(i); } if (c) return t[0].fromWireType(e); } return A(u); }; } function lt(e, t, r) { if (void 0 === e[t].overloadTable) { var n = e[t]; (e[t] = function () { return ( e[t].overloadTable.hasOwnProperty(arguments.length) || He( \"Function '\" + r + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + e[t].overloadTable + \")!\" ), e[t].overloadTable[arguments.length].apply( this, arguments ) ); }), (e[t].overloadTable = []), (e[t].overloadTable[n.argCount] = n); } } function ft(e, t, r) { u.hasOwnProperty(e) ? ((void 0 === r || (void 0 !== u[e].overloadTable && void 0 !== u[e].overloadTable[r])) && He(\"Cannot register public name '\" + e + \"' twice\"), lt(u, e, e), u.hasOwnProperty(r) && He( \"Cannot register multiple overloads of a function with the same number of arguments (\" + r + \")!\" ), (u[e].overloadTable[r] = t)) : ((u[e] = t), void 0 !== r && (u[e].numArguments = r)); } function ht(e, t) { for (var r = [], n = 0; n < e; n++) r.push(G[(t >> 2) + n]); return r; } function dt(e, t, r) { u.hasOwnProperty(e) || Ye(\"Replacing nonexistant public symbol\"), void 0 !== u[e].overloadTable && void 0 !== r ? (u[e].overloadTable[r] = t) : ((u[e] = t), (u[e].argCount = r)); } function At(e, t, r) { var n = u[\"dynCall_\" + e]; return r && r.length ? n.apply(null, [t].concat(r)) : n.call(null, t); } function pt(e, t, r) { return e.includes(\"j\") ? At(e, t, r) : ke(t).apply(null, r); } function gt(e, t) { var r = []; return function () { r.length = arguments.length; for (var n = 0; n < arguments.length; n++) r[n] = arguments[n]; return pt(e, t, r); }; } function mt(e, t) { function r() { return e.includes(\"j\") ? gt(e, t) : ke(t); } e = Re(e); var n = r(); return ( \"function\" !== typeof n && He( \"unknown function pointer with signature \" + e + \": \" + t ), n ); } var bt = void 0; function vt(e) { var t = Wt(e), r = Re(t); return Yt(t), r; } function yt(e, t) { var r = [], n = {}; function i(e) { n[e] || Ne[e] || (Fe[e] ? Fe[e].forEach(i) : (r.push(e), (n[e] = !0))); } throw (t.forEach(i), new bt(e + \": \" + r.map(vt).join([\", \"]))); } function It(e, t, r, n, i, a) { var o = ht(t, r); (e = Re(e)), (i = mt(n, i)), ft( e, function () { yt(\"Cannot call \" + e + \" due to unbound types\", o); }, t - 1 ), qe([], o, function (r) { var n = [r[0], null].concat(r.slice(1)); return dt(e, ct(e, n, null, i, a), t - 1), []; }); } function Et(e, t, r) { switch (t) { case 0: return r ? function (e) { return P[e]; } : function (e) { return U[e]; }; case 1: return r ? function (e) { return j[e >> 1]; } : function (e) { return z[e >> 1]; }; case 2: return r ? function (e) { return G[e >> 2]; } : function (e) { return H[e >> 2]; }; default: throw new TypeError(\"Unknown integer type: \" + e); } } function wt(e, t, r, n, i) { (t = Re(t)), -1 === i && (i = 4294967295); var a = Te(r), o = function (e) { return e; }; if (0 === n) { var s = 32 - 8 * r; o = function (e) { return (e < s) >>> s; }; } var u = t.includes(\"unsigned\"); Je(e, { name: t, fromWireType: o, toWireType: function (e, r) { if (\"number\" !== typeof r && \"boolean\" !== typeof r) throw new TypeError( 'Cannot convert \"' + at(r) + '\" to ' + this.name ); if (r < n || r > i) throw new TypeError( 'Passing a number \"' + at(r) + '\" from JS side to C/C++ side to an argument of type \"' + t + '\", which is outside the valid range [' + n + \", \" + i + \"]!\" ); return u ? r >>> 0 : 0 | r; }, argPackAdvance: 8, readValueFromPointer: Et(t, a, 0 !== n), destructorFunction: null, }); } function Ct(e, t, r) { var n = [ Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array, ], i = n[t]; function a(e) { e >>= 2; var t = H, r = t[e], n = t[e + 1]; return new i(L, n, r); } (r = Re(r)), Je( e, { name: r, fromWireType: a, argPackAdvance: 8, readValueFromPointer: a, }, { ignoreDuplicateRegistrations: !0 } ); } function _t(e, t) { t = Re(t); var r = \"std::string\" === t; Je(e, { name: t, fromWireType: function (e) { var t, n = H[e >> 2]; if (r) for (var i = e + 4, a = 0; a 2], o = a(), u = e + 4, c = 0; c > s]) { var f = l - u, h = n(u, f); void 0 === r ? (r = h) : ((r += String.fromCharCode(0)), (r += h)), (u = l + t); } } return Yt(e), r; }, toWireType: function (e, n) { \"string\" !== typeof n && He(\"Cannot pass non-string to C++ string type \" + r); var a = o(n), u = Ht(4 + a + t); return ( (H[u >> 2] = a >> s), i(n, u + 4, a + t), null !== e && e.push(Yt, u), u ); }, argPackAdvance: 8, readValueFromPointer: nt, destructorFunction: function (e) { Yt(e); }, }); } function xt(e, t) { (t = Re(t)), Je(e, { isVoid: !0, name: t, argPackAdvance: 0, fromWireType: function () {}, toWireType: function (e, t) {}, }); } function St() { ve(\"\"); } function kt(e, t, r) { U.copyWithin(e, t, t + r); } function Qt(e) { ve(\"OOM\"); } function Tt(e) { U.length; (e >>>= 0), Qt(e); } var Mt = { mappings: {}, buffers: [null, [], []], printChar: function (e, t) { var r = Mt.buffers[e]; 0 === t || 10 === t ? ((1 === e ? w : C)(D(r, 0)), (r.length = 0)) : r.push(t); }, varargs: void 0, get: function () { Mt.varargs += 4; var e = G[(Mt.varargs - 4) >> 2]; return e; }, getStr: function (e) { var t = R(e); return t; }, get64: function (e, t) { return e; }, }; function Dt(e) { return 0; } function Rt(e, t, r, n, i) {} function Ot(e, t, r, n) { for (var i = 0, a = 0; a < r; a++) { var o = G[t >> 2], s = G[(t + 4) >> 2]; t += 8; for (var u = 0; u < s; u++) Mt.printChar(e, U[o + u]); i += s; } return (G[n >> 2] = i), 0; } function Nt(e) { B(e); } Me(), (Ge = u[\"BindingError\"] = ze(Error, \"BindingError\")), (We = u[\"InternalError\"] = ze(Error, \"InternalError\")), tt(), (bt = u[\"UnboundTypeError\"] = ze(Error, \"UnboundTypeError\")); var Ft = !1; function Lt(e) { for (var t = [], r = 0; r < e.length; r++) { var n = e[r]; n > 255 && (Ft && T( !1, \"Character code \" + n + \" (\" + String.fromCharCode(n) + \") at offset \" + r + \" not in 0x00-0xFF.\" ), (n &= 255)), t.push(String.fromCharCode(n)); } return t.join(\"\"); } var Pt = \"function\" === typeof atob ? atob : function (e) { var t, r, n, i, a, o, s, u = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\", c = \"\", l = 0; e = e.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\"); do { (i = u.indexOf(e.charAt(l++))), (a = u.indexOf(e.charAt(l++))), (o = u.indexOf(e.charAt(l++))), (s = u.indexOf(e.charAt(l++))), (t = (i < 2) | (a >> 4)), (r = ((15 & a) < 4) | (o >> 2)), (n = ((3 & o) < 6) | s), (c += String.fromCharCode(t)), 64 !== o && (c += String.fromCharCode(r)), 64 !== s && (c += String.fromCharCode(n)); } while (l < e.length); return c; }; function Ut(e) { if (\"boolean\" === typeof v && v) { var t = a.from(e, \"base64\"); return new Uint8Array( t[\"buffer\"], t[\"byteOffset\"], t[\"byteLength\"] ); } try { for ( var r = Pt(e), n = new Uint8Array(r.length), i = 0; i < r.length; ++i ) n[i] = r.charCodeAt(i); return n; } catch (o) { throw new Error(\"Converting base64 string to bytes failed.\"); } } function jt(e) { if (Ee(e)) return Ut(e.slice(Ie.length)); } var zt, Gt = { l: Qe, j: $e, i: it, f: st, c: It, b: wt, a: Ct, g: _t, e: Bt, q: xt, d: St, n: kt, o: Tt, p: Dt, k: Rt, h: Ot, m: Nt, }, Ht = (Be(), (u[\"___wasm_call_ctors\"] = function () { return (u[\"___wasm_call_ctors\"] = u[\"asm\"][\"s\"]).apply( null, arguments ); }), (u[\"_malloc\"] = function () { return (Ht = u[\"_malloc\"] = u[\"asm\"][\"t\"]).apply( null, arguments ); })), Wt = (u[\"___getTypeName\"] = function () { return (Wt = u[\"___getTypeName\"] = u[\"asm\"][\"v\"]).apply( null, arguments ); }), Yt = ((u[\"___embind_register_native_and_builtin_types\"] = function () { return (u[\"___embind_register_native_and_builtin_types\"] = u[\"asm\"][\"w\"]).apply(null, arguments); }), (u[\"_free\"] = function () { return (Yt = u[\"_free\"] = u[\"asm\"][\"x\"]).apply( null, arguments ); })); u[\"dynCall_jiji\"] = function () { return (u[\"dynCall_jiji\"] = u[\"asm\"][\"y\"]).apply( null, arguments ); }; function qt(e) { (this.name = \"ExitStatus\"), (this.message = \"Program terminated with exit(\" + e + \")\"), (this.status = e); } function Jt(e) { function t() { zt || ((zt = !0), (u[\"calledRun\"] = !0), Q || (ce(), o(u), u[\"onRuntimeInitialized\"] && u[\"onRuntimeInitialized\"](), le())); } (e = e || g), Ae > 0 || (ue(), Ae > 0 || (u[\"setStatus\"] ? (u[\"setStatus\"](\"Running...\"), setTimeout(function () { setTimeout(function () { u[\"setStatus\"](\"\"); }, 1), t(); }, 1)) : t())); } if ( ((u[\"getValue\"] = k), (u[\"UTF8ToString\"] = R), (u[\"writeArrayToMemory\"] = ee), (ge = function e() { zt || Jt(), zt || (ge = e); }), (u[\"run\"] = Jt), u[\"preInit\"]) ) { \"function\" == typeof u[\"preInit\"] && (u[\"preInit\"] = [u[\"preInit\"]]); while (u[\"preInit\"].length > 0) u[\"preInit\"].pop()(); } return Jt(), t.ready; } ); })(); e.exports = o; }).call(this, \"/index.js\", r(\"4362\"), \"/\", r(\"1c35\").Buffer); }, \"658f\": function (e, t, r) { r(\"6858\"); for ( var n = r(\"ef08\"), i = r(\"051b\"), a = r(\"8a0d\"), o = r(\"cc15\")(\"toStringTag\"), s = \"CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList\".split( \",\" ), u = 0; u < s.length; u++ ) { var c = s[u], l = n[c], f = l && l.prototype; f && !f[o] && i(f, o, c), (a[c] = a.Array); } }, \"65da\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.AsfParser = void 0); const n = r(\"cec2\"), i = r(\"9131\"), a = r(\"fa86\"), o = r(\"34eb\"), s = r(\"95c9\"), u = o(\"music-metadata:parser:ASF\"), c = \"asf\"; class l extends s.BasicParser { async parse() { const e = await this.tokenizer.readToken(a.TopLevelHeaderObjectToken); if (!e.objectId.equals(i.default.HeaderObject)) throw new Error( \"expected asf header; but was not found; got: \" + e.objectId.str ); try { await this.parseObjectHeader(e.numberOfHeaderObjects); } catch (t) { u(\"Error while parsing ASF: %s\", t); } } async parseObjectHeader(e) { let t; do { const e = await this.tokenizer.readToken(a.HeaderObjectToken); switch ((u(\"header GUID=%s\", e.objectId.str), e.objectId.str)) { case a.FilePropertiesObject.guid.str: const r = await this.tokenizer.readToken( new a.FilePropertiesObject(e) ); this.metadata.setFormat( \"duration\", Number(r.playDuration / BigInt(1e3)) / 1e4 - Number(r.preroll) / 1e3 ), this.metadata.setFormat(\"bitrate\", r.maximumBitrate); break; case a.StreamPropertiesObject.guid.str: const o = await this.tokenizer.readToken( new a.StreamPropertiesObject(e) ); this.metadata.setFormat(\"container\", \"ASF/\" + o.streamType); break; case a.HeaderExtensionObject.guid.str: const s = await this.tokenizer.readToken( new a.HeaderExtensionObject() ); await this.parseExtensionObject(s.extensionDataSize); break; case a.ContentDescriptionObjectState.guid.str: (t = await this.tokenizer.readToken( new a.ContentDescriptionObjectState(e) )), this.addTags(t); break; case a.ExtendedContentDescriptionObjectState.guid.str: (t = await this.tokenizer.readToken( new a.ExtendedContentDescriptionObjectState(e) )), this.addTags(t); break; case i.default.CodecListObject.str: const c = await a.readCodecEntries(this.tokenizer); c.forEach((e) => { this.metadata.addStreamInfo({ type: e.type.videoCodec ? n.TrackType.video : n.TrackType.audio, codecName: e.codecName, }); }); const l = c .filter((e) => e.type.audioCodec) .map((e) => e.codecName) .join(\"/\"); this.metadata.setFormat(\"codec\", l); break; case i.default.StreamBitratePropertiesObject.str: await this.tokenizer.ignore( e.objectSize - a.HeaderObjectToken.len ); break; case i.default.PaddingObject.str: u(\"Padding: %s bytes\", e.objectSize - a.HeaderObjectToken.len), await this.tokenizer.ignore( e.objectSize - a.HeaderObjectToken.len ); break; default: this.metadata.addWarning( \"Ignore ASF-Object-GUID: \" + e.objectId.str ), u(\"Ignore ASF-Object-GUID: %s\", e.objectId.str), await this.tokenizer.readToken(new a.IgnoreObjectState(e)); } } while (--e); } addTags(e) { e.forEach((e) => { this.metadata.addTag(c, e.id, e.value); }); } async parseExtensionObject(e) { do { const t = await this.tokenizer.readToken(a.HeaderObjectToken), r = t.objectSize - a.HeaderObjectToken.len; switch (t.objectId.str) { case a.ExtendedStreamPropertiesObjectState.guid.str: await this.tokenizer.readToken( new a.ExtendedStreamPropertiesObjectState(t) ); break; case a.MetadataObjectState.guid.str: const e = await this.tokenizer.readToken( new a.MetadataObjectState(t) ); this.addTags(e); break; case a.MetadataLibraryObjectState.guid.str: const n = await this.tokenizer.readToken( new a.MetadataLibraryObjectState(t) ); this.addTags(n); break; case i.default.PaddingObject.str: await this.tokenizer.ignore(r); break; case i.default.CompatibilityObject.str: this.tokenizer.ignore(r); break; case i.default.ASF_Index_Placeholder_Object.str: await this.tokenizer.ignore(r); break; default: this.metadata.addWarning( \"Ignore ASF-Object-GUID: \" + t.objectId.str ), await this.tokenizer.readToken(new a.IgnoreObjectState(t)); break; } e -= t.objectSize; } while (e > 0); } } t.AsfParser = l; }, \"65f0\": function (e, t, r) { var n = r(\"0b42\"); e.exports = function (e, t) { return new (n(e))(0 === t ? 0 : t); }; }, 6613: function (e, t, r) { r(\"fb6a\"), r(\"d3b7\"), r(\"b0c0\"), r(\"a630\"), r(\"3ca3\"), r(\"ac1f\"), r(\"00b4\"); var n = r(\"5a43\"); function i(e, t) { if (e) { if (\"string\" === typeof e) return n(e, t); var r = Object.prototype.toString.call(e).slice(8, -1); return ( \"Object\" === r && e.constructor && (r = e.constructor.name), \"Map\" === r || \"Set\" === r ? Array.from(e) : \"Arguments\" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? n(e, t) : void 0 ); } } (e.exports = i), (e.exports.__esModule = !0), (e.exports[\"default\"] = e.exports); }, \"662d\": function (e, t, r) { \"use strict\"; e.exports = function (e, t, r) { var n = e + t - r, i = Math.abs(n - e), a = Math.abs(n - t), o = Math.abs(n - r); return i 12), (g = (4017 * g - 799 * b + 2048) >> 12), (b = d), (d = I + y), (y = I - y), (A = E + b), (v = E - b), (p = w + g), (b = w - g), (g = C + m), (m = C - m), (d = 16 > d ? 0 : 4080 > 4), (A = 16 > A ? 0 : 4080 > 4), (p = 16 > p ? 0 : 4080 > 4), (g = 16 > g ? 0 : 4080 > 4), (m = 16 > m ? 0 : 4080 > 4), (b = 16 > b ? 0 : 4080 > 4), (v = 16 > v ? 0 : 4080 > 4), (y = 16 > y ? 0 : 4080 > 4), (f[u + l] = d), (f[u + l + 8] = A), (f[u + l + 16] = p), (f[u + l + 24] = g), (f[u + l + 32] = m), (f[u + l + 40] = b), (f[u + l + 48] = v), (f[u + l + 56] = y)); } return t.a; } function u(e, t) { var r = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : t, n = e.length - 1; if (((r = r < t ? r : t), t >= n)) return null; var i = (e[t] < 8) | e[t + 1]; if (65472 >> 3] >>> (7 & c)) & 1)), c++, null == u._decodeG3.allow2D && (u._decodeG3.allow2D = w), u._decodeG3.allow2D || ((w = !0), c--), (f = \"\"), (v = 0), y++, (p = 0), (d = u._makeDiff(h)), (h = [])); } h.length == o && u._writeBits(h, i, 8 * a + y * C); }), (e.decode._addNtimes = function (e, t, r) { for (var n = 0; n < t; n++) e.push(r); }), (e.decode._writeBits = function (e, t, r) { for (var n = 0; n < e.length; n++) t[(r + n) >>> 3] |= e[n] < (7 - ((r + n) & 7)); }), (e.decode._decodeLZW = function (t, r, n, i) { if (null == e.decode._lzwTab) { for ( var a = new Uint32Array(65535), o = new Uint16Array(65535), s = new Uint8Array(2e6), u = 0; u < 256; u++ ) (s[u < 2] = u), (a[u] = u < 2), (o[u] = 1); e.decode._lzwTab = [a, o, s]; } var c = e.decode._copyData, l = e.decode._lzwTab[0], f = e.decode._lzwTab[1], h = ((s = e.decode._lzwTab[2]), 258), d = 1032, A = 9, p = r < 3, g = 256, m = 257, b = 0, v = 0, y = 0; while (1) { if ( ((b = (t[p >>> 3] < 16) | (t[(p + 8) >>> 3] < 8) | t[(p + 16) >>> 3]), (v = (b >> (24 - (7 & p) - A)) & ((1 < A) - 1)), (p += A), v == m) ) break; if (v == g) { if ( ((A = 9), (h = 258), (d = 1032), (b = (t[p >>> 3] < 16) | (t[(p + 8) >>> 3] < 8) | t[(p + 16) >>> 3]), (v = (b >> (24 - (7 & p) - A)) & ((1 < A) - 1)), (p += A), v == m) ) break; (n[i] = v), i++; } else if (v < h) { var I = l[v], E = f[v]; if ((c(s, I, n, i, E), (i += E), y >= h)) (l[h] = d), (s[l[h]] = I[0]), (f[h] = 1), (d = (d + 1 + 3) & -4), h++; else { l[h] = d; var w = l[y], C = f[y]; c(s, w, s, d, C), (s[d + C] = s[I]), C++, (f[h] = C), h++, (d = (d + C + 3) & -4); } h + 1 == 1 < A && A++; } else { if (y >= h) (l[h] = d), (f[h] = 0), h++; else { l[h] = d; (w = l[y]), (C = f[y]); c(s, w, s, d, C), (s[d + C] = s[d]), C++, (f[h] = C), h++, c(s, d, n, i, C), (i += C), (d = (d + C + 3) & -4); } h + 1 == 1 < A && A++; } y = v; } }), (e.decode._copyData = function (e, t, r, n, i) { for (var a = 0; a < i; a += 4) (r[n + a] = e[t + a]), (r[n + a + 1] = e[t + a + 1]), (r[n + a + 2] = e[t + a + 2]), (r[n + a + 3] = e[t + a + 3]); }), (e.tags = { 254: \"NewSubfileType\", 255: \"SubfileType\", 256: \"ImageWidth\", 257: \"ImageLength\", 258: \"BitsPerSample\", 259: \"Compression\", 262: \"PhotometricInterpretation\", 266: \"FillOrder\", 269: \"DocumentName\", 270: \"ImageDescription\", 271: \"Make\", 272: \"Model\", 273: \"StripOffset\", 274: \"Orientation\", 277: \"SamplesPerPixel\", 278: \"RowsPerStrip\", 279: \"StripByteCounts\", 280: \"MinSampleValue\", 281: \"MaxSampleValue\", 282: \"XResolution\", 283: \"YResolution\", 284: \"PlanarConfiguration\", 285: \"PageName\", 286: \"XPosition\", 287: \"YPosition\", 292: \"T4Options\", 296: \"ResolutionUnit\", 297: \"PageNumber\", 305: \"Software\", 306: \"DateTime\", 315: \"Artist\", 316: \"HostComputer\", 317: \"Predictor\", 318: \"WhitePoint\", 319: \"PrimaryChromaticities\", 320: \"ColorMap\", 321: \"HalftoneHints\", 322: \"TileWidth\", 323: \"TileLength\", 324: \"TileOffset\", 325: \"TileByteCounts\", 330: \"SubIFDs\", 336: \"DotRange\", 338: \"ExtraSample\", 339: \"SampleFormat\", 347: \"JPEGTables\", 512: \"JPEGProc\", 513: \"JPEGInterchangeFormat\", 514: \"JPEGInterchangeFormatLength\", 519: \"JPEGQTables\", 520: \"JPEGDCTables\", 521: \"JPEGACTables\", 529: \"YCbCrCoefficients\", 530: \"YCbCrSubSampling\", 531: \"YCbCrPositioning\", 532: \"ReferenceBlackWhite\", 700: \"XMP\", 33421: \"CFARepeatPatternDim\", 33422: \"CFAPattern\", 33432: \"Copyright\", 33434: \"ExposureTime\", 33437: \"FNumber\", 33723: \"IPTC/NAA\", 34377: \"Photoshop\", 34665: \"ExifIFD\", 34675: \"ICC Profile\", 34850: \"ExposureProgram\", 34853: \"GPSInfo\", 34855: \"ISOSpeedRatings\", 34858: \"TimeZoneOffset\", 34859: \"SelfTimeMode\", 36867: \"DateTimeOriginal\", 36868: \"DateTimeDigitized\", 37377: \"ShutterSpeedValue\", 37378: \"ApertureValue\", 37380: \"ExposureBiasValue\", 37383: \"MeteringMode\", 37385: \"Flash\", 37386: \"FocalLength\", 37390: \"FocalPlaneXResolution\", 37391: \"FocalPlaneYResolution\", 37392: \"FocalPlaneResolutionUnit\", 37393: \"ImageNumber\", 37398: \"TIFF/EPStandardID\", 37399: \"SensingMethod\", 37500: \"MakerNote\", 37510: \"UserComment\", 37724: \"ImageSourceData\", 40092: \"XPComment\", 40094: \"XPKeywords\", 40961: \"ColorSpace\", 40962: \"PixelXDimension\", 40963: \"PixelXDimension\", 41486: \"FocalPlaneXResolution\", 41487: \"FocalPlaneYResolution\", 41488: \"FocalPlaneResolutionUnit\", 41985: \"CustomRendered\", 41986: \"ExposureMode\", 41987: \"WhiteBalance\", 41990: \"SceneCaptureType\", 50706: \"DNGVersion\", 50707: \"DNGBackwardVersion\", 50708: \"UniqueCameraModel\", 50709: \"LocalizedCameraModel\", 50710: \"CFAPlaneColor\", 50711: \"CFALayout\", 50712: \"LinearizationTable\", 50713: \"BlackLevelRepeatDim\", 50714: \"BlackLevel\", 50716: \"BlackLevelDeltaV\", 50717: \"WhiteLevel\", 50718: \"DefaultScale\", 50719: \"DefaultCropOrigin\", 50720: \"DefaultCropSize\", 50733: \"BayerGreenSplit\", 50738: \"AntiAliasStrength\", 50721: \"ColorMatrix1\", 50722: \"ColorMatrix2\", 50723: \"CameraCalibration1\", 50724: \"CameraCalibration2\", 50727: \"AnalogBalance\", 50728: \"AsShotNeutral\", 50730: \"BaselineExposure\", 50731: \"BaselineNoise\", 50732: \"BaselineSharpness\", 50734: \"LinearResponseLimit\", 50735: \"CameraSerialNumber\", 50736: \"LensInfo\", 50739: \"ShadowScale\", 50740: \"DNGPrivateData\", 50741: \"MakerNoteSafety\", 50778: \"CalibrationIlluminant1\", 50779: \"CalibrationIlluminant2\", 50780: \"BestQualityScale\", 50781: \"RawDataUniqueID\", 50827: \"OriginalRawFileName\", 50829: \"ActiveArea\", 50830: \"MaskedAreas\", 50931: \"CameraCalibrationSignature\", 50932: \"ProfileCalibrationSignature\", 50935: \"NoiseReductionApplied\", 50936: \"ProfileName\", 50937: \"ProfileHueSatMapDims\", 50938: \"ProfileHueSatMapData1\", 50939: \"ProfileHueSatMapData2\", 50940: \"ProfileToneCurve\", 50941: \"ProfileEmbedPolicy\", 50942: \"ProfileCopyright\", 50964: \"ForwardMatrix1\", 50965: \"ForwardMatrix2\", 50966: \"PreviewApplicationName\", 50967: \"PreviewApplicationVersion\", 50969: \"PreviewSettingsDigest\", 50970: \"PreviewColorSpace\", 50971: \"PreviewDateTime\", 50972: \"RawImageDigest\", 51008: \"OpcodeList1\", 51009: \"OpcodeList2\", 51022: \"OpcodeList3\", 51041: \"NoiseProfile\", 51089: \"OriginalDefaultFinalSize\", 51090: \"OriginalBestQualityFinalSize\", 51091: \"OriginalDefaultCropSize\", 51125: \"DefaultUserCrop\", }), (e.ttypes = { 256: 3, 257: 3, 258: 3, 259: 3, 262: 3, 273: 4, 274: 3, 277: 3, 278: 4, 279: 4, 282: 5, 283: 5, 284: 3, 286: 5, 287: 5, 296: 3, 305: 2, 306: 2, 338: 3, 513: 4, 514: 4, 34665: 4, }), (e._readIFD = function (t, r, n, i) { var o = t.readUshort(r, n); n += 2; var s = {}; i.push(s); for (var u = 0; u < o; u++) { var c = t.readUshort(r, n); n += 2; var l = t.readUshort(r, n); n += 2; var f = t.readUint(r, n); n += 4; var h = t.readUint(r, n); n += 4; var d = []; if (((s[\"t\" + c] = d), 1 == l || 7 == l)) for (var A = 0; A < f; A++) d.push(r[(f < 5 ? n - 4 : h) + A]); if ( (2 == l && d.push(t.readASCII(r, f < 5 ? n - 4 : h, f - 1)), 3 == l) ) for (A = 0; A < f; A++) d.push(t.readUshort(r, (f < 3 ? n - 4 : h) + 2 * A)); if (4 == l) for (A = 0; A < f; A++) d.push(t.readUint(r, (f < 2 ? n - 4 : h) + 4 * A)); if (5 == l) for (A = 0; A < f; A++) d.push( t.readUint(r, h + 8 * A) / t.readUint(r, h + 8 * A + 4) ); if (8 == l) for (A = 0; A < f; A++) d.push(t.readShort(r, (f < 3 ? n - 4 : h) + 2 * A)); if (9 == l) for (A = 0; A < f; A++) d.push(t.readInt(r, (f < 2 ? n - 4 : h) + 4 * A)); if (10 == l) for (A = 0; A < f; A++) d.push( t.readInt(r, h + 8 * A) / t.readInt(r, h + 8 * A + 4) ); if (11 == l) for (A = 0; A < f; A++) d.push(t.readFloat(r, h + 4 * A)); if (12 == l) for (A = 0; A < f; A++) d.push(t.readDouble(r, h + 8 * A)); if ( (0 != f && 0 == d.length && a(\"unknown TIFF tag type: \", l, \"num:\", f), 330 == c) ) for (A = 0; A < f; A++) e._readIFD(t, r, d[A], i); } return n; }), (e._writeIFD = function (t, r, n, i) { var a = Object.keys(i); t.writeUshort(r, n, a.length), (n += 2); for ( var o = n + 12 * a.length + 4, s = 0; s < a.length; s++ ) { var u = a[s], c = parseInt(u.slice(1)), l = e.ttypes[c]; if (null == l) throw new Error(\"unknown type of tag: \" + c); var f = i[u]; 2 == l && (f = f[0] + \"\\0\"); var h = f.length; t.writeUshort(r, n, c), (n += 2), t.writeUshort(r, n, l), (n += 2), t.writeUint(r, n, h), (n += 4); var d = [-1, 1, 1, 2, 4, 8, 0, 0, 0, 0, 0, 0, 8][l] * h, A = n; if ( (d > 4 && (t.writeUint(r, n, o), (A = o)), 2 == l && t.writeASCII(r, A, f), 3 == l) ) for (var p = 0; p < h; p++) t.writeUshort(r, A + 2 * p, f[p]); if (4 == l) for (p = 0; p < h; p++) t.writeUint(r, A + 4 * p, f[p]); if (5 == l) for (p = 0; p < h; p++) t.writeUint(r, A + 8 * p, Math.round(1e4 * f[p])), t.writeUint(r, A + 8 * p + 4, 1e4); if (12 == l) for (p = 0; p < h; p++) t.writeDouble(r, A + 8 * p, f[p]); d > 4 && ((d += 1 & d), (o += d)), (n += 4); } return [n, o]; }), (e.toRGBA8 = function (e) { var t = e.width, r = e.height, n = t * r, i = 4 * n, o = e.data, s = new Uint8Array(4 * n), u = e[\"t262\"][0], c = e[\"t258\"] ? Math.min(32, e[\"t258\"][0]) : 1, l = e.isLE ? 1 : 0; if (0 == u) for (var f = Math.ceil((c * t) / 8), h = 0; h < r; h++) { var d = h * f, A = h * t; if (1 == c) for (var p = 0; p < t; p++) { var g = (A + p) < 2, m = (o[d + (p >> 3)] >> (7 - (7 & p))) & 1; (s[g] = s[g + 1] = s[g + 2] = 255 * (1 - m)), (s[g + 3] = 255); } if (4 == c) for (p = 0; p < t; p++) { (g = (A + p) < 2), (m = (o[d + (p >> 1)] >> (4 - 4 * (1 & p))) & 15); (s[g] = s[g + 1] = s[g + 2] = 17 * (15 - m)), (s[g + 3] = 255); } if (8 == c) for (p = 0; p < t; p++) { (g = (A + p) < 2), (m = o[d + p]); (s[g] = s[g + 1] = s[g + 2] = 255 - m), (s[g + 3] = 255); } } else if (1 == u) for (f = Math.ceil((c * t) / 8), h = 0; h < r; h++) { (d = h * f), (A = h * t); if (1 == c) for (p = 0; p < t; p++) { (g = (A + p) < 2), (m = (o[d + (p >> 3)] >> (7 - (7 & p))) & 1); (s[g] = s[g + 1] = s[g + 2] = 255 * m), (s[g + 3] = 255); } if (2 == c) for (p = 0; p < t; p++) { (g = (A + p) < 2), (m = (o[d + (p >> 2)] >> (6 - 2 * (3 & p))) & 3); (s[g] = s[g + 1] = s[g + 2] = 85 * m), (s[g + 3] = 255); } if (8 == c) for (p = 0; p < t; p++) { (g = (A + p) < 2), (m = o[d + p]); (s[g] = s[g + 1] = s[g + 2] = m), (s[g + 3] = 255); } if (16 == c) for (p = 0; p < t; p++) { (g = (A + p) < 2), (m = o[d + (2 * p + l)]); (s[g] = s[g + 1] = s[g + 2] = Math.min(255, m)), (s[g + 3] = 255); } } else if (2 == u) if (8 == c) if (e[\"t338\"]) if (e[\"t338\"][0] > 0) for (p = 0; p < i; p++) s[p] = o[p]; else for (p = 0; p < i; p += 4) (s[p] = o[p]), (s[p + 1] = o[p + 1]), (s[p + 2] = o[p + 2]), (s[p + 3] = 255); else { var b = e[\"t258\"] ? e[\"t258\"].length : 3; if (4 == b) for (p = 0; p < i; p++) s[p] = o[p]; if (3 == b) for (p = 0; p < n; p++) { g = p < 2; var v = 3 * p; (s[g] = o[v]), (s[g + 1] = o[v + 1]), (s[g + 2] = o[v + 2]), (s[g + 3] = 255); } } else for (p = 0; p < n; p++) { (g = p < 2), (v = 6 * p); (s[g] = o[v]), (s[g + 1] = o[v + 2]), (s[g + 2] = o[v + 4]), (s[g + 3] = 255); } else if (3 == u) { var y = e[\"t320\"]; for (p = 0; p < n; p++) { g = p < 2; var I = o[p]; (s[g] = y[I] >> 8), (s[g + 1] = y[256 + I] >> 8), (s[g + 2] = y[512 + I] >> 8), (s[g + 3] = 255); } } else if (5 == u) { b = e[\"t258\"] ? e[\"t258\"].length : 4; var E = b > 4 ? 1 : 0; for (p = 0; p < n; p++) { g = p < 2; var w = p * b, C = 255 - o[w], _ = 255 - o[w + 1], B = 255 - o[w + 2], x = (255 - o[w + 3]) * (1 / 255); (s[g] = ~~(C * x + 0.5)), (s[g + 1] = ~~(_ * x + 0.5)), (s[g + 2] = ~~(B * x + 0.5)), (s[g + 3] = 255 * (1 - E) + o[w + 4] * E); } } else a(\"Unknown Photometric interpretation: \" + u); return s; }), (e.replaceIMG = function () { for ( var t = document.getElementsByTagName(\"img\"), r = 0; r < t.length; r++ ) { var n = t[r], i = n.getAttribute(\"src\"); if (null != i) { var a = i.split(\".\").pop().toLowerCase(); if (\"tif\" == a || \"tiff\" == a) { var o = new XMLHttpRequest(); e._xhrs.push(o), e._imgs.push(n), o.open(\"GET\", i), (o.responseType = \"arraybuffer\"), (o.onload = e._imgLoaded), o.send(); } } } }), (e._xhrs = []), (e._imgs = []), (e._imgLoaded = function (t) { var r = t.target.response, n = e.decode(r), i = n[0]; e.decodeImages(r, n); var a = e.toRGBA8(i), o = i.width, s = i.height, u = e._xhrs.indexOf(t.target), c = e._imgs[u]; e._xhrs.splice(u, 1), e._imgs.splice(u, 1); var l = document.createElement(\"canvas\"); (l.width = o), (l.height = s); for ( var f = l.getContext(\"2d\"), h = f.createImageData(o, s), d = 0; d < a.length; d++ ) h.data[d] = a[d]; f.putImageData(h, 0, 0); var A = [\"style\", \"class\", \"id\"]; for (d = 0; d < A.length; d++) l.setAttribute(A[d], c.getAttribute(A[d])); c.parentNode.replaceChild(l, c); }), (e._binBE = { nextZero: function (e, t) { while (0 != e[t]) t++; return t; }, readUshort: function (e, t) { return (e[t] < 8) | e[t + 1]; }, readShort: function (t, r) { var n = e._binBE.ui8; return ( (n[0] = t[r + 1]), (n[1] = t[r + 0]), e._binBE.i16[0] ); }, readInt: function (t, r) { var n = e._binBE.ui8; return ( (n[0] = t[r + 3]), (n[1] = t[r + 2]), (n[2] = t[r + 1]), (n[3] = t[r + 0]), e._binBE.i32[0] ); }, readUint: function (t, r) { var n = e._binBE.ui8; return ( (n[0] = t[r + 3]), (n[1] = t[r + 2]), (n[2] = t[r + 1]), (n[3] = t[r + 0]), e._binBE.ui32[0] ); }, readASCII: function (e, t, r) { for (var n = \"\", i = 0; i < r; i++) n += String.fromCharCode(e[t + i]); return n; }, readFloat: function (t, r) { for (var n = e._binBE.ui8, i = 0; i < 4; i++) n[i] = t[r + 3 - i]; return e._binBE.fl32[0]; }, readDouble: function (t, r) { for (var n = e._binBE.ui8, i = 0; i < 8; i++) n[i] = t[r + 7 - i]; return e._binBE.fl64[0]; }, writeUshort: function (e, t, r) { (e[t] = (r >> 8) & 255), (e[t + 1] = 255 & r); }, writeUint: function (e, t, r) { (e[t] = (r >> 24) & 255), (e[t + 1] = (r >> 16) & 255), (e[t + 2] = (r >> 8) & 255), (e[t + 3] = (r >> 0) & 255); }, writeASCII: function (e, t, r) { for (var n = 0; n < r.length; n++) e[t + n] = r.charCodeAt(n); }, writeDouble: function (t, r, n) { e._binBE.fl64[0] = n; for (var i = 0; i < 8; i++) t[r + i] = e._binBE.ui8[7 - i]; }, }), (e._binBE.ui8 = new Uint8Array(8)), (e._binBE.i16 = new Int16Array(e._binBE.ui8.buffer)), (e._binBE.i32 = new Int32Array(e._binBE.ui8.buffer)), (e._binBE.ui32 = new Uint32Array(e._binBE.ui8.buffer)), (e._binBE.fl32 = new Float32Array(e._binBE.ui8.buffer)), (e._binBE.fl64 = new Float64Array(e._binBE.ui8.buffer)), (e._binLE = { nextZero: e._binBE.nextZero, readUshort: function (e, t) { return (e[t + 1] < 8) | e[t]; }, readShort: function (t, r) { var n = e._binBE.ui8; return ( (n[0] = t[r + 0]), (n[1] = t[r + 1]), e._binBE.i16[0] ); }, readInt: function (t, r) { var n = e._binBE.ui8; return ( (n[0] = t[r + 0]), (n[1] = t[r + 1]), (n[2] = t[r + 2]), (n[3] = t[r + 3]), e._binBE.i32[0] ); }, readUint: function (t, r) { var n = e._binBE.ui8; return ( (n[0] = t[r + 0]), (n[1] = t[r + 1]), (n[2] = t[r + 2]), (n[3] = t[r + 3]), e._binBE.ui32[0] ); }, readASCII: e._binBE.readASCII, readFloat: function (t, r) { for (var n = e._binBE.ui8, i = 0; i < 4; i++) n[i] = t[r + i]; return e._binBE.fl32[0]; }, readDouble: function (t, r) { for (var n = e._binBE.ui8, i = 0; i < 8; i++) n[i] = t[r + i]; return e._binBE.fl64[0]; }, }), (e._copyTile = function (e, t, r, n, i, a, o, s) { for ( var u = Math.min(t, i - o), c = Math.min(r, a - s), l = 0; l < c; l++ ) for (var f = (s + l) * i + o, h = l * t, d = 0; d < u; d++) n[f + d] = e[h + d]; }); })(i, n); })(); }).call(this, r(\"4362\")); }, \"72f7\": function (e, t, r) { \"use strict\"; var n = r(\"ebb5\").exportTypedArrayMethod, i = r(\"d039\"), a = r(\"da84\"), o = r(\"e330\"), s = a.Uint8Array, u = (s && s.prototype) || {}, c = [].toString, l = o([].join); i(function () { c.call({}); }) && (c = function () { return l(this); }); var f = u.toString != c; n(\"toString\", c, f); }, \"72fe\": function (e, t, r) { (function (t, n) { e.exports = n(r(\"21bf\")); })(0, function (e) { return ( (function (t) { var r = e, n = r.lib, i = n.WordArray, a = n.Hasher, o = r.algo, s = []; (function () { for (var e = 0; e < 64; e++) s[e] = (4294967296 * t.abs(t.sin(e + 1))) | 0; })(); var u = (o.MD5 = a.extend({ _doReset: function () { this._hash = new i.init([ 1732584193, 4023233417, 2562383102, 271733878, ]); }, _doProcessBlock: function (e, t) { for (var r = 0; r < 16; r++) { var n = t + r, i = e[n]; e[n] = (16711935 & ((i < 8) | (i >>> 24))) | (4278255360 & ((i < 24) | (i >>> 8))); } var a = this._hash.words, o = e[t + 0], u = e[t + 1], d = e[t + 2], A = e[t + 3], p = e[t + 4], g = e[t + 5], m = e[t + 6], b = e[t + 7], v = e[t + 8], y = e[t + 9], I = e[t + 10], E = e[t + 11], w = e[t + 12], C = e[t + 13], _ = e[t + 14], B = e[t + 15], x = a[0], S = a[1], k = a[2], Q = a[3]; (x = c(x, S, k, Q, o, 7, s[0])), (Q = c(Q, x, S, k, u, 12, s[1])), (k = c(k, Q, x, S, d, 17, s[2])), (S = c(S, k, Q, x, A, 22, s[3])), (x = c(x, S, k, Q, p, 7, s[4])), (Q = c(Q, x, S, k, g, 12, s[5])), (k = c(k, Q, x, S, m, 17, s[6])), (S = c(S, k, Q, x, b, 22, s[7])), (x = c(x, S, k, Q, v, 7, s[8])), (Q = c(Q, x, S, k, y, 12, s[9])), (k = c(k, Q, x, S, I, 17, s[10])), (S = c(S, k, Q, x, E, 22, s[11])), (x = c(x, S, k, Q, w, 7, s[12])), (Q = c(Q, x, S, k, C, 12, s[13])), (k = c(k, Q, x, S, _, 17, s[14])), (S = c(S, k, Q, x, B, 22, s[15])), (x = l(x, S, k, Q, u, 5, s[16])), (Q = l(Q, x, S, k, m, 9, s[17])), (k = l(k, Q, x, S, E, 14, s[18])), (S = l(S, k, Q, x, o, 20, s[19])), (x = l(x, S, k, Q, g, 5, s[20])), (Q = l(Q, x, S, k, I, 9, s[21])), (k = l(k, Q, x, S, B, 14, s[22])), (S = l(S, k, Q, x, p, 20, s[23])), (x = l(x, S, k, Q, y, 5, s[24])), (Q = l(Q, x, S, k, _, 9, s[25])), (k = l(k, Q, x, S, A, 14, s[26])), (S = l(S, k, Q, x, v, 20, s[27])), (x = l(x, S, k, Q, C, 5, s[28])), (Q = l(Q, x, S, k, d, 9, s[29])), (k = l(k, Q, x, S, b, 14, s[30])), (S = l(S, k, Q, x, w, 20, s[31])), (x = f(x, S, k, Q, g, 4, s[32])), (Q = f(Q, x, S, k, v, 11, s[33])), (k = f(k, Q, x, S, E, 16, s[34])), (S = f(S, k, Q, x, _, 23, s[35])), (x = f(x, S, k, Q, u, 4, s[36])), (Q = f(Q, x, S, k, p, 11, s[37])), (k = f(k, Q, x, S, b, 16, s[38])), (S = f(S, k, Q, x, I, 23, s[39])), (x = f(x, S, k, Q, C, 4, s[40])), (Q = f(Q, x, S, k, o, 11, s[41])), (k = f(k, Q, x, S, A, 16, s[42])), (S = f(S, k, Q, x, m, 23, s[43])), (x = f(x, S, k, Q, y, 4, s[44])), (Q = f(Q, x, S, k, w, 11, s[45])), (k = f(k, Q, x, S, B, 16, s[46])), (S = f(S, k, Q, x, d, 23, s[47])), (x = h(x, S, k, Q, o, 6, s[48])), (Q = h(Q, x, S, k, b, 10, s[49])), (k = h(k, Q, x, S, _, 15, s[50])), (S = h(S, k, Q, x, g, 21, s[51])), (x = h(x, S, k, Q, w, 6, s[52])), (Q = h(Q, x, S, k, A, 10, s[53])), (k = h(k, Q, x, S, I, 15, s[54])), (S = h(S, k, Q, x, u, 21, s[55])), (x = h(x, S, k, Q, v, 6, s[56])), (Q = h(Q, x, S, k, B, 10, s[57])), (k = h(k, Q, x, S, m, 15, s[58])), (S = h(S, k, Q, x, C, 21, s[59])), (x = h(x, S, k, Q, p, 6, s[60])), (Q = h(Q, x, S, k, E, 10, s[61])), (k = h(k, Q, x, S, d, 15, s[62])), (S = h(S, k, Q, x, y, 21, s[63])), (a[0] = (a[0] + x) | 0), (a[1] = (a[1] + S) | 0), (a[2] = (a[2] + k) | 0), (a[3] = (a[3] + Q) | 0); }, _doFinalize: function () { var e = this._data, r = e.words, n = 8 * this._nDataBytes, i = 8 * e.sigBytes; r[i >>> 5] |= 128 < (24 - (i % 32)); var a = t.floor(n / 4294967296), o = n; (r[15 + (((i + 64) >>> 9) < 4)] = (16711935 & ((a < 8) | (a >>> 24))) | (4278255360 & ((a < 24) | (a >>> 8)))), (r[14 + (((i + 64) >>> 9) < 4)] = (16711935 & ((o < 8) | (o >>> 24))) | (4278255360 & ((o < 24) | (o >>> 8)))), (e.sigBytes = 4 * (r.length + 1)), this._process(); for (var s = this._hash, u = s.words, c = 0; c < 4; c++) { var l = u[c]; u[c] = (16711935 & ((l < 8) | (l >>> 24))) | (4278255360 & ((l < 24) | (l >>> 8))); } return s; }, clone: function () { var e = a.clone.call(this); return (e._hash = this._hash.clone()), e; }, })); function c(e, t, r, n, i, a, o) { var s = e + ((t & r) | (~t & n)) + i + o; return ((s < a) | (s >>> (32 - a))) + t; } function l(e, t, r, n, i, a, o) { var s = e + ((t & n) | (r & ~n)) + i + o; return ((s < a) | (s >>> (32 - a))) + t; } function f(e, t, r, n, i, a, o) { var s = e + (t ^ r ^ n) + i + o; return ((s < a) | (s >>> (32 - a))) + t; } function h(e, t, r, n, i, a, o) { var s = e + (r ^ (t | ~n)) + i + o; return ((s < a) | (s >>> (32 - a))) + t; } (r.MD5 = a._createHelper(u)), (r.HmacMD5 = a._createHmacHelper(u)); })(Math), e.MD5 ); }); }, \"731b\": function (e, t, r) { \"use strict\"; (function (e) { r.d(t, \"a\", function () { return w; }); var n = r(\"34eb\"), i = r.n(n), a = r(\"2e19\"), o = r(\"dc2a\"), s = r(\"7fc3\"), u = r(\"7b0a\"), c = r(\"5f4b\"), l = r(\"6c3a\"), f = function (e, t, r, n) { function i(e) { return e instanceof r ? e : new r(function (t) { t(e); }); } return new (r || (r = Promise))(function (r, a) { function o(e) { try { u(n.next(e)); } catch (t) { a(t); } } function s(e) { try { u(n[\"throw\"](e)); } catch (t) { a(t); } } function u(e) { e.done ? r(e.value) : i(e.value).then(o, s); } u((n = n.apply(e, t || [])).next()); }); }; const h = i()(\"threads:master:messages\"), d = i()(\"threads:master:spawn\"), A = i()(\"threads:master:thread-utils\"), p = (e) => e && \"init\" === e.type, g = (e) => e && \"uncaughtError\" === e.type, m = \"undefined\" !== typeof e && Object({ NODE_ENV: \"production\", BASE_URL: \"\" }) .THREADS_WORKER_INIT_TIMEOUT ? Number.parseInt( Object({ NODE_ENV: \"production\", BASE_URL: \"\" }) .THREADS_WORKER_INIT_TIMEOUT, 10 ) : 1e4; function b(e, t, r) { return f(this, void 0, void 0, function* () { let n; const i = new Promise((e, i) => { n = setTimeout(() => i(Error(r)), t); }), a = yield Promise.race([e, i]); return clearTimeout(n), a; }); } function v(e) { return new Promise((t, r) => { const n = (i) => { h(\"Message from worker before finishing initialization:\", i.data), p(i.data) ? (e.removeEventListener(\"message\", n), t(i.data)) : g(i.data) && (e.removeEventListener(\"message\", n), r(Object(o[\"a\"])(i.data.error))); }; e.addEventListener(\"message\", n); }); } function y(e, t) { return new a[\"a\"]((r) => { const n = (e) => { const t = { type: c[\"a\"].message, data: e.data }; r.next(t); }, i = (e) => { A(\"Unhandled promise rejection event in thread:\", e); const t = { type: c[\"a\"].internalError, error: Error(e.reason), }; r.next(t); }; e.addEventListener(\"message\", n), e.addEventListener(\"unhandledrejection\", i), t.then(() => { const t = { type: c[\"a\"].termination }; e.removeEventListener(\"message\", n), e.removeEventListener(\"unhandledrejection\", i), r.next(t), r.complete(); }); }); } function I(e) { const [t, r] = Object(s[\"a\"])(), n = () => f(this, void 0, void 0, function* () { A(\"Terminating worker\"), yield e.terminate(), r(); }); return { terminate: n, termination: t }; } function E(e, t, r, n) { const i = r .filter((e) => e.type === c[\"a\"].internalError) .map((e) => e.error); return Object.assign(e, { [u[\"a\"]]: i, [u[\"b\"]]: r, [u[\"c\"]]: n, [u[\"e\"]]: t, }); } function w(e, t) { return f(this, void 0, void 0, function* () { d(\"Initializing new thread\"); const r = t && t.timeout ? t.timeout : m, n = yield b( v(e), r, `Timeout: Did not receive an init message from worker after ${r}ms. Make sure the worker calls expose().` ), i = n.exposed, { termination: a, terminate: o } = I(e), s = y(e, a); if (\"function\" === i.type) { const t = Object(l[\"a\"])(e); return E(t, e, s, o); } if (\"module\" === i.type) { const t = Object(l[\"b\"])(e, i.methods); return E(t, e, s, o); } { const e = i.type; throw Error( \"Worker init message states unexpected type of expose(): \" + e ); } }); } }).call(this, r(\"4362\")); }, 7327: function (e, t, r) { \"use strict\"; r.d(t, \"a\", function () { return I; }); var n = r(\"34eb\"), i = r.n(n), a = r(\"ab23\"), o = r(\"3446\"), s = r(\"2e19\"); function u(e) { return Promise.all( e.map((e) => { const t = (e) => ({ status: \"fulfilled\", value: e }), r = (e) => ({ status: \"rejected\", reason: e }), n = Promise.resolve(e); try { return n.then(t, r); } catch (i) { return Promise.reject(i); } }) ); } var c, l = r(\"1ab7\"); (function (e) { (e[\"initialized\"] = \"initialized\"), (e[\"taskCanceled\"] = \"taskCanceled\"), (e[\"taskCompleted\"] = \"taskCompleted\"), (e[\"taskFailed\"] = \"taskFailed\"), (e[\"taskQueued\"] = \"taskQueued\"), (e[\"taskQueueDrained\"] = \"taskQueueDrained\"), (e[\"taskStart\"] = \"taskStart\"), (e[\"terminated\"] = \"terminated\"); })(c || (c = {})); var f = r(\"f2ec\"), h = function (e, t, r, n) { function i(e) { return e instanceof r ? e : new r(function (t) { t(e); }); } return new (r || (r = Promise))(function (r, a) { function o(e) { try { u(n.next(e)); } catch (t) { a(t); } } function s(e) { try { u(n[\"throw\"](e)); } catch (t) { a(t); } } function u(e) { e.done ? r(e.value) : i(e.value).then(o, s); } u((n = n.apply(e, t || [])).next()); }); }; let d = 1; function A(e) { const t = []; for (let r = 0; r < e; r++) t.push(r); return t; } function p(e) { return new Promise((t) => setTimeout(t, e)); } function g(e, t) { return e.reduce((e, r) => [...e, ...t(r)], []); } function m(e) { return e.replace(/\\W/g, \" \").trim().replace(/\\s+/g, \"-\"); } function b(e, t) { return A(t).map(() => ({ init: e(), runningTasks: [] })); } class v { constructor(e, t) { (this.eventSubject = new a[\"a\"]()), (this.initErrors = []), (this.isClosing = !1), (this.nextTaskID = 1), (this.taskQueue = []); const r = \"number\" === typeof t ? { size: t } : t || {}, { size: n = l[\"a\"] } = r; (this.debug = i()(\"threads:pool:\" + m(r.name || String(d++)))), (this.options = r), (this.workers = b(e, n)), (this.eventObservable = Object(o[\"a\"])( s[\"a\"].from(this.eventSubject) )), Promise.all(this.workers.map((e) => e.init)).then( () => this.eventSubject.next({ type: c.initialized, size: this.workers.length, }), (e) => { this.debug(\"Error while initializing pool worker:\", e), this.eventSubject.error(e), this.initErrors.push(e); } ); } findIdlingWorker() { const { concurrency: e = 1 } = this.options; return this.workers.find((t) => t.runningTasks.length < e); } runPoolTask(e, t) { return h(this, void 0, void 0, function* () { const r = this.workers.indexOf(e) + 1; this.debug(`Running task #${t.id} on worker #${r}...`), this.eventSubject.next({ type: c.taskStart, taskID: t.id, workerID: r, }); try { const n = yield t.run(yield e.init); this.debug(`Task #${t.id} completed successfully`), this.eventSubject.next({ type: c.taskCompleted, returnValue: n, taskID: t.id, workerID: r, }); } catch (n) { this.debug(`Task #${t.id} failed`), this.eventSubject.next({ type: c.taskFailed, taskID: t.id, error: n, workerID: r, }); } }); } run(e, t) { return h(this, void 0, void 0, function* () { const r = (() => h(this, void 0, void 0, function* () { const n = () => { e.runningTasks = e.runningTasks.filter((e) => e !== r); }; yield p(0); try { yield this.runPoolTask(e, t); } finally { n(), this.isClosing || this.scheduleWork(); } }))(); e.runningTasks.push(r); }); } scheduleWork() { this.debug(\"Attempt de-queueing a task in order to run it...\"); const e = this.findIdlingWorker(); if (!e) return; const t = this.taskQueue.shift(); if (!t) return ( this.debug(\"Task queue is empty\"), void this.eventSubject.next({ type: c.taskQueueDrained }) ); this.run(e, t); } taskCompletion(e) { return new Promise((t, r) => { const n = this.events().subscribe((i) => { i.type === c.taskCompleted && i.taskID === e ? (n.unsubscribe(), t(i.returnValue)) : i.type === c.taskFailed && i.taskID === e ? (n.unsubscribe(), r(i.error)) : i.type === c.terminated && (n.unsubscribe(), r(Error(\"Pool has been terminated before task was run.\"))); }); }); } settled(e = !1) { return h(this, void 0, void 0, function* () { const t = () => g(this.workers, (e) => e.runningTasks), r = [], n = this.eventObservable.subscribe((e) => { e.type === c.taskFailed && r.push(e.error); }); return this.initErrors.length > 0 ? Promise.reject(this.initErrors[0]) : e && 0 === this.taskQueue.length ? (yield u(t()), r) : (yield new Promise((e, t) => { const r = this.eventObservable.subscribe({ next(t) { t.type === c.taskQueueDrained && (r.unsubscribe(), e(void 0)); }, error: t, }); }), yield u(t()), n.unsubscribe(), r); }); } completed(e = !1) { return h(this, void 0, void 0, function* () { const t = this.settled(e), r = new Promise((e, r) => { const n = this.eventObservable.subscribe({ next(i) { i.type === c.taskQueueDrained ? (n.unsubscribe(), e(t)) : i.type === c.taskFailed && (n.unsubscribe(), r(i.error)); }, error: r, }); }), n = yield Promise.race([t, r]); if (n.length > 0) throw n[0]; }); } events() { return this.eventObservable; } queue(e) { const { maxQueuedJobs: t = 1 / 0 } = this.options; if (this.isClosing) throw Error( \"Cannot schedule pool tasks after terminate() has been called.\" ); if (this.initErrors.length > 0) throw this.initErrors[0]; const r = this.nextTaskID++, n = this.taskCompletion(r); n.catch((e) => { this.debug(`Task #${r} errored:`, e); }); const i = { id: r, run: e, cancel: () => { -1 !== this.taskQueue.indexOf(i) && ((this.taskQueue = this.taskQueue.filter((e) => e !== i)), this.eventSubject.next({ type: c.taskCanceled, taskID: i.id })); }, then: n.then.bind(n), }; if (this.taskQueue.length >= t) throw Error( \"Maximum number of pool tasks queued. Refusing to queue another one.\\nThis usually happens for one of two reasons: We are either at peak workload right now or some tasks just won't finish, thus blocking the pool.\" ); return ( this.debug(`Queueing task #${i.id}...`), this.taskQueue.push(i), this.eventSubject.next({ type: c.taskQueued, taskID: i.id }), this.scheduleWork(), i ); } terminate(e) { return h(this, void 0, void 0, function* () { (this.isClosing = !0), e || (yield this.completed(!0)), this.eventSubject.next({ type: c.terminated, remainingQueue: [...this.taskQueue], }), this.eventSubject.complete(), yield Promise.all( this.workers.map((e) => h(this, void 0, void 0, function* () { return f[\"a\"].terminate(yield e.init); }) ) ); }); } } function y(e, t) { return new v(e, t); } (v.EventType = c), (y.EventType = c); const I = y; }, \"735e\": function (e, t, r) { \"use strict\"; var n = r(\"ebb5\"), i = r(\"c65b\"), a = r(\"81d5\"), o = n.aTypedArray, s = n.exportTypedArrayMethod; s(\"fill\", function (e) { var t = arguments.length; return i( a, o(this), e, t > 1 ? arguments[1] : void 0, t > 2 ? arguments[2] : void 0 ); }); }, \"73c2\": function (e, t, r) { \"use strict\"; (function (e) { Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.MatroskaParser = void 0); const n = r(\"6f58\"), i = r(\"34eb\"), a = r(\"95c9\"), o = r(\"31de\"), s = r(\"b120\"), u = i(\"music-metadata:parser:matroska\"); class c extends a.BasicParser { constructor() { super(), (this.padding = 0), (this.parserMap = new Map()), (this.ebmlMaxIDLength = 4), (this.ebmlMaxSizeLength = 8), this.parserMap.set(o.DataType.uint, (e) => this.readUint(e)), this.parserMap.set(o.DataType.string, (e) => this.readString(e)), this.parserMap.set(o.DataType.binary, (e) => this.readBuffer(e)), this.parserMap.set( o.DataType.uid, async (e) => 1 === (await this.readUint(e)) ), this.parserMap.set(o.DataType.bool, (e) => this.readFlag(e)), this.parserMap.set(o.DataType.float, (e) => this.readFloat(e)); } init(e, t, r) { return super.init(e, t, r), this; } async parse() { const e = await this.parseContainer( s.elements, this.tokenizer.fileInfo.size, [] ); if ( (this.metadata.setFormat(\"container\", \"EBML/\" + e.ebml.docType), e.segment) ) { const t = e.segment.info; if (t) { const e = t.timecodeScale ? t.timecodeScale : 1e6, r = (t.duration * e) / 1e9; this.addTag(\"segment:title\", t.title), this.metadata.setFormat(\"duration\", r); } const r = e.segment.tracks; if (r && r.entries) { r.entries.forEach((e) => { const t = { codecName: e.codecID.replace(\"A_\", \"\").replace(\"V_\", \"\"), codecSettings: e.codecSettings, flagDefault: e.flagDefault, flagLacing: e.flagLacing, flagEnabled: e.flagEnabled, language: e.language, name: e.name, type: e.trackType, audio: e.audio, video: e.video, }; this.metadata.addStreamInfo(t); }); const t = r.entries .filter((e) => e.trackType === o.TrackType.audio.valueOf()) .reduce( (e, t) => e ? (!e.flagDefault && t.flagDefault) || (t.trackNumber && t.trackNumber < e.trackNumber) ? t : e : t, null ); t && (this.metadata.setFormat( \"codec\", t.codecID.replace(\"A_\", \"\") ), this.metadata.setFormat( \"sampleRate\", t.audio.samplingFrequency ), this.metadata.setFormat( \"numberOfChannels\", t.audio.channels )), e.segment.tags && e.segment.tags.tag.forEach((e) => { const t = e.target, r = t.targetTypeValue ? o.TargetType[t.targetTypeValue] : t.targetType ? t.targetType : \"track\"; e.simpleTags.forEach((e) => { const t = e.string ? e.string : e.binary; this.addTag(`${r}:${e.name}`, t); }); }), e.segment.attachments && e.segment.attachments.attachedFiles .filter((e) => e.mimeType.startsWith(\"image/\")) .map((e) => ({ data: e.data, format: e.mimeType, description: e.description, name: e.name, })) .forEach((e) => { this.addTag(\"picture\", e); }); } } } async parseContainer(e, t, r) { const n = {}; while (this.tokenizer.position < t) { let t; try { t = await this.readElement(); } catch (i) { if (\"End-Of-Stream\" === i.message) break; throw i; } const a = e[t.id]; if (a) if ( (u(`Element: name=${a.name}, container=${!!a.container}`), a.container) ) { const e = await this.parseContainer( a.container, t.len >= 0 ? this.tokenizer.position + t.len : -1, r.concat([a.name]) ); a.multiple ? (n[a.name] || (n[a.name] = []), n[a.name].push(e)) : (n[a.name] = e); } else n[a.name] = await this.parserMap.get(a.value)(t); else switch (t.id) { case 236: (this.padding += t.len), await this.tokenizer.ignore(t.len); break; default: u( `parseEbml: path=${r.join( \"/\" )}, unknown element: id=${t.id.toString(16)}` ), (this.padding += t.len), await this.tokenizer.ignore(t.len); } } return n; } async readVintData(t) { const r = await this.tokenizer.peekNumber(n.UINT8); let i = 128, a = 1; while (0 === (r & i)) { if (a > t) throw new Error(\"VINT value exceeding maximum size\"); ++a, (i >>= 1); } const o = e.alloc(a); return await this.tokenizer.readBuffer(o), o; } async readElement() { const e = await this.readVintData(this.ebmlMaxIDLength), t = await this.readVintData(this.ebmlMaxSizeLength); t[0] ^= 128 >> (t.length - 1); const r = Math.min(6, t.length); return { id: e.readUIntBE(0, e.length), len: t.readUIntBE(t.length - r, r), }; } isMaxValue(e) { if (e.length === this.ebmlMaxSizeLength) { for (let t = 1; t < this.ebmlMaxSizeLength; ++t) if (255 !== e[t]) return !1; return !0; } return !1; } async readFloat(e) { switch (e.len) { case 0: return 0; case 4: return this.tokenizer.readNumber(n.Float32_BE); case 8: return this.tokenizer.readNumber(n.Float64_BE); case 10: return this.tokenizer.readNumber(n.Float64_BE); default: throw new Error(\"Invalid IEEE-754 float length: \" + e.len); } } async readFlag(e) { return 1 === (await this.readUint(e)); } async readUint(e) { const t = await this.readBuffer(e), r = Math.min(6, e.len); return t.readUIntBE(e.len - r, r); } async readString(e) { return this.tokenizer.readToken(new n.StringType(e.len, \"utf-8\")); } async readBuffer(t) { const r = e.alloc(t.len); return await this.tokenizer.readBuffer(r), r; } addTag(e, t) { this.metadata.addTag(\"matroska\", e, t); } } t.MatroskaParser = c; }).call(this, r(\"1c35\").Buffer); }, 7418: function (e, t) { t.f = Object.getOwnPropertySymbols; }, \"746f\": function (e, t, r) { var n = r(\"428f\"), i = r(\"1a2d\"), a = r(\"e538\"), o = r(\"9bf2\").f; e.exports = function (e) { var t = n.Symbol || (n.Symbol = {}); i(t, e) || o(t, e, { value: a.f(e) }); }; }, \"74e8\": function (e, t, r) { \"use strict\"; var n = r(\"23e7\"), i = r(\"da84\"), a = r(\"c65b\"), o = r(\"83ab\"), s = r(\"8aa7\"), u = r(\"ebb5\"), c = r(\"621a\"), l = r(\"19aa\"), f = r(\"5c6c\"), h = r(\"9112\"), d = r(\"eac5\"), A = r(\"50c4\"), p = r(\"0b25\"), g = r(\"182d\"), m = r(\"a04b\"), b = r(\"1a2d\"), v = r(\"f5df\"), y = r(\"861d\"), I = r(\"d9b5\"), E = r(\"7c73\"), w = r(\"3a9b\"), C = r(\"d2bb\"), _ = r(\"241c\").f, B = r(\"a078\"), x = r(\"b727\").forEach, S = r(\"2626\"), k = r(\"9bf2\"), Q = r(\"06cf\"), T = r(\"69f3\"), M = r(\"7156\"), D = T.get, R = T.set, O = k.f, N = Q.f, F = Math.round, L = i.RangeError, P = c.ArrayBuffer, U = P.prototype, j = c.DataView, z = u.NATIVE_ARRAY_BUFFER_VIEWS, G = u.TYPED_ARRAY_CONSTRUCTOR, H = u.TYPED_ARRAY_TAG, W = u.TypedArray, Y = u.TypedArrayPrototype, q = u.aTypedArrayConstructor, J = u.isTypedArray, $ = \"BYTES_PER_ELEMENT\", K = \"Wrong length\", V = function (e, t) { q(e); var r = 0, n = t.length, i = new e(n); while (n > r) i[r] = t[r++]; return i; }, X = function (e, t) { O(e, t, { get: function () { return D(this)[t]; }, }); }, Z = function (e) { var t; return ( w(U, e) || \"ArrayBuffer\" == (t = v(e)) || \"SharedArrayBuffer\" == t ); }, ee = function (e, t) { return J(e) && !I(t) && t in e && d(+t) && t >= 0; }, te = function (e, t) { return (t = m(t)), ee(e, t) ? f(2, e[t]) : N(e, t); }, re = function (e, t, r) { return ( (t = m(t)), !(ee(e, t) && y(r) && b(r, \"value\")) || b(r, \"get\") || b(r, \"set\") || r.configurable || (b(r, \"writable\") && !r.writable) || (b(r, \"enumerable\") && !r.enumerable) ? O(e, t, r) : ((e[t] = r.value), e) ); }; o ? (z || ((Q.f = te), (k.f = re), X(Y, \"buffer\"), X(Y, \"byteOffset\"), X(Y, \"byteLength\"), X(Y, \"length\")), n( { target: \"Object\", stat: !0, forced: !z }, { getOwnPropertyDescriptor: te, defineProperty: re } ), (e.exports = function (e, t, r) { var o = e.match(/\\d+$/)[0] / 8, u = e + (r ? \"Clamped\" : \"\") + \"Array\", c = \"get\" + e, f = \"set\" + e, d = i[u], m = d, b = m && m.prototype, v = {}, I = function (e, t) { var r = D(e); return r.view[c](t * o + r.byteOffset, !0); }, w = function (e, t, n) { var i = D(e); r && (n = (n = F(n)) < 0 ? 0 : n > 255 ? 255 : 255 & n), i.view[f](t * o + i.byteOffset, n, !0); }, k = function (e, t) { O(e, t, { get: function () { return I(this, t); }, set: function (e) { return w(this, t, e); }, enumerable: !0, }); }; z ? s && ((m = t(function (e, t, r, n) { return ( l(e, b), M( (function () { return y(t) ? Z(t) ? void 0 !== n ? new d(t, g(r, o), n) : void 0 !== r ? new d(t, g(r, o)) : new d(t) : J(t) ? V(m, t) : a(B, m, t) : new d(p(t)); })(), e, m ) ); })), C && C(m, W), x(_(d), function (e) { e in m || h(m, e, d[e]); }), (m.prototype = b)) : ((m = t(function (e, t, r, n) { l(e, b); var i, s, u, c = 0, f = 0; if (y(t)) { if (!Z(t)) return J(t) ? V(m, t) : a(B, m, t); (i = t), (f = g(r, o)); var h = t.byteLength; if (void 0 === n) { if (h % o) throw L(K); if (((s = h - f), s < 0)) throw L(K); } else if (((s = A(n) * o), s + f > h)) throw L(K); u = s / o; } else (u = p(t)), (s = u * o), (i = new P(s)); R(e, { buffer: i, byteOffset: f, byteLength: s, length: u, view: new j(i), }); while (c < u) k(e, c++); })), C && C(m, W), (b = m.prototype = E(Y))), b.constructor !== m && h(b, \"constructor\", m), h(b, G, m), H && h(b, H, u), (v[u] = m), n({ global: !0, forced: m != d, sham: !z }, v), $ in m || h(m, $, o), $ in b || h(b, $, o), S(u); })) : (e.exports = function () {}); }, \"754c\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t[\"default\"] = void 0); var n = r(\"c2d7\"), i = function () { return { invert: function (e) { return ( this.scanQuiet( 0, 0, this.bitmap.width, this.bitmap.height, function (e, t, r) { (this.bitmap.data[r] = 255 - this.bitmap.data[r]), (this.bitmap.data[r + 1] = 255 - this.bitmap.data[r + 1]), (this.bitmap.data[r + 2] = 255 - this.bitmap.data[r + 2]); } ), (0, n.isNodePattern)(e) && e.call(this, null, this), this ); }, }; }; t[\"default\"] = i; }, \"77a7\": function (e, t, r) { var n = r(\"da84\"), i = n.Array, a = Math.abs, o = Math.pow, s = Math.floor, u = Math.log, c = Math.LN2, l = function (e, t, r) { var n, l, f, h = i(r), d = 8 * r - t - 1, A = (1 < d) - 1, p = A >> 1, g = 23 === t ? o(2, -24) - o(2, -77) : 0, m = e < 0 || (0 === e && 1 / e < 0) ? 1 : 0, b = 0; (e = a(e)), e != e || e === 1 / 0 ? ((l = e != e ? 1 : 0), (n = A)) : ((n = s(u(e) / c)), (f = o(2, -n)), e * f < 1 && (n--, (f *= 2)), (e += n + p >= 1 ? g / f : g * o(2, 1 - p)), e * f >= 2 && (n++, (f /= 2)), n + p >= A ? ((l = 0), (n = A)) : n + p >= 1 ? ((l = (e * f - 1) * o(2, t)), (n += p)) : ((l = e * o(2, p - 1) * o(2, t)), (n = 0))); while (t >= 8) (h[b++] = 255 & l), (l /= 256), (t -= 8); (n = (n < t) | l), (d += t); while (d > 0) (h[b++] = 255 & n), (n /= 256), (d -= 8); return (h[--b] |= 128 * m), h; }, f = function (e, t) { var r, n = e.length, i = 8 * n - t - 1, a = (1 < i) - 1, s = a >> 1, u = i - 7, c = n - 1, l = e[c--], f = 127 & l; l >>= 7; while (u > 0) (f = 256 * f + e[c--]), (u -= 8); (r = f & ((1 < -u) - 1)), (f >>= -u), (u += t); while (u > 0) (r = 256 * r + e[c--]), (u -= 8); if (0 === f) f = 1 - s; else { if (f === a) return r ? NaN : l ? -1 / 0 : 1 / 0; (r += o(2, t)), (f -= s); } return (l ? -1 : 1) * r * o(2, f - t); }; e.exports = { pack: l, unpack: f }; }, \"77e9\": function (e, t, r) { var n = r(\"7a41\"); e.exports = function (e) { if (!n(e)) throw TypeError(e + \" is not an object!\"); return e; }; }, \"77ff\": function (e, t, r) { \"use strict\"; (function (t) { var n = \"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator ? function (e) { return typeof e; } : function (e) { return e && \"function\" === typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e; }, i = r(\"9490\"), a = r(\"24f8\"), o = r(\"0b16\"), s = r(\"b383\"), u = r(\"470b\"), c = r(\"3022\"), l = function (e, r) { if (\"string\" !== typeof e && !e.hasOwnProperty(\"url\")) throw new Error( \"Missing url option from options for request method.\" ); var c = \"object\" === (\"undefined\" === typeof e ? \"undefined\" : n(e)) ? o.parse(e.url) : o.parse(e), l = { hostname: c.hostname, port: c.port || (\"http:\" === c.protocol.toLowerCase() ? 80 : 443), path: c.path, method: \"GET\", headers: {}, auth: c.auth || null, parse: \"none\", stream: !1, }; if ( (\"object\" === (\"undefined\" === typeof e ? \"undefined\" : n(e)) && (l = Object.assign(l, e)), (l.port = Number(l.port)), l.hasOwnProperty(\"timeout\") && delete l.timeout, !0 === l.compressed && (l.headers[\"accept-encoding\"] = \"gzip, deflate\"), e.hasOwnProperty(\"form\")) ) { if (\"object\" !== n(e.form)) throw new Error( \"phin 'form' option must be of type Object if present.\" ); var f = s.stringify(e.form); (l.headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\"), (l.headers[\"Content-Length\"] = t.byteLength(f)), (e.data = f); } var h = void 0, d = function (e) { var n = e; !0 === l.compressed && (\"gzip\" === e.headers[\"content-encoding\"] ? (n = e.pipe(u.createGunzip())) : \"deflate\" === e.headers[\"content-encoding\"] && (n = e.pipe(u.createInflate()))), !0 === l.stream ? ((e.stream = n), r && r(null, e)) : ((e.body = new t([])), n.on(\"data\", function (r) { e.body = t.concat([e.body, r]); }), n.on(\"end\", function () { if (r) { if (\"json\" === l.parse) try { e.body = JSON.parse(e.body.toString()); } catch (t) { return void r(\"Invalid JSON received.\", e); } r(null, e); } })); }; switch (c.protocol.toLowerCase()) { case \"http:\": h = i.request(l, d); break; case \"https:\": h = a.request(l, d); break; default: return void ( r && r( new Error( \"Invalid / unknown URL protocol. Expected HTTP or HTTPS.\" ), null ) ); } if ( (\"number\" === typeof e.timeout && h.setTimeout(e.timeout, function () { h.abort(), r && r(new Error(\"Timeout has been reached.\"), null), (r = null); }), h.on(\"error\", function (e) { r && r(e, null); }), e.hasOwnProperty(\"data\")) ) { var A = e.data; if (!(e.data instanceof t) && \"object\" === n(e.data)) { var p = l.headers[\"content-type\"] || l.headers[\"Content-Type\"]; if (\"application/x-www-form-urlencoded\" === p) A = s.stringify(e.data); else try { A = JSON.stringify(e.data); } catch (g) { r && r( new Error( \"Couldn't stringify object. (Likely due to a circular reference.)\" ), null ); } } h.write(A); } h.end(); }; (l.promisified = function (e, t) { return new Promise(function (r, n) { l( e, function (e, t) { e ? n(e) : r(t); }, t ); }); }), c.promisify && (l[c.promisify.custom] = l.promisified), (e.exports = l); }).call(this, r(\"1c35\").Buffer); }, \"780f\": function (e, t, r) { \"use strict\"; e.exports = a; var n = r(\"27bf\"), i = Object.create(r(\"3a7c\")); function a(e) { if (!(this instanceof a)) return new a(e); n.call(this, e); } (i.inherits = r(\"3fb5\")), i.inherits(a, n), (a.prototype._transform = function (e, t, r) { r(null, e); }); }, 7839: function (e, t) { e.exports = [ \"constructor\", \"hasOwnProperty\", \"isPrototypeOf\", \"propertyIsEnumerable\", \"toLocaleString\", \"toString\", \"valueOf\", ]; }, \"785a\": function (e, t, r) { var n = r(\"cc12\"), i = n(\"span\").classList, a = i && i.constructor && i.constructor.prototype; e.exports = a === Object.prototype ? void 0 : a; }, \"789d\": function (e, t, r) { \"use strict\"; (function (t) { function r(e, r) { var a = this, s = this._readableState && this._readableState.destroyed, u = this._writableState && this._writableState.destroyed; return s || u ? (r ? r(e) : e && (this._writableState ? this._writableState.errorEmitted || ((this._writableState.errorEmitted = !0), t.nextTick(o, this, e)) : t.nextTick(o, this, e)), this) : (this._readableState && (this._readableState.destroyed = !0), this._writableState && (this._writableState.destroyed = !0), this._destroy(e || null, function (e) { !r && e ? a._writableState ? a._writableState.errorEmitted ? t.nextTick(i, a) : ((a._writableState.errorEmitted = !0), t.nextTick(n, a, e)) : t.nextTick(n, a, e) : r ? (t.nextTick(i, a), r(e)) : t.nextTick(i, a); }), this); } function n(e, t) { o(e, t), i(e); } function i(e) { (e._writableState && !e._writableState.emitClose) || (e._readableState && !e._readableState.emitClose) || e.emit(\"close\"); } function a() { this._readableState && ((this._readableState.destroyed = !1), (this._readableState.reading = !1), (this._readableState.ended = !1), (this._readableState.endEmitted = !1)), this._writableState && ((this._writableState.destroyed = !1), (this._writableState.ended = !1), (this._writableState.ending = !1), (this._writableState.finalCalled = !1), (this._writableState.prefinished = !1), (this._writableState.finished = !1), (this._writableState.errorEmitted = !1)); } function o(e, t) { e.emit(\"error\", t); } function s(e, t) { var r = e._readableState, n = e._writableState; (r && r.autoDestroy) || (n && n.autoDestroy) ? e.destroy(t) : e.emit(\"error\", t); } e.exports = { destroy: r, undestroy: a, errorOrDestroy: s }; }).call(this, r(\"4362\")); }, \"78b4\": function (e, t, r) { \"use strict\"; var n = { bmp: r(\"407c\"), cur: r(\"ddc1\"), dds: r(\"def7\"), gif: r(\"21c1\"), icns: r(\"6220\"), ico: r(\"0cb3\"), jpg: r(\"6030\"), png: r(\"9a4a\"), psd: r(\"d1ab\"), svg: r(\"9fe2\"), tiff: r(\"a0aa\"), webp: r(\"c057\"), }; e.exports = n; }, 7907: function (e, t, r) { !(function (t, r) { e.exports = r(); })(0, function () { \"use strict\"; function e(e) { return String(e) .split(\"\") .map(function (e) { return e.charCodeAt(0); }); } function t(t) { return new Uint8Array(e(t)); } function r(t) { var r = new Uint8Array(2 * t.length); return new Uint16Array(r.buffer).set(e(t)), r; } return (function () { var e = n.prototype; function n(e) { if (!e || \"object\" != typeof e || !(\"byteLength\" in e)) throw new Error( \"First argument should be an instance of ArrayBuffer or Buffer\" ); (this.arrayBuffer = e), (this.padding = 4096), (this.frames = []), (this.url = \"\"); } return ( (e._setIntegerFrame = function (e, t) { var r = parseInt(t, 10); this.frames.push({ name: e, value: r, size: 11 + r.toString().length, }); }), (e._setStringFrame = function (e, t) { var r = t.toString(); this.frames.push({ name: e, value: r, size: 13 + 2 * r.length }); }), (e._setPictureFrame = function (e, t, r, n) { var i, a, o, s = (function (e) { if (!e || !e.length) return null; if (255 === e[0] && 216 === e[1] && 255 === e[2]) return \"image/jpeg\"; if (137 === e[0] && 80 === e[1] && 78 === e[2] && 71 === e[3]) return \"image/png\"; if (71 === e[0] && 73 === e[1] && 70 === e[2]) return \"image/gif\"; if ( 87 === e[8] && 69 === e[9] && 66 === e[10] && 80 === e[11] ) return \"image/webp\"; var t = 73 === e[0] && 73 === e[1] && 42 === e[2] && 0 === e[3], r = 77 === e[0] && 77 === e[1] && 0 === e[2] && 42 === e[3]; return t || r ? \"image/tiff\" : 66 === e[0] && 77 === e[1] ? \"image/bmp\" : 0 === e[0] && 0 === e[1] && 1 === e[2] && 0 === e[3] ? \"image/x-icon\" : null; })(new Uint8Array(t)), u = r.toString(); if (!s) throw new Error(\"Unknown picture MIME type\"); r || (n = !1), this.frames.push({ name: \"APIC\", value: t, pictureType: e, mimeType: s, useUnicodeEncoding: n, description: u, size: ((i = t.byteLength), (a = s.length), (o = u.length), 11 + a + 1 + 1 + (n ? 2 + 2 * (o + 1) : o + 1) + i), }); }), (e._setLyricsFrame = function (e, t, r) { var n, i, a = e.split(\"\").map(function (e) { return e.charCodeAt(0); }), o = t.toString(), s = r.toString(); this.frames.push({ name: \"USLT\", value: s, language: a, description: o, size: ((n = o.length), (i = s.length), 16 + 2 * n + 2 + 2 + 2 * i), }); }), (e._setCommentFrame = function (e, t, r) { var n, i, a = e.split(\"\").map(function (e) { return e.charCodeAt(0); }), o = t.toString(), s = r.toString(); this.frames.push({ name: \"COMM\", value: s, language: a, description: o, size: ((n = o.length), (i = s.length), 16 + 2 * n + 2 + 2 + 2 * i), }); }), (e._setPrivateFrame = function (e, t) { var r, n, i = e.toString(); this.frames.push({ name: \"PRIV\", value: t, id: i, size: ((r = i.length), (n = t.byteLength), 10 + r + 1 + n), }); }), (e._setUserStringFrame = function (e, t) { var r, n, i = e.toString(), a = t.toString(); this.frames.push({ name: \"TXXX\", description: i, value: a, size: ((r = i.length), (n = a.length), 13 + 2 * r + 2 + 2 + 2 * n), }); }), (e._setUrlLinkFrame = function (e, t) { var r = t.toString(); this.frames.push({ name: e, value: r, size: 10 + r.length }); }), (e.setFrame = function (e, t) { switch (e) { case \"TPE1\": case \"TCOM\": case \"TCON\": if (!Array.isArray(t)) throw new Error( e + \" frame value should be an array of strings\" ); var r = \"TCON\" === e ? \";\" : \"/\", n = t.join(r); this._setStringFrame(e, n); break; case \"TLAN\": case \"TIT1\": case \"TIT2\": case \"TIT3\": case \"TALB\": case \"TPE2\": case \"TPE3\": case \"TPE4\": case \"TRCK\": case \"TPOS\": case \"TMED\": case \"TPUB\": case \"TCOP\": case \"TKEY\": case \"TEXT\": case \"TSRC\": this._setStringFrame(e, t); break; case \"TBPM\": case \"TLEN\": case \"TDAT\": case \"TYER\": this._setIntegerFrame(e, t); break; case \"USLT\": if ( ((t.language = t.language || \"eng\"), \"object\" != typeof t || !(\"description\" in t) || !(\"lyrics\" in t)) ) throw new Error( \"USLT frame value should be an object with keys description and lyrics\" ); if (t.language && !t.language.match(/[a-z]{3}/i)) throw new Error( \"Language must be coded following the ISO 639-2 standards\" ); this._setLyricsFrame(t.language, t.description, t.lyrics); break; case \"APIC\": if ( !( \"object\" == typeof t && \"type\" in t && \"data\" in t && \"description\" in t ) ) throw new Error( \"APIC frame value should be an object with keys type, data and description\" ); if (t.type < 0 || 20 < t.type) throw new Error(\"Incorrect APIC frame picture type\"); this._setPictureFrame( t.type, t.data, t.description, !!t.useUnicodeEncoding ); break; case \"TXXX\": if ( \"object\" != typeof t || !(\"description\" in t) || !(\"value\" in t) ) throw new Error( \"TXXX frame value should be an object with keys description and value\" ); this._setUserStringFrame(t.description, t.value); break; case \"WCOM\": case \"WCOP\": case \"WOAF\": case \"WOAR\": case \"WOAS\": case \"WORS\": case \"WPAY\": case \"WPUB\": this._setUrlLinkFrame(e, t); break; case \"COMM\": if ( ((t.language = t.language || \"eng\"), \"object\" != typeof t || !(\"description\" in t) || !(\"text\" in t)) ) throw new Error( \"COMM frame value should be an object with keys description and text\" ); if (t.language && !t.language.match(/[a-z]{3}/i)) throw new Error( \"Language must be coded following the ISO 639-2 standards\" ); this._setCommentFrame(t.language, t.description, t.text); break; case \"PRIV\": if (\"object\" != typeof t || !(\"id\" in t) || !(\"data\" in t)) throw new Error( \"PRIV frame value should be an object with keys id and data\" ); this._setPrivateFrame(t.id, t.data); break; default: throw new Error(\"Unsupported frame \" + e); } return this; }), (e.removeTag = function () { if (!(this.arrayBuffer.byteLength < 10)) { var e, t, r = new Uint8Array(this.arrayBuffer), n = r[3], i = ((e = [r[6], r[7], r[8], r[9]])[0] < 21) + (e[1] < 14) + (e[2] < 7) + e[3] + 10; 73 !== (t = r)[0] || 68 !== t[1] || 51 !== t[2] || n < 2 || 4 < n || (this.arrayBuffer = new Uint8Array(r.subarray(i)).buffer); } }), (e.addTag = function () { this.removeTag(); var e, n, i = [255, 254], a = 10 + this.frames.reduce(function (e, t) { return e + t.size; }, 0) + this.padding, o = new ArrayBuffer(this.arrayBuffer.byteLength + a), s = new Uint8Array(o), u = 0, c = []; return ( (c = [73, 68, 51, 3]), s.set(c, u), (u += c.length), u++, u++, (c = [ ((e = a - 10) >>> 21) & (n = 127), (e >>> 14) & n, (e >>> 7) & n, e & n, ]), s.set(c, u), (u += c.length), this.frames.forEach(function (e) { var n, a; switch ( ((c = t(e.name)), s.set(c, u), (u += c.length), (n = e.size - 10), (c = [ (n >>> 24) & (a = 255), (n >>> 16) & a, (n >>> 8) & a, n & a, ]), s.set(c, u), (u += c.length), (u += 2), e.name) ) { case \"WCOM\": case \"WCOP\": case \"WOAF\": case \"WOAR\": case \"WOAS\": case \"WORS\": case \"WPAY\": case \"WPUB\": (c = t(e.value)), s.set(c, u), (u += c.length); break; case \"TPE1\": case \"TCOM\": case \"TCON\": case \"TLAN\": case \"TIT1\": case \"TIT2\": case \"TIT3\": case \"TALB\": case \"TPE2\": case \"TPE3\": case \"TPE4\": case \"TRCK\": case \"TPOS\": case \"TKEY\": case \"TMED\": case \"TPUB\": case \"TCOP\": case \"TEXT\": case \"TSRC\": (c = [1].concat(i)), s.set(c, u), (u += c.length), (c = r(e.value)), s.set(c, u), (u += c.length); break; case \"TXXX\": case \"USLT\": case \"COMM\": (c = [1]), (\"USLT\" !== e.name && \"COMM\" !== e.name) || (c = c.concat(e.language)), (c = c.concat(i)), s.set(c, u), (u += c.length), (c = r(e.description)), s.set(c, u), (u += c.length), (c = [0, 0].concat(i)), s.set(c, u), (u += c.length), (c = r(e.value)), s.set(c, u), (u += c.length); break; case \"TBPM\": case \"TLEN\": case \"TDAT\": case \"TYER\": u++, (c = t(e.value)), s.set(c, u), (u += c.length); break; case \"PRIV\": (c = t(e.id)), s.set(c, u), (u += c.length), u++, s.set(new Uint8Array(e.value), u), (u += e.value.byteLength); break; case \"APIC\": (c = [e.useUnicodeEncoding ? 1 : 0]), s.set(c, u), (u += c.length), (c = t(e.mimeType)), s.set(c, u), (u += c.length), (c = [0, e.pictureType]), s.set(c, u), (u += c.length), e.useUnicodeEncoding ? ((c = [].concat(i)), s.set(c, u), (u += c.length), (c = r(e.description)), s.set(c, u), (u += c.length), (u += 2)) : ((c = t(e.description)), s.set(c, u), (u += c.length), u++), s.set(new Uint8Array(e.value), u), (u += e.value.byteLength); } }), (u += this.padding), s.set(new Uint8Array(this.arrayBuffer), u), (this.arrayBuffer = o) ); }), (e.getBlob = function () { return new Blob([this.arrayBuffer], { type: \"audio/mpeg\" }); }), (e.getURL = function () { return ( this.url || (this.url = URL.createObjectURL(this.getBlob())), this.url ); }), (e.revokeURL = function () { URL.revokeObjectURL(this.url); }), n ); })(); }); }, 7998: function (e, t, r) { \"use strict\"; var n = r(\"4ea4\"); Object.defineProperty(t, \"__esModule\", { value: !0 }), (t[\"default\"] = void 0); var i = n(r(\"9523\")), a = r(\"fcd8\"), o = r(\"c2d7\"), s = \"image/png\", u = -1, c = 0, l = 1, f = 2, h = 3, d = 4, A = function () { return { mime: (0, i[\"default\"])({}, s, [\"png\"]), constants: { MIME_PNG: s, PNG_FILTER_AUTO: u, PNG_FILTER_NONE: c, PNG_FILTER_SUB: l, PNG_FILTER_UP: f, PNG_FILTER_AVERAGE: h, PNG_FILTER_PATH: d, }, hasAlpha: (0, i[\"default\"])({}, s, !0), decoders: (0, i[\"default\"])({}, s, a.PNG.sync.read), encoders: (0, i[\"default\"])({}, s, function (e) { var t = new a.PNG({ width: e.bitmap.width, height: e.bitmap.height, }); return ( (t.data = e.bitmap.data), a.PNG.sync.write(t, { width: e.bitmap.width, height: e.bitmap.height, deflateLevel: e._deflateLevel, deflateStrategy: e._deflateStrategy, filterType: e._filterType, colorType: \"number\" === typeof e._colorType ? e._colorType : e._rgba ? 6 : 2, inputHasAlpha: e._rgba, }) ); }), class: { _deflateLevel: 9, _deflateStrategy: 3, _filterType: u, _colorType: null, deflateLevel: function (e, t) { return \"number\" !== typeof e ? o.throwError.call(this, \"l must be a number\", t) : e < 0 || e > 9 ? o.throwError.call(this, \"l must be a number 0 - 9\", t) : ((this._deflateLevel = Math.round(e)), (0, o.isNodePattern)(t) && t.call(this, null, this), this); }, deflateStrategy: function (e, t) { return \"number\" !== typeof e ? o.throwError.call(this, \"s must be a number\", t) : e < 0 || e > 3 ? o.throwError.call(this, \"s must be a number 0 - 3\", t) : ((this._deflateStrategy = Math.round(e)), (0, o.isNodePattern)(t) && t.call(this, null, this), this); }, filterType: function (e, t) { return \"number\" !== typeof e ? o.throwError.call(this, \"n must be a number\", t) : e < -1 || e > 4 ? o.throwError.call( this, \"n must be -1 (auto) or a number 0 - 4\", t ) : ((this._filterType = Math.round(e)), (0, o.isNodePattern)(t) && t.call(this, null, this), this); }, colorType: function (e, t) { return \"number\" !== typeof e ? o.throwError.call(this, \"s must be a number\", t) : 0 !== e && 2 !== e && 4 !== e && 6 !== e ? o.throwError.call(this, \"s must be a number 0, 2, 4, 6.\", t) : ((this._colorType = Math.round(e)), (0, o.isNodePattern)(t) && t.call(this, null, this), this); }, }, }; }; t[\"default\"] = A; }, \"7a0f\": function (e, t, r) {}, \"7a41\": function (e, t) { e.exports = function (e) { return \"object\" === typeof e ? null !== e : \"function\" === typeof e; }; }, \"7a87\": function (e, t, r) { var n = r(\"1c35\").Buffer; e.exports = function (e, t) { if (n.isBuffer(e) && n.isBuffer(t)) { if (\"function\" === typeof e.equals) return e.equals(t); if (e.length !== t.length) return !1; for (var r = 0; r < e.length; r++) if (e[r] !== t[r]) return !1; return !0; } }; }, \"7b0a\": function (e, t, r) { \"use strict\"; r.d(t, \"a\", function () { return n; }), r.d(t, \"b\", function () { return i; }), r.d(t, \"c\", function () { return a; }), r.d(t, \"d\", function () { return o; }), r.d(t, \"e\", function () { return s; }); const n = Symbol(\"thread.errors\"), i = Symbol(\"thread.events\"), a = Symbol(\"thread.terminate\"), o = Symbol(\"thread.transferable\"), s = Symbol(\"thread.worker\"); }, \"7b0b\": function (e, t, r) { var n = r(\"da84\"), i = r(\"1d80\"), a = n.Object; e.exports = function (e) { return a(i(e)); }; }, \"7b27\": function (e, t, r) { \"use strict\"; var n = r(\"be7f\"), i = !0, a = !0; try { String.fromCharCode.apply(null, [0]); } catch (c) { i = !1; } try { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (c) { a = !1; } for (var o = new n.Buf8(256), s = 0; s < 256; s++) o[s] = s >= 252 ? 6 : s >= 248 ? 5 : s >= 240 ? 4 : s >= 224 ? 3 : s >= 192 ? 2 : 1; function u(e, t) { if (t < 65534 && ((e.subarray && a) || (!e.subarray && i))) return String.fromCharCode.apply(null, n.shrinkBuf(e, t)); for (var r = \"\", o = 0; o < t; o++) r += String.fromCharCode(e[o]); return r; } (o[254] = o[254] = 1), (t.string2buf = function (e) { var t, r, i, a, o, s = e.length, u = 0; for (a = 0; a < s; a++) (r = e.charCodeAt(a)), 55296 === (64512 & r) && a + 1 < s && ((i = e.charCodeAt(a + 1)), 56320 === (64512 & i) && ((r = 65536 + ((r - 55296) < 10) + (i - 56320)), a++)), (u += r < 128 ? 1 : r < 2048 ? 2 : r < 65536 ? 3 : 4); for (t = new n.Buf8(u), o = 0, a = 0; o < u; a++) (r = e.charCodeAt(a)), 55296 === (64512 & r) && a + 1 < s && ((i = e.charCodeAt(a + 1)), 56320 === (64512 & i) && ((r = 65536 + ((r - 55296) < 10) + (i - 56320)), a++)), r < 128 ? (t[o++] = r) : r < 2048 ? ((t[o++] = 192 | (r >>> 6)), (t[o++] = 128 | (63 & r))) : r < 65536 ? ((t[o++] = 224 | (r >>> 12)), (t[o++] = 128 | ((r >>> 6) & 63)), (t[o++] = 128 | (63 & r))) : ((t[o++] = 240 | (r >>> 18)), (t[o++] = 128 | ((r >>> 12) & 63)), (t[o++] = 128 | ((r >>> 6) & 63)), (t[o++] = 128 | (63 & r))); return t; }), (t.buf2binstring = function (e) { return u(e, e.length); }), (t.binstring2buf = function (e) { for (var t = new n.Buf8(e.length), r = 0, i = t.length; r < i; r++) t[r] = e.charCodeAt(r); return t; }), (t.buf2string = function (e, t) { var r, n, i, a, s = t || e.length, c = new Array(2 * s); for (n = 0, r = 0; r < s; ) if (((i = e[r++]), i < 128)) c[n++] = i; else if (((a = o[i]), a > 4)) (c[n++] = 65533), (r += a - 1); else { i &= 2 === a ? 31 : 3 === a ? 15 : 7; while (a > 1 && r < s) (i = (i < 6) | (63 & e[r++])), a--; a > 1 ? (c[n++] = 65533) : i < 65536 ? (c[n++] = i) : ((i -= 65536), (c[n++] = 55296 | ((i >> 10) & 1023)), (c[n++] = 56320 | (1023 & i))); } return u(c, n); }), (t.utf8border = function (e, t) { var r; (t = t || e.length), t > e.length && (t = e.length), (r = t - 1); while (r >= 0 && 128 === (192 & e[r])) r--; return r < 0 || 0 === r ? t : r + o[e[r]] > t ? r : t; }); }, \"7b3e\": function (e, t, r) { \"use strict\"; var n, i = r(\"a3de\"); /** * Checks if an event is supported in the current execution environment. * * NOTE: This will not work correctly for non-generic events such as `change`, * `reset`, `load`, `error`, and `select`. * * Borrows from Modernizr. * * @param {string} eventNameSuffix Event name, e.g. \"click\". * @param {?boolean} capture Check if the capture phase is supported. * @return {boolean} True if the event is supported. * @internal * @license Modernizr 3.0.0pre (Custom Build) | MIT */ function a(e, t) { if (!i.canUseDOM || (t && !(\"addEventListener\" in document))) return !1; var r = \"on\" + e, a = r in document; if (!a) { var o = document.createElement(\"div\"); o.setAttribute(r, \"return;\"), (a = \"function\" === typeof o[r]); } return ( !a && n && \"wheel\" === e && (a = document.implementation.hasFeature(\"Events.wheel\", \"3.0\")), a ); } i.canUseDOM && (n = document.implementation && document.implementation.hasFeature && !0 !== document.implementation.hasFeature(\"\", \"\")), (e.exports = a); }, \"7b76\": function (e, t, r) { \"use strict\"; (function (t) { var n = r(\"ab33\"); e.exports = function (e, r, i, a) { var o = -1 !== [n.COLORTYPE_COLOR_ALPHA, n.COLORTYPE_ALPHA].indexOf(a.colorType); if (a.colorType === a.inputColorType) { var s = (function () { var e = new ArrayBuffer(2); return ( new DataView(e).setInt16(0, 256, !0), 256 !== new Int16Array(e)[0] ); })(); if (8 === a.bitDepth || (16 === a.bitDepth && s)) return e; } var u = 16 !== a.bitDepth ? e : new Uint16Array(e.buffer), c = 255, l = n.COLORTYPE_TO_BPP_MAP[a.inputColorType]; 4 !== l || a.inputHasAlpha || (l = 3); var f = n.COLORTYPE_TO_BPP_MAP[a.colorType]; 16 === a.bitDepth && ((c = 65535), (f *= 2)); var h = new t(r * i * f), d = 0, A = 0, p = a.bgColor || {}; function g() { var e, t, r, i = c; switch (a.inputColorType) { case n.COLORTYPE_COLOR_ALPHA: (i = u[d + 3]), (e = u[d]), (t = u[d + 1]), (r = u[d + 2]); break; case n.COLORTYPE_COLOR: (e = u[d]), (t = u[d + 1]), (r = u[d + 2]); break; case n.COLORTYPE_ALPHA: (i = u[d + 1]), (e = u[d]), (t = e), (r = e); break; case n.COLORTYPE_GRAYSCALE: (e = u[d]), (t = e), (r = e); break; default: throw new Error( \"input color type:\" + a.inputColorType + \" is not supported at present\" ); } return ( a.inputHasAlpha && (o || ((i /= c), (e = Math.min( Math.max(Math.round((1 - i) * p.red + i * e), 0), c )), (t = Math.min( Math.max(Math.round((1 - i) * p.green + i * t), 0), c )), (r = Math.min( Math.max(Math.round((1 - i) * p.blue + i * r), 0), c )))), { red: e, green: t, blue: r, alpha: i } ); } void 0 === p.red && (p.red = c), void 0 === p.green && (p.green = c), void 0 === p.blue && (p.blue = c); for (var m = 0; m < i; m++) for (var b = 0; b < r; b++) { var v = g(u, d); switch (a.colorType) { case n.COLORTYPE_COLOR_ALPHA: case n.COLORTYPE_COLOR: 8 === a.bitDepth ? ((h[A] = v.red), (h[A + 1] = v.green), (h[A + 2] = v.blue), o && (h[A + 3] = v.alpha)) : (h.writeUInt16BE(v.red, A), h.writeUInt16BE(v.green, A + 2), h.writeUInt16BE(v.blue, A + 4), o && h.writeUInt16BE(v.alpha, A + 6)); break; case n.COLORTYPE_ALPHA: case n.COLORTYPE_GRAYSCALE: var y = (v.red + v.green + v.blue) / 3; 8 === a.bitDepth ? ((h[A] = y), o && (h[A + 1] = v.alpha)) : (h.writeUInt16BE(y, A), o && h.writeUInt16BE(v.alpha, A + 2)); break; default: throw new Error(\"unrecognised color Type \" + a.colorType); } (d += l), (A += f); } return h; }; }).call(this, r(\"1c35\").Buffer); }, \"7bbc\": function (e, t, r) { (function (t, n, i) { e.exports = n(r(\"21bf\"), r(\"df2f\"), r(\"5980\")); })(0, function (e) { return ( (function () { var t = e, r = t.lib, n = r.Base, i = r.WordArray, a = t.algo, o = a.SHA1, s = a.HMAC, u = (a.PBKDF2 = n.extend({ cfg: n.extend({ keySize: 4, hasher: o, iterations: 1 }), init: function (e) { this.cfg = this.cfg.extend(e); }, compute: function (e, t) { var r = this.cfg, n = s.create(r.hasher, e), a = i.create(), o = i.create([1]), u = a.words, c = o.words, l = r.keySize, f = r.iterations; while (u.length < l) { var h = n.update(t).finalize(o); n.reset(); for ( var d = h.words, A = d.length, p = h, g = 1; g < f; g++ ) { (p = n.finalize(p)), n.reset(); for (var m = p.words, b = 0; b < A; b++) d[b] ^= m[b]; } a.concat(h), c[0]++; } return (a.sigBytes = 4 * l), a; }, })); t.PBKDF2 = function (e, t, r) { return u.create(r).compute(e, t); }; })(), e.PBKDF2 ); }); }, \"7c73\": function (e, t, r) { var n, i = r(\"825a\"), a = r(\"37e8\"), o = r(\"7839\"), s = r(\"d012\"), u = r(\"1be4\"), c = r(\"cc12\"), l = r(\"f772\"), f = \">\", h = \" -1, }, }), ] ), e.disabled ? e._e() : r(\"i\", { staticClass: \"el-icon-close\", on: { click: function (r) { e.$emit(\"remove\", t); }, }, }), e.disabled ? e._e() : r(\"i\", { staticClass: \"el-icon-close-tip\" }, [ e._v(e._s(e.t(\"el.upload.deleteTip\"))), ]), \"uploading\" === t.status ? r(\"el-progress\", { attrs: { type: \"picture-card\" === e.listType ? \"circle\" : \"line\", \"stroke-width\": \"picture-card\" === e.listType ? 6 : 2, percentage: e.parsePercentage(t.percentage), }, }) : e._e(), \"picture-card\" === e.listType ? r( \"span\", { staticClass: \"el-upload-list__item-actions\" }, [ e.handlePreview && \"picture-card\" === e.listType ? r( \"span\", { staticClass: \"el-upload-list__item-preview\", on: { click: function (r) { e.handlePreview(t); }, }, }, [ r(\"i\", { staticClass: \"el-icon-zoom-in\", }), ] ) : e._e(), e.disabled ? e._e() : r( \"span\", { staticClass: \"el-upload-list__item-delete\", on: { click: function (r) { e.$emit(\"remove\", t); }, }, }, [ r(\"i\", { staticClass: \"el-icon-delete\", }), ] ), ] ) : e._e(), ], { file: t } ), ], 2 ); }), 0 ); }, i = []; n._withStripped = !0; var a = r(6), o = r.n(a), s = r(42), u = r.n(s), c = { name: \"ElUploadList\", mixins: [o.a], data: function () { return { focusing: !1 }; }, components: { ElProgress: u.a }, props: { files: { type: Array, default: function () { return []; }, }, disabled: { type: Boolean, default: !1 }, handlePreview: Function, listType: String, }, methods: { parsePercentage: function (e) { return parseInt(e, 10); }, handleClick: function (e) { this.handlePreview && this.handlePreview(e); }, }, }, l = c, f = r(0), h = Object(f[\"a\"])(l, n, i, !1, null, null, null); h.options.__file = \"packages/upload/src/upload-list.vue\"; var d = h.exports, A = r(26), p = r.n(A); function g(e, t, r) { var n = void 0; n = r.response ? \"\" + (r.response.error || r.response) : r.responseText ? \"\" + r.responseText : \"fail to post \" + e + \" \" + r.status; var i = new Error(n); return (i.status = r.status), (i.method = \"post\"), (i.url = e), i; } function m(e) { var t = e.responseText || e.response; if (!t) return t; try { return JSON.parse(t); } catch (r) { return t; } } function b(e) { if (\"undefined\" !== typeof XMLHttpRequest) { var t = new XMLHttpRequest(), r = e.action; t.upload && (t.upload.onprogress = function (t) { t.total > 0 && (t.percent = (t.loaded / t.total) * 100), e.onProgress(t); }); var n = new FormData(); e.data && Object.keys(e.data).forEach(function (t) { n.append(t, e.data[t]); }), n.append(e.filename, e.file, e.file.name), (t.onerror = function (t) { e.onError(t); }), (t.onload = function () { if (t.status < 200 || t.status >= 300) return e.onError(g(r, e, t)); e.onSuccess(m(t)); }), t.open(\"post\", r, !0), e.withCredentials && \"withCredentials\" in t && (t.withCredentials = !0); var i = e.headers || {}; for (var a in i) i.hasOwnProperty(a) && null !== i[a] && t.setRequestHeader(a, i[a]); return t.send(n), t; } } var v = function () { var e = this, t = e.$createElement, r = e._self._c || t; return r( \"div\", { staticClass: \"el-upload-dragger\", class: { \"is-dragover\": e.dragover }, on: { drop: function (t) { return t.preventDefault(), e.onDrop(t); }, dragover: function (t) { return t.preventDefault(), e.onDragover(t); }, dragleave: function (t) { t.preventDefault(), (e.dragover = !1); }, }, }, [e._t(\"default\")], 2 ); }, y = []; v._withStripped = !0; var I = { name: \"ElUploadDrag\", props: { disabled: Boolean }, inject: { uploader: { default: \"\" } }, data: function () { return { dragover: !1 }; }, methods: { onDragover: function () { this.disabled || (this.dragover = !0); }, onDrop: function (e) { if (!this.disabled && this.uploader) { var t = this.uploader.accept; (this.dragover = !1), t ? this.$emit( \"file\", [].slice .call(e.dataTransfer.files) .filter(function (e) { var r = e.type, n = e.name, i = n.indexOf(\".\") > -1 ? \".\" + n.split(\".\").pop() : \"\", a = r.replace(/\\/.*$/, \"\"); return t .split(\",\") .map(function (e) { return e.trim(); }) .filter(function (e) { return e; }) .some(function (e) { return /\\..+$/.test(e) ? i === e : /\\/\\*$/.test(e) ? a === e.replace(/\\/\\*$/, \"\") : !!/^[^\\/]+\\/[^\\/]+$/.test(e) && r === e; }); }) ) : this.$emit(\"file\", e.dataTransfer.files); } }, }, }, E = I, w = Object(f[\"a\"])(E, v, y, !1, null, null, null); w.options.__file = \"packages/upload/src/upload-dragger.vue\"; var C, _, B = w.exports, x = { inject: [\"uploader\"], components: { UploadDragger: B }, props: { type: String, action: { type: String, required: !0 }, name: { type: String, default: \"file\" }, data: Object, headers: Object, withCredentials: Boolean, multiple: Boolean, accept: String, onStart: Function, onProgress: Function, onSuccess: Function, onError: Function, beforeUpload: Function, drag: Boolean, onPreview: { type: Function, default: function () {} }, onRemove: { type: Function, default: function () {} }, fileList: Array, autoUpload: Boolean, listType: String, httpRequest: { type: Function, default: b }, disabled: Boolean, limit: Number, onExceed: Function, }, data: function () { return { mouseover: !1, reqs: {} }; }, methods: { isImage: function (e) { return -1 !== e.indexOf(\"image\"); }, handleChange: function (e) { var t = e.target.files; t && this.uploadFiles(t); }, uploadFiles: function (e) { var t = this; if ( this.limit && this.fileList.length + e.length > this.limit ) this.onExceed && this.onExceed(e, this.fileList); else { var r = Array.prototype.slice.call(e); this.multiple || (r = r.slice(0, 1)), 0 !== r.length && r.forEach(function (e) { t.onStart(e), t.autoUpload && t.upload(e); }); } }, upload: function (e) { var t = this; if (((this.$refs.input.value = null), !this.beforeUpload)) return this.post(e); var r = this.beforeUpload(e); r && r.then ? r.then( function (r) { var n = Object.prototype.toString.call(r); if (\"[object File]\" === n || \"[object Blob]\" === n) { for (var i in (\"[object Blob]\" === n && (r = new File([r], e.name, { type: e.type })), e)) e.hasOwnProperty(i) && (r[i] = e[i]); t.post(r); } else t.post(e); }, function () { t.onRemove(null, e); } ) : !1 !== r ? this.post(e) : this.onRemove(null, e); }, abort: function (e) { var t = this.reqs; if (e) { var r = e; e.uid && (r = e.uid), t[r] && t[r].abort(); } else Object.keys(t).forEach(function (e) { t[e] && t[e].abort(), delete t[e]; }); }, post: function (e) { var t = this, r = e.uid, n = { headers: this.headers, withCredentials: this.withCredentials, file: e, data: this.data, filename: this.name, action: this.action, onProgress: function (r) { t.onProgress(r, e); }, onSuccess: function (n) { t.onSuccess(n, e), delete t.reqs[r]; }, onError: function (n) { t.onError(n, e), delete t.reqs[r]; }, }, i = this.httpRequest(n); (this.reqs[r] = i), i && i.then && i.then(n.onSuccess, n.onError); }, handleClick: function () { this.disabled || ((this.$refs.input.value = null), this.$refs.input.click()); }, handleKeydown: function (e) { e.target === e.currentTarget && ((13 !== e.keyCode && 32 !== e.keyCode) || this.handleClick()); }, }, render: function (e) { var t = this.handleClick, r = this.drag, n = this.name, i = this.handleChange, a = this.multiple, o = this.accept, s = this.listType, u = this.uploadFiles, c = this.disabled, l = this.handleKeydown, f = { class: { \"el-upload\": !0 }, on: { click: t, keydown: l }, }; return ( (f.class[\"el-upload--\" + s] = !0), e(\"div\", p()([f, { attrs: { tabindex: \"0\" } }]), [ r ? e( \"upload-dragger\", { attrs: { disabled: c }, on: { file: u } }, [this.$slots.default] ) : this.$slots.default, e(\"input\", { class: \"el-upload__input\", attrs: { type: \"file\", name: n, multiple: a, accept: o }, ref: \"input\", on: { change: i }, }), ]) ); }, }, S = x, k = Object(f[\"a\"])(S, C, _, !1, null, null, null); k.options.__file = \"packages/upload/src/upload.vue\"; var Q = k.exports, T = r(11), M = r.n(T); function D() {} var R, O, N = { name: \"ElUpload\", mixins: [M.a], components: { ElProgress: u.a, UploadList: d, Upload: Q }, provide: function () { return { uploader: this }; }, inject: { elForm: { default: \"\" } }, props: { action: { type: String, required: !0 }, headers: { type: Object, default: function () { return {}; }, }, data: Object, multiple: Boolean, name: { type: String, default: \"file\" }, drag: Boolean, dragger: Boolean, withCredentials: Boolean, showFileList: { type: Boolean, default: !0 }, accept: String, type: { type: String, default: \"select\" }, beforeUpload: Function, beforeRemove: Function, onRemove: { type: Function, default: D }, onChange: { type: Function, default: D }, onPreview: { type: Function }, onSuccess: { type: Function, default: D }, onProgress: { type: Function, default: D }, onError: { type: Function, default: D }, fileList: { type: Array, default: function () { return []; }, }, autoUpload: { type: Boolean, default: !0 }, listType: { type: String, default: \"text\" }, httpRequest: Function, disabled: Boolean, limit: Number, onExceed: { type: Function, default: D }, }, data: function () { return { uploadFiles: [], dragOver: !1, draging: !1, tempIndex: 1, }; }, computed: { uploadDisabled: function () { return this.disabled || (this.elForm || {}).disabled; }, }, watch: { listType: function (e) { (\"picture-card\" !== e && \"picture\" !== e) || (this.uploadFiles = this.uploadFiles.map(function (e) { if (!e.url && e.raw) try { e.url = URL.createObjectURL(e.raw); } catch (t) { console.error(\"[Element Error][Upload]\", t); } return e; })); }, fileList: { immediate: !0, handler: function (e) { var t = this; this.uploadFiles = e.map(function (e) { return ( (e.uid = e.uid || Date.now() + t.tempIndex++), (e.status = e.status || \"success\"), e ); }); }, }, }, methods: { handleStart: function (e) { e.uid = Date.now() + this.tempIndex++; var t = { status: \"ready\", name: e.name, size: e.size, percentage: 0, uid: e.uid, raw: e, }; if ( \"picture-card\" === this.listType || \"picture\" === this.listType ) try { t.url = URL.createObjectURL(e); } catch (r) { return void console.error(\"[Element Error][Upload]\", r); } this.uploadFiles.push(t), this.onChange(t, this.uploadFiles); }, handleProgress: function (e, t) { var r = this.getFile(t); this.onProgress(e, r, this.uploadFiles), (r.status = \"uploading\"), (r.percentage = e.percent || 0); }, handleSuccess: function (e, t) { var r = this.getFile(t); r && ((r.status = \"success\"), (r.response = e), this.onSuccess(e, r, this.uploadFiles), this.onChange(r, this.uploadFiles)); }, handleError: function (e, t) { var r = this.getFile(t), n = this.uploadFiles; (r.status = \"fail\"), n.splice(n.indexOf(r), 1), this.onError(e, r, this.uploadFiles), this.onChange(r, this.uploadFiles); }, handleRemove: function (e, t) { var r = this; t && (e = this.getFile(t)); var n = function () { r.abort(e); var t = r.uploadFiles; t.splice(t.indexOf(e), 1), r.onRemove(e, t); }; if (this.beforeRemove) { if (\"function\" === typeof this.beforeRemove) { var i = this.beforeRemove(e, this.uploadFiles); i && i.then ? i.then(function () { n(); }, D) : !1 !== i && n(); } } else n(); }, getFile: function (e) { var t = this.uploadFiles, r = void 0; return ( t.every(function (t) { return (r = e.uid === t.uid ? t : null), !r; }), r ); }, abort: function (e) { this.$refs[\"upload-inner\"].abort(e); }, clearFiles: function () { this.uploadFiles = []; }, submit: function () { var e = this; this.uploadFiles .filter(function (e) { return \"ready\" === e.status; }) .forEach(function (t) { e.$refs[\"upload-inner\"].upload(t.raw); }); }, getMigratingConfig: function () { return { props: { \"default-file-list\": \"default-file-list is renamed to file-list.\", \"show-upload-list\": \"show-upload-list is renamed to show-file-list.\", \"thumbnail-mode\": \"thumbnail-mode has been deprecated, you can implement the same effect according to this case: http://element.eleme.io/#/zh-CN/component/upload#yong-hu-tou-xiang-shang-chuan\", }, }; }, }, beforeDestroy: function () { this.uploadFiles.forEach(function (e) { e.url && 0 === e.url.indexOf(\"blob:\") && URL.revokeObjectURL(e.url); }); }, render: function (e) { var t = this, r = void 0; this.showFileList && (r = e( d, { attrs: { disabled: this.uploadDisabled, listType: this.listType, files: this.uploadFiles, handlePreview: this.onPreview, }, on: { remove: this.handleRemove }, }, [ function (e) { if (t.$scopedSlots.file) return t.$scopedSlots.file({ file: e.file }); }, ] )); var n = { props: { type: this.type, drag: this.drag, action: this.action, multiple: this.multiple, \"before-upload\": this.beforeUpload, \"with-credentials\": this.withCredentials, headers: this.headers, name: this.name, data: this.data, accept: this.accept, fileList: this.uploadFiles, autoUpload: this.autoUpload, listType: this.listType, disabled: this.uploadDisabled, limit: this.limit, \"on-exceed\": this.onExceed, \"on-start\": this.handleStart, \"on-progress\": this.handleProgress, \"on-success\": this.handleSuccess, \"on-error\": this.handleError, \"on-preview\": this.onPreview, \"on-remove\": this.handleRemove, \"http-request\": this.httpRequest, }, ref: \"upload-inner\", }, i = this.$slots.trigger || this.$slots.default, a = e(\"upload\", n, [i]); return e(\"div\", [ \"picture-card\" === this.listType ? r : \"\", this.$slots.trigger ? [a, this.$slots.default] : a, this.$slots.tip, \"picture-card\" !== this.listType ? r : \"\", ]); }, }, F = N, L = Object(f[\"a\"])(F, R, O, !1, null, null, null); L.options.__file = \"packages/upload/src/index.vue\"; var P = L.exports; P.install = function (e) { e.component(P.name, P); }; t[\"default\"] = P; }, 6: function (e, t) { e.exports = r(\"6b7c\"); }, }); }, \"8a0d\": function (e, t) { e.exports = {}; }, \"8a58\": function (e, t, r) { \"use strict\"; e.exports = l; var n = r(\"1b08\").codes, i = n.ERR_METHOD_NOT_IMPLEMENTED, a = n.ERR_MULTIPLE_CALLBACK, o = n.ERR_TRANSFORM_ALREADY_TRANSFORMING, s = n.ERR_TRANSFORM_WITH_LENGTH_0, u = r(\"845f\"); function c(e, t) { var r = this._transformState; r.transforming = !1; var n = r.writecb; if (null === n) return this.emit(\"error\", new a()); (r.writechunk = null), (r.writecb = null), null != t && this.push(t), n(e); var i = this._readableState; (i.reading = !1), (i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark); } function l(e) { if (!(this instanceof l)) return new l(e); u.call(this, e), (this._transformState = { afterTransform: c.bind(this), needTransform: !1, transforming: !1, writecb: null, writechunk: null, writeencoding: null, }), (this._readableState.needReadable = !0), (this._readableState.sync = !1), e && (\"function\" === typeof e.transform && (this._transform = e.transform), \"function\" === typeof e.flush && (this._flush = e.flush)), this.on(\"prefinish\", f); } function f() { var e = this; \"function\" !== typeof this._flush || this._readableState.destroyed ? h(this, null, null) : this._flush(function (t, r) { h(e, t, r); }); } function h(e, t, r) { if (t) return e.emit(\"error\", t); if ((null != r && e.push(r), e._writableState.length)) throw new s(); if (e._transformState.transforming) throw new o(); return e.push(null); } r(\"3fb5\")(l, u), (l.prototype.push = function (e, t) { return ( (this._transformState.needTransform = !1), u.prototype.push.call(this, e, t) ); }), (l.prototype._transform = function (e, t, r) { r(new i(\"_transform()\")); }), (l.prototype._write = function (e, t, r) { var n = this._transformState; if ( ((n.writecb = r), (n.writechunk = e), (n.writeencoding = t), !n.transforming) ) { var i = this._readableState; (n.needTransform || i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark); } }), (l.prototype._read = function (e) { var t = this._transformState; null === t.writechunk || t.transforming ? (t.needTransform = !0) : ((t.transforming = !0), this._transform(t.writechunk, t.writeencoding, t.afterTransform)); }), (l.prototype._destroy = function (e, t) { u.prototype._destroy.call(this, e, function (e) { t(e); }); }); }, \"8aa5\": function (e, t, r) { \"use strict\"; var n = r(\"6547\").charAt; e.exports = function (e, t, r) { return t + (r ? n(e, t).length : 1); }; }, \"8aa7\": function (e, t, r) { var n = r(\"da84\"), i = r(\"d039\"), a = r(\"1c7e\"), o = r(\"ebb5\").NATIVE_ARRAY_BUFFER_VIEWS, s = n.ArrayBuffer, u = n.Int8Array; e.exports = !o || !i(function () { u(1); }) || !i(function () { new u(-1); }) || !a(function (e) { new u(), new u(null), new u(1.5), new u(e); }, !0) || i(function () { return 1 !== new u(new s(2), 1, void 0).length; }); }, \"8b10\": function (e, t, r) { \"use strict\"; (function (e) { var n = r(\"4ea4\"); Object.defineProperty(t, \"__esModule\", { value: !0 }), (t[\"default\"] = o); var i = n(r(\"7037\")), a = r(\"c2d7\"); function o(t) { return ( t(\"crop\", function (t, r, n, i, o) { if (\"number\" !== typeof t || \"number\" !== typeof r) return a.throwError.call(this, \"x and y must be numbers\", o); if (\"number\" !== typeof n || \"number\" !== typeof i) return a.throwError.call(this, \"w and h must be numbers\", o); if ( ((t = Math.round(t)), (r = Math.round(r)), (n = Math.round(n)), (i = Math.round(i)), 0 === t && n === this.bitmap.width) ) { var s = (n * r + t) < 2, u = (s + i * n) < 2; this.bitmap.data = this.bitmap.data.slice(s, u); } else { var c = e.allocUnsafe(n * i * 4), l = 0; this.scanQuiet(t, r, n, i, function (e, t, r) { var n = this.bitmap.data.readUInt32BE(r, !0); c.writeUInt32BE(n, l, !0), (l += 4); }), (this.bitmap.data = c); } return ( (this.bitmap.width = n), (this.bitmap.height = i), (0, a.isNodePattern)(o) && o.call(this, null, this), this ); }), { class: { autocrop: function () { for ( var e, t = this.bitmap.width, r = this.bitmap.height, n = 1, o = 0, s = 2e-4, u = !0, c = !1, l = { north: !1, south: !1, east: !1, west: !1 }, f = arguments.length, h = new Array(f), d = 0; d < f; d++ ) h[d] = arguments[d]; for (var A = 0, p = h.length; A < p; A++) if ( (\"number\" === typeof h[A] && (s = h[A]), \"boolean\" === typeof h[A] && (u = h[A]), \"function\" === typeof h[A] && (e = h[A]), \"object\" === (0, i[\"default\"])(h[A])) ) { var g = h[A]; \"undefined\" !== typeof g.tolerance && (s = g.tolerance), \"undefined\" !== typeof g.cropOnlyFrames && (u = g.cropOnlyFrames), \"undefined\" !== typeof g.cropSymmetric && (c = g.cropSymmetric), \"undefined\" !== typeof g.leaveBorder && (o = g.leaveBorder), \"undefined\" !== typeof g.ignoreSides && (l = g.ignoreSides); } var m = this.getPixelColor(0, 0), b = this.constructor.intToRGBA(m), v = 0, y = 0, I = 0, E = 0; if (((m = this.getPixelColor(0, 0)), !l.north)) e: for (var w = 0; w < r - n; w++) { for (var C = 0; C < t; C++) { var _ = this.getPixelColor(C, w), B = this.constructor.intToRGBA(_); if (this.constructor.colorDiff(b, B) > s) break e; } v++; } if (((m = this.getPixelColor(t, 0)), !l.east)) e: for (var x = 0; x < t - n; x++) { for (var S = 0 + v; S < r; S++) { var k = this.getPixelColor(x, S), Q = this.constructor.intToRGBA(k); if (this.constructor.colorDiff(b, Q) > s) break e; } y++; } if (((m = this.getPixelColor(0, r)), !l.south)) e: for (var T = r - 1; T >= v + n; T--) { for (var M = t - y - 1; M >= 0; M--) { var D = this.getPixelColor(M, T), R = this.constructor.intToRGBA(D); if (this.constructor.colorDiff(b, R) > s) break e; } I++; } if (((m = this.getPixelColor(t, r)), !l.west)) e: for (var O = t - 1; O >= 0 + y + n; O--) { for (var N = r - 1; N >= 0 + v; N--) { var F = this.getPixelColor(O, N), L = this.constructor.intToRGBA(F); if (this.constructor.colorDiff(b, L) > s) break e; } E++; } var P = !1; if (((E -= o), (y -= o), (v -= o), (I -= o), c)) { var U = Math.min(y, E), j = Math.min(v, I); (E = U), (y = U), (v = j), (I = j); } (E = E >= 0 ? E : 0), (y = y >= 0 ? y : 0), (v = v >= 0 ? v : 0), (I = I >= 0 ? I : 0); var z = t - (E + y), G = r - (I + v); return ( (P = u ? 0 !== y && 0 !== v && 0 !== E && 0 !== I : 0 !== y || 0 !== v || 0 !== E || 0 !== I), P && this.crop(y, v, z, G), (0, a.isNodePattern)(e) && e.call(this, null, this), this ); }, }, } ); } }).call(this, r(\"1c35\").Buffer); }, \"8b1a\": function (e, t) { var r = 0, n = Math.random(); e.exports = function (e) { return \"Symbol(\".concat( void 0 === e ? \"\" : e, \")_\", (++r + n).toString(36) ); }; }, \"8b6b\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.Deferred = void 0); class n { constructor() { (this.resolve = () => null), (this.reject = () => null), (this.promise = new Promise((e, t) => { (this.reject = t), (this.resolve = e); })); } } t.Deferred = n; }, \"8c05\": function (e, t) { e.exports = { 100: \"Continue\", 101: \"Switching Protocols\", 102: \"Processing\", 200: \"OK\", 201: \"Created\", 202: \"Accepted\", 203: \"Non-Authoritative Information\", 204: \"No Content\", 205: \"Reset Content\", 206: \"Partial Content\", 207: \"Multi-Status\", 208: \"Already Reported\", 226: \"IM Used\", 300: \"Multiple Choices\", 301: \"Moved Permanently\", 302: \"Found\", 303: \"See Other\", 304: \"Not Modified\", 305: \"Use Proxy\", 307: \"Temporary Redirect\", 308: \"Permanent Redirect\", 400: \"Bad Request\", 401: \"Unauthorized\", 402: \"Payment Required\", 403: \"Forbidden\", 404: \"Not Found\", 405: \"Method Not Allowed\", 406: \"Not Acceptable\", 407: \"Proxy Authentication Required\", 408: \"Request Timeout\", 409: \"Conflict\", 410: \"Gone\", 411: \"Length Required\", 412: \"Precondition Failed\", 413: \"Payload Too Large\", 414: \"URI Too Long\", 415: \"Unsupported Media Type\", 416: \"Range Not Satisfiable\", 417: \"Expectation Failed\", 418: \"I'm a teapot\", 421: \"Misdirected Request\", 422: \"Unprocessable Entity\", 423: \"Locked\", 424: \"Failed Dependency\", 425: \"Unordered Collection\", 426: \"Upgrade Required\", 428: \"Precondition Required\", 429: \"Too Many Requests\", 431: \"Request Header Fields Too Large\", 451: \"Unavailable For Legal Reasons\", 500: \"Internal Server Error\", 501: \"Not Implemented\", 502: \"Bad Gateway\", 503: \"Service Unavailable\", 504: \"Gateway Timeout\", 505: \"HTTP Version Not Supported\", 506: \"Variant Also Negotiates\", 507: \"Insufficient Storage\", 508: \"Loop Detected\", 509: \"Bandwidth Limit Exceeded\", 510: \"Not Extended\", 511: \"Network Authentication Required\", }; }, \"8d59\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t[\"default\"] = void 0); var n = r(\"c2d7\"), i = function () { return { circle: function () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t = arguments.length > 1 ? arguments[1] : void 0; \"function\" === typeof e && ((t = e), (e = {})); var r = e.radius || (this.bitmap.width > this.bitmap.height ? this.bitmap.height : this.bitmap.width) / 2, i = { x: \"number\" === typeof e.x ? e.x : this.bitmap.width / 2, y: \"number\" === typeof e.y ? e.y : this.bitmap.height / 2, }; return ( this.scanQuiet( 0, 0, this.bitmap.width, this.bitmap.height, function (e, t, n) { var a = Math.sqrt( Math.pow(e - i.x, 2) + Math.pow(t - i.y, 2) ); r - a 8) & 255), (e[a++] = 255 & r), (e[a++] = (r >> 8) & 255), (e[a++] = (null !== s ? 128 : 0) | c), (e[a++] = l), (e[a++] = 0), null !== s) ) for (var h = 0, d = s.length; h < d; ++h) { var A = s[h]; (e[a++] = (A >> 16) & 255), (e[a++] = (A >> 8) & 255), (e[a++] = 255 & A); } if (null !== o) { if (o < 0 || o > 65535) throw new Error(\"Loop count invalid.\"); (e[a++] = 33), (e[a++] = 255), (e[a++] = 11), (e[a++] = 78), (e[a++] = 69), (e[a++] = 84), (e[a++] = 83), (e[a++] = 67), (e[a++] = 65), (e[a++] = 80), (e[a++] = 69), (e[a++] = 50), (e[a++] = 46), (e[a++] = 48), (e[a++] = 3), (e[a++] = 1), (e[a++] = 255 & o), (e[a++] = (o >> 8) & 255), (e[a++] = 0); } var p = !1; (this.addFrame = function (t, r, n, o, c, l) { if ( (!0 === p && (--a, (p = !1)), (l = void 0 === l ? {} : l), t < 0 || r < 0 || t > 65535 || r > 65535) ) throw new Error(\"x/y invalid.\"); if (n 65535) throw new Error(\"Width/Height invalid.\"); if (c.length < n * o) throw new Error(\"Not enough pixels for the frame size.\"); var f = !0, h = l.palette; if ( ((void 0 !== h && null !== h) || ((f = !1), (h = s)), void 0 === h || null === h) ) throw new Error(\"Must supply either a local or global palette.\"); var d = u(h), A = 0; while ((d >>= 1)) ++A; d = 1 < A; var g = void 0 === l.delay ? 0 : l.delay, m = void 0 === l.disposal ? 0 : l.disposal; if (m < 0 || m > 3) throw new Error(\"Disposal out of range.\"); var b = !1, v = 0; if ( void 0 !== l.transparent && null !== l.transparent && ((b = !0), (v = l.transparent), v < 0 || v >= d) ) throw new Error(\"Transparent color index.\"); if ( ((0 !== m || b || 0 !== g) && ((e[a++] = 33), (e[a++] = 249), (e[a++] = 4), (e[a++] = (m < 2) | (!0 === b ? 1 : 0)), (e[a++] = 255 & g), (e[a++] = (g >> 8) & 255), (e[a++] = v), (e[a++] = 0)), (e[a++] = 44), (e[a++] = 255 & t), (e[a++] = (t >> 8) & 255), (e[a++] = 255 & r), (e[a++] = (r >> 8) & 255), (e[a++] = 255 & n), (e[a++] = (n >> 8) & 255), (e[a++] = 255 & o), (e[a++] = (o >> 8) & 255), (e[a++] = !0 === f ? 128 | (A - 1) : 0), !0 === f) ) for (var y = 0, I = h.length; y < I; ++y) { var E = h[y]; (e[a++] = (E >> 16) & 255), (e[a++] = (E >> 8) & 255), (e[a++] = 255 & E); } return (a = i(e, a, A < 2 ? 2 : A, c)), a; }), (this.end = function () { return !1 === p && ((e[a++] = 59), (p = !0)), a; }), (this.getOutputBuffer = function () { return e; }), (this.setOutputBuffer = function (t) { e = t; }), (this.getOutputBufferPosition = function () { return a; }), (this.setOutputBufferPosition = function (e) { a = e; }); } function i(e, t, r, n) { e[t++] = r; var i = t++, a = 1 < r, o = a - 1, s = a + 1, u = s + 1, c = r + 1, l = 0, f = 0; function h(r) { while (l >= r) (e[t++] = 255 & f), (f >>= 8), (l -= 8), t === i + 256 && ((e[i] = 255), (i = t++)); } function d(e) { (f |= e < l), (l += c), h(8); } var A = n[0] & o, p = {}; d(a); for (var g = 1, m = n.length; g < m; ++g) { var b = n[g] & o, v = (A < 8) | b, y = p[v]; if (void 0 === y) { (f |= A < l), (l += c); while (l >= 8) (e[t++] = 255 & f), (f >>= 8), (l -= 8), t === i + 256 && ((e[i] = 255), (i = t++)); 4096 === u ? (d(a), (u = s + 1), (c = r + 1), (p = {})) : (u >= 1 < c && ++c, (p[v] = u++)), (A = b); } else A = y; } return ( d(A), d(s), h(1), i + 1 === t ? (e[i] = 0) : ((e[i] = t - i - 1), (e[t++] = 0)), t ); } function a(e) { var t = 0; if ( 71 !== e[t++] || 73 !== e[t++] || 70 !== e[t++] || 56 !== e[t++] || 56 !== ((e[t++] + 1) & 253) || 97 !== e[t++] ) throw new Error(\"Invalid GIF 87a/89a header.\"); var r = e[t++] | (e[t++] < 8), n = e[t++] | (e[t++] < 8), i = e[t++], a = i >> 7, s = 7 & i, u = 1 < (s + 1); e[t++]; e[t++]; var c = null, l = null; a && ((c = t), (l = u), (t += 3 * u)); var f = !0, h = [], d = 0, A = null, p = 0, g = null; (this.width = r), (this.height = n); while (f && t < e.length) switch (e[t++]) { case 33: switch (e[t++]) { case 255: if ( 11 !== e[t] || (78 == e[t + 1] && 69 == e[t + 2] && 84 == e[t + 3] && 83 == e[t + 4] && 67 == e[t + 5] && 65 == e[t + 6] && 80 == e[t + 7] && 69 == e[t + 8] && 50 == e[t + 9] && 46 == e[t + 10] && 48 == e[t + 11] && 3 == e[t + 12] && 1 == e[t + 13] && 0 == e[t + 16]) ) (t += 14), (g = e[t++] | (e[t++] < 8)), t++; else { t += 12; while (1) { var m = e[t++]; if (!(m >= 0)) throw Error(\"Invalid block size\"); if (0 === m) break; t += m; } } break; case 249: if (4 !== e[t++] || 0 !== e[t + 4]) throw new Error(\"Invalid graphics extension block.\"); var b = e[t++]; (d = e[t++] | (e[t++] < 8)), (A = e[t++]), 0 === (1 & b) && (A = null), (p = (b >> 2) & 7), t++; break; case 254: while (1) { m = e[t++]; if (!(m >= 0)) throw Error(\"Invalid block size\"); if (0 === m) break; t += m; } break; default: throw new Error( \"Unknown graphic control label: 0x\" + e[t - 1].toString(16) ); } break; case 44: var v = e[t++] | (e[t++] < 8), y = e[t++] | (e[t++] < 8), I = e[t++] | (e[t++] < 8), E = e[t++] | (e[t++] < 8), w = e[t++], C = w >> 7, _ = (w >> 6) & 1, B = 7 & w, x = 1 < (B + 1), S = c, k = l, Q = !1; if (C) { Q = !0; (S = t), (k = x), (t += 3 * x); } var T = t; t++; while (1) { m = e[t++]; if (!(m >= 0)) throw Error(\"Invalid block size\"); if (0 === m) break; t += m; } h.push({ x: v, y: y, width: I, height: E, has_local_palette: Q, palette_offset: S, palette_size: k, data_offset: T, data_length: t - T, transparent_index: A, interlaced: !!_, delay: d, disposal: p, }); break; case 59: f = !1; break; default: throw new Error(\"Unknown gif block: 0x\" + e[t - 1].toString(16)); } (this.numFrames = function () { return h.length; }), (this.loopCount = function () { return g; }), (this.frameInfo = function (e) { if (e < 0 || e >= h.length) throw new Error(\"Frame index out of range.\"); return h[e]; }), (this.decodeAndBlitFrameBGRA = function (t, n) { var i = this.frameInfo(t), a = i.width * i.height, s = new Uint8Array(a); o(e, i.data_offset, s, a); var u = i.palette_offset, c = i.transparent_index; null === c && (c = 256); var l = i.width, f = r - l, h = l, d = 4 * (i.y * r + i.x), A = 4 * ((i.y + i.height) * r + i.x), p = d, g = 4 * f; !0 === i.interlaced && (g += 4 * r * 7); for (var m = 8, b = 0, v = s.length; b < v; ++b) { var y = s[b]; if ( (0 === h && ((p += g), (h = l), p >= A && ((g = 4 * f + 4 * r * (m - 1)), (p = d + (l + f) * (m < 1)), (m >>= 1))), y === c) ) p += 4; else { var I = e[u + 3 * y], E = e[u + 3 * y + 1], w = e[u + 3 * y + 2]; (n[p++] = w), (n[p++] = E), (n[p++] = I), (n[p++] = 255); } --h; } }), (this.decodeAndBlitFrameRGBA = function (t, n) { var i = this.frameInfo(t), a = i.width * i.height, s = new Uint8Array(a); o(e, i.data_offset, s, a); var u = i.palette_offset, c = i.transparent_index; null === c && (c = 256); var l = i.width, f = r - l, h = l, d = 4 * (i.y * r + i.x), A = 4 * ((i.y + i.height) * r + i.x), p = d, g = 4 * f; !0 === i.interlaced && (g += 4 * r * 7); for (var m = 8, b = 0, v = s.length; b < v; ++b) { var y = s[b]; if ( (0 === h && ((p += g), (h = l), p >= A && ((g = 4 * f + 4 * r * (m - 1)), (p = d + (l + f) * (m < 1)), (m >>= 1))), y === c) ) p += 4; else { var I = e[u + 3 * y], E = e[u + 3 * y + 1], w = e[u + 3 * y + 2]; (n[p++] = I), (n[p++] = E), (n[p++] = w), (n[p++] = 255); } --h; } }); } function o(e, t, r, n) { var i = e[t++], a = 1 < i, o = a + 1, s = o + 1, u = i + 1, c = (1 < u) - 1, l = 0, f = 0, h = 0, d = e[t++], A = new Int32Array(4096), p = null; while (1) { while (l < 16) { if (0 === d) break; (f |= e[t++] < l), (l += 8), 1 === d ? (d = e[t++]) : --d; } if (l < u) break; var g = f & c; if (((f >>= u), (l -= u), g !== a)) { if (g === o) break; var m = g < s ? g : p, b = 0, v = m; while (v > a) (v = A[v] >> 8), ++b; var y = v, I = h + b + (m !== g ? 1 : 0); if (I > n) return void console.log( \"Warning, gif stream longer than expected.\" ); (r[h++] = y), (h += b); var E = h; m !== g && (r[h++] = y), (v = m); while (b--) (v = A[v]), (r[--E] = 255 & v), (v >>= 8); null !== p && s < 4096 && ((A[s++] = (p < 8) | y), s >= c + 1 && u < 12 && (++u, (c = (c < 1) | 1))), (p = g); } else (s = o + 1), (u = i + 1), (c = (1 < u) - 1), (p = null); } return ( h !== n && console.log(\"Warning, gif stream shorter than expected.\"), r ); } try { (t.GifWriter = n), (t.GifReader = a); } catch (s) {} }, \"8f5f\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.ListInfoTagValue = t.Header = void 0); const n = r(\"6f58\"); t.Header = { len: 8, get: (e, t) => ({ chunkID: e.toString(\"binary\", t, t + 4), chunkSize: e.readUInt32LE(t + 4), }), }; class i { constructor(e) { (this.tagHeader = e), (this.len = e.chunkSize), (this.len += 1 & this.len); } get(e, t) { return new n.StringType(this.tagHeader.chunkSize, \"ascii\").get(e, t); } } t.ListInfoTagValue = i; }, \"907a\": function (e, t, r) { \"use strict\"; var n = r(\"ebb5\"), i = r(\"07fa\"), a = r(\"5926\"), o = n.aTypedArray, s = n.exportTypedArrayMethod; s(\"at\", function (e) { var t = o(this), r = i(t), n = a(e), s = n >= 0 ? n : r + n; return s < 0 || s >= r ? void 0 : t[s]; }); }, \"90c9\": function (e, t, r) { \"use strict\"; var n = r(\"c591\").Buffer; t._dbcs = f; for ( var i = -1, a = -2, o = -10, s = -1e3, u = new Array(256), c = -1, l = 0; l < 256; l++ ) u[l] = i; function f(e, t) { if (((this.encodingName = e.encodingName), !e)) throw new Error(\"DBCS codec is called without the data.\"); if (!e.table) throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\"); var r = e.table(); (this.decodeTables = []), (this.decodeTables[0] = u.slice(0)), (this.decodeTableSeq = []); for (var n = 0; n < r.length; n++) this._addDecodeChunk(r[n]); if (\"function\" === typeof e.gb18030) { this.gb18030 = e.gb18030(); var o = this.decodeTables.length; this.decodeTables.push(u.slice(0)); var c = this.decodeTables.length; this.decodeTables.push(u.slice(0)); var l = this.decodeTables[0]; for (n = 129; n = e.length)) break; this._processRead(e); } } this._buffers && !this.writable && this._end(); } catch (t) { this.emit(\"error\", t); } }); }).call(this, r(\"4362\"), r(\"1c35\").Buffer); }, \"925e\": function (e, t, r) { (function (t, n, i) { var a = r(\"a9f1\"), o = r(\"3fb5\"), s = r(\"c90b\"), u = r(\"e372\"), c = r(\"d938\"), l = s.IncomingMessage, f = s.readyStates; function h(e, t) { return a.fetch && t ? \"fetch\" : a.mozchunkedarraybuffer ? \"moz-chunked-arraybuffer\" : a.msstream ? \"ms-stream\" : a.arraybuffer && e ? \"arraybuffer\" : a.vbArray && e ? \"text:vbarray\" : \"text\"; } var d = (e.exports = function (e) { var r, n = this; u.Writable.call(n), (n._opts = e), (n._body = []), (n._headers = {}), e.auth && n.setHeader( \"Authorization\", \"Basic \" + new t(e.auth).toString(\"base64\") ), Object.keys(e.headers).forEach(function (t) { n.setHeader(t, e.headers[t]); }); var i = !0; if ( \"disable-fetch\" === e.mode || (\"requestTimeout\" in e && !a.abortController) ) (i = !1), (r = !0); else if (\"prefer-streaming\" === e.mode) r = !1; else if (\"allow-wrong-content-type\" === e.mode) r = !a.overrideMimeType; else { if (e.mode && \"default\" !== e.mode && \"prefer-fast\" !== e.mode) throw new Error(\"Invalid value for opts.mode\"); r = !0; } (n._mode = h(r, i)), (n._fetchTimer = null), n.on(\"finish\", function () { n._onFinish(); }); }); function A(e) { try { var t = e.status; return null !== t && 0 !== t; } catch (r) { return !1; } } o(d, u.Writable), (d.prototype.setHeader = function (e, t) { var r = this, n = e.toLowerCase(); -1 === p.indexOf(n) && (r._headers[n] = { name: e, value: t }); }), (d.prototype.getHeader = function (e) { var t = this._headers[e.toLowerCase()]; return t ? t.value : null; }), (d.prototype.removeHeader = function (e) { var t = this; delete t._headers[e.toLowerCase()]; }), (d.prototype._onFinish = function () { var e = this; if (!e._destroyed) { var r = e._opts, o = e._headers, s = null; \"GET\" !== r.method && \"HEAD\" !== r.method && (s = a.arraybuffer ? c(t.concat(e._body)) : a.blobConstructor ? new n.Blob( e._body.map(function (e) { return c(e); }), { type: (o[\"content-type\"] || {}).value || \"\" } ) : t.concat(e._body).toString()); var u = []; if ( (Object.keys(o).forEach(function (e) { var t = o[e].name, r = o[e].value; Array.isArray(r) ? r.forEach(function (e) { u.push([t, e]); }) : u.push([t, r]); }), \"fetch\" === e._mode) ) { var l = null; if (a.abortController) { var h = new AbortController(); (l = h.signal), (e._fetchAbortController = h), \"requestTimeout\" in r && 0 !== r.requestTimeout && (e._fetchTimer = n.setTimeout(function () { e.emit(\"requestTimeout\"), e._fetchAbortController && e._fetchAbortController.abort(); }, r.requestTimeout)); } n.fetch(e._opts.url, { method: e._opts.method, headers: u, body: s || void 0, mode: \"cors\", credentials: r.withCredentials ? \"include\" : \"same-origin\", signal: l, }).then( function (t) { (e._fetchResponse = t), e._connect(); }, function (t) { n.clearTimeout(e._fetchTimer), e._destroyed || e.emit(\"error\", t); } ); } else { var d = (e._xhr = new n.XMLHttpRequest()); try { d.open(e._opts.method, e._opts.url, !0); } catch (A) { return void i.nextTick(function () { e.emit(\"error\", A); }); } \"responseType\" in d && (d.responseType = e._mode.split(\":\")[0]), \"withCredentials\" in d && (d.withCredentials = !!r.withCredentials), \"text\" === e._mode && \"overrideMimeType\" in d && d.overrideMimeType(\"text/plain; charset=x-user-defined\"), \"requestTimeout\" in r && ((d.timeout = r.requestTimeout), (d.ontimeout = function () { e.emit(\"requestTimeout\"); })), u.forEach(function (e) { d.setRequestHeader(e[0], e[1]); }), (e._response = null), (d.onreadystatechange = function () { switch (d.readyState) { case f.LOADING: case f.DONE: e._onXHRProgress(); break; } }), \"moz-chunked-arraybuffer\" === e._mode && (d.onprogress = function () { e._onXHRProgress(); }), (d.onerror = function () { e._destroyed || e.emit(\"error\", new Error(\"XHR error\")); }); try { d.send(s); } catch (A) { return void i.nextTick(function () { e.emit(\"error\", A); }); } } } }), (d.prototype._onXHRProgress = function () { var e = this; A(e._xhr) && !e._destroyed && (e._response || e._connect(), e._response._onXHRProgress()); }), (d.prototype._connect = function () { var e = this; e._destroyed || ((e._response = new l( e._xhr, e._fetchResponse, e._mode, e._fetchTimer )), e._response.on(\"error\", function (t) { e.emit(\"error\", t); }), e.emit(\"response\", e._response)); }), (d.prototype._write = function (e, t, r) { var n = this; n._body.push(e), r(); }), (d.prototype.abort = d.prototype.destroy = function () { var e = this; (e._destroyed = !0), n.clearTimeout(e._fetchTimer), e._response && (e._response._destroyed = !0), e._xhr ? e._xhr.abort() : e._fetchAbortController && e._fetchAbortController.abort(); }), (d.prototype.end = function (e, t, r) { var n = this; \"function\" === typeof e && ((r = e), (e = void 0)), u.Writable.prototype.end.call(n, e, t, r); }), (d.prototype.flushHeaders = function () {}), (d.prototype.setTimeout = function () {}), (d.prototype.setNoDelay = function () {}), (d.prototype.setSocketKeepAlive = function () {}); var p = [ \"accept-charset\", \"accept-encoding\", \"access-control-request-headers\", \"access-control-request-method\", \"connection\", \"content-length\", \"cookie\", \"cookie2\", \"date\", \"dnt\", \"expect\", \"host\", \"keep-alive\", \"origin\", \"referer\", \"te\", \"trailer\", \"transfer-encoding\", \"upgrade\", \"via\", ]; }).call(this, r(\"1c35\").Buffer, r(\"c8ba\"), r(\"4362\")); }, 9263: function (e, t, r) { \"use strict\"; var n = r(\"c65b\"), i = r(\"e330\"), a = r(\"577e\"), o = r(\"ad6d\"), s = r(\"9f7f\"), u = r(\"5692\"), c = r(\"7c73\"), l = r(\"69f3\").get, f = r(\"fce3\"), h = r(\"107c\"), d = u(\"native-string-replace\", String.prototype.replace), A = RegExp.prototype.exec, p = A, g = i(\"\".charAt), m = i(\"\".indexOf), b = i(\"\".replace), v = i(\"\".slice), y = (function () { var e = /a/, t = /b*/g; return ( n(A, e, \"a\"), n(A, t, \"a\"), 0 !== e.lastIndex || 0 !== t.lastIndex ); })(), I = s.BROKEN_CARET, E = void 0 !== /()??/.exec(\"\")[1], w = y || E || I || f || h; w && (p = function (e) { var t, r, i, s, u, f, h, w = this, C = l(w), _ = a(e), B = C.raw; if (B) return ( (B.lastIndex = w.lastIndex), (t = n(p, B, _)), (w.lastIndex = B.lastIndex), t ); var x = C.groups, S = I && w.sticky, k = n(o, w), Q = w.source, T = 0, M = _; if ( (S && ((k = b(k, \"y\", \"\")), -1 === m(k, \"g\") && (k += \"g\"), (M = v(_, w.lastIndex)), w.lastIndex > 0 && (!w.multiline || (w.multiline && \"\\n\" !== g(_, w.lastIndex - 1))) && ((Q = \"(?: \" + Q + \")\"), (M = \" \" + M), T++), (r = new RegExp(\"^(?:\" + Q + \")\", k))), E && (r = new RegExp(\"^\" + Q + \"$(?!\\\\s)\", k)), y && (i = w.lastIndex), (s = n(A, S ? r : w, M)), S ? s ? ((s.input = v(s.input, T)), (s[0] = v(s[0], T)), (s.index = w.lastIndex), (w.lastIndex += s[0].length)) : (w.lastIndex = 0) : y && s && (w.lastIndex = w.global ? s.index + s[0].length : i), E && s && s.length > 1 && n(d, s[0], r, function () { for (u = 1; u < arguments.length - 2; u++) void 0 === arguments[u] && (s[u] = void 0); }), s && x) ) for (s.groups = f = c(null), u = 0; u < x.length; u++) (h = x[u]), (f[h[0]] = s[h[1]]); return s; }), (e.exports = p); }, \"92f0\": function (e, t, r) { var n = r(\"1a14\").f, i = r(\"9c0e\"), a = r(\"cc15\")(\"toStringTag\"); e.exports = function (e, t, r) { e && !i((e = r ? e : e.prototype), a) && n(e, a, { configurable: !0, value: t }); }; }, \"92fa\": function (e, t) { var r = /^(attrs|props|on|nativeOn|class|style|hook)$/; function n(e, t) { return function () { e && e.apply(this, arguments), t && t.apply(this, arguments); }; } e.exports = function (e) { return e.reduce(function (e, t) { var i, a, o, s, u; for (o in t) if (((i = e[o]), (a = t[o]), i && r.test(o))) if ( (\"class\" === o && (\"string\" === typeof i && ((u = i), (e[o] = i = {}), (i[u] = !0)), \"string\" === typeof a && ((u = a), (t[o] = a = {}), (a[u] = !0))), \"on\" === o || \"nativeOn\" === o || \"hook\" === o) ) for (s in a) i[s] = n(i[s], a[s]); else if (Array.isArray(i)) e[o] = i.concat(a); else if (Array.isArray(a)) e[o] = [i].concat(a); else for (s in a) i[s] = a[s]; else e[o] = t[o]; return e; }, {}); }; }, 9483: function (e, t, r) { \"use strict\"; r.d(t, \"a\", function () { return a; }); var n, i = function () { return Boolean( \"localhost\" === window.location.hostname || \"[::1]\" === window.location.hostname || window.location.hostname.match( /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/ ) ); }; function a(e, t) { void 0 === t && (t = {}); var r = t.registrationOptions; void 0 === r && (r = {}), delete t.registrationOptions; var a = function (e) { var r = [], n = arguments.length - 1; while (n-- > 0) r[n] = arguments[n + 1]; t && t[e] && t[e].apply(t, r); }; \"serviceWorker\" in navigator && n.then(function () { i() ? (u(e, a, r), navigator.serviceWorker.ready .then(function (e) { a(\"ready\", e); }) .catch(function (e) { return o(a, e); })) : (s(e, a, r), navigator.serviceWorker.ready .then(function (e) { a(\"ready\", e); }) .catch(function (e) { return o(a, e); })); }); } function o(e, t) { navigator.onLine || e(\"offline\"), e(\"error\", t); } function s(e, t, r) { navigator.serviceWorker .register(e, r) .then(function (e) { t(\"registered\", e), e.waiting ? t(\"updated\", e) : (e.onupdatefound = function () { t(\"updatefound\", e); var r = e.installing; r.onstatechange = function () { \"installed\" === r.state && (navigator.serviceWorker.controller ? t(\"updated\", e) : t(\"cached\", e)); }; }); }) .catch(function (e) { return o(t, e); }); } function u(e, t, r) { fetch(e) .then(function (n) { 404 === n.status ? (t(\"error\", new Error(\"Service worker not found at \" + e)), c()) : -1 === n.headers.get(\"content-type\").indexOf(\"javascript\") ? (t( \"error\", new Error( \"Expected \" + e + \" to have javascript content-type, but received \" + n.headers.get(\"content-type\") ) ), c()) : s(e, t, r); }) .catch(function (e) { return o(t, e); }); } function c() { \"serviceWorker\" in navigator && navigator.serviceWorker.ready .then(function (e) { e.unregister(); }) .catch(function (e) { return o(emit, e); }); } \"undefined\" !== typeof window && (n = \"undefined\" !== typeof Promise ? new Promise(function (e) { return window.addEventListener(\"load\", e); }) : { then: function (e) { return window.addEventListener(\"load\", e); }, }); }, 9490: function (e, t, r) { (function (e) { var n = r(\"925e\"), i = r(\"c90b\"), a = r(\"53a8\"), o = r(\"8c05\"), s = r(\"0b16\"), u = t; (u.request = function (t, r) { t = \"string\" === typeof t ? s.parse(t) : a(t); var i = -1 === e.location.protocol.search(/^https?:$/) ? \"http:\" : \"\", o = t.protocol || i, u = t.hostname || t.host, c = t.port, l = t.path || \"/\"; u && -1 !== u.indexOf(\":\") && (u = \"[\" + u + \"]\"), (t.url = (u ? o + \"//\" + u : \"\") + (c ? \":\" + c : \"\") + l), (t.method = (t.method || \"GET\").toUpperCase()), (t.headers = t.headers || {}); var f = new n(t); return r && f.on(\"response\", r), f; }), (u.get = function (e, t) { var r = u.request(e, t); return r.end(), r; }), (u.ClientRequest = n), (u.IncomingMessage = i.IncomingMessage), (u.Agent = function () {}), (u.Agent.defaultMaxSockets = 4), (u.globalAgent = new u.Agent()), (u.STATUS_CODES = o), (u.METHODS = [ \"CHECKOUT\", \"CONNECT\", \"COPY\", \"DELETE\", \"GET\", \"HEAD\", \"LOCK\", \"M-SEARCH\", \"MERGE\", \"MKACTIVITY\", \"MKCOL\", \"MOVE\", \"NOTIFY\", \"OPTIONS\", \"PATCH\", \"POST\", \"PROPFIND\", \"PROPPATCH\", \"PURGE\", \"PUT\", \"REPORT\", \"SEARCH\", \"SUBSCRIBE\", \"TRACE\", \"UNLOCK\", \"UNSUBSCRIBE\", ]); }).call(this, r(\"c8ba\")); }, \"94bb\": function (e, t, r) { \"use strict\"; for ( var n = [ r(\"d354\"), r(\"feb0\"), r(\"a58d\"), r(\"c642\"), r(\"6bda\"), r(\"3d0e\"), r(\"80bc\"), r(\"90c9\"), r(\"1c47\"), ], i = 0; i < n.length; i++ ) { e = n[i]; for (var a in e) Object.prototype.hasOwnProperty.call(e, a) && (t[a] = e[a]); } }, \"94ca\": function (e, t, r) { var n = r(\"d039\"), i = r(\"1626\"), a = /#|\\.prototype\\./, o = function (e, t) { var r = u[s(e)]; return r == l || (r != c && (i(t) ? n(t) : !!t)); }, s = (o.normalize = function (e) { return String(e).replace(a, \".\").toLowerCase(); }), u = (o.data = {}), c = (o.NATIVE = \"N\"), l = (o.POLYFILL = \"P\"); e.exports = o; }, \"94f4\": function (e) { e.exports = JSON.parse( '[[\"0\",\"\\\\u0000\",128],[\"a1\",\"｡\",62],[\"8140\",\" 、。，．・：；？！゛゜´｀¨＾￣＿ヽヾゝゞ〃仝々〆〇ー―‐／＼～∥｜…‥‘’“”（）〔〕［］｛｝〈\",9,\"＋－±×\"],[\"8180\",\"÷＝≠＜＞≦≧∞∴♂♀°′″℃￥＄￠￡％＃＆＊＠§☆★○●◎◇◆□■△▲▽▼※〒→←↑↓〓\"],[\"81b8\",\"∈∋⊆⊇⊂⊃∪∩\"],[\"81c8\",\"∧∨￢⇒⇔∀∃\"],[\"81da\",\"∠⊥⌒∂∇≡≒≪≫√∽∝∵∫∬\"],[\"81f0\",\"Å‰♯♭♪†‡¶\"],[\"81fc\",\"◯\"],[\"824f\",\"０\",9],[\"8260\",\"Ａ\",25],[\"8281\",\"ａ\",25],[\"829f\",\"ぁ\",82],[\"8340\",\"ァ\",62],[\"8380\",\"ム\",22],[\"839f\",\"Α\",16,\"Σ\",6],[\"83bf\",\"α\",16,\"σ\",6],[\"8440\",\"А\",5,\"ЁЖ\",25],[\"8470\",\"а\",5,\"ёж\",7],[\"8480\",\"о\",17],[\"849f\",\"─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂\"],[\"8740\",\"①\",19,\"Ⅰ\",9],[\"875f\",\"㍉㌔㌢㍍㌘㌧㌃㌶㍑㍗㌍㌦㌣㌫㍊㌻㎜㎝㎞㎎㎏㏄㎡\"],[\"877e\",\"㍻\"],[\"8780\",\"〝〟№㏍℡㊤\",4,\"㈱㈲㈹㍾㍽㍼≒≡∫∮∑√⊥∠∟⊿∵∩∪\"],[\"889f\",\"亜唖娃阿哀愛挨姶逢葵茜穐悪握渥旭葦芦鯵梓圧斡扱宛姐虻飴絢綾鮎或粟袷安庵按暗案闇鞍杏以伊位依偉囲夷委威尉惟意慰易椅為畏異移維緯胃萎衣謂違遺医井亥域育郁磯一壱溢逸稲茨芋鰯允印咽員因姻引飲淫胤蔭\"],[\"8940\",\"院陰隠韻吋右宇烏羽迂雨卯鵜窺丑碓臼渦嘘唄欝蔚鰻姥厩浦瓜閏噂云運雲荏餌叡営嬰影映曳栄永泳洩瑛盈穎頴英衛詠鋭液疫益駅悦謁越閲榎厭円\"],[\"8980\",\"園堰奄宴延怨掩援沿演炎焔煙燕猿縁艶苑薗遠鉛鴛塩於汚甥凹央奥往応押旺横欧殴王翁襖鴬鴎黄岡沖荻億屋憶臆桶牡乙俺卸恩温穏音下化仮何伽価佳加可嘉夏嫁家寡科暇果架歌河火珂禍禾稼箇花苛茄荷華菓蝦課嘩貨迦過霞蚊俄峨我牙画臥芽蛾賀雅餓駕介会解回塊壊廻快怪悔恢懐戒拐改\"],[\"8a40\",\"魁晦械海灰界皆絵芥蟹開階貝凱劾外咳害崖慨概涯碍蓋街該鎧骸浬馨蛙垣柿蛎鈎劃嚇各廓拡撹格核殻獲確穫覚角赫較郭閣隔革学岳楽額顎掛笠樫\"],[\"8a80\",\"橿梶鰍潟割喝恰括活渇滑葛褐轄且鰹叶椛樺鞄株兜竃蒲釜鎌噛鴨栢茅萱粥刈苅瓦乾侃冠寒刊勘勧巻喚堪姦完官寛干幹患感慣憾換敢柑桓棺款歓汗漢澗潅環甘監看竿管簡緩缶翰肝艦莞観諌貫還鑑間閑関陥韓館舘丸含岸巌玩癌眼岩翫贋雁頑顔願企伎危喜器基奇嬉寄岐希幾忌揮机旗既期棋棄\"],[\"8b40\",\"機帰毅気汽畿祈季稀紀徽規記貴起軌輝飢騎鬼亀偽儀妓宜戯技擬欺犠疑祇義蟻誼議掬菊鞠吉吃喫桔橘詰砧杵黍却客脚虐逆丘久仇休及吸宮弓急救\"],[\"8b80\",\"朽求汲泣灸球究窮笈級糾給旧牛去居巨拒拠挙渠虚許距鋸漁禦魚亨享京供侠僑兇競共凶協匡卿叫喬境峡強彊怯恐恭挟教橋況狂狭矯胸脅興蕎郷鏡響饗驚仰凝尭暁業局曲極玉桐粁僅勤均巾錦斤欣欽琴禁禽筋緊芹菌衿襟謹近金吟銀九倶句区狗玖矩苦躯駆駈駒具愚虞喰空偶寓遇隅串櫛釧屑屈\"],[\"8c40\",\"掘窟沓靴轡窪熊隈粂栗繰桑鍬勲君薫訓群軍郡卦袈祁係傾刑兄啓圭珪型契形径恵慶慧憩掲携敬景桂渓畦稽系経継繋罫茎荊蛍計詣警軽頚鶏芸迎鯨\"],[\"8c80\",\"劇戟撃激隙桁傑欠決潔穴結血訣月件倹倦健兼券剣喧圏堅嫌建憲懸拳捲検権牽犬献研硯絹県肩見謙賢軒遣鍵険顕験鹸元原厳幻弦減源玄現絃舷言諺限乎個古呼固姑孤己庫弧戸故枯湖狐糊袴股胡菰虎誇跨鈷雇顧鼓五互伍午呉吾娯後御悟梧檎瑚碁語誤護醐乞鯉交佼侯候倖光公功効勾厚口向\"],[\"8d40\",\"后喉坑垢好孔孝宏工巧巷幸広庚康弘恒慌抗拘控攻昂晃更杭校梗構江洪浩港溝甲皇硬稿糠紅紘絞綱耕考肯肱腔膏航荒行衡講貢購郊酵鉱砿鋼閤降\"],[\"8d80\",\"項香高鴻剛劫号合壕拷濠豪轟麹克刻告国穀酷鵠黒獄漉腰甑忽惚骨狛込此頃今困坤墾婚恨懇昏昆根梱混痕紺艮魂些佐叉唆嵯左差査沙瑳砂詐鎖裟坐座挫債催再最哉塞妻宰彩才採栽歳済災采犀砕砦祭斎細菜裁載際剤在材罪財冴坂阪堺榊肴咲崎埼碕鷺作削咋搾昨朔柵窄策索錯桜鮭笹匙冊刷\"],[\"8e40\",\"察拶撮擦札殺薩雑皐鯖捌錆鮫皿晒三傘参山惨撒散桟燦珊産算纂蚕讃賛酸餐斬暫残仕仔伺使刺司史嗣四士始姉姿子屍市師志思指支孜斯施旨枝止\"],[\"8e80\",\"死氏獅祉私糸紙紫肢脂至視詞詩試誌諮資賜雌飼歯事似侍児字寺慈持時次滋治爾璽痔磁示而耳自蒔辞汐鹿式識鴫竺軸宍雫七叱執失嫉室悉湿漆疾質実蔀篠偲柴芝屡蕊縞舎写射捨赦斜煮社紗者謝車遮蛇邪借勺尺杓灼爵酌釈錫若寂弱惹主取守手朱殊狩珠種腫趣酒首儒受呪寿授樹綬需囚収周\"],[\"8f40\",\"宗就州修愁拾洲秀秋終繍習臭舟蒐衆襲讐蹴輯週酋酬集醜什住充十従戎柔汁渋獣縦重銃叔夙宿淑祝縮粛塾熟出術述俊峻春瞬竣舜駿准循旬楯殉淳\"],[\"8f80\",\"準潤盾純巡遵醇順処初所暑曙渚庶緒署書薯藷諸助叙女序徐恕鋤除傷償勝匠升召哨商唱嘗奨妾娼宵将小少尚庄床廠彰承抄招掌捷昇昌昭晶松梢樟樵沼消渉湘焼焦照症省硝礁祥称章笑粧紹肖菖蒋蕉衝裳訟証詔詳象賞醤鉦鍾鐘障鞘上丈丞乗冗剰城場壌嬢常情擾条杖浄状畳穣蒸譲醸錠嘱埴飾\"],[\"9040\",\"拭植殖燭織職色触食蝕辱尻伸信侵唇娠寝審心慎振新晋森榛浸深申疹真神秦紳臣芯薪親診身辛進針震人仁刃塵壬尋甚尽腎訊迅陣靭笥諏須酢図厨\"],[\"9080\",\"逗吹垂帥推水炊睡粋翠衰遂酔錐錘随瑞髄崇嵩数枢趨雛据杉椙菅頗雀裾澄摺寸世瀬畝是凄制勢姓征性成政整星晴棲栖正清牲生盛精聖声製西誠誓請逝醒青静斉税脆隻席惜戚斥昔析石積籍績脊責赤跡蹟碩切拙接摂折設窃節説雪絶舌蝉仙先千占宣専尖川戦扇撰栓栴泉浅洗染潜煎煽旋穿箭線\"],[\"9140\",\"繊羨腺舛船薦詮賎践選遷銭銑閃鮮前善漸然全禅繕膳糎噌塑岨措曾曽楚狙疏疎礎祖租粗素組蘇訴阻遡鼠僧創双叢倉喪壮奏爽宋層匝惣想捜掃挿掻\"],[\"9180\",\"操早曹巣槍槽漕燥争痩相窓糟総綜聡草荘葬蒼藻装走送遭鎗霜騒像増憎臓蔵贈造促側則即息捉束測足速俗属賊族続卒袖其揃存孫尊損村遜他多太汰詑唾堕妥惰打柁舵楕陀駄騨体堆対耐岱帯待怠態戴替泰滞胎腿苔袋貸退逮隊黛鯛代台大第醍題鷹滝瀧卓啄宅托択拓沢濯琢託鐸濁諾茸凧蛸只\"],[\"9240\",\"叩但達辰奪脱巽竪辿棚谷狸鱈樽誰丹単嘆坦担探旦歎淡湛炭短端箪綻耽胆蛋誕鍛団壇弾断暖檀段男談値知地弛恥智池痴稚置致蜘遅馳築畜竹筑蓄\"],[\"9280\",\"逐秩窒茶嫡着中仲宙忠抽昼柱注虫衷註酎鋳駐樗瀦猪苧著貯丁兆凋喋寵帖帳庁弔張彫徴懲挑暢朝潮牒町眺聴脹腸蝶調諜超跳銚長頂鳥勅捗直朕沈珍賃鎮陳津墜椎槌追鎚痛通塚栂掴槻佃漬柘辻蔦綴鍔椿潰坪壷嬬紬爪吊釣鶴亭低停偵剃貞呈堤定帝底庭廷弟悌抵挺提梯汀碇禎程締艇訂諦蹄逓\"],[\"9340\",\"邸鄭釘鼎泥摘擢敵滴的笛適鏑溺哲徹撤轍迭鉄典填天展店添纏甜貼転顛点伝殿澱田電兎吐堵塗妬屠徒斗杜渡登菟賭途都鍍砥砺努度土奴怒倒党冬\"],[\"9380\",\"凍刀唐塔塘套宕島嶋悼投搭東桃梼棟盗淘湯涛灯燈当痘祷等答筒糖統到董蕩藤討謄豆踏逃透鐙陶頭騰闘働動同堂導憧撞洞瞳童胴萄道銅峠鴇匿得徳涜特督禿篤毒独読栃橡凸突椴届鳶苫寅酉瀞噸屯惇敦沌豚遁頓呑曇鈍奈那内乍凪薙謎灘捺鍋楢馴縄畷南楠軟難汝二尼弐迩匂賑肉虹廿日乳入\"],[\"9440\",\"如尿韮任妊忍認濡禰祢寧葱猫熱年念捻撚燃粘乃廼之埜嚢悩濃納能脳膿農覗蚤巴把播覇杷波派琶破婆罵芭馬俳廃拝排敗杯盃牌背肺輩配倍培媒梅\"],[\"9480\",\"楳煤狽買売賠陪這蝿秤矧萩伯剥博拍柏泊白箔粕舶薄迫曝漠爆縛莫駁麦函箱硲箸肇筈櫨幡肌畑畠八鉢溌発醗髪伐罰抜筏閥鳩噺塙蛤隼伴判半反叛帆搬斑板氾汎版犯班畔繁般藩販範釆煩頒飯挽晩番盤磐蕃蛮匪卑否妃庇彼悲扉批披斐比泌疲皮碑秘緋罷肥被誹費避非飛樋簸備尾微枇毘琵眉美\"],[\"9540\",\"鼻柊稗匹疋髭彦膝菱肘弼必畢筆逼桧姫媛紐百謬俵彪標氷漂瓢票表評豹廟描病秒苗錨鋲蒜蛭鰭品彬斌浜瀕貧賓頻敏瓶不付埠夫婦富冨布府怖扶敷\"],[\"9580\",\"斧普浮父符腐膚芙譜負賦赴阜附侮撫武舞葡蕪部封楓風葺蕗伏副復幅服福腹複覆淵弗払沸仏物鮒分吻噴墳憤扮焚奮粉糞紛雰文聞丙併兵塀幣平弊柄並蔽閉陛米頁僻壁癖碧別瞥蔑箆偏変片篇編辺返遍便勉娩弁鞭保舗鋪圃捕歩甫補輔穂募墓慕戊暮母簿菩倣俸包呆報奉宝峰峯崩庖抱捧放方朋\"],[\"9640\",\"法泡烹砲縫胞芳萌蓬蜂褒訪豊邦鋒飽鳳鵬乏亡傍剖坊妨帽忘忙房暴望某棒冒紡肪膨謀貌貿鉾防吠頬北僕卜墨撲朴牧睦穆釦勃没殆堀幌奔本翻凡盆\"],[\"9680\",\"摩磨魔麻埋妹昧枚毎哩槙幕膜枕鮪柾鱒桝亦俣又抹末沫迄侭繭麿万慢満漫蔓味未魅巳箕岬密蜜湊蓑稔脈妙粍民眠務夢無牟矛霧鵡椋婿娘冥名命明盟迷銘鳴姪牝滅免棉綿緬面麺摸模茂妄孟毛猛盲網耗蒙儲木黙目杢勿餅尤戻籾貰問悶紋門匁也冶夜爺耶野弥矢厄役約薬訳躍靖柳薮鑓愉愈油癒\"],[\"9740\",\"諭輸唯佑優勇友宥幽悠憂揖有柚湧涌猶猷由祐裕誘遊邑郵雄融夕予余与誉輿預傭幼妖容庸揚揺擁曜楊様洋溶熔用窯羊耀葉蓉要謡踊遥陽養慾抑欲\"],[\"9780\",\"沃浴翌翼淀羅螺裸来莱頼雷洛絡落酪乱卵嵐欄濫藍蘭覧利吏履李梨理璃痢裏裡里離陸律率立葎掠略劉流溜琉留硫粒隆竜龍侶慮旅虜了亮僚両凌寮料梁涼猟療瞭稜糧良諒遼量陵領力緑倫厘林淋燐琳臨輪隣鱗麟瑠塁涙累類令伶例冷励嶺怜玲礼苓鈴隷零霊麗齢暦歴列劣烈裂廉恋憐漣煉簾練聯\"],[\"9840\",\"蓮連錬呂魯櫓炉賂路露労婁廊弄朗楼榔浪漏牢狼篭老聾蝋郎六麓禄肋録論倭和話歪賄脇惑枠鷲亙亘鰐詫藁蕨椀湾碗腕\"],[\"989f\",\"弌丐丕个丱丶丼丿乂乖乘亂亅豫亊舒弍于亞亟亠亢亰亳亶从仍仄仆仂仗仞仭仟价伉佚估佛佝佗佇佶侈侏侘佻佩佰侑佯來侖儘俔俟俎俘俛俑俚俐俤俥倚倨倔倪倥倅伜俶倡倩倬俾俯們倆偃假會偕偐偈做偖偬偸傀傚傅傴傲\"],[\"9940\",\"僉僊傳僂僖僞僥僭僣僮價僵儉儁儂儖儕儔儚儡儺儷儼儻儿兀兒兌兔兢竸兩兪兮冀冂囘册冉冏冑冓冕冖冤冦冢冩冪冫决冱冲冰况冽凅凉凛几處凩凭\"],[\"9980\",\"凰凵凾刄刋刔刎刧刪刮刳刹剏剄剋剌剞剔剪剴剩剳剿剽劍劔劒剱劈劑辨辧劬劭劼劵勁勍勗勞勣勦飭勠勳勵勸勹匆匈甸匍匐匏匕匚匣匯匱匳匸區卆卅丗卉卍凖卞卩卮夘卻卷厂厖厠厦厥厮厰厶參簒雙叟曼燮叮叨叭叺吁吽呀听吭吼吮吶吩吝呎咏呵咎呟呱呷呰咒呻咀呶咄咐咆哇咢咸咥咬哄哈咨\"],[\"9a40\",\"咫哂咤咾咼哘哥哦唏唔哽哮哭哺哢唹啀啣啌售啜啅啖啗唸唳啝喙喀咯喊喟啻啾喘喞單啼喃喩喇喨嗚嗅嗟嗄嗜嗤嗔嘔嗷嘖嗾嗽嘛嗹噎噐營嘴嘶嘲嘸\"],[\"9a80\",\"噫噤嘯噬噪嚆嚀嚊嚠嚔嚏嚥嚮嚶嚴囂嚼囁囃囀囈囎囑囓囗囮囹圀囿圄圉圈國圍圓團圖嗇圜圦圷圸坎圻址坏坩埀垈坡坿垉垓垠垳垤垪垰埃埆埔埒埓堊埖埣堋堙堝塲堡塢塋塰毀塒堽塹墅墹墟墫墺壞墻墸墮壅壓壑壗壙壘壥壜壤壟壯壺壹壻壼壽夂夊夐夛梦夥夬夭夲夸夾竒奕奐奎奚奘奢奠奧奬奩\"],[\"9b40\",\"奸妁妝佞侫妣妲姆姨姜妍姙姚娥娟娑娜娉娚婀婬婉娵娶婢婪媚媼媾嫋嫂媽嫣嫗嫦嫩嫖嫺嫻嬌嬋嬖嬲嫐嬪嬶嬾孃孅孀孑孕孚孛孥孩孰孳孵學斈孺宀\"],[\"9b80\",\"它宦宸寃寇寉寔寐寤實寢寞寥寫寰寶寳尅將專對尓尠尢尨尸尹屁屆屎屓屐屏孱屬屮乢屶屹岌岑岔妛岫岻岶岼岷峅岾峇峙峩峽峺峭嶌峪崋崕崗嵜崟崛崑崔崢崚崙崘嵌嵒嵎嵋嵬嵳嵶嶇嶄嶂嶢嶝嶬嶮嶽嶐嶷嶼巉巍巓巒巖巛巫已巵帋帚帙帑帛帶帷幄幃幀幎幗幔幟幢幤幇幵并幺麼广庠廁廂廈廐廏\"],[\"9c40\",\"廖廣廝廚廛廢廡廨廩廬廱廳廰廴廸廾弃弉彝彜弋弑弖弩弭弸彁彈彌彎弯彑彖彗彙彡彭彳彷徃徂彿徊很徑徇從徙徘徠徨徭徼忖忻忤忸忱忝悳忿怡恠\"],[\"9c80\",\"怙怐怩怎怱怛怕怫怦怏怺恚恁恪恷恟恊恆恍恣恃恤恂恬恫恙悁悍惧悃悚悄悛悖悗悒悧悋惡悸惠惓悴忰悽惆悵惘慍愕愆惶惷愀惴惺愃愡惻惱愍愎慇愾愨愧慊愿愼愬愴愽慂慄慳慷慘慙慚慫慴慯慥慱慟慝慓慵憙憖憇憬憔憚憊憑憫憮懌懊應懷懈懃懆憺懋罹懍懦懣懶懺懴懿懽懼懾戀戈戉戍戌戔戛\"],[\"9d40\",\"戞戡截戮戰戲戳扁扎扞扣扛扠扨扼抂抉找抒抓抖拔抃抔拗拑抻拏拿拆擔拈拜拌拊拂拇抛拉挌拮拱挧挂挈拯拵捐挾捍搜捏掖掎掀掫捶掣掏掉掟掵捫\"],[\"9d80\",\"捩掾揩揀揆揣揉插揶揄搖搴搆搓搦搶攝搗搨搏摧摯摶摎攪撕撓撥撩撈撼據擒擅擇撻擘擂擱擧舉擠擡抬擣擯攬擶擴擲擺攀擽攘攜攅攤攣攫攴攵攷收攸畋效敖敕敍敘敞敝敲數斂斃變斛斟斫斷旃旆旁旄旌旒旛旙无旡旱杲昊昃旻杳昵昶昴昜晏晄晉晁晞晝晤晧晨晟晢晰暃暈暎暉暄暘暝曁暹曉暾暼\"],[\"9e40\",\"曄暸曖曚曠昿曦曩曰曵曷朏朖朞朦朧霸朮朿朶杁朸朷杆杞杠杙杣杤枉杰枩杼杪枌枋枦枡枅枷柯枴柬枳柩枸柤柞柝柢柮枹柎柆柧檜栞框栩桀桍栲桎\"],[\"9e80\",\"梳栫桙档桷桿梟梏梭梔條梛梃檮梹桴梵梠梺椏梍桾椁棊椈棘椢椦棡椌棍棔棧棕椶椒椄棗棣椥棹棠棯椨椪椚椣椡棆楹楷楜楸楫楔楾楮椹楴椽楙椰楡楞楝榁楪榲榮槐榿槁槓榾槎寨槊槝榻槃榧樮榑榠榜榕榴槞槨樂樛槿權槹槲槧樅榱樞槭樔槫樊樒櫁樣樓橄樌橲樶橸橇橢橙橦橈樸樢檐檍檠檄檢檣\"],[\"9f40\",\"檗蘗檻櫃櫂檸檳檬櫞櫑櫟檪櫚櫪櫻欅蘖櫺欒欖鬱欟欸欷盜欹飮歇歃歉歐歙歔歛歟歡歸歹歿殀殄殃殍殘殕殞殤殪殫殯殲殱殳殷殼毆毋毓毟毬毫毳毯\"],[\"9f80\",\"麾氈氓气氛氤氣汞汕汢汪沂沍沚沁沛汾汨汳沒沐泄泱泓沽泗泅泝沮沱沾沺泛泯泙泪洟衍洶洫洽洸洙洵洳洒洌浣涓浤浚浹浙涎涕濤涅淹渕渊涵淇淦涸淆淬淞淌淨淒淅淺淙淤淕淪淮渭湮渮渙湲湟渾渣湫渫湶湍渟湃渺湎渤滿渝游溂溪溘滉溷滓溽溯滄溲滔滕溏溥滂溟潁漑灌滬滸滾漿滲漱滯漲滌\"],[\"e040\",\"漾漓滷澆潺潸澁澀潯潛濳潭澂潼潘澎澑濂潦澳澣澡澤澹濆澪濟濕濬濔濘濱濮濛瀉瀋濺瀑瀁瀏濾瀛瀚潴瀝瀘瀟瀰瀾瀲灑灣炙炒炯烱炬炸炳炮烟烋烝\"],[\"e080\",\"烙焉烽焜焙煥煕熈煦煢煌煖煬熏燻熄熕熨熬燗熹熾燒燉燔燎燠燬燧燵燼燹燿爍爐爛爨爭爬爰爲爻爼爿牀牆牋牘牴牾犂犁犇犒犖犢犧犹犲狃狆狄狎狒狢狠狡狹狷倏猗猊猜猖猝猴猯猩猥猾獎獏默獗獪獨獰獸獵獻獺珈玳珎玻珀珥珮珞璢琅瑯琥珸琲琺瑕琿瑟瑙瑁瑜瑩瑰瑣瑪瑶瑾璋璞璧瓊瓏瓔珱\"],[\"e140\",\"瓠瓣瓧瓩瓮瓲瓰瓱瓸瓷甄甃甅甌甎甍甕甓甞甦甬甼畄畍畊畉畛畆畚畩畤畧畫畭畸當疆疇畴疊疉疂疔疚疝疥疣痂疳痃疵疽疸疼疱痍痊痒痙痣痞痾痿\"],[\"e180\",\"痼瘁痰痺痲痳瘋瘍瘉瘟瘧瘠瘡瘢瘤瘴瘰瘻癇癈癆癜癘癡癢癨癩癪癧癬癰癲癶癸發皀皃皈皋皎皖皓皙皚皰皴皸皹皺盂盍盖盒盞盡盥盧盪蘯盻眈眇眄眩眤眞眥眦眛眷眸睇睚睨睫睛睥睿睾睹瞎瞋瞑瞠瞞瞰瞶瞹瞿瞼瞽瞻矇矍矗矚矜矣矮矼砌砒礦砠礪硅碎硴碆硼碚碌碣碵碪碯磑磆磋磔碾碼磅磊磬\"],[\"e240\",\"磧磚磽磴礇礒礑礙礬礫祀祠祗祟祚祕祓祺祿禊禝禧齋禪禮禳禹禺秉秕秧秬秡秣稈稍稘稙稠稟禀稱稻稾稷穃穗穉穡穢穩龝穰穹穽窈窗窕窘窖窩竈窰\"],[\"e280\",\"窶竅竄窿邃竇竊竍竏竕竓站竚竝竡竢竦竭竰笂笏笊笆笳笘笙笞笵笨笶筐筺笄筍笋筌筅筵筥筴筧筰筱筬筮箝箘箟箍箜箚箋箒箏筝箙篋篁篌篏箴篆篝篩簑簔篦篥籠簀簇簓篳篷簗簍篶簣簧簪簟簷簫簽籌籃籔籏籀籐籘籟籤籖籥籬籵粃粐粤粭粢粫粡粨粳粲粱粮粹粽糀糅糂糘糒糜糢鬻糯糲糴糶糺紆\"],[\"e340\",\"紂紜紕紊絅絋紮紲紿紵絆絳絖絎絲絨絮絏絣經綉絛綏絽綛綺綮綣綵緇綽綫總綢綯緜綸綟綰緘緝緤緞緻緲緡縅縊縣縡縒縱縟縉縋縢繆繦縻縵縹繃縷\"],[\"e380\",\"縲縺繧繝繖繞繙繚繹繪繩繼繻纃緕繽辮繿纈纉續纒纐纓纔纖纎纛纜缸缺罅罌罍罎罐网罕罔罘罟罠罨罩罧罸羂羆羃羈羇羌羔羞羝羚羣羯羲羹羮羶羸譱翅翆翊翕翔翡翦翩翳翹飜耆耄耋耒耘耙耜耡耨耿耻聊聆聒聘聚聟聢聨聳聲聰聶聹聽聿肄肆肅肛肓肚肭冐肬胛胥胙胝胄胚胖脉胯胱脛脩脣脯腋\"],[\"e440\",\"隋腆脾腓腑胼腱腮腥腦腴膃膈膊膀膂膠膕膤膣腟膓膩膰膵膾膸膽臀臂膺臉臍臑臙臘臈臚臟臠臧臺臻臾舁舂舅與舊舍舐舖舩舫舸舳艀艙艘艝艚艟艤\"],[\"e480\",\"艢艨艪艫舮艱艷艸艾芍芒芫芟芻芬苡苣苟苒苴苳苺莓范苻苹苞茆苜茉苙茵茴茖茲茱荀茹荐荅茯茫茗茘莅莚莪莟莢莖茣莎莇莊荼莵荳荵莠莉莨菴萓菫菎菽萃菘萋菁菷萇菠菲萍萢萠莽萸蔆菻葭萪萼蕚蒄葷葫蒭葮蒂葩葆萬葯葹萵蓊葢蒹蒿蒟蓙蓍蒻蓚蓐蓁蓆蓖蒡蔡蓿蓴蔗蔘蔬蔟蔕蔔蓼蕀蕣蕘蕈\"],[\"e540\",\"蕁蘂蕋蕕薀薤薈薑薊薨蕭薔薛藪薇薜蕷蕾薐藉薺藏薹藐藕藝藥藜藹蘊蘓蘋藾藺蘆蘢蘚蘰蘿虍乕虔號虧虱蚓蚣蚩蚪蚋蚌蚶蚯蛄蛆蚰蛉蠣蚫蛔蛞蛩蛬\"],[\"e580\",\"蛟蛛蛯蜒蜆蜈蜀蜃蛻蜑蜉蜍蛹蜊蜴蜿蜷蜻蜥蜩蜚蝠蝟蝸蝌蝎蝴蝗蝨蝮蝙蝓蝣蝪蠅螢螟螂螯蟋螽蟀蟐雖螫蟄螳蟇蟆螻蟯蟲蟠蠏蠍蟾蟶蟷蠎蟒蠑蠖蠕蠢蠡蠱蠶蠹蠧蠻衄衂衒衙衞衢衫袁衾袞衵衽袵衲袂袗袒袮袙袢袍袤袰袿袱裃裄裔裘裙裝裹褂裼裴裨裲褄褌褊褓襃褞褥褪褫襁襄褻褶褸襌褝襠襞\"],[\"e640\",\"襦襤襭襪襯襴襷襾覃覈覊覓覘覡覩覦覬覯覲覺覽覿觀觚觜觝觧觴觸訃訖訐訌訛訝訥訶詁詛詒詆詈詼詭詬詢誅誂誄誨誡誑誥誦誚誣諄諍諂諚諫諳諧\"],[\"e680\",\"諤諱謔諠諢諷諞諛謌謇謚諡謖謐謗謠謳鞫謦謫謾謨譁譌譏譎證譖譛譚譫譟譬譯譴譽讀讌讎讒讓讖讙讚谺豁谿豈豌豎豐豕豢豬豸豺貂貉貅貊貍貎貔豼貘戝貭貪貽貲貳貮貶賈賁賤賣賚賽賺賻贄贅贊贇贏贍贐齎贓賍贔贖赧赭赱赳趁趙跂趾趺跏跚跖跌跛跋跪跫跟跣跼踈踉跿踝踞踐踟蹂踵踰踴蹊\"],[\"e740\",\"蹇蹉蹌蹐蹈蹙蹤蹠踪蹣蹕蹶蹲蹼躁躇躅躄躋躊躓躑躔躙躪躡躬躰軆躱躾軅軈軋軛軣軼軻軫軾輊輅輕輒輙輓輜輟輛輌輦輳輻輹轅轂輾轌轉轆轎轗轜\"],[\"e780\",\"轢轣轤辜辟辣辭辯辷迚迥迢迪迯邇迴逅迹迺逑逕逡逍逞逖逋逧逶逵逹迸遏遐遑遒逎遉逾遖遘遞遨遯遶隨遲邂遽邁邀邊邉邏邨邯邱邵郢郤扈郛鄂鄒鄙鄲鄰酊酖酘酣酥酩酳酲醋醉醂醢醫醯醪醵醴醺釀釁釉釋釐釖釟釡釛釼釵釶鈞釿鈔鈬鈕鈑鉞鉗鉅鉉鉤鉈銕鈿鉋鉐銜銖銓銛鉚鋏銹銷鋩錏鋺鍄錮\"],[\"e840\",\"錙錢錚錣錺錵錻鍜鍠鍼鍮鍖鎰鎬鎭鎔鎹鏖鏗鏨鏥鏘鏃鏝鏐鏈鏤鐚鐔鐓鐃鐇鐐鐶鐫鐵鐡鐺鑁鑒鑄鑛鑠鑢鑞鑪鈩鑰鑵鑷鑽鑚鑼鑾钁鑿閂閇閊閔閖閘閙\"],[\"e880\",\"閠閨閧閭閼閻閹閾闊濶闃闍闌闕闔闖關闡闥闢阡阨阮阯陂陌陏陋陷陜陞陝陟陦陲陬隍隘隕隗險隧隱隲隰隴隶隸隹雎雋雉雍襍雜霍雕雹霄霆霈霓霎霑霏霖霙霤霪霰霹霽霾靄靆靈靂靉靜靠靤靦靨勒靫靱靹鞅靼鞁靺鞆鞋鞏鞐鞜鞨鞦鞣鞳鞴韃韆韈韋韜韭齏韲竟韶韵頏頌頸頤頡頷頽顆顏顋顫顯顰\"],[\"e940\",\"顱顴顳颪颯颱颶飄飃飆飩飫餃餉餒餔餘餡餝餞餤餠餬餮餽餾饂饉饅饐饋饑饒饌饕馗馘馥馭馮馼駟駛駝駘駑駭駮駱駲駻駸騁騏騅駢騙騫騷驅驂驀驃\"],[\"e980\",\"騾驕驍驛驗驟驢驥驤驩驫驪骭骰骼髀髏髑髓體髞髟髢髣髦髯髫髮髴髱髷髻鬆鬘鬚鬟鬢鬣鬥鬧鬨鬩鬪鬮鬯鬲魄魃魏魍魎魑魘魴鮓鮃鮑鮖鮗鮟鮠鮨鮴鯀鯊鮹鯆鯏鯑鯒鯣鯢鯤鯔鯡鰺鯲鯱鯰鰕鰔鰉鰓鰌鰆鰈鰒鰊鰄鰮鰛鰥鰤鰡鰰鱇鰲鱆鰾鱚鱠鱧鱶鱸鳧鳬鳰鴉鴈鳫鴃鴆鴪鴦鶯鴣鴟鵄鴕鴒鵁鴿鴾鵆鵈\"],[\"ea40\",\"鵝鵞鵤鵑鵐鵙鵲鶉鶇鶫鵯鵺鶚鶤鶩鶲鷄鷁鶻鶸鶺鷆鷏鷂鷙鷓鷸鷦鷭鷯鷽鸚鸛鸞鹵鹹鹽麁麈麋麌麒麕麑麝麥麩麸麪麭靡黌黎黏黐黔黜點黝黠黥黨黯\"],[\"ea80\",\"黴黶黷黹黻黼黽鼇鼈皷鼕鼡鼬鼾齊齒齔齣齟齠齡齦齧齬齪齷齲齶龕龜龠堯槇遙瑤凜熙\"],[\"ed40\",\"纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏\"],[\"ed80\",\"塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱\"],[\"ee40\",\"犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙\"],[\"ee80\",\"蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑\"],[\"eeef\",\"ⅰ\",9,\"￢￤＇＂\"],[\"f040\",\"\",62],[\"f080\",\"\",124],[\"f140\",\"\",62],[\"f180\",\"\",124],[\"f240\",\"\",62],[\"f280\",\"\",124],[\"f340\",\"\",62],[\"f380\",\"\",124],[\"f440\",\"\",62],[\"f480\",\"\",124],[\"f540\",\"\",62],[\"f580\",\"\",124],[\"f640\",\"\",62],[\"f680\",\"\",124],[\"f740\",\"\",62],[\"f780\",\"\",124],[\"f840\",\"\",62],[\"f880\",\"\",124],[\"f940\",\"\"],[\"fa40\",\"ⅰ\",9,\"Ⅰ\",9,\"￢￤＇＂㈱№℡∵纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊\"],[\"fa80\",\"兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯\"],[\"fb40\",\"涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神\"],[\"fb80\",\"祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙\"],[\"fc40\",\"髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑\"]]' ); }, 9523: function (e, t) { function r(e, t, r) { return ( t in e ? Object.defineProperty(e, t, { value: r, enumerable: !0, configurable: !0, writable: !0, }) : (e[t] = r), e ); } (e.exports = r), (e.exports.__esModule = !0), (e.exports[\"default\"] = e.exports); }, \"95c9\": function (e, t, r) { \"use strict\"; Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.BasicParser = void 0); class n { init(e, t, r) { return ( (this.metadata = e), (this.tokenizer = t), (this.options = r), this ); } } t.BasicParser = n; }, 9611: function (e, t, r) { \"use strict\"; (function (e) { Object.defineProperty(t, \"__esModule\", { value: !0 }), (t.APEv2Parser = void 0); const n = r(\"34eb\"), i = r(\"21c2\"), a = r(\"d3ab\"), o = r(\"95c9\"), s = r(\"1d55\"), u = r(\"6f58\"), c = n(\"music-metadata:parser:APEv2\"), l = \"APEv2\", f = \"APETAGEX\"; class h extends o.BasicParser { constructor() { super(...arguments), (this.ape = {}); } static tryParseApeHeader(e, t, r) { const n = new h(); return n.init(e, t, r), n.tryParseApeHeader(); } static calculateDuration(e) { let t = e.totalFrames > 1 ? e.blocksPerFrame * (e.totalFrames - 1) : 0; return (t += e.finalFrameBlocks), t / e.sampleRate; } static async findApeFooterOffset(t, r) { const n = e.alloc(s.TagFooter.len); await t.randomRead(n, 0, s.TagFooter.len, r - s.TagFooter.len); const i = s.TagFooter.get(n, 0); if (\"APETAGEX\" === i.ID) return ( c(\"APE footer header at offset=\" + r), { footer: i, offset: r - i.size } ); } static parseTagFooter(e, t, r) { const n = s.TagFooter.get(t, t.length - s.TagFooter.len); if (n.ID !== f) throw new Error(\"Unexpected APEv2 Footer ID preamble value.\"); i.fromBuffer(t); const a = new h(); return a.init(e, i.fromBuffer(t), r), a.parseTags(n); } async tryParseApeHeader() { if ( this.tokenizer.fileInfo.size && this.tokenizer.fileInfo.size - this.tokenizer.position < s.TagFooter.len ) return void c(\"No APEv2 header found, end-of-file reached\"); const t = await this.tokenizer.peekToken(s.TagFooter); if (t.ID === f) return ( await this.tokenizer.ignore(s.TagFooter.len), this.parseTags(t) ); if ( (c(\"APEv2 header not found at offset=\" + this.tokenizer.position), this.tokenizer.fileInfo.size) ) { const t = this.tokenizer.fileInfo.size - this.tokenizer.position, r = e.alloc(t); return ( await this.tokenizer.readBuffer(r), h.parseTagFooter(this.metadata, r, this.options) ); } } async parse() { const e = await this.tokenizer.readToken(s.DescriptorParser); if (\"MAC \" !== e.ID) throw new Error(\"Unexpected descriptor ID\"); this.ape.descriptor = e; const t = e.descriptorBytes - s.DescriptorParser.len, r = await (t > 0 ? this.parseDescriptorExpansion(t) : this.parseHeader()); return ( await this.tokenizer.ignore(r.forwardBytes), this.tryParseApeHeader() ); } async parseTags(t) { const r = e.alloc(256); let n = t.size - s.TagFooter.len; c(`Parse APE tags at offset=${this.tokenizer.position}, size=${n}`); for (let i = 0; i < t.fields; i++) { if (n < s.TagItemHeader.len) { this.metadata.addWarning( `APEv2 Tag-header: ${ t.fields - i } items remaining, but no more tag data to read.` ); break; } const o = await this.tokenizer.readToken(s.TagItemHeader); (n -= s.TagItemHeader.len + o.size), await this.tokenizer.peekBuffer(r, { length: Math.min(r.length, n), }); let f = a.findZero(r, 0, r.length); const h = await this.tokenizer.readToken( new u.StringType(f, \"ascii\") ); switch ( (await this.tokenizer.ignore(1), (n -= h.length + 1), o.flags.dataType) ) { case s.DataType.text_utf8: { const e = await this.tokenizer.readToken( new u.StringType(o.size, \"utf8\") ), t = e.split(/\\x00/g); for (const r of t) this.metadata.addTag(l, h, r); break; } case s.DataType.binary: if (this.options.skipCovers) await this.tokenizer.ignore(o.size); else { const t = e.alloc(o.size); await this.tokenizer.readBuffer(t), (f = a.findZero(t, 0, t.length)); const r = t.toString(\"utf8\", 0, f), n = e.from(t.slice(f + 1)); this.metadata.addTag(l, h, { description: r, data: n }); } break; case s.DataType.external_info: c(\"Ignore external info \" + h), await this.tokenizer.ignore(o.size); break; default: throw new Error(\"Unexpected data-type: \" + o.flags.dataType); } } } async parseDescriptorExpansion(e) { return await this.tokenizer.ignore(e), this.parseHeader(); } async parseHeader() { const e = await this.tokenizer.readToken(s.Header); return ( this.metadata.setFormat(\"lossless\", !0), this.metadata.setFormat(\"container\", \"Monkey's Audio\"), this.metadata.setFormat(\"bitsPerSample\", e.bitsPerSample), this.metadata.setFormat(\"sampleRate\", e.sampleRate), this.metadata.setFormat(\"numberOfChannels\", e.channel), this.metadata.setFormat(\"duration\", h.calculateDuration(e)), { forwardBytes: this.ape.descriptor.seekTableBytes + this.ape.descriptor.headerDataBytes + this.ape.descriptor.apeFrameDataBytes + this.ape.descriptor.terminatingDataBytes, } ); } } t.APEv2Parser = h; }).call(this, r(\"1c35\").Buffer); }, 9619: function (e, t, r) { var n = r(\"597f\"), i = r(\"0e15\"); e.exports = { throttle: n, debounce: i }; }, \"966d\": function (e, t, r) { \"use strict\"; (function (t) { function r(e, r, n, i) { if (\"function\" !== typeof e) throw new TypeError('\"callback\" argument must be a function'); var a, o, s = arguments.length; switch (s) { case 0: case 1: return t.nextTick(e); case 2: return t.nextTick(function () { e.call(null, r); }); case 3: return t.nextTick(function () { e.call(null, r, n); }); case 4: return t.nextTick(function () { e.call(null, r, n, i); }); default: (a = new Array(s - 1)), (o = 0); while (o < a.length) a[o++] = arguments[o]; return t.nextTick(function () { e.apply(null, a); }); } } \"undefined\" === typeof t || !t.version || 0 === t.version.indexOf(\"v0.\") || (0 === t.version.indexOf(\"v1.\") && 0 !== t.version.indexOf(\"v1.8.\")) ? (e.exports = { nextTick: r }) : (e.exports = t); }).call(this, r(\"4362\")); }, \"96cf\": function (e, t, r) { var n = (function (e) { \"use strict\"; var t, r = Object.prototype, n = r.hasOwnProperty, i = \"function\" === typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", o = i.asyncIterator || \"@@asyncIterator\", s = i.toStringTag || \"@@toStringTag\"; function u(e, t, r) { return ( Object.defineProperty(e, t, { value: r, enumerable: !0, configurable: !0, writable: !0, }), e[t] ); } try { u({}, \"\"); } catch (M) { u = function (e, t, r) { return (e[t] = r); }; } function c(e, t, r, n) { var i = t && t.prototype instanceof g ? t : g, a = Object.create(i.prototype), o = new k(n || []); return (a._invoke = _(e, r, o)), a; } function l(e, t, r) { try { return { type: \"normal\", arg: e.call(t, r) }; } catch (M) { return { type: \"throw\", arg: M }; } } e.wrap = c; var f = \"suspendedStart\", h = \"suspendedYield\", d = \"executing\", A = \"completed\", p = {}; function g() {} function m() {} function b() {} var v = {}; u(v, a, function () { return this; }); var y = Object.getPrototypeOf, I = y && y(y(Q([]))); I && I !== r && n.call(I, a) && (v = I); var E = (b.prototype = g.prototype = Object.create(v)); function w(e) { [\"next\", \"throw\", \"return\"].forEach(function (t) { u(e, t, function (e) { return this._invoke(t, e); }); }); } function C(e, t) { function r(i, a, o, s) { var u = l(e[i], e, a); if (\"throw\" !== u.type) { var c = u.arg, f = c.value; return f && \"object\" === typeof f && n.call(f, \"__await\") ? t.resolve(f.__await).then( function (e) { r(\"next\", e, o, s); }, function (e) { r(\"throw\", e, o, s); } ) : t.resolve(f).then( function (e) { (c.value = e), o(c); }, function (e) { return r(\"throw\", e, o, s); } ); } s(u.arg); } var i; function a(e, n) { function a() { return new t(function (t, i) { r(e, n, t, i); }); } return (i = i ? i.then(a, a) : a()); } this._invoke = a; } function _(e, t, r) { var n = f; return function (i, a) { if (n === d) throw new Error(\"Generator is already running\"); if (n === A) { if (\"throw\" === i) throw a; return T(); } (r.method = i), (r.arg = a); while (1) { var o = r.delegate; if (o) { var s = B(o, r); if (s) { if (s === p) continue; return s; } } if (\"next\" === r.method) r.sent = r._sent = r.arg; else if (\"throw\" === r.method) { if (n === f) throw ((n = A), r.arg); r.dispatchException(r.arg); } else \"return\" === r.method && r.abrupt(\"return\", r.arg); n = d; var u = l(e, t, r); if (\"normal\" === u.type) { if (((n = r.done ? A : h), u.arg === p)) continue; return { value: u.arg, done: r.done }; } \"throw\" === u.type && ((n = A), (r.method = \"throw\"), (r.arg = u.arg)); } }; } function B(e, r) { var n = e.iterator[r.method]; if (n === t) { if (((r.delegate = null), \"throw\" === r.method)) { if ( e.iterator[\"return\"] && ((r.method = \"return\"), (r.arg = t), B(e, r), \"throw\" === r.method) ) return p; (r.method = \"throw\"), (r.arg = new TypeError( \"The iterator does not provide a 'throw' method\" )); } return p; } var i = l(n, e.iterator, r.arg); if (\"throw\" === i.type) return ( (r.method = \"throw\"), (r.arg = i.arg), (r.delegate = null), p ); var a = i.arg; return a ? a.done ? ((r[e.resultName] = a.value), (r.next = e.nextLoc), \"return\" !== r.method && ((r.method = \"next\"), (r.arg = t)), (r.delegate = null), p) : a : ((r.method = \"throw\"), (r.arg = new TypeError(\"iterator result is not an object\")), (r.delegate = null), p); } function x(e) { var t = { tryLoc: e[0] }; 1 in e && (t.catchLoc = e[1]), 2 in e && ((t.finallyLoc = e[2]), (t.afterLoc = e[3])), this.tryEntries.push(t); } function S(e) { var t = e.completion || {}; (t.type = \"normal\"), delete t.arg, (e.completion = t); } function k(e) { (this.tryEntries = [{ tryLoc: \"root\" }]), e.forEach(x, this), this.reset(!0); } function Q(e) { if (e) { var r = e[a]; if (r) return r.call(e); if (\"function\" === typeof e.next) return e; if (!isNaN(e.length)) { var i = -1, o = function r() { while (++i < e.length) if (n.call(e, i)) return (r.value = e[i]), (r.done = !1), r; return (r.value = t), (r.done = !0), r; }; return (o.next = o); } } return { next: T }; } function T() { return { value: t, done: !0 }; } return ( (m.prototype = b), u(E, \"constructor\", b), u(b, \"constructor\", m), (m.displayName = u(b, s, \"GeneratorFunction\")), (e.isGeneratorFunction = function (e) { var t = \"function\" === typeof e && e.constructor; return ( !!t && (t === m || \"GeneratorFunction\" === (t.displayName || t.name)) ); }), (e.mark = function (e) { return ( Object.setPrototypeOf ? Object.setPrototypeOf(e, b) : ((e.__proto__ = b), u(e, s, \"GeneratorFunction\")), (e.prototype = Object.create(E)), e ); }), (e.awrap = function (e) { return { __await: e }; }), w(C.prototype), u(C.prototype, o, function () { return this; }), (e.AsyncIterator = C), (e.async = function (t, r, n, i, a) { void 0 === a && (a = Promise); var o = new C(c(t, r, n, i), a); return e.isGeneratorFunction(r) ? o : o.next().then(function (e) { return e.done ? e.value : o.next(); }); }), w(E), u(E, s, \"Generator\"), u(E, a, function () { return this; }), u(E, \"toString\", function () { return \"[object Generator]\"; }), (e.keys = function (e) { var t = []; for (var r in e) t.push(r); return ( t.reverse(), function r() { while (t.length) { var n = t.pop(); if (n in e) return (r.value = n), (r.done = !1), r; } return (r.done = !0), r; } ); }), (e.values = Q), (k.prototype = { constructor: k, reset: function (e) { if ( ((this.prev = 0), (this.next = 0), (this.sent = this._sent = t), (this.done = !1), (this.delegate = null), (this.method = \"next\"), (this.arg = t), this.tryEntries.forEach(S), !e) ) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function () { this.done = !0; var e = this.tryEntries[0], t = e.completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function (e) { if (this.done) throw e; var r = this; function i(n, i) { return ( (s.type = \"throw\"), (s.arg = e), (r.next = n), i && ((r.method = \"next\"), (r.arg = t)), !!i ); } for (var a = this.tryEntries.length - 1; a >= 0; --a) { var o = this.tryEntries[a], s = o.completion; if (\"root\" === o.tryLoc) return i(\"end\"); if (o.tryLoc"}],"posts":[{"title":"HTML、CSS和JavaScript入门（2）——CSS基础","slug":"HTML、CSS和JavaScript入门（2）——CSS基础-md","date":"2023-09-30T10:15:00.000Z","updated":"2023-09-30T10:24:05.000Z","comments":true,"path":"2023/09/30/a.html","link":"","permalink":"http://www.shelven.com/2023/09/30/a.html","excerpt":"前一篇笔记介绍了HTML的基础，这一篇主要记录下CSS的基础知识。","text":"前一篇笔记介绍了HTML的基础，这一篇主要记录下CSS的基础知识。 1. CSS的引入方式1.1 内联样式直接用style写进HTML元素，仅对当前的HTML元素有效： 1234&lt;body&gt; &lt;h1&gt;未引入CSS的h1标签&lt;/h1&gt; &lt;h1 style=&quot;color:brown&quot;&gt;内联样式引入CSS的h1标签&lt;/h1&gt;&lt;/body&gt; 可以看到在用内联样式引入的css只在当前html元素生效，并不会影响其他的元素。 1.2 内部样式表在&lt;head&gt;区域中用&lt;style&gt;标签写入css规则，对所有标签都生效： 123456789101112&lt;head&gt; &lt;style&gt; h1 &#123; color: darkslateblue; &#125; &lt;/style&gt; &lt;/head&gt;&lt;body&gt; &lt;h1&gt;这是第一个h1标签&lt;/h1&gt; &lt;h1&gt;这是第二个h1标签&lt;/h1&gt;&lt;/body&gt; 1.3 外部样式表顾名思义时从外部css文件引入，需要在&lt;head&gt;区域中引入link:css。首先我们创建一个style.css文件，并写入以下内容： 123h1 &#123; color: darkkhaki;&#125; 回到html文件，在&lt;head&gt;区域内输入link，在提示的第三行出现link:css，选中回车就自动引入了我们创建的css文件： 12345678&lt;head&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&gt;&lt;/head&gt;&lt;body&gt; &lt;h1&gt;这是第一个h1标签&lt;/h1&gt; &lt;h1&gt;这是第二个h1标签&lt;/h1&gt;&lt;/body&gt; 还有种外部样式表引用方式，是在&lt;head&gt;标签的&lt;style&gt;区域内用@import的方式引入： 1234567891011&lt;head&gt; &lt;style&gt; &lt;!-- 注意有分号，css提供的方式 --&gt; @import url(&quot;style.css&quot;); &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;h1&gt;这是第一个h1标签&lt;/h1&gt; &lt;h1&gt;这是第二个h1标签&lt;/h1&gt;&lt;/body&gt; 最终的效果和上面是一样的，就不放图片了。需要注意，使用@import方式引入有一些限制，它会在HTML解析完毕以后再加载CSS文件，就可能导致页面渲染的延迟，并且引入的CSS文件不能并行加载，可能会影响网页的性能。 所以一般都是用&lt;link&gt;标签的方式引入CSS文件，提高性能的同时也有更好的兼容性。 2. CSS引入的优先级上面说了三种引入CSS的方式，如果一个标签被不同方法&#x2F;顺序引入的CSS文件修饰，最终会表现出哪种样式呢？这就要说到样式的优先级。 浏览器会为HTML元素提供默认的样式，如果没有其他的样式覆盖，默认样式将会应用于这些元素（可以在网页按F12，元素，body中看到用户代理样式表，也就是浏览器自身定义的样式）。 样式的优先级有如下基本规则： !important优先级最高，会覆盖CSS中任何其他声明，不推荐使用，因为它改变了你样式表的级联规则，难以调试。 内联样式优先级高于内部样式表和外部样式表中的样式定义。 相同的规则按照加载顺序，写在后面的声明会覆盖前面的。 继承的样式优先级低于直接指定的样式。 什么是继承的样式？继承样式是指某个元素会继承其父元素的某些样式属性，即子元素会继承父元素的样式。 123456789101112131415161718&lt;head&gt; &lt;style&gt; body &#123; font-family: Arial; color: burlywood; &#125; h1 &#123; font-size: 24px; color: blue; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;h1&gt;这是标题&lt;/h1&gt; &lt;p&gt;这是一个段落。&lt;/p&gt;&lt;/body&gt; 上面的例子中，我们定义了&lt;body&gt;标签的font-family和color属性，子元素&lt;h1&gt;和&lt;p&gt;都继承了父元素的这两个属性，但同时我们又指定了&lt;h1&gt;标签的font-size和color属性。所以直接指定的&lt;h1&gt;除了继承了父标签的属性外，color属性的优先级高于继承的，为蓝色。 继承样式并不是所有样式属性都会继承的，只有一部分样式属性具有继承性。常见的继承样式属性包括 font-family、color、font-size、font-weight、text-align 等。但是像 width、height、margin、padding、background-color 等属性就不具有继承性。 3. 类和选择器为了保持代码的可维护性和可读性，尽量避免用!important声明样式，也尽量避免滥用内联样式，一般情况下是将样式定义在外部样式表中，使用类和选择器来管理样式。这样可以更好地组织和维护样式，并提高代码的重用性。 为了方便演示，以下都用内部样式表的方式引入CSS样式。 3.1 类（class）类是一种CSS的标记，用于标识一组具有相同样式的元素。通过为HTML元素添加class属性，并在CSS中定义对应的样式规则，可以将样式应用于多个元素。类名以.开头。 12345678910111213&lt;head&gt; &lt;style&gt; .highlight &#123; background-color: yellow; font-weight: bold; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;p class=&quot;highlight&quot;&gt;这是一个带有highlight类的段落。&lt;/p&gt; &lt;p&gt;这是一个普通的段落。&lt;/p&gt;&lt;/body&gt; 3.2 选择器（Selector）选择器用于选择HTML中要应用样式的元素。可以根据元素的标签名、类、ID、属性等进行选择。 元素选择器（Element Selector）：根据元素的标签名选择元素。例如，p选择器选择所有的&lt;p&gt;段落元素。 类选择器（Class Selector）：根据类名选择元素。例如，.highlight选择器选择所有具有highlight类的元素。 ID选择器（ID Selector）：根据元素的唯一ID选择元素。例如，#header选择器选择具有header ID的元素。 属性选择器（Attribute Selector）：根据元素的属性选择元素。例如，[type=&quot;text&quot;]选择器选择所有type属性为”text”的元素。 通用选择器（Universal Selector）：所有元素都会被选中。 不同选择器之间也是有优先级的，ID选择器 &gt; 类选择器 &gt; 元素选择器。 123456789101112131415161718192021222324252627282930313233343536&lt;head&gt; &lt;style&gt; /* 元素选择器 */ p &#123; color: blue; &#125; /* 类选择器 */ .highlight &#123; background-color: yellow; font-weight: bold; &#125; /* ID选择器 */ #header &#123; font-size: 20px; &#125; /* 属性选择器 */ input[type=&quot;text&quot;] &#123; border: 1px solid gray; &#125; /* 通用选择器 */ * &#123; font-family: &#x27;Times New Roman&#x27;, Times, serif; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;p&gt;这是一个普通的段落。&lt;/p&gt; &lt;p class=&quot;highlight&quot;&gt;这是一个带有highlight类的段落。&lt;/p&gt; &lt;p id=&quot;header&quot;&gt;这是一个带有header ID的段落。&lt;/p&gt; &lt;input type=&quot;text&quot; placeholder=&quot;文本输入框&quot;&gt;&lt;/body&gt; 还有些比较特殊的选择器，简单介绍两个： 12345678910111213141516171819202122&lt;head&gt; &lt;style&gt; /* 两个元素之间是空格，表示前面的父类，后面的是所有该标签的子类 */ div p &#123; color: brown; &#125; /* 两个元素之间是逗号，表示同时选中 */ h1,h2 &#123; color: aqua; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;p&gt;这是一个普通的段落&lt;/p&gt; &lt;div&gt; &lt;p&gt;这是在div父元素下的段落&lt;/p&gt; &lt;/div&gt; &lt;h1&gt;这是h1标签&lt;/h1&gt; &lt;h2&gt;这是h2标签&lt;/h2&gt;&lt;/body&gt; 空格是取所有的后代元素，如果只想要一级的子元素，可以用符号&gt;。 4. 伪类和伪元素4.1 伪类（Pseudo-class）伪类用于选择处于特定状态的元素，例如鼠标悬停、被点击、是第一个子元素等。伪类以冒号:开头，紧跟在选择器后面。 1234567891011121314151617181920212223242526272829&lt;head&gt; &lt;style&gt; /* 选择所有的链接元素 */ a &#123; color: blue; &#125; /* 选择鼠标悬停在链接上的元素 */ a:hover &#123; color: red; &#125; /* 选择div的第一个p子元素 */ div &gt; p:first-child &#123; font-weight: bold; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;p&gt; &lt;a href=&quot;https://www.shelven.com&quot;&gt;这是一个普通的链接&lt;/a&gt; &lt;/p&gt; &lt;div&gt; &lt;p&gt;这是在div父元素下的第一个段落&lt;/p&gt; &lt;p&gt;这是在div父元素下的第二个段落&lt;/p&gt; &lt;/div&gt;&lt;/body&gt; 在上面的例子中，:hover是一个伪类选择器，用于选择鼠标悬停在链接上的元素，并应用红色字体颜色。:first-child也是一个伪类选择器，用于选择第一个子元素，并应用粗体字体样式（不指定的话就是任意一个元素的子元素）。 上边是正常显示的页面，下边是鼠标悬停在链接上的效果： 4.2 伪元素（Pseudo-element）伪元素用于在元素的特定位置插入内容或样式，例如在元素的前后插入额外的内容、选择元素的第一个字母等。伪元素以双冒号::开头，紧跟在选择器后面。 123456789101112131415161718192021222324252627&lt;head&gt; &lt;style&gt; /* 在段落前插入内容 */ p::before &#123; content: &quot;前置内容&quot;; font-weight: bold; &#125; /* 选择第一个字母 */ p::first-letter &#123; font-size: 2em; color: red; &#125; /* 在段落后插入内容 */ p::after &#123; content: &quot;后置内容&quot;; font-weight: bold; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;p&gt; 这是一段普通的段落内容 &lt;/p&gt;&lt;/body&gt; 在上面例子里，::before是一个伪元素选择器，用于在每个段落前插入额外的内容，并应用粗体字体样式。::first-letter也是一个伪元素选择器，用于选择每个段落的第一个字母，并应用2倍字体大小和红色字体颜色。 5. 盒子模型CSS中的盒子模型（Box Model）是用于描述元素在页面中占用空间的一种模型。它将每个元素看作是一个矩形的盒子，由四个部分组成：内容区域（Content）、内边距（Padding）、边框（Border）和外边距（Margin）。 1.内容区域（Content）：内容区域指的是元素内部实际显示内容的区域，包括文本、图片或其他子元素。它的大小由元素的宽度（width）和高度（height）属性决定。 2.内边距（Padding）：内边距是元素内容区域与边框之间的空白区域，用于控制内容与边框之间的距离。可以使用padding属性设置内边距的大小。 3.边框（Border）：边框是围绕元素内容和内边距的线条或样式，用于分隔元素与其他元素的区域。可以使用border属性设置边框的样式、宽度和颜色。 4.外边距（Margin）：外边距是元素与相邻元素之间的空白区域，用于控制元素与其他元素之间的距离。可以使用margin属性设置外边距的大小。 123456789101112131415161718&lt;head&gt; &lt;style&gt; .box &#123; width: 100px; height: 100px; background-color: blue; border: 3px solid black; padding: 10px 9px 8px 7px; margin: 5px 5px 5px 5px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=&quot;box&quot;&gt; 这是一个普通的box模型 &lt;/div&gt;&lt;/body&gt; 当我们打开网页，按下F12，选择元素，div.box，就可以看到浏览器中展示的盒子模型： 总的来说，盒子模型是帮助我们理解元素在页面中的布局和占用空间的，通过调整内容区域、内边距、边框和外边距的大小和样式，可以实现各种页面布局效果。 以上都是些基本的CSS常识，实例部分可以参考菜鸟教程，里面给的例子挺多的，自己试一下才能更好理解：CSS 实例 | 菜鸟教程 (runoob.com) 关于CSS的书写格式，github上也有一个中文版指南：Zhangjd&#x2F;css-style-guide: A mostly reasonable approach to CSS and Sass. (github.com) 关于缩进的问题，我用的vscode回车就是hard tabs而不是soft tabs（两个空格），不过似乎也没影响，就先这样吧…..","categories":[{"name":"个人主页","slug":"个人主页","permalink":"http://www.shelven.com/categories/%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5/"},{"name":"编程自学","slug":"编程自学","permalink":"http://www.shelven.com/categories/%E7%BC%96%E7%A8%8B%E8%87%AA%E5%AD%A6/"}],"tags":[{"name":"CSS","slug":"CSS","permalink":"http://www.shelven.com/tags/CSS/"}]},{"title":"HTML、CSS和JavaScript入门（1）——HTML基础","slug":"HTML、CSS和JavaScript入门（1）——HTML基础","date":"2023-09-28T15:35:43.000Z","updated":"2023-10-06T07:16:09.000Z","comments":true,"path":"2023/09/28/a.html","link":"","permalink":"http://www.shelven.com/2023/09/28/a.html","excerpt":"不知不觉用Hexo建站也快一年半了，以前下载安装Node.js、搭建Hexo博客和使用volantis主题，以及到最后部署到服务器上，这一系列流程都是跟着教程和volantis的中文社区操作，因为自己是纯小白，属于两眼一抹黑干就完事了的那种。遇到bug也是各种百度谷歌，别人咋改文件自己跟着改，也完全不懂其中原理。","text":"不知不觉用Hexo建站也快一年半了，以前下载安装Node.js、搭建Hexo博客和使用volantis主题，以及到最后部署到服务器上，这一系列流程都是跟着教程和volantis的中文社区操作，因为自己是纯小白，属于两眼一抹黑干就完事了的那种。遇到bug也是各种百度谷歌，别人咋改文件自己跟着改，也完全不懂其中原理。 后来因为课题需要接触到编程，才慢慢有了美化网站的想法（虽然现在也不好看，主要是因为没时间整hhhh）。作为一个小白，看到网上动辄十几个小时的编程教程真的头疼，自己只是需要了解基本概念，会用就行，不需要学太深，所以有了这篇纯入门笔记。 1. 前言要学习前端web开发，首先需要了解和学习下面这些技术： HTML（HyperText Markup Language）：HTML是用于定义网页结构和内容的标记语言。它用于创建网页的各种元素，如标题、段落、链接、图像等。 CSS（Cascading Style Sheets）：CSS用于控制网页的样式和布局。通过CSS，用来设置设置网页的字体、颜色、大小、布局等各种外观属性。 JavaScript：JavaScript是一种用于网页交互和动态效果的脚本语言。它可以通过操作网页元素、处理用户输入和响应事件等来实现交互性和动态性。 简单来说，把web前端开发比喻成我的世界这款游戏的话，HTML就是游戏实际中的地形、各种方块等实体，CSS就像游戏中的纹理包和材质，而JavaScript就是游戏中的逻辑和行为，控制方块和实体的移动、交互碰撞等行为。 以上是基础中的基础，真正要学web开发，还要学习前端框架和库如React、Vue.js，会用前端构建工具像是Webpack、Vite来构建打包前端项目，需要学习网络和HTTP协议以便更好和后端交互，还要考虑移动端优化、跨浏览器兼容性等等……万丈高楼平地起，没有基础其他的都是空中楼阁。 我这里用vscode做为集成开发环境，安装了以下插件： Live Server：可以在浏览器中实时预览网页，安装后只需要在对应的html文件右键，选择Open With Live Server即可在本地浏览器快速打开，编辑文件后会自动刷新浏览器。 HTML CSS Support：根据输入内容和上下文，当你输入HTML标签或者CSS属性的时候，自动显示可能的选项（省去html文件和css文件之间反复切换）。 Auto Rename Tag：自动重命名标签，修改一侧标签后同步修改另一侧标签。 JavaScript（ES6） code snippets：支持JavaScript和TypeScript快速生成代码和语法提示。 2. HTML52.1 HTML基础HTML5是HTML出的第五个版本，HTML5方便书写、精简，也便于阅读和理解，以下均以HTML5为例。 在vscode中新建一个index.html文件，输入英文的!并按下tab键补全，就会出现最基础的HTML5代码： 123456789101112&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;/body&gt;&lt;/html&gt; &lt;!DOCTYPE html&gt;声明为HTML5文档 &lt;html&gt;元素是HTML页面的根元素，所有元素都在根元素内 &lt;head&gt;元素包含了文档的元数据（meta），链接工程内的css文件，为搜索引擎提供网站描述、关键词等数据。这部分内容是不可见的，比如： 123456&lt;meta charset=&quot;字符集&quot;&gt; 指定字符编码集，如UTF-8 &lt;meta name=&quot;description&quot; content=&quot;描述内容&quot;&gt; 定义文档描述，通常用于搜索引擎的摘要显示&lt;meta name=&quot;keywords&quot; content=&quot;关键词列表&quot;&gt; 定义文档关键词，指定文档关键词或者标签，有助于搜索引擎的索引和分类&lt;meta name=&quot;author&quot; content=&quot;作者名称&quot;&gt; 定义文档作者&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; 定义视口(viewpoint)位置，用于控制网页在移动设备的显示和缩放行为&lt;meta http-equiv=&quot;refresh&quot; content=&quot;秒数; URL=重定向URL&quot;&gt; 定义文档刷新或者重定向 1&lt;title&gt;描述文档标题（标题页显示的内容）&lt;/title&gt; 1&lt;link rel=&quot;stylesheet&quot; href=&quot;样式表路径&quot;&gt;引入外部样式表，这个在css引入里再说 &lt;body&gt;元素包括了所有可见的页面内容 从上面的例子可以看到，HTML不是一种编程语言，而是一种标记语言，标记语言有自己的一套标记标签(tag)，标签由一对尖括号包围，且通常是成对出现的，比如&lt;p&gt;这里是内容&lt;/p&gt;，开始标签和结束标签也称为开放标签和闭合标签。 也有一些标签是自闭和的，比如上面的&lt;meta&gt;、&lt;title&gt;、&lt;link&gt;，还有&lt;br&gt;（换行）、&lt;hr&gt;（水平分隔线）、&lt;input&gt;（输入控件）、&lt;image&gt;（插入图片）、&lt;area&gt;（定义可点击的区域），他们不需要闭合因为他们本身就不需要内容。 顺便说一句，在vscode中，ctrl+/可以快速注释当前行内容；块注释可以选中代码后alt+shift+A；alt+shift+↓可以快速复制当前行内容到下一行（选中多行代码同理）；在html文件中，输入小写字母再按tab键，会自动补齐开始和结束标签，算是提高编程效率的小技巧…… 现在就可以右键index.html文件，选择Open With Live Server，win+→把网页放在屏幕右边，就可以同屏查看代码和网页了。 2.2 常用标签和属性标题标签，通过&lt;h1&gt;到&lt;h6&gt;来定义： 12345678&lt;body&gt; &lt;h1&gt;这是标题 1&lt;/h1&gt; &lt;h2&gt;这是标题 2&lt;/h2&gt; &lt;h3&gt;这是标题 3&lt;/h3&gt; &lt;h4&gt;这是标题 4&lt;/h4&gt; &lt;h5&gt;这是标题 5&lt;/h5&gt; &lt;h6&gt;这是标题 6&lt;/h6&gt;&lt;/body&gt; 段落标签，通过&lt;P&gt;标签定义： 123456&lt;body&gt; &lt;p&gt; Lorem ipsum dolor sit amet consectetur adipisicing elit. Repudiandae quia alias tempore natus perspiciatis commodi sapiente fugit ducimus id, in ut deleniti sint sequi explicabo, totam pariatur quidem. Non, quis? Lorem 会输出占位用的无意义内容 &lt;/p&gt;&lt;/body&gt; 标签可以是行内元素或者块级元素，行级元素之间不会新起一段，其所占空间与内容本身大小有关，块级元素会新起一段。 123456789101112131415161718&lt;body&gt; &lt;!-- 这是一个注释，不会显示 --&gt; &lt;p&gt; 行级元素不会新起一段，比如 &lt;span&gt;span（创建行内的容器）&lt;/span&gt; &lt;img decoding=&quot;async&quot; src=&quot;https://www.shelven.com/tuchuang/avatar.jpg&quot; width=&quot;50&quot;&gt;img &lt;a href=&quot;https://www.shelven.com&quot; target=&quot;_blank&quot;&gt;a(链接标签)&lt;/a&gt; &lt;strong&gt;strong加粗&lt;/strong&gt; &lt;em&gt;em斜体&lt;/em&gt; &lt;/p&gt; &lt;p&gt; 块级元素会新起一段，占据当前给定行的百分百宽度，包括 &lt;div&gt;div标签&lt;/div&gt; &lt;h6&gt;h标签&lt;/h6&gt; &lt;p&gt;p标签&lt;/p&gt; &lt;form&gt;form标签&lt;/form&gt; &lt;/p&gt;&lt;/body&gt; &lt;span&gt;和&lt;div&gt;这两个标签在HTML页面结构布局中比较重要，两者都没有特定的含义，&lt;span&gt;通常用来包裹文本和其他行内元素，&lt;div&gt;通常用来容纳其他块级元素或者行内元素。 在上面的例子中，标签内的比如decoding、href这样的信息称为HTML元素的属性，属性是以名称键值对的形式出现的，且都是放在开始标签中，而属性值不管是数字还是字符串，都要包括在引号内（首选双引号）。 适用于大多数HTML标签的属性： class 为html元素定义类名（这个类名由css文件引入），方便器选择，可以写多个 id 为html元素定义唯一的id值，也是方便选择器选择 hidden 隐藏html元素 style 规定元素的行内样式（内联样式），css导入中会详细说 title 为元素提供额外信息，比如用在a标签，鼠标悬停会显示的信息 顺便提下，上面例子超链接的两种导入方式，href是超文本引用，建立文档与资源之间的关系，常用在link、a标签中；src是将指向的资源直接下载并用到当前页面，常用在script、img标签中。 要让行级元素换行或者同一个段落内的内容换行，可以插入块级元素，或者是加入&lt;br&gt;（换行）或者&lt;hr&gt;（插入水平线）标签： 12345&lt;body&gt; &lt;p&gt; 这是一个段落&lt;br&gt;这是另一个段落&lt;hr&gt;接着再来一段 &lt;/p&gt;&lt;/body&gt; 2.3 列表样式和表格html的列表样式主要有两种：前面有个点的无序列表和带有数字排序的有序列表： 12345678910111213141516&lt;body&gt; &lt;!-- 无序列表ul标签 --&gt; &lt;ul&gt; &lt;li&gt;无序列表项1&lt;/li&gt; &lt;li&gt;无序列表项2&lt;/li&gt; &lt;li&gt;无序列表项3&lt;/li&gt; &lt;li&gt;无序列表项4&lt;/li&gt; &lt;/ul&gt; &lt;!-- 有序列表ol标签 --&gt; &lt;ol&gt; &lt;li&gt;有序列表项1&lt;/li&gt; &lt;li&gt;有序列表项2&lt;/li&gt; &lt;li&gt;有序列表项3&lt;/li&gt; &lt;li&gt;有序列表项4&lt;/li&gt; &lt;/ol&gt;&lt;/body&gt; 表格标签为&lt;table&gt;，对应的分为表头&lt;thead&gt;和表体&lt;tbody&gt;。表头和表体都有行与列的概念，行在两者中都是&lt;tr&gt;标签，列在表头中标签为&lt;th&gt;，在表体中标签为&lt;td&gt;: 1234567891011121314151617181920212223&lt;body&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;姓名&lt;/th&gt; &lt;th&gt;年龄&lt;/th&gt; &lt;th&gt;qq&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;phantom&lt;/td&gt; &lt;td&gt;28&lt;/td&gt; &lt;td&gt;1021618642&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;aria&lt;/td&gt; &lt;td&gt;26&lt;/td&gt; &lt;td&gt;1269035311&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt;&lt;/body&gt; 可以看到浏览器会把表头显示为粗体居中的文本，其他和表体没啥区别。 2.4 表单表单是收集用户输入信息的工具，可以通过&lt;form&gt;标签创建，需要注意，html表单只能给外观不能给功能，功能实现需要javascript，或者写一个php服务器端脚本来接收参数。 123456789101112131415161718192021222324252627282930&lt;body&gt; &lt;form&gt; &lt;!-- label定义input内容的标签 --&gt; &lt;label&gt;账号:&lt;/label&gt; &lt;!-- input ype=&quot;text&quot;输入框可以输入文本 --&gt; &lt;input type=&quot;text&quot;&gt; &lt;br&gt; &lt;label&gt;密码:&lt;/label&gt; &lt;!-- input type=&quot;password&quot;输入框不会明文显示 --&gt; &lt;input type=&quot;password&quot;&gt; &lt;br&gt; &lt;label&gt;文本域&lt;/label&gt; &lt;br&gt; &lt;!-- textarea是确定一个文本域 --&gt; &lt;textarea name=&quot;输入框&quot; cols=&quot;50&quot; rows=&quot;10&quot;&gt;&lt;/textarea&gt; &lt;br&gt; &lt;label&gt;性别&lt;/label&gt; &lt;!-- select是给出一个下拉框 --&gt; &lt;select name=&quot;选项&quot;&gt; &lt;option value=&quot;male&quot;&gt;男&lt;/option&gt; &lt;option value=&quot;female&quot;&gt;女&lt;/option&gt; &lt;option value=&quot;unknow&quot;&gt;未知&lt;/option&gt; &lt;/select&gt; &lt;!-- input type=&quot;radio&quot;提供一个单选框 --&gt; &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;female&quot;&gt;女 &lt;!-- input type=&quot;checkbox&quot;提供一个复选框 --&gt; &lt;input type=&quot;checkbox&quot; name=&quot;sex&quot; value=&quot;male&quot;&gt;男 &lt;input type=&quot;checkbox&quot; name=&quot;sex&quot; value=&quot;female&quot;&gt;女 &lt;/form&gt;&lt;/body&gt; 2.5 iframe也就是HTML的框架，一个网页中可以嵌套别的网页，不过大部分的浏览器对嵌套层数是有限制的，一般都用不到： 123&lt;body&gt; &lt;iframe src=&quot;https://www.shelven.com&quot; width=&quot;800&quot; height=&quot;600&quot;&gt;&lt;/iframe&gt;&lt;/body&gt; 每个iframe都要加载和渲染独立的文档，过多的嵌套会增加加载时间和资源消耗，页面太复杂用户体验也会不好&#x3D; &#x3D; 简单地把iframe和div结合一下： 1234567891011121314151617181920212223242526272829&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=&quot;container&quot; style=&quot;width: 800px;height: 600px;text-align: center;&quot;&gt; &lt;div id=&quot;header&quot; style=&quot;background-color:#0099ff;height: 50px;&quot;&gt; &lt;h1 &gt;我的小破站&lt;/h1&gt; &lt;/div&gt; &lt;div id=&quot;menu&quot; style=&quot;background-color:#ff00b3;height:400px;width:100px;float:left;&quot;&gt; &lt;a href=&quot;https://www.shelven.com/&quot; target=&quot;_blank&quot;&gt;菜单&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.shelven.com/categories/&quot; target=&quot;_blank&quot;&gt;分类&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.shelven.com/tags/&quot; target=&quot;_blank&quot;&gt;标签&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://www.shelven.com/archives/&quot; target=&quot;_blank&quot;&gt;归档&lt;/a&gt; &lt;/div&gt; &lt;div id=&quot;content&quot; style=&quot;background-color:#EEEEEE;height: 400px;width: 700px;float:left;&quot;&gt; &lt;iframe src=&quot;https://www.shelven.com&quot; frameborder=&quot;0&quot; width=&quot;700&quot; height=&quot;400&quot;&gt;&lt;/iframe&gt; &lt;/div&gt; &lt;div id=&quot;footer&quot; style=&quot;background-color:#00ff0d;height: 50px;clear:both;text-align:center;font-size: large;&quot;&gt; 萌ICP备20220246号 浙ICP备2022010847号 &lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 大概就是这样的布局： 有了以上HTML的基础概念，后面CSS的引入就比较容易理解了。 2023&#x2F;10&#x2F;5更新发现一个很好用的vscode插件： 该插件可以用来格式化css和js文件，可能你从别的项目中拷贝的js&#x2F;css文件是一行显示的，打开一大坨不方便阅读。下载这个插件以后，在对应的文件中按shift + alt + F，选择格式化方法为Prettier，可以快速格式化文件。","categories":[{"name":"个人主页","slug":"个人主页","permalink":"http://www.shelven.com/categories/%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5/"},{"name":"编程自学","slug":"编程自学","permalink":"http://www.shelven.com/categories/%E7%BC%96%E7%A8%8B%E8%87%AA%E5%AD%A6/"}],"tags":[{"name":"HTML","slug":"HTML","permalink":"http://www.shelven.com/tags/HTML/"}]},{"title":"R基础入门——基本语法和作图","slug":"R基础入门——基本语法和作图","date":"2023-09-26T11:34:48.000Z","updated":"2023-09-26T11:38:13.000Z","comments":true,"path":"2023/09/26/a.html","link":"","permalink":"http://www.shelven.com/2023/09/26/a.html","excerpt":"整理笔记的时候翻到两年前做的R入门笔记，还记得21年冬天那个时候是第一次接触R，华中农业大学的孔秋生教授来塔里木大学做的R语言讲座。两年了有些东西过时了，整理下做个备份吧~顺便回头复习复习，温故而知新 ^_^","text":"整理笔记的时候翻到两年前做的R入门笔记，还记得21年冬天那个时候是第一次接触R，华中农业大学的孔秋生教授来塔里木大学做的R语言讲座。两年了有些东西过时了，整理下做个备份吧~顺便回头复习复习，温故而知新 ^_^ 1. R是什么R是一种用于统计计算和数据分析的编程语言。它提供了广泛的统计和图形功能，以及丰富的数据处理和建模工具。R具有强大的数据处理能力和丰富的统计函数库，被广泛应用于学术研究、数据科学、金融分析、生物医学等领域。 RStudio是一个集成开发环境（Integrated Development Environment，IDE），用于编写、运行和调试R语言代码。它提供了许多功能和工具，旨在提高R语言开发的效率和便利性。说白了，我们是在Rstudio中编写和运行R语言代码。 当然，这个集成开发环境不是唯一的，我们也可以在比如vscode中调试运行。Rstudio只是提供一个为新手入门提供一个友好的界面，熟练后甚至可以不用集成开发环境，比如在linux中也可以运行，这就是后话了。 2. 前期准备和一些基础认识先安装R，再安装Rstudio，顺序不能反，否则可能会提示找不到R在什么地方… R官网：R: The R Project for Statistical Computing (r-project.org) Rstudio官网（现在已经改名为Posit，还真不习惯）：Posit | The Open-Source Data Science Company 全部安装好，进入Rstudio后，点击菜单栏Tools，下拉框的Global Options，这里可以修改全局设置。主要修改的是自己的工作目录（也可以在代码中修改），我顺便改了四个窗口的布局（在Pane Layout中修改）： Source窗口：写R代码的窗口，也可以在3窗口（console）写，个人习惯 Environment、History等窗口：可以看到代码运行过程中生成的变量、自己的历史命令等等 Console窗口：R语言的交互式控制台，可以逐行输入和执行R代码，并立即看到结果，ctrl+L可以清屏 Files、Plot等窗口，前者可以看当前工作环境的文件，后者看到绘制的图 2和4窗口有多个选项供选择，我用的比较多的是这些，仅供参考。 对于1和3码代码的窗口部分，对于有较大代码块或者需要保存和重复的代码，建议用Source窗口，运行每一行需要Ctrl+回车；而对于简单的代码测试、快速计算或者做交互式探索的话，可以选择在Console窗口，回车就可以运行。 R语言要调用的软件包在CRAN仓库中，我们可以在以下R包官网中找到你需要的R包，以及各R包的参数、用法。 CRAN - Contributed Packages (r-project.org) 在Rstudio中，你可以通过菜单栏Tools，下拉框的第一个Install Packages窗口，输入你想要安装的R包，点击install安装： 以上是认识R和Rstudio的最基础的知识，下面主要讲讲R代码的语法和作图的一些示例。 3. R代码基础语法再次申明这是入门写的笔记，不会介绍很详细，完整的可以看官方手册An Introduction to R (r-project.org) 为了方便展示运行结果，以下运行结果前均以两个井号##开头。 3.1 数据类型常用的数据类型有数值型(numeric)，字符型(character)，逻辑型（logical）。 1234567891011a = 123 # =赋值，&lt;-也可以赋值，R官方社区用&lt;-较多，自己取舍。#表示注释，不会运行class(a) # class()确定括号内数据类型## [1] &quot;numeric&quot;a = &quot;123&quot; # 赋值为字符型加双引号，与代码相关的都是英文字符class(a)## [1] &quot;character&quot;a = TRUE # 逻辑型包括TRUE/FALSE/T/Fclass(a)## [1] &quot;logical&quot; 3.2 数据结构在R中，向量是一种基本的数据结构，用于存储一系列相同类型的元素。 123456789101112131415161718192021222324252627# 向量vector c()这个函数用来创建向量# 数值型向量a = c(1,7,10) # 数值之间逗号间隔class(a)## [1] &quot;numeric&quot;seq(1,5) # seq()序列函数## [1] 1 2 3 4 5seq(from = 1, to = 3, by = 0.5) # by表示步长## [1] 1.0 1.5 2.0 2.5 3.01:10 # x:x也可以表示序列## [1] 1 2 3 4 5 6 7 8 9 10# 字符型向量a = c(&quot;A&quot;,&quot;B&quot;,&quot;C&quot;)class(a)## [1] &quot;character&quot;letters # 26个小写英文字母顺序排列## [1] &quot;a&quot; &quot;b&quot; &quot;c&quot; &quot;d&quot; &quot;e&quot; &quot;f&quot; &quot;g&quot; &quot;h&quot; &quot;i&quot; &quot;j&quot; &quot;k&quot; &quot;l&quot; &quot;m&quot; &quot;n&quot; &quot;o&quot; &quot;p&quot; &quot;q&quot; &quot;r&quot; &quot;s&quot; &quot;t&quot; &quot;u&quot; &quot;v&quot; &quot;w&quot; &quot;x&quot; &quot;y&quot; &quot;z&quot;LETTERS # 26个大写英文字母顺序排列## [1] &quot;A&quot; &quot;B&quot; &quot;C&quot; &quot;D&quot; &quot;E&quot; &quot;F&quot; &quot;G&quot; &quot;H&quot; &quot;I&quot; &quot;J&quot; &quot;K&quot; &quot;L&quot; &quot;M&quot; &quot;N&quot; &quot;O&quot; &quot;P&quot; &quot;Q&quot; &quot;R&quot; &quot;S&quot; &quot;T&quot; &quot;U&quot; &quot;V&quot; &quot;W&quot; &quot;X&quot; &quot;Y&quot; &quot;Z&quot;# 逻辑型向量a = c(T,TRUE,F,FALSE)class(a)## [1] &quot;logical&quot; 3.3 向量数据操作123456789101112131415161718192021222324252627282930313233343536373839404142# rep()重复rep(1:3, times = 4) # 1到3重复3次## [1] 1 2 3 1 2 3 1 2 3 1 2 3rep(1:3, each = 4) # 1到3每个数字重复三次## [1] 1 1 1 1 2 2 2 2 3 3 3 3# paste()组合paste(1:3, c(&quot;A&quot;,&quot;B&quot;,&quot;C&quot;)) # 默认组合中间有空格## [1] &quot;1 A&quot; &quot;2 B&quot; &quot;3 C&quot;paste0(1:3, c(&quot;A&quot;,&quot;B&quot;,&quot;C&quot;)) # 去掉组合中间空格## [1] &quot;1A&quot; &quot;2B&quot; &quot;3C&quot;paste(1:3, c(&quot;A&quot;,&quot;B&quot;,&quot;C&quot;), # 换行注意逗号不要漏 sep = &quot;/&quot;) # 自定义连接组合的符号## [1] &quot;1/A&quot; &quot;2/B&quot; &quot;3/C&quot;##练习：3个处理ABC，3个重复paste0(rep(c(&quot;A&quot;,&quot;B&quot;,&quot;C&quot;), each = 3), rep(1:3, times = 3))## [1] &quot;A1&quot; &quot;A2&quot; &quot;A3&quot; &quot;B1&quot; &quot;B2&quot; &quot;B3&quot; &quot;C1&quot; &quot;C2&quot; &quot;C3&quot;# []索引，注意索引第一位是1而不是0a = 2:10a[5] # a向量中第5个数## [1] 6a[1:3] # a向量第1-3个数## [1] 2 3 4a[c(1,4,5)] # a向量第1，4，5个数## [1] 2 5 6# 逻辑操作符# &amp;与；|或；!非a[a&gt;5] # a向量中比5大的数## [1] 6 7 8 9 10a[a&gt;5 &amp; a&lt;8] # a向量中大于5且小于8的数## [1] 6 7a[a&gt;5 | a&lt;3] # a向量中大于5或小于3的数## [1] 2 6 7 8 9 10a[a!=8] # a向量中不包括8的值## [1] 2 3 4 5 6 7 9 10 3.4 向量计算12345678910# +, -, *, / 加减乘除正常计算2 * 1:3## [1] 2 4 61:3 * 1:3 # 两个向量分别相乘## [1] 1 4 92:5 + 1:3 # 注意两个向量长度不同，计算方式不同，最后一个是5+1得到的## [1] 3 5 7 6## Warning message:## In 2:5 + 1:3 :## longer object length is not a multiple of shorter object length 3.5 向量类型转换1234567891011121314151617181920212223242526272829303132# as.+数据类型()a = 1:3class(a)## [1] &quot;integer&quot;# as.character() 转换字符型数据b = as.character(a)b## [1] &quot;1&quot; &quot;2&quot; &quot;3&quot;# as.numeric() 转换数值型数据c = as.numeric(b) c## [1] 1 2 3# as.logical() 转换逻辑型数据d = as.logical(c)d## [1] TRUE TRUE TRUE## 练习：产生5个大写字母a = LETTERS[1:5]class(a)## [1] &quot;character&quot;a## [1] &quot;A&quot; &quot;B&quot; &quot;C&quot; &quot;D&quot; &quot;E&quot;## 练习：产生4对T,Fa = rep(c(T,F), times = 4)class(a)## [1] &quot;logical&quot;as.numeric(a) # TRUE数值为1，FALSE数值为0## [1] 1 0 1 0 1 0 1 0as.character(a)## [1] &quot;TRUE&quot; &quot;FALSE&quot; &quot;TRUE&quot; &quot;FALSE&quot; &quot;TRUE&quot; &quot;FALSE&quot; &quot;TRUE&quot; &quot;FALSE&quot; 3.6 常用计算函数123456789101112mean(1:10) # 平均数## [1] 5.5sd(1:10) # 标准差## [1] 3.02765max(1:10) # 最大值## [1] 10range(1:10) # 最小值和最大值## [1] 1 10length(1:10) # 长度## [1] 10length(letters)## [1] 26 3.7 矩阵（matrix）矩阵是一种二维数据结构，由行和列组成，其中每个元素有相同的数据类型。矩阵可以看成是向量的拓展。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667# matrix(data = NA, nrow = 1, ncol = 1, byrow = FALSE, dimnames = NULL)# data：矩阵的元素，默认为NA，即未给出元素值的话，各项为NA# nrow：矩阵的行数，默认为1，可简写nr# ncol：矩阵的列数，默认为1，可简写nc# byrow：元素是否按行填充，默认按列# dimnames：以字符型向量表示的行名及列名a = 1:12matrix(a)## [,1]## [1,] 1## [2,] 2## [3,] 3## [4,] 4## [5,] 5## [6,] 6## [7,] 7## [8,] 8## [9,] 9##[10,] 10##[11,] 11##[12,] 12# 数值型矩阵a = matrix(a, nr = 3, # nrow可以不写 byrow = T) # 先行后列形式填充a## [,1] [,2] [,3] [,4]## [1,] 1 2 3 4## [2,] 5 6 7 8## [3,] 9 10 11 12# 字符型矩阵matrix(LETTERS[1:12], ncol = 3)## [,1] [,2] [,3]## [1,] &quot;A&quot; &quot;E&quot; &quot;I&quot; ## [2,] &quot;B&quot; &quot;F&quot; &quot;J&quot; ## [3,] &quot;C&quot; &quot;G&quot; &quot;K&quot; ## [4,] &quot;D&quot; &quot;H&quot; &quot;L&quot;# 行/列名 使用行数和列数相等的向量命名colnames(a) = c(&quot;第一列&quot;,&quot;第二列&quot;,&quot;第三列&quot;,&quot;第四列&quot;)a## 第一列 第二列 第三列 第四列## [1,] 1 2 3 4## [2,] 5 6 7 8## [3,] 9 10 11 12row.names(a) = LETTERS[1:3]a## 第一列 第二列 第三列 第四列## A 1 2 3 4## B 5 6 7 8## C 9 10 11 12# 数据过滤（提取）a[1,] # 提取矩阵第一行## 第一列 第二列 第三列 第四列 ## 1 2 3 4 a[1:2,] ## 第一列 第二列 第三列 第四列## A 1 2 3 4## B 5 6 7 8a[-1,] # 删除矩阵第一行## 第一列 第二列 第三列 第四列## B 5 6 7 8## C 9 10 11 12 3.8 数据框（Data Frame）数据框是R语言中另一种常见的二维数据结构，它可以存储不同类型的数据，比如数值、字符、因子（factor）等等，并且每一列可以有不同的长度。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485data.frame(1:12,5:8) # 注意行数不同，填充方式不同## X1.12 X5.8## 1 1 5## 2 2 6## 3 3 7## 4 4 8## 5 5 5## 6 6 6## 7 7 7## 8 8 8## 9 9 5## 10 10 6## 11 11 7## 12 12 8a = 1:4b = 5:8c = letters[1:4]d = letters[5:8]e = data.frame(a,b,c,d)e## a b c d## 1 1 5 a e## 2 2 6 b f## 3 3 7 c g## 4 4 8 d hstr(e) # 检查数据框中数据类型## &#x27;data.frame&#x27;: 4 obs. of 4 variables:## $ a: int 1 2 3 4## $ b: int 5 6 7 8## $ c: chr &quot;a&quot; &quot;b&quot; &quot;c&quot; &quot;d&quot;## $ d: chr &quot;e&quot; &quot;f&quot; &quot;g&quot; &quot;h&quot;# 基本数据操作# 行/列提取e[1,]## a b c d## 1 1 5 a ee[,1]## [1] 1 2 3 4e$a # $对列提取,abcd为列数## [1] 1 2 3 4# 增加列e$e = 9:12 # 增加不存在的e列为向量9:12e## a b c d e## 1 1 5 a e 9## 2 2 6 b f 10## 3 3 7 c g 11## 4 4 8 d h 12# 行/列命名row.names(e)[3] = &quot;P&quot;row.names(e)[4] = &quot;l&quot; # 更改行名colnames(e)[1] = &quot;第一列&quot; # 更改列名e## 第一列 b c d e## 1 1 5 a e 9## 2 2 6 b f 10## P 3 7 c g 11## l 4 8 d h 12# 合并矩阵两种方式rbind,cbind(矩阵，名称 = 赋值)f = cbind(e,f = 13:16) # 合并以后相当于增加了1列f## 第一列 b c d e f## 1 1 5 a e 9 13## 2 2 6 b f 10 14## P 3 7 c g 11 15## l 4 8 d h 12 16colnames(f)[6] = &quot;Y&quot;fg = rbind(f, 6 ) # 合并以后相当于增加了1行g## 第一列 b c d e Y## 1 1 5 a e 9 13## 2 2 6 b f 10 14## P 3 7 c g 11 15## l 4 8 d h 12 16## 5 6 6 6 6 6 6# 行/列平均数# rowMeans 行平均数 colMeans 列平均数 123456789101112131415161718192021222324252627282930313233343536373839404142434445## 练习：生成一个矩阵，包含21-40的值，给行和列取名## 加上最后一列平均数；加上最后一列，计算第二列和第一列的差a = matrix(21:40, ncol = 5)colnames(a) = LETTERS[1:5]row.names(a) = letters[1:4]cbind(a,Mean = rowMeans(a))## A B C D E Mean## a 21 25 29 33 37 29## b 22 26 30 34 38 30## c 23 27 31 35 39 31## d 24 28 32 36 40 32b = a[,1]c = a[,2]d = c-bcbind(a, H = d)## A B C D E H## a 21 25 29 33 37 4## b 22 26 30 34 38 4## c 23 27 31 35 39 4## d 24 28 32 36 40 4## 练习：建一个数据框统计一天消费，第一列开支，第二列单价，第三列数量b = c(648,328,128,60,30,6)c = c(1,3,4,1,4,6)a = c(c*b)d = data.frame(a,b,c)colnames(d)[1] = &quot;消费金额&quot;colnames(d)[2] = &quot;单价&quot;colnames(d)[3] = &quot;数量&quot;row.names(d)[1] = &quot;648氪金消费&quot;row.names(d)[2] = &quot;328氪金消费&quot;row.names(d)[3] = &quot;128氪金消费&quot;row.names(d)[4] = &quot;60氪金消费&quot;row.names(d)[5] = &quot;30氪金消费&quot;row.names(d)[6] = &quot;6氪金消费&quot;rbind(d,总氪金量 = sum(a))## 消费金额 单价 数量## 648氪金消费 648 648 1## 328氪金消费 984 328 3## 128氪金消费 512 128 4## 60氪金消费 60 60 1## 30氪金消费 120 30 4## 6氪金消费 36 6 6## 总氪金量 2360 2360 2360 4. R做图咱们学生物最关心的就是怎么作图了，上面的编程基础没懂也没事，下面怎么画图可以套模板。 R可以导入不同的包作图，这里用最最基础的ggplot为例，以下是安装和导入方式，后面所有例子均需导入ggplot： 12345# 安装ggplot2包install.packages(&quot;ggplot2&quot;)# 导入ggplot2library(ggplot2) 4.1 线性回归图12345678910111213141516171819202122232425262728293031323334library(ggplot2)# 以R内置的cars数据为例ggplot(data = cars, mapping = aes(x = speed, # aes描述数据中的变量映射到geom的可视属性（美学？） y = dist)) + geom_point() + geom_line(col = &quot;red&quot;) + # geom表示图层 geom_smooth(method = &quot;lm&quot;) + # lm表示线性回归方法 annotate(geom = &quot;text&quot;, # annotate注释 x = 10, # 注释坐标 y = 100, label = &quot;y = -17.6x + 3.9 \\n p = 1.49e-12&quot;, # \\n为换行符 size = 5) # 注释大小lm.cars = lm(formula = dist ~ speed, data = cars)summary(lm.cars) # 回归方程详细参数总结，显示结果如下，代码中不要加下面的东西#-------------------------------------------------------------------------------------#Call:#lm(formula = dist ~ speed, data = cars)#Residuals:# Min 1Q Median 3Q Max #-29.069 -9.525 -2.272 9.215 43.201 #Coefficients:# Estimate Std. Error t value Pr(&gt;|t|) #(Intercept) -17.5791 6.7584 -2.601 0.0123 * #speed 3.9324 0.4155 9.464 1.49e-12 ***#---#Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1#Residual standard error: 15.38 on 48 degrees of freedom#Multiple R-squared: 0.6511, Adjusted R-squared: 0.6438 #F-statistic: 89.57 on 1 and 48 DF, p-value: 1.49e-12 4.2 直方图12345678910111213141516171819202122library(ggplot2)# 以R内置的iris数据为例ggplot(data = iris, mapping = aes(x = Sepal.Length)) + geom_histogram(col = &quot;red&quot;, # 边缘颜色 fill = &quot;blue&quot;, # 填充色 alpha = 0.5, # 透明度 bins = 30) + #分组数 labs(x = &quot;Sepal Length(cm)&quot;, # labs横纵坐标名 y = &quot;Count&quot;) + theme_classic() # 主题——经典背景（白色的）## 练习：对iris数据集中的Sepal.Width形状做直方图（图略）ggplot(data = iris, mapping = aes(x = Sepal.Width)) + geom_histogram(col = &quot;red&quot;, fill = &quot;blue&quot;, alpha = 0.3, bins = 30) + labs(x = &quot;Sepal Width(cm)&quot;, y = &quot;Count&quot;) + theme_classic() 4.3 密度图1234library(ggplot2)ggplot(iris, aes(x = Sepal.Width)) + geom_density() 1234567891011121314151617181920# 密度图 + 直方图library(ggplot2)ggplot(data = iris, mapping = aes(x = Sepal.Width)) + geom_histogram(aes(y = ..density..), # 直方图纵坐标改成密度 col = &quot;red&quot;, fill = &quot;blue&quot;, alpha = 0.3, bins = 30) + geom_density(col = &quot;red&quot;,) + theme_dark()## 练习：做Petal.Length直方图和密度图（图略）ggplot(data = iris, mapping = aes(x = Petal.Length)) + geom_histogram(aes(y = ..density..), bins = 30, col = &quot;blue&quot;, fill = &quot;green&quot;)+ geom_density(col = &quot;red&quot;) 4.4 折线图1234library(ggplot2)ggplot(iris, aes(x = Sepal.Width)) + geom_freqpoly() # 折线图 4.5 柱形图123456789101112131415161718192021222324252627282930313233library(ggplot2)ggplot(data = iris, mapping = aes(x = Species, fill = Species)) + # 总体颜色设置 geom_bar(width = 0.5, # 设置宽度 alpha = 0.3, # 注意设置颜色后总体颜色设置失效 show.legend = F) # 设置F为图例不显示## 练习：以mtcars数据集为例,对cyl作图（图略）mtcarsggplot(mtcars, aes(x = factor(cyl), # factor连续型变量数值转换成因子 fill = factor(cyl))) + geom_bar(width = 0.5, col = &quot;red&quot;, alpha = 0.3) + labs(x = &quot;Number of cylinder&quot;, y = &quot;Count&quot;)# 2个变量作图（图略）ggplot(iris, aes(x = Sepal.Length, col = Species)) + # 以种作为分类依据 geom_density()## 练习：对iris的Sepal.Length,根据不同种做直方图（图略）ggplot(iris, aes(x= Sepal.Length, fill = Species)) + geom_histogram(bins = 30, alpha = 0.4, col = &quot;black&quot;) + theme_classic() 12345678910111213141516171819202122232425262728293031323334353637383940# 柱形图叠加误差棒library(ggplot2)Mean = tapply(iris$Sepal.Length, # tapply分组，提取 iris$Species, mean)Mean = as.data.frame(Mean) # 转换array类型为数据框Mean## Mean## setosa 5.006## versicolor 5.936## virginica 6.588Mean$Species = row.names(Mean)Mean## Mean Species## setosa 5.006 setosa## versicolor 5.936 versicolor## virginica 6.588 virginicasd = tapply(iris$Sepal.Length, # tapply分组，提取 iris$Species, sd)sd = as.data.frame(sd)sd## sd## setosa 0.3524897## versicolor 0.5161711## virginica 0.6358796Newiris = cbind(Mean, Sd = sd$sd)Newiris## Mean Species Sd## setosa 5.006 setosa 0.3524897## versicolor 5.936 versicolor 0.5161711## virginica 6.588 virginica 0.6358796ggplot(Newiris, aes(x = Species,y = Mean))+ geom_col(width = 0.5, aes(fill = Species))+ geom_errorbar(aes(ymin = Mean - Sd, ymax = Mean + Sd), width = 0.5, col = &quot;black&quot;) 4.6 箱式图1234567891011121314library(ggplot2)# 三条线是75%，50%，25%。长度是箱高1.5倍，超过为离群值ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) + geom_violin(show.legend = F, width = 0.8) + # 叠加小提琴图 geom_boxplot(show.legend = F, width = 0.2, fill = &quot;white&quot;) + geom_jitter(width = 0.1, size = 0.5, show.legend = F) # 显示每个点,size为点大小 4.7 一些简单的练习1234567891011121314151617## 练习：以iris为例，做Sepal.Length和Petal.Length回归分析，并可视化library(ggplot2)ggplot(iris, aes(x = Sepal.Length, y = Petal.Length)) + geom_point(size = 0.5) + geom_smooth(method = lm, col = &quot;black&quot;) + annotate(geom = &quot;text&quot;, x = 5.5, y = 7, size = 5, label = &quot;y = -7.10x + 1.86 \\n p &lt; 2e-16 \\n Adjusted r-squared = 0.75&quot; )lm.iris = lm(Petal.Length ~ Sepal.Length, iris)summary(lm.iris) 12345678910111213141516## 练习：做个糖葫芦？library(ggplot2)x = rep(1:3,5)y = 1:5a = data.frame(x,y)ggplot(data = a, aes(x = x, y = y), col = &quot;red&quot;) + geom_vline(xintercept = 1:3, # 生成一条直线，交于x = 1,2,3 size = 3, col = &quot;yellow&quot;) + geom_point(size = 18, col = &quot;#FF5000&quot;) + ylim(0,6) + # 调整y轴上下限 xlim(0,4) + theme_void() # 主题设置为空 123456789101112131415161718## 练习:做个字母表？library(ggplot2)x = rep(1:6,5)y = rep(5:1,each = 6)m = lettersn = LETTERSl = paste0(n,m)lal = c(l,rep(NA,4)) # 设置4个NA值补齐a = data.frame(x,y,al)aggplot(a, aes(x,y)) + geom_text(aes(label = al), # 加文本图层，点的坐标映射字母 size = 5) + theme_void() + ylim(-1,6) + xlim(0,7) 123456789101112131415161718192021## 优化一下，做个炫彩字母表？大写字母在上，小写字母在下library(ggplot2)x = rep(1:6,5)y = rep(5:1,each = 6)al = c(LETTERS,rep(NA,4))al1 = c(letters,rep(NA,4))mydata = data.frame(x,y,al)mydataggplot(mydata, aes(x,y)) + geom_text(aes(label = al, col = al), size =5, show.legend = F) + geom_text(aes(y = y - 0.3, label = al1, col = al1), show.legend = F) + theme_void() + ylim(-1,6) + xlim(0,7) 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970## 算了 自由发挥吧，图就不放了# 练习 3个变量ggplot(iris, aes(x = Sepal.Length, y = Petal.Length, col = Species)) + # 增加种属变量 geom_point() + geom_smooth(method = lm)# 练习ggplot(mtcars, aes(x = factor(cyl), fill = factor(carb))) + geom_bar()# 练习ToothGrowth # 另一个奇奇怪怪的R内置数据str(ToothGrowth) # str()查看括号内数据类型信息ToothGrowth$dose = factor(ToothGrowth$dose)a = tapply(ToothGrowth$len, ToothGrowth$supp:ToothGrowth$dose, mean)a = data.frame(a)supp = rep(c(&quot;OJ&quot;,&quot;VC&quot;),each = 3)dose = rep(c(0.5,1,2),2)b = cbind(len = a$a,supp,dose)b = as.data.frame(b)ggplot(b, aes(x = supp, y = len, fill = dose)) + geom_col(position = position_dodge())# 练习ggplot(ToothGrowth, aes(x = supp, y = len, fill = dose)) + geom_boxplot() + geom_jitter()# 练习ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, size = Petal.Length, col = Petal.Length, alpha = Petal.Length)) + # 根据需要选第三个变量 geom_point()# 练习x = rep(1:6,5)y = rep(5:1,each = 6)al = c(LETTERS,rep(NA,4))al1 = c(letters,rep(NA,4))mydata = data.frame(x,y,al)mydataggplot(mydata, aes(x,y)) + geom_text(aes(label = al, col = al), size =5, show.legend = F) + geom_text(aes(y = y - 0.3, label = al1, col = al1), show.legend = F) + theme_void() + ylim(-1,6) + xlim(0,7)","categories":[{"name":"编程自学","slug":"编程自学","permalink":"http://www.shelven.com/categories/%E7%BC%96%E7%A8%8B%E8%87%AA%E5%AD%A6/"}],"tags":[{"name":"R语言","slug":"R语言","permalink":"http://www.shelven.com/tags/R%E8%AF%AD%E8%A8%80/"}]},{"title":"基因组注释（7）——功能基因注释评估","slug":"基因组注释（7）——功能基因注释评估","date":"2023-09-25T13:46:23.000Z","updated":"2023-09-25T13:52:41.000Z","comments":true,"path":"2023/09/25/a.html","link":"","permalink":"http://www.shelven.com/2023/09/25/a.html","excerpt":"前面说了如何用eggNOG-mapper快速注释功能基因，我们最后得到了很多结果文件，其中最重要的是两个annotations文件。这里主要讲一下怎么整理结果文件，并且对注释的结果做质量评估。","text":"前面说了如何用eggNOG-mapper快速注释功能基因，我们最后得到了很多结果文件，其中最重要的是两个annotations文件。这里主要讲一下怎么整理结果文件，并且对注释的结果做质量评估。 1. 基因功能注释评估其实就是整理结果文件中有多少基因注释到了哪些数据库中，以一种直观的方式展现结果。 这里分两种情况，如果自己喜欢以编程的方式处理文件，可以直接处理out.emapper.annotations这个文件。如果前一种方式不是很得心应手的话，那就直接处理out.emapper.annotations.xlsx这个文件，毕竟可以用excel直接打开。 在上一篇博客中详细介绍了结果文件中20列代表什么含义，删掉前两行运行的参数和命令，剩下的就是我们熟悉的excel表格。 将第一行表头的内容选中，筛选。A列（query）就是eggNOG注释到的基因名，选中并且粘贴到新的表格；J列（GOs）筛选除了“-”以外的内容，复制第一列作为注释到GO的序列；L列（KEGG_ko）筛选除了“-”以外的内容，复制第一列作为注释到KEGG的序列；U列（PFAMs）筛选除“-”以外的内容，复制第一列作为注释到PFAM的序列。可以得到如下形式的表格（另存为annotation.xlsx）： 这种类型的输入数据可以在本地导入R包做韦恩（Venn）图，也可以选择用在线工具直接生成韦恩图，比如这个网站：Venny 2.1.0 (csic.es) 最多支持四组样本，把数据贴进左边4个框内即可。上方的Style可以选择不同的着色方式，点击图中的数字可以在左下方Results框内看到各个数据集的重叠关系，右键图片也可以直接保存。这个功能不难实现，有空可以更新到我的本地小工具集合中。 类似的在线做韦恩图的网站还有很多： jvenn (inrae.fr) BioVenn - a web application for the comparison and visualization of biological lists using area-proportional Venn diagrams Venn Diagram generator (pangloss.com) 或者选择自己折腾R，用经典的VennDiagram包做韦恩图，或者用UpSetR包做Upset图： 1234567891011121314151617181920212223242526272829303132333435# R包readxl导入xlsx文件，VennDiagram做Veen图library(VennDiagram)library(readxl)data = read_excel(&quot;annotation.xlsx&quot;, sheet = 1)data[is.na(data)] = &quot;&quot; # 替换读入的NA为空plot = venn.diagram( x = list( eggNOG = data$eggNOG, GO = data$GO, KEGG = data$KEGG, PFAM = data$PFAM ), disable.logging = TRUE, filename = &#x27;Veen_annotation.png&#x27;, col = &quot;black&quot;, lwd = 3, lty = &quot;solid&quot;, fill = c(&quot;cornflowerblue&quot;, &quot;green&quot;, &quot;yellow&quot;, &quot;darkorchid1&quot;), alpha = 0.50, label.col = c(&quot;orange&quot;, &quot;white&quot;, &quot;darkorchid4&quot;, &quot;white&quot;, &quot;white&quot;, &quot;white&quot;, &quot;white&quot;, &quot;white&quot;, &quot;darkblue&quot;, &quot;white&quot;, &quot;white&quot;, &quot;white&quot;, &quot;white&quot;, &quot;darkgreen&quot;, &quot;white&quot;), cex = 2.0, fontfamily = &quot;serif&quot;, fontface = &quot;bold&quot;, cat.col = c(&quot;darkblue&quot;, &quot;darkgreen&quot;, &quot;orange&quot;, &quot;darkorchid4&quot;), cat.cex = 1.5, #cat.pos = 0, #cat.dist = 0.07, rotation.degree = 0, cat.fontfamily = &quot;serif&quot;, cat.fontface = &quot;bold&quot;, margin = 0.1) VennDiagram包参数参考VennDiagram: Generate High-Resolution Venn and Euler Plots (r-project.org) 12345678910111213141516171819202122# UpSetR包做upset图library(UpSetR)library(readxl)data = read_excel(&quot;annotation.xlsx&quot;, sheet = 1)data[is.na(data)] = &quot;&quot; # 替换NA为空data = fromList(data) # 转换成0和1的矩阵（UpSetR包对导入数据有要求，建议看github官网）upset( data, nsets = 4, matrix.color = &quot;gray23&quot;, main.bar.color = &quot;gray23&quot;, mainbar.y.label = &quot;交集基因数&quot;, mainbar.y.max = 7000, sets.bar.color = &quot;gray23&quot;, sets.x.label = &quot;注释的基因数&quot;, point.size = 2.2, line.size = 0.7, mb.ratio = c(0.7, 0.3), show.numbers = &quot;yes&quot;, set_size.show = FALSE) UpSetR参数参考UpSetR: A More Scalable Alternative to Venn and Euler Diagrams for Visualizing Intersecting Sets (r-project.org) 有点扯远了，两个图能获得的信息是一样的（upset图看不懂的话可以对照韦恩图，看柱状图数字以及底下的点和线就明白了），作图不是为了炫技而是让人一目了然，个人感觉upset图更直观一点，当然也可以直接整理一个表格（很多测序公司的报告都喜欢这么做，感觉也没啥意义）。 基于不同数据库得到的基因功能注释结果进行统计，结果显示能注释到功能数据库的基因数目为20411个，占预测基因总数的92.04%，具体如下： Type Number Percent(%) eggNOG 20411 92.04 GO 10766 48.55 KEGG 10245 46.20 Pfam 18167 81.92 Overall 22176 100.00 Type: 各数据库类型 Number: 注释的基因数目 Percent: 个数据库注释到的基因所占的预测基因的比例 Overall: 总的预测基因数 2. BUSCO评估前面的博客写过一篇如何做BUSCO评估——0基础学习基因组三代测序组装（7）——基因组组装质量评估（BUSCO、LAI指数），当时是评估组装的基因组完整性。这里注释完成后也需要对预测的基因集进行评估，和前面不一样的地方是，这里我们用BUSCO的Protein mode。 以前已经下载过真双子叶库的BUSCO保守基因序列了，这里就直接用： 1234567#!/bin/bash #SBATCH -n 8database_path=/public/home/wlxie/biosoft/busco_soft/busco/test_data/eukaryota/busco_downloads/lineages/eudicots_odb10sequence_path=/public/home/wlxie/biosoft/braker3/Ap_mydb/Ap_rmTE.aabusco -i $&#123;sequence_path&#125; -l $&#123;database_path&#125; -o Ap -m proteins --cpu 8 --offline 用busco自带的作图脚本处理一下结果文件short_summary.specific.eudicots_odb10.Ap.txt： 123mkdir resultcp Ap/short_summary.specific.eudicots_odb10.Ap.txt resultpython /public/home/wlxie/biosoft/busco/scripts/generate_plot.py -wd result 20秒不到就可以出图片结果： 也可以根据结果文件整理一个表格： Gene ID Number Percent(%) Complete BUSCOs(C) 2232 95.96 Fragmented BUSCOs(D) 6 0.26 Missing BUSCOs(M) 88 3.78% eudicots 2326 100.00 eudicots_odb10真双子叶库有2326个BUSCO groups，2232个（95.96%）BUSCO groups能够完整比对上（包括1837个单拷贝和395个多拷贝），说明这个基因组注释的完整性还是不错的。 3. 基因转录组表达用二代转录组数据比对前面组装的参考基因组，统计样本中表达量大于0的基因数。表达量可以用FPKM或者TPM来衡量，最好是用TPM，给定一个标准，比如我这里统计TPM&gt;0.001的基因，就是转录组的一系列标准操作。 简单写个从转录组下机数据比对到定量的脚本，需要新建一个文件夹提交作业： 1234567891011121314151617181920#!/bin/bash#SBATCH -n 20genome_path=/public/home/wlxie/Genome/Ap.fastagff3_path=/public/home/wlxie/biosoft/braker3/Ap_rmTE.gff3fq_path=/public/home/wlxie/Sequencing_data/BYT2022020901/Apocynum_pictum/# hisat2 构建索引，比对参考基因组hisat2-build $&#123;genome_path&#125; genomehisat2 -p 20 -x genome -S out.sam -1 $&#123;fq_path&#125;1.fq -2 $&#123;fq_path&#125;2.fq# samtools转sam为bam并排序samtools sort -@ 20 -o out.bam out.sam# stringtie统计定量stringtie -p 20 -e -G $&#123;gff3_path&#125; -o result.gtf out.bam# 删除中间文件rm -rf genome.*rm -rf out.* 最终得到result.gtf，这个文件详细记录了每个转录本表达量： 一行显示不下……后面还有个TPM值，简单写个python处理下数据，统计TPM值大于0.001的基因个数： 12345678910111213141516171819count = 0gen_count = 0with open(&#x27;result.gtf&#x27;, &#x27;r&#x27;) as gtf: lines = gtf.readlines() for line in lines: if &quot;TPM&quot; in line: gen_count += 1 TPM = line.split(&#x27;\\t&#x27;)[8].split(&#x27;;&#x27;)[4].split(&#x27; &#x27;)[2] TPM = float(TPM.strip(&#x27;&quot;&#x27;)) if TPM &gt; 0.001: count += 1print(f&#x27;基因总数：&#123;gen_count&#125; \\n表达量大于0的基因数：&#123;count&#125;&#x27;)print(f&#x27;占比：&#123;count/gen_count*100:.2f&#125; %&#x27;)&#x27;&#x27;&#x27;基因总数：22176 表达量大于0的基因数：19760占比：89.11 %&#x27;&#x27;&#x27; 也就是说有19760个表达的基因是受转录组数据支持的，占总基因数的89.11%。严格来说这边用的数据是注释功能基因之前的，用到的gff文件是移除TE序列后修改的gff文件，用来评价功能注释的结果似乎没有说服力还不够。这里没有对基因去冗余，计算的表达量和转录组分析的表达量还是有差异的。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"基因组三代测序分析","slug":"基因组三代测序分析","permalink":"http://www.shelven.com/categories/%E5%9F%BA%E5%9B%A0%E7%BB%84%E4%B8%89%E4%BB%A3%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/"}],"tags":[{"name":"BUSCO","slug":"BUSCO","permalink":"http://www.shelven.com/tags/BUSCO/"},{"name":"韦恩图","slug":"韦恩图","permalink":"http://www.shelven.com/tags/%E9%9F%A6%E6%81%A9%E5%9B%BE/"},{"name":"UpSet图","slug":"UpSet图","permalink":"http://www.shelven.com/tags/UpSet%E5%9B%BE/"}]},{"title":"基因组注释（6）——在线版eggNOG-mapper注释功能基因","slug":"基因组注释（6）——在线版eggNOG-mapper注释功能基因","date":"2023-09-19T14:04:47.000Z","updated":"2023-09-20T07:55:59.000Z","comments":true,"path":"2023/09/19/a.html","link":"","permalink":"http://www.shelven.com/2023/09/19/a.html","excerpt":"继续更新一下基因组注释，在基因组注释的第5篇博客中，我们已经拿到了Braker3预测的功能基因，并且删除了其中可能被TE插入而失去功能的基因。仅仅拿到这些基因CDS序列和蛋白序列肯定是不够的，我们还需要知道这些蛋白具体行使什么生物学功能。","text":"继续更新一下基因组注释，在基因组注释的第5篇博客中，我们已经拿到了Braker3预测的功能基因，并且删除了其中可能被TE插入而失去功能的基因。仅仅拿到这些基因CDS序列和蛋白序列肯定是不够的，我们还需要知道这些蛋白具体行使什么生物学功能。 1. 功能注释常用数据库基因功能注释的原理都是相似的，我们拿到了蛋白序列之后，与现有的蛋白数据库进行比对，统计比对结果。稍微介绍几个常用的比对数据库，其他没介绍到的可以参考本站网址导航—生信网站快速导航，里面有本人年初总结的一些常用生信数据库和工具（有好的工具也可以联系我补充）。 1.1 NR数据库NR数据库全称Non-Redundant Protein Sequence Database（非冗余蛋白数据库），由NCBI建立和维护，可以在NCBI主页的Data&amp;Software入口找到FTP：BLAST Databases。用过本地blast的人都知道，blast比对NR&#x2F;NT库的结果中包含了物种注释信息和相应的氨基酸序列，可以用于物种分类、数据污染评估等等（没用过的话可以参考我的这篇博客——数据污染评估）。 一般的注释方法和数据污染评估一样，使用blastp的比对方法，设置-evalue 1e-5, -max_target_seqs 1，只保留匹配得分最高的蛋白序列。 1.2 KEGG数据库KEGG数据库全称Kyoto Encyclopedia of Genes and Genomes，是日本京都大学生物信息学中心1995年建立的数据库，该数据库描述生物体中复杂的生物学通路，其丰富的通路信息帮助我们系统了解蛋白的生物学功能，如代谢通路、遗传信息传递以及细胞过程等一些复杂的生物功能。 一般的注释方法同上，比对的数据库为KEGG数据库，并统计蛋白序列注释到的KEGG通路信息。 1.3 KOG数据库KOG数据库全称Eukaryotic Orthologous Groups of protein（真核同源群数据库），和这个数据库齐名的还有COG（Clusters of Orthologous Groups of proteins），这两个数据库都是NCBI中基于直系同源关系的数据库，COG针对原核生物，KOG针对真核生物。其比对原理是将蛋白序列比对并注释到某个同源蛋白簇中，这个同源蛋白簇是NCBI通过生物的完整基因组的编码蛋白系统进化关系分类构建而成的，比对到的同源蛋白簇揭示该蛋白的功能。 一般的注释方法同上，比对的是KOG数据库，并统计蛋白序列注释的KOG信息。 1.4 GO数据库GO数据库全称Gene Ontology，数据库由基因本体联合会建立，是将所有与基因有关的研究结果进行分类汇总的综合数据库。可能听起来比较抽象，基因本体论的本质是用特定的一套词汇描述生物学功能，对不同物种的基因功能进行注释的统一化（去掉物种特异性），我们可以将基因按照其参与的生物过程（BiologicalProcess， BP） 、 细胞组分（Cellular Component， CC） ， 分子功能（Molecular Function， MF） 三个方面进行分类注释。很多蛋白数据库都带有GO号注释信息。 GO注释目前有两种主要的注释方法： 序列相似性比对，也就是上面blast方法，比对的数据库可以是Swissport，提取GO列的注释信息。 结构域相似性比对，常用的软件有InterproScan ，比对的数据库可以是Pfam数据库（一个蛋白质域家族的数据库），也是提取GO注释信息。 1.5 Swissprot数据库Swissprot（不要打成Swissport，瑞士机场）隶属于Uniprot数据库， 包含经过注释和验证的严格非冗余的蛋白序列数据库， 提供了蛋白序列详尽的注释信息。也是一个非常常用的蛋白注释数据库，现在UniprotKB（Universal Protein Knowledge Base）主要由两个子库构成，一个是TrEMB（该部分是计算机进行分析注释的，未人工校验的蛋白），另一个就是Swissprot。 一般的注释方法同上，比对Swissprot数据库，统计基因组蛋白序列注释到的Swissprot数据库蛋白信息。 上面介绍的是一般情况下我们做基因功能注释要用的数据库，全都是可以用blast比对相应的数据库，最后做个汇总比如韦恩图查看各个数据库注释的情况。 之所以说一般情况，是因为随着算法和技术的发展，不断有新的比对工具（比如DIAMOND，速度是blast的100到10000倍；还有基于隐马尔科夫模型的HMMER 3等）和注释流程的出现，这些经典的方法固然可用，缺点也很明显：比对速度慢，需要下载大量的比对数据库，占用资源等等。 2. eggNOGeggNOG（evolutionary gene genealogy Non-supervised Orthologous Groups）数据库是从NCBI的COG&#x2F;KOG延伸出来的，前面介绍过这两个数据库是直系同源数据库，在2008年提出的eggNOG的时候只有这两个直系同源数据库，这两个数据库在当时一方面是数据不多（当时只有 312 个细菌、26 个古细菌和 35 个真核生物基因组），另一方面是更新缓慢，主要对当时比较基因组学研究影响较大。 看到Non-supervised无监督这几个字，相信有的小伙伴就明白了，他们用了Smith–Waterman算法（与blast齐名的寻找序列最优相似比较的算法，比blast更精准）构建了直系同源群（Orthologous Group），并且通过基因的描述文件、注释的功能类别和预测的蛋白质结构域等，自动注释这些直系同源群。这种非监督的方法，不受物种限制，不限于已有基因的功能和关系，这种灵活性、可扩展性和跨物种比较的优势，可以帮助人们发现新的功能和关系，并提供基于进化关系的功能注释。 感兴趣的可以看看下面这篇2008年的原文： eggNOG: automated construction and annotation of orthologous groups of genes - PMC (nih.gov) 经过十几年的迭代，eggNOG现在已经发布了6.0版本（2023年1月6日），总的来说，eggNOG 6.0提供了超过1700万个直系同源群 (OG) ，涵盖10756个细菌、457个古细菌和1322个真核生物，这些直系同源群可注释的信息包括 KEGG、GO、UniProtKB、BiGG、CAZy、CARD、PFAM 和 SMART。此外，eggNOG 6.0网站还推出了挖掘直系同源基因和基因功能数据分析的新功能，包括为跨物种的多个直系同源群生成系统发育图谱等。 3. eggNOG-mappereggNOG-mapper是eggNOG推出的一款进行批量基因功能注释的工具，在2021年的时候已经更新到了v2版本，主要更新了从raw contigs开始的从头基因预测、内置成对的同源预测（built-in pairwise orthology prediction）、快速检测蛋白结构域和自动生成gff文件四项功能。 3.1 eggNOG-mapper原理整个流程和原理可以用作者原文的一张图概括： A: 编码基因预测阶段，用Prodigal从组装的contigs中进行蛋白预测（或者blastx模式预测）。 B: 搜索阶段，选择HMMER或者DIAMOND或者MMESQS2将输入的蛋白序列和EggNOG数据库进行比对，生成seed orthologs。 C: 直系同源推断阶段，根据所需要的分类范围，生成直系同源报告。 D: 注释阶段，根据蛋白注释信息和蛋白结构域注释信息，生成表格和gff格式的报告。 3.2 运行网页版eggNOG-mappereggNOG-mapper这个工具可以下载到本地运行（主要是方便宏基因组这种大批量的注释），也可以在线运行，官方提供了在线服务地址http://eggnog-mapper.embl.de 因为我自己不是做宏基因组的，所以也没必要下载工具和数据库（需要的时候再更），直接使用在线服务就可以。 可以看到eggNOG-mapper在线版支持5种类型数据输入： Proteins：蛋白序列，上限是10万条序列 CDS：CDS序列，上限也是10万条，会在搜索前倍翻译成蛋白序列 Genomic：基因组序列，支持最多1000条DNA序列，1000万个核苷酸。直接上传基因组序列会多一步编码蛋白预测，可以选择使用Prodigal或者Blastx-like这两者之一。 Metagenomic：Contig级别的基因组序列，本质上和上面是一样的，所以限制条件也相同。同样会进行编码蛋白预测。 Seeds：eggNOG-mapper跑的seed orthologs，支持最多上传10万条，这个主要用于重新注释。 我们前面拿到了蛋白序列，所以直接上传蛋白序列即可，注意一下上传的要求是.gz的压缩文件。所以稍微处理下： 12# 保留原文件，以gz格式压缩为另一个文件gzip -c Ap_rmTE.aa &gt; Ap_pep.gz 上传gz文件，留下邮箱，底下还可以设置比对的参数和注释的参数，都以默认参数运行即可。稍微说下注释的一些参数： Taxonomic Scope：可以手动选择的分类范围，官方建议是默认的方式，但也可以手动选择，比如我注释植物，就可以选择Viridiplantae绿色植物。这里的参数会影响流程里的直系同源推断阶段的范围，默认情况下每个序列都会自动调整。 Orthology restrictions：直系同源限制，可以选择from any ortholog或者from one to one ortholog，也是影响直系同源推断阶段的结果，后者只会在直系同源中匹配。 Gene Ontology evidence：基因本体论证据，这里是两种：1. experimental，也就是有实验支撑的（比如做过亚细胞定位啊，免疫荧光啊这些）。2. non-electronic，通俗说就是“非电子”证据，电子证据是与实验证据相距最远的，这里的指的是除实验和电子以外的证据。 PFAM refinement：这里的选项是对蛋白结构域注释的调整，可以直接出报告，也可以再将序列进行realign等。 SMART annotation：顾名思义，就是这步可以用SMART再进行蛋白质结构域预测，默认是跳过的。 关于基因本体论的证据，GO官网有解释，我这里解释可能不是很清楚，可以查看官网对基因本体论的证据说明以及分类： Guide to GO evidence codes (geneontology.org) 所有参数确定之后，点击submit，网页会提醒你查看邮件。进入邮箱，点击第一个第一个选项Click to manage your job，再点击Start job即可开始运行。 3.3 eggNOG-mapper结果文件解读在线运行还是非常快的~我这20000个左右的蛋白序列，吃个饭的功夫回来就跑完了，不用下数据库不用配置环境就可以做分析，一个字，香！ 当我们看到右上角状态为Done后，就证明已经跑完了。我们返回前一个页面，点击Access your job files here，这个链接就是我们结果文件的存储位置，注意存储是暂时的，需要我们尽快下载到本地保存。 检查日志无报错即可。我们主要用的是其中的两个annotations文件，一个是方便你自己提取内容做富集分析（内容制表符分割，怎么提取和做GO、KEGG富集分析下次再说吧，写个脚本的事），第二个带.xlsx后缀方便你用excel编辑和打开。 这里主要讲一下结果文件的各项参数代表什么意思： query：蛋白序列名称 seed_ortholog：搜索阶段比对上的seed ortholog编号 evalue：evalue值，越小结果越可靠 score：比对的得分，越大越可靠 eggNOG_OGs：为序列确定的以逗号分隔、按照进化分支深度排序的直系同源组（orthologs groups，OGs）列表。每个直系同源组以OG@tax_id|tax_name方式展现。 max_annot_lvl：用于检索注释的最宽的直系同源组，以tax_id|tax_name方式展现。 COG_category：从最佳OG中推测的COG功能分类（一个字母），具体有哪些可以看这里NCBI的介绍COG - NCBI (nih.gov)。 Description：注释的基因功能描述（eggNOG-mapper注释的描述真的很简短……） Preferred_name：普遍使用的基因名缩写 GOs：注释的GO编号，一个基因可能对映非常多的GO号 EC：KEGG的EC通路编号，代表相关的酶 KEGG_ko：KEGG的KO编号，表示直系同源基因，代表一个具体的功能 KEGG_Pathway：通常有ko编号和map编号，map编号代表reference pathway，是一种代谢通路类型，比较具体有一般参考意义 KEGG_Module：KEGG Module数据库编号，以M开头，实际上就是多个KO划分在一个共同发挥功能的单元里 KEGG_Reaction：KEGG Reaction数据库编号，以R开头，包含代谢通路上酶促反应相关信息 KEGG_rclass：KEGG RCLASS数据库编号，以RC编号开头，手动整理的反应数据集合 BRITE：KEGG的Brite数据库编号，用的不是很多，是一个储存分类信息的数据库 CAZy：碳水化合物酶相关的专业数据库，可以看官网CAZy - Home BiGG_Reaction：BiGG是一个整合基因组尺度代谢网络模型的数据库，官网BiGG Models (ucsd.edu) PFAMs：PFAM数据库，根据多序列比对结果和隐马尔可夫模型，将蛋白分为不同家族的一个数据库，官网InterPro (ebi.ac.uk)。没错官网是InterPro，pfam数据库已经被InterPro合并，并且2023年1月之后原网页就失效了。 这么多数据咋一看很头疼，可以整理一下写个脚本，做GO和KEGG富集分析，这个下次再说。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"基因组三代测序分析","slug":"基因组三代测序分析","permalink":"http://www.shelven.com/categories/%E5%9F%BA%E5%9B%A0%E7%BB%84%E4%B8%89%E4%BB%A3%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/"}],"tags":[{"name":"eggNOG mapper","slug":"eggNOG-mapper","permalink":"http://www.shelven.com/tags/eggNOG-mapper/"}]},{"title":"从无到有制作密码子统计工具——tkinter等工具的使用","slug":"从无到有制作密码子统计工具——tkinter等工具的使用","date":"2023-09-01T14:58:31.000Z","updated":"2023-09-04T10:39:00.615Z","comments":true,"path":"2023/09/01/a.html","link":"","permalink":"http://www.shelven.com/2023/09/01/a.html","excerpt":"前阵子课题组的师弟问我怎么统计CDS序列的密码子频率，其实百度一下有很多在线分析网站可以把序列丢进去，直接出结果……","text":"前阵子课题组的师弟问我怎么统计CDS序列的密码子频率，其实百度一下有很多在线分析网站可以把序列丢进去，直接出结果…… 在做密码子偏好性分析的领域，有一个老牌的经典软件codonw，不仅可以分析每条序列的密码子使用频率，还可以计算近10种密码子偏好性分析常用的指标，以及做关联分析（对应性分析）图。 这个工具在windows系统中要在命令行下运行，linux系统中可以通过conda安装。以及我在github上看到有人重构了原代码，用c语言写了底层方法并且绑定了python，我在用这个项目编译的时候失败了，感兴趣的话可以访问这个codonw-slim项目smsaladi&#x2F;codonw-slim。 当然，这篇博客的重点不是codonw软件，前面说的需求是统计CDS序列的密码子频率，使用在线工具或者现有的工具当然快——前人栽树后人乘凉，这无可厚非。我比较感兴趣的是做这些工具的逻辑，以及如何自己手搓一个工具，让一个没有任何编程经验的人可以快速用上。 python强大之处在于有着丰富和强大的第三方库，编程语言很容易懂，很适合我这种编程小白练手。想要做工具，首先就要设计图形用户界面（Graphical User Interface，GUI），tkinter是python自带的最经典的GUI编程库，官方后续又对tkinter库做了优化也就是Ttk库（基于tkinter库开发的），也有很多人写了一系列针对tkinter的美观拓展插件。万变不离其宗，掌握一个工具的用法，其他的工具思路也都是类似的。 这里不讲tkinter如何使用，网上的教程太多了，CSDN上可以翻到各种组件的详细用法，还有经典的pack、grid和place三种布局，基本概念知道了依葫芦画瓢就行。 这里我先把自己写的密码子频率统计工具的代码放出来： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270#!/usr/bin/env python# -*- coding: utf-8 -*-from collections import OrderedDictfrom tkinter import *from tkinter import filedialog, messageboxfrom tkinter.scrolledtext import ScrolledTextimport timeimport re#from Bio import SeqIOfile_name = &#x27;&#x27;codon_table = &#123; &#x27;Ala&#x27;:[&#x27;GCG&#x27;,&#x27;GCA&#x27;,&#x27;GCT&#x27;,&#x27;GCC&#x27;], &#x27;Cys&#x27;:[&#x27;TGT&#x27;,&#x27;TGC&#x27;], &#x27;Asp&#x27;:[&#x27;GAT&#x27;,&#x27;GAC&#x27;], &#x27;Glu&#x27;:[&#x27;GAG&#x27; ,&#x27;GAA&#x27;], &#x27;Phe&#x27;:[&#x27;TTT&#x27; ,&#x27;TTC&#x27;], &#x27;Gly&#x27;:[&#x27;GGG&#x27;,&#x27;GGA&#x27;,&#x27;GGT&#x27;,&#x27;GGC&#x27;], &#x27;His&#x27;:[&#x27;CAT&#x27;,&#x27;CAC&#x27;], &#x27;Ile&#x27;:[&#x27;ATA&#x27;,&#x27;ATT&#x27;,&#x27;ATC&#x27;], &#x27;Lys&#x27;:[&#x27;AAG&#x27;,&#x27;AAA&#x27;], &#x27;Leu&#x27;:[&#x27;TTG&#x27;,&#x27;TTA&#x27;,&#x27;CTG&#x27;,&#x27;CTA&#x27;,&#x27;CTT&#x27;,&#x27;CTC&#x27;], &#x27;Met&#x27;:[&#x27;ATG&#x27;], &#x27;Asn&#x27;:[&#x27;AAT&#x27;,&#x27;AAC&#x27;], &#x27;Pro&#x27;:[&#x27;CCG&#x27;,&#x27;CCA&#x27;,&#x27;CCT&#x27;,&#x27;CCC&#x27;], &#x27;Gln&#x27;:[&#x27;CAG&#x27;,&#x27;CAA&#x27;], &#x27;Arg&#x27;:[&#x27;AGG&#x27;,&#x27;AGA&#x27;,&#x27;CGG&#x27;,&#x27;CGA&#x27;,&#x27;CGA&#x27;,&#x27;CGT&#x27;,&#x27;CGC&#x27;], &#x27;Ser&#x27;:[&#x27;AGT&#x27;,&#x27;AGC&#x27;,&#x27;TCG&#x27;,&#x27;TCA&#x27;,&#x27;TCT&#x27;,&#x27;TCC&#x27;], &#x27;Thr&#x27;:[&#x27;ACG&#x27;,&#x27;ACA&#x27;,&#x27;ACT&#x27;,&#x27;ACC&#x27;], &#x27;Val&#x27;:[&#x27;GTG&#x27;,&#x27;GTA&#x27;,&#x27;GTT&#x27;,&#x27;GTC&#x27;], &#x27;Trp&#x27;:[&#x27;TGG&#x27;], &#x27;Tyr&#x27;:[&#x27;TAT&#x27;,&#x27;TAC&#x27;], &#x27;*&#x27;:[&#x27;TGA&#x27;,&#x27;TAG&#x27;,&#x27;TAA&#x27;]&#125;# 读入fasta序列（代替SeqIO.parse）def fasta_generator(file_path): with open(file_path, &#x27;r&#x27;) as file: first_line = file.readline().strip() if not first_line.startswith(&#x27;&gt;&#x27;): # 给一个fasta格式判断 raise ValueError(&#x27;Invalid file format&#x27;) sequence_id = first_line[1:] # 储存当前序列名称 sequence = &#x27;&#x27; # 储存当前序列内容 for line in file: line = line.strip() if line.startswith(&#x27;&gt;&#x27;): # &gt;开头为序列名称行 if sequence_id: # 如果已存在序列名称，返回上一个序列名称和内容 yield &#123;&#x27;id&#x27;: sequence_id, &#x27;seq&#x27;: sequence&#125; sequence_id = line[1:] sequence = &#x27;&#x27; else: # 否则，行为序列内容 sequence += line if sequence_id: # 处理完最后一个序列，返回最后一个序列名称和内容 yield &#123;&#x27;id&#x27;: sequence_id, &#x27;seq&#x27;: sequence&#125;class MY_GUI(): # 初始化函数，定义实例的属性 def __init__(self,init_window_name): self.init_window_name = init_window_name self.image_file = None # PhotoImage没有引用会自动销毁，这里需要显示引用 # 定义一个类方法，设置窗口 def set_init_window(self): self.init_window_name.title(&quot;密码子统计工具_v1.0&quot;) self.init_window_name.geometry(&#x27;1048x680+400+150&#x27;) # 1068x681窗口大小，+横坐标 +纵坐标 定义窗口弹出时的默认展示位置 self.init_window_name.attributes(&quot;-alpha&quot;,1) # 虚化，值越小虚化程度越高 self.init_window_name.iconbitmap(&#x27;pic/bitbug_favicon.ico&#x27;) # 可以换自己的ico图标 self.init_window_name.resizable(0,0) # 禁止改变窗口大小 # 画布（可以不要，或者换自己的gif图片） canvas = Canvas(self.init_window_name, width=1024, height=680, bg=None) self.image_file = PhotoImage(file=&quot;pic/bg.gif&quot;) self.resized_image = self.image_file.zoom(2, 2) canvas.create_image(520, 35, anchor=&#x27;n&#x27;, image=self.resized_image) canvas.grid(row=0,rowspan = 20,column=0,columnspan=23) # frame(暂时不用了) #self.frame = Frame(self.init_window_name, borderwidth=1, height=2, relief=&#x27;groove&#x27;,bd=1) #self.frame.grid(row=21,column=0, columnspan=24) # 标签 self.init_data_label = Label(self.init_window_name, text=&quot;导入序列&quot;) self.init_data_label.grid(row=0, column=0) self.result_data_label = Label(self.init_window_name, text=&quot;Number(Frequency)&quot;) self.result_data_label.grid(row=0, column=12) self.result_out_label = Label(self.init_window_name, text=&quot;Codon Usage results&quot;) self.result_out_label.grid(row=6,column=13) self.log_label = Label(self.init_window_name, text=&quot;运行日志&quot;) self.log_label.grid(row=11, column=0) # 文本框 self.init_data_Text = ScrolledText(self.init_window_name, width=60, height=35) # 原始数据录入框 self.init_data_Text.grid(row=1, column=0, rowspan=10, columnspan=10, padx=20,pady=5) self.init_data_Text.bind(&#x27;&lt;KeyPress&gt;&#x27;, lambda f: &#x27;break&#x27;) # 绑定事件禁止键入 self.log_data_Text = ScrolledText(self.init_window_name, width=60, height=9,) # 日志框 self.log_data_Text.grid(row=12, column=0, rowspan=5, columnspan=10,padx=20,pady=5) self.log_data_Text.bind(&#x27;&lt;KeyPress&gt;&#x27;, lambda f: &#x27;break&#x27;) self.result_data_Text = ScrolledText(self.init_window_name, width=60, height=20, wrap=&#x27;none&#x27;) # 频数频率展示 self.result_data_Text.grid(row=1, column=12, rowspan=5, columnspan=10, padx=10,pady=5) self.result_data_Text.bind(&#x27;&lt;KeyPress&gt;&#x27;, lambda f: &#x27;break&#x27;) self.result_fre_Text = ScrolledText(self.init_window_name, width=40, height=20) # 结果展示 self.result_fre_Text.grid(row=7, column=12, rowspan=10, columnspan=10,padx=10,pady=5) self.result_fre_Text.bind(&#x27;&lt;KeyPress&gt;&#x27;, lambda f: &#x27;break&#x27;) # 按钮 self.load_file_button = Button(self.init_window_name, text = &quot;导入fasta文件&quot;,borderwidth=2,relief=RAISED, command=self.select_file) # 绑定内部命令 self.load_file_button.grid(row=2, column=11) self.codon_count_button = Button(self.init_window_name, text=&quot;开始统计&quot;,borderwidth=2,relief=RAISED,command=self.codon_count) self.codon_count_button.grid(row=3, column=11) self.export_count_button = Button(self.init_window_name, text=&quot;导出表格&quot;,borderwidth=2,relief=RAISED,command=self.export_count) self.export_count_button.grid(row=4, column=11) self.export_fre_button = Button(self.init_window_name, text=&quot;导出结果&quot;, borderwidth=2,relief=RAISED,command=self.export_fre) self.export_fre_button.grid(row=5,column=11) self.clean_button = Button(self.init_window_name, text=&#x27;清空窗口&#x27;, borderwidth=2,relief=RAISED,command=self.window_clean) self.clean_button.grid(row=6,column=11) # 滚轮与绑定（ScrolledText只带有垂直滚动条） self.scrollbar_x = Scrollbar(self.init_window_name, orient=HORIZONTAL) # 创建滚动条部件 self.result_data_Text.config(xscrollcommand=self.scrollbar_x.set) # 文本框-控制-滚动条 self.scrollbar_x.config(command=self.result_data_Text.xview) # 滚动条-控制-文本框 self.scrollbar_x.grid(row=5, column=12, rowspan=1,columnspan=10, sticky=&quot;ESW&quot;,padx=10) # 设置滚动条位置 # 导入序列功能函数 def select_file(self): global file_name file_name = filedialog.askopenfilename(title=&quot;选择文件&quot;) if file_name != &#x27;&#x27;: try: records = fasta_generator(file_name) number = 0 for i in records: name = i[&#x27;id&#x27;] seq = i[&#x27;seq&#x27;] if len(seq)&gt;48: seq = seq[:45] + &#x27;...&#x27; + seq[-3:] self.init_data_Text.insert(END,f&quot;Name:&#123;name&#125;\\nSeq:&#x27;&#123;seq&#125;&#x27;\\n&quot;) number += 1 self.write_log_to_Text(f&quot;INFO:fasta文件导入成功！共加载&#123;number&#125;条序列。&quot;) except: messagebox.showerror(&quot;ERROR&quot;, &quot;载入失败，请检查文件是否为fasta格式！&quot;) self.write_log_to_Text(&quot;ERROR:载入失败，请检查文件格式。&quot;) # 分析统计功能函数 def codon_count(self): if file_name != &#x27;&#x27;: records = fasta_generator(file_name) CodonsDict = OrderedDict([(&#x27;GCG&#x27;, 0), (&#x27;GCA&#x27;, 0), (&#x27;GCT&#x27;, 0), (&#x27;GCC&#x27;, 0), (&#x27;TGT&#x27;, 0), (&#x27;TGC&#x27;, 0), (&#x27;GAT&#x27;, 0), (&#x27;GAC&#x27;, 0), (&#x27;GAG&#x27;, 0), (&#x27;GAA&#x27;, 0), (&#x27;TTT&#x27;, 0), (&#x27;TTC&#x27;, 0), (&#x27;GGG&#x27;, 0), (&#x27;GGA&#x27;, 0), (&#x27;GGT&#x27;, 0), (&#x27;GGC&#x27;, 0), (&#x27;CAT&#x27;, 0), (&#x27;CAC&#x27;, 0), (&#x27;ATA&#x27;, 0), (&#x27;ATT&#x27;, 0), (&#x27;ATC&#x27;, 0), (&#x27;AAG&#x27;, 0), (&#x27;AAA&#x27;, 0), (&#x27;TTG&#x27;, 0), (&#x27;TTA&#x27;, 0), (&#x27;CTG&#x27;, 0), (&#x27;CTA&#x27;, 0), (&#x27;CTT&#x27;, 0), (&#x27;CTC&#x27;, 0), (&#x27;ATG&#x27;, 0), (&#x27;AAT&#x27;, 0), (&#x27;AAC&#x27;, 0), (&#x27;CCG&#x27;, 0), (&#x27;CCA&#x27;, 0), (&#x27;CCT&#x27;, 0), (&#x27;CCC&#x27;, 0), (&#x27;CAG&#x27;, 0), (&#x27;CAA&#x27;, 0), (&#x27;AGG&#x27;, 0), (&#x27;AGA&#x27;, 0), (&#x27;CGG&#x27;, 0), (&#x27;CGA&#x27;, 0), (&#x27;CGT&#x27;, 0), (&#x27;CGC&#x27;, 0), (&#x27;AGT&#x27;, 0), (&#x27;AGC&#x27;, 0), (&#x27;TCG&#x27;, 0), (&#x27;TCA&#x27;, 0), (&#x27;TCT&#x27;, 0), (&#x27;TCC&#x27;, 0), (&#x27;ACG&#x27;, 0), (&#x27;ACA&#x27;, 0), (&#x27;ACT&#x27;, 0), (&#x27;ACC&#x27;, 0), (&#x27;GTG&#x27;, 0), (&#x27;GTA&#x27;, 0), (&#x27;GTT&#x27;, 0), (&#x27;GTC&#x27;, 0), (&#x27;TGG&#x27;, 0), (&#x27;TAT&#x27;, 0), (&#x27;TAC&#x27;, 0), (&#x27;TGA&#x27;, 0), (&#x27;TAG&#x27;, 0), (&#x27;TAA&#x27;, 0)]) # 输出表头 self.result_data_Text.insert(END, f&quot;&#123;&#x27;Name&#x27;:&lt;15&#125;&quot;) for key in CodonsDict: if key != &#x27;TAA&#x27;: self.result_data_Text.insert(END, f&#x27;&#123;key:&lt;12&#125;&#x27;) else: self.result_data_Text.insert(END,f&#x27;&#123;key:&lt;12&#125;\\n&#x27;) for i in records: # 每条序列判断ATG开头，是否有屏蔽序列,长度是否为3的倍数 if i[&#x27;seq&#x27;].startswith(&#x27;ATG&#x27;) and &#x27;N&#x27; not in i[&#x27;seq&#x27;] and len(i[&#x27;seq&#x27;]) % 3 ==0: for j in range(0, len(str(i[&#x27;seq&#x27;])), 3): codon = str(i[&#x27;seq&#x27;])[j:j+3] if codon in CodonsDict.keys(): CodonsDict[codon] +=1 else: self.write_log_to_Text(&quot;WARNING:序列%s存在未识别的密码子，跳过。&quot; % (i[&#x27;id&#x27;])) break total = sum([CodonsDict[key] for key in CodonsDict.keys()]) name = i[&#x27;id&#x27;] self.result_data_Text.insert(END, f&#x27;&#123;name:&lt;15&#125;&#x27;) # 这里的f-string格式化输出f&#x27;&#123;i[&#x27;id&#x27;]:&lt;15&#125;&#x27;会报错，所以用了个变量name代替 self.result_fre_Text.insert(END,&#x27;Results for %d residue sequence &quot;%s&quot;:\\n\\nAA\\tCodon\\tNumber\\tFrequency\\n\\n&#x27; % (total, i[&#x27;id&#x27;])) for key in CodonsDict.keys(): # 计算每个密码子使用频率（标准密码子表） frequency = &quot;%.2f&quot; % (CodonsDict[key]*3000/total) content = str(CodonsDict[key]) + &#x27;(%s)&#x27; % (frequency) self.result_data_Text.insert(END,f&#x27;&#123;content:&lt;12&#125;&#x27;) if key in codon_table[&#x27;Ala&#x27;]: self.result_fre_Text.insert(END,&#x27;Ala\\t%s\\t%d\\t%s\\n&#x27; % (key, CodonsDict[key], frequency)) elif key in codon_table[&#x27;Cys&#x27;]: self.result_fre_Text.insert(END,&#x27;Cys\\t%s\\t%d\\t%s\\n&#x27; % (key, CodonsDict[key], frequency)) elif key in codon_table[&#x27;Asp&#x27;]: self.result_fre_Text.insert(END,&#x27;Asp\\t%s\\t%d\\t%s\\n&#x27; % (key, CodonsDict[key], frequency)) elif key in codon_table[&#x27;Glu&#x27;]: self.result_fre_Text.insert(END,&#x27;Glu\\t%s\\t%d\\t%s\\n&#x27; % (key, CodonsDict[key], frequency)) elif key in codon_table[&#x27;Phe&#x27;]: self.result_fre_Text.insert(END,&#x27;Phe\\t%s\\t%d\\t%s\\n&#x27; % (key, CodonsDict[key], frequency)) elif key in codon_table[&#x27;Gly&#x27;]: self.result_fre_Text.insert(END,&#x27;Gly\\t%s\\t%d\\t%s\\n&#x27; % (key, CodonsDict[key], frequency)) elif key in codon_table[&#x27;His&#x27;]: self.result_fre_Text.insert(END,&#x27;His\\t%s\\t%d\\t%s\\n&#x27; % (key, CodonsDict[key], frequency)) elif key in codon_table[&#x27;Ile&#x27;]: self.result_fre_Text.insert(END,&#x27;Ile\\t%s\\t%d\\t%s\\n&#x27; % (key, CodonsDict[key], frequency)) elif key in codon_table[&#x27;Lys&#x27;]: self.result_fre_Text.insert(END,&#x27;Lys\\t%s\\t%d\\t%s\\n&#x27; % (key, CodonsDict[key], frequency)) elif key in codon_table[&#x27;Leu&#x27;]: self.result_fre_Text.insert(END,&#x27;Leu\\t%s\\t%d\\t%s\\n&#x27; % (key, CodonsDict[key], frequency)) elif key in codon_table[&#x27;Met&#x27;]: self.result_fre_Text.insert(END,&#x27;Met\\t%s\\t%d\\t%s\\n&#x27; % (key, CodonsDict[key], frequency)) elif key in codon_table[&#x27;Asn&#x27;]: self.result_fre_Text.insert(END,&#x27;Asn\\t%s\\t%d\\t%s\\n&#x27; % (key, CodonsDict[key], frequency)) elif key in codon_table[&#x27;Pro&#x27;]: self.result_fre_Text.insert(END,&#x27;Pro\\t%s\\t%d\\t%s\\n&#x27; % (key, CodonsDict[key], frequency)) elif key in codon_table[&#x27;Gln&#x27;]: self.result_fre_Text.insert(END,&#x27;Gln\\t%s\\t%d\\t%s\\n&#x27; % (key, CodonsDict[key], frequency)) elif key in codon_table[&#x27;Arg&#x27;]: self.result_fre_Text.insert(END,&#x27;Arg\\t%s\\t%d\\t%s\\n&#x27; % (key, CodonsDict[key], frequency)) elif key in codon_table[&#x27;Ser&#x27;]: self.result_fre_Text.insert(END,&#x27;Ser\\t%s\\t%d\\t%s\\n&#x27; % (key, CodonsDict[key], frequency)) elif key in codon_table[&#x27;Thr&#x27;]: self.result_fre_Text.insert(END,&#x27;Thr\\t%s\\t%d\\t%s\\n&#x27; % (key, CodonsDict[key], frequency)) elif key in codon_table[&#x27;Val&#x27;]: self.result_fre_Text.insert(END,&#x27;Val\\t%s\\t%d\\t%s\\n&#x27; % (key, CodonsDict[key], frequency)) elif key in codon_table[&#x27;Trp&#x27;]: self.result_fre_Text.insert(END,&#x27;Trp\\t%s\\t%d\\t%s\\n&#x27; % (key, CodonsDict[key], frequency)) elif key in codon_table[&#x27;Tyr&#x27;]: self.result_fre_Text.insert(END,&#x27;Tyr\\t%s\\t%d\\t%s\\n&#x27; % (key, CodonsDict[key], frequency)) elif key in codon_table[&#x27;*&#x27;]: self.result_fre_Text.insert(END,&#x27;*\\t%s\\t%d\\t%s\\n&#x27; % (key, CodonsDict[key], frequency)) self.result_fre_Text.insert(END,&#x27;\\n----------------------------------------\\n&#x27; ) self.result_data_Text.insert(END,&#x27;\\n&#x27;) else: self.write_log_to_Text(&quot;WARNING:序列%s非ATG开头/存在屏蔽序列/非3的倍数，该序列将不会出现在统计结果中。&quot; % (i[&#x27;id&#x27;])) self.write_log_to_Text(&quot;INFO:统计结束!&quot;) else: self.write_log_to_Text(&quot;ERROR:请先载入fasta文件！&quot;) # 导出频数频率统计表 def export_count(self): content = self.result_data_Text.get(&#x27;1.0&#x27;, END) if &#x27;Name&#x27; not in content: self.write_log_to_Text(&quot;ERROR:请先点击“载入fasta文件”并点击“开始统计”按钮！&quot;) else: try: count_file = filedialog.asksaveasfilename() count_file = count_file + &#x27;.csv&#x27; with open(count_file, &#x27;w&#x27;) as count: content = re.sub(r&quot;[^\\S\\r\\n]+&quot;,&#x27;,&#x27;,content) # 正则匹配换行符之外的所有空格 count.write(content) self.write_log_to_Text(&quot;INFO:密码子频数频率统计表保存成功!文件路径：%s&quot; % (count_file)) except: self.write_log_to_Text(&quot;ERROR:ERROR:导出失败，请检查是否有同名文件未关闭！&quot;) # 导出结果文件 def export_fre(self): content = self.result_fre_Text.get(&#x27;1.0&#x27;, END) if &#x27;Results&#x27; not in content: self.write_log_to_Text(&quot;ERROR:请先点击“载入fasta文件”并点击“开始统计”按钮！&quot;) else: try: result_file = filedialog.asksaveasfilename() result_file = result_file + &#x27;.txt&#x27; with open(result_file, &#x27;w&#x27;) as out: out.write(content) self.write_log_to_Text(&quot;INFO:结果文件保存成功!保存路径：%s&quot; % (result_file)) except: self.write_log_to_Text(&quot;ERROR:导出失败，请检查是否有同名文件未关闭！&quot;) # 清空所有文本框 def window_clean(self): self.init_data_Text.delete(1.0, END) self.log_data_Text.delete(1.0, END) self.result_data_Text.delete(1.0, END) self.result_fre_Text.delete(1.0, END) # 日志打印 def write_log_to_Text(self,logmsg): current_time = time.strftime(&#x27;%Y-%m-%d %H:%M:%S&#x27;,time.localtime(time.time())) logmsg_in = str(current_time) +&quot; &quot; + str(logmsg) + &quot;\\n&quot; self.log_data_Text.insert(END, logmsg_in)def gui_start(): init_window = Tk() GUI = MY_GUI(init_window) GUI.set_init_window() init_window.mainloop()gui_start() 第一次用tkinter这个工具，代码看起来也有点乱……就当作自己的尝试 &#x3D; &#x3D;，各个部件写了注释方便以后自己参考。 运行时可以生成如下gui界面： 界面比较简单，点击“导入fasta文件”，左边的文本框可以看到序列大致信息，点击“开始统计”后右边两个文本框可以输出两种格式的结果，后面两个按钮分别自定义导出两种结果，“清空窗口”就是清除文本框的所有数据。 整体逻辑是识别导入的序列是否是ATG开头，是否含有屏蔽序列，长度是否能被3整除，以上条件都满足才会计入右边的统计结果，否则跳过该序列，跳过的信息会在运行日志框中显示。如果用的不是标准密码子表，可以自行更改codon_table变量。 除开代码中间一大堆判断密码子编码哪个氨基酸（我是真的没想到还能用什么方法判断21种不同的编码氨基酸），其他地方都尽量写地简洁了一些。原先打算直接用Bio库SeqIO.parse的方法载入序列，确实很方便，但是不利于程序的最后打包……Bio库的一个依赖库是numpy，用过python的小伙伴都知道numpy也是一个重量级科学计算库，但是用pyinstaller将程序打包成可执行文件的时候，numpy有一个重量级的openblas依赖，可以看看有多“重量级”： 一个依赖占了37Mb的空间……况且我用Bio库只是为了导入和识别fasta序列，所以这里搓了个fasta_generator()方法函数来代替SeqIO.parse，调用方法函数后都是生成一个生成器对象，逐行读取fasta文件，id储存序列名称，seq储存序列内容。这样就不用调用Bio库，可以看到这里调用的都是python的内置库，可以有效减少打包后的体量。 说到打包，为什么要打包？因为写的python程序要运行起来还有个前提，就是别人的电脑里也装了python，并且要在命令行中运行python解释器，这不是我的最终目的，因此接下来是把py文件“转“成能在windows系统中运行的可执行文件，这里用典型的python打包库pyinstaller。因为pyinstaller不是自带的python库，所以需要单独安装。 1234# 在windows命令行的对应文件路径下（我是windows环境下开发的）pip install pyinstallerpyinstaller -w -D -n Codon -i bitbug_favicon.ico codon.py pyinstaller参数： -w 指定程序运行时不显示命令行窗口（美观起见，发给别人用就加这个参数） -D 产生一个目录作为可执行程序（如果想都打包进一个可执行文件的话，用参数-F，运行起来会很慢！） -n 指定项目名称 -i 指定可执行文件图标，ico格式 –hidden-impor 如果有隐藏导入项（非标准库）的时候需要手动加入 pyinstaller安装后可以直接使用，如果提示该命令不是系统命令的话，需要把对应的exe文件路径写到环境变量中。 打包后会在当前目录生成spec后缀的打包配置文件，名为build的中间文件，还有dist——最终生成的可执行文件所在目录。我们打包的可执行程序就在dist中。 这里打包以后还要注意，py脚本中导入的图片不会被打包，找到exe文件，根据脚本中写的导入图片的相对路径，创建文件夹pic并且把图片一起丢进去。还可以顺便把自己的测试文件也创个test文件夹丢进去。 最终整个文件夹打包后的大小为25.6Mb……怎么说呢，python写的代码转成exe文件体量就是会很大，相比之下原来的一个依赖就要37Mb，已经好很多了…… 既然都做到这一步了，顺便就把整个文件夹再打包打包做个windows安装包（虽然也可以直接打包成压缩包，但是少了点仪式感），麻雀虽小五脏俱全，体验下流程~ 制作windows安装包要用到两个软件： NSIS——开源的Windows系统安装程序制作工具，相当于一门脚本语言，描述安装程序的行为和逻辑 HM NIS Edit——NSIS编辑器，以向导的方式自动生成NSIS脚本，再通过NSIS编译成windows安装包 这两个软件就像咱学生信用到的R和Rstudio，没啥好说的，在后者创建一个脚本向导，只要点点选择按钮就可以定制自己程序的安装和卸载过程以及逻辑了，不需要专门去学这个脚本语言，非常方便。 下载和使用过程CSDN上有详细的每一步流程，放个链接，不重复造轮子。Windows下使用Pyinstaller做成客户端安装包_ 瞧这安装界面，是不是有那味儿了~ 软件安装包顺便在这里也备份一个，可以直接在windows系统中安装使用，以后有空再做界面的美化和其他新功能。点击这里获取安装包 2023&#x2F;09&#x2F;04 更新我真的是脑子抽了用了二十几个判断……既然写了标准密码子表，只要判断是不是在condon_table中并且输出key值就可以了，后面输出格式都是一样的……顺便优化了一下代码，有序字典也不用了。 果然代码还是要多练，越看越不对劲，以后尽量避免“面向结果编程”的错误 &#x3D; &#x3D; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222from tkinter import *from tkinter import filedialog, messageboxfrom tkinter.scrolledtext import ScrolledTextimport timeimport refile_name = &#x27;&#x27;codon_table = &#123; &#x27;Ala&#x27;:[&#x27;GCG&#x27;,&#x27;GCA&#x27;,&#x27;GCT&#x27;,&#x27;GCC&#x27;], &#x27;Cys&#x27;:[&#x27;TGT&#x27;,&#x27;TGC&#x27;], &#x27;Asp&#x27;:[&#x27;GAT&#x27;,&#x27;GAC&#x27;], &#x27;Glu&#x27;:[&#x27;GAG&#x27; ,&#x27;GAA&#x27;], &#x27;Phe&#x27;:[&#x27;TTT&#x27; ,&#x27;TTC&#x27;], &#x27;Gly&#x27;:[&#x27;GGG&#x27;,&#x27;GGA&#x27;,&#x27;GGT&#x27;,&#x27;GGC&#x27;], &#x27;His&#x27;:[&#x27;CAT&#x27;,&#x27;CAC&#x27;], &#x27;Ile&#x27;:[&#x27;ATA&#x27;,&#x27;ATT&#x27;,&#x27;ATC&#x27;], &#x27;Lys&#x27;:[&#x27;AAG&#x27;,&#x27;AAA&#x27;], &#x27;Leu&#x27;:[&#x27;TTG&#x27;,&#x27;TTA&#x27;,&#x27;CTG&#x27;,&#x27;CTA&#x27;,&#x27;CTT&#x27;,&#x27;CTC&#x27;], &#x27;Met&#x27;:[&#x27;ATG&#x27;], &#x27;Asn&#x27;:[&#x27;AAT&#x27;,&#x27;AAC&#x27;], &#x27;Pro&#x27;:[&#x27;CCG&#x27;,&#x27;CCA&#x27;,&#x27;CCT&#x27;,&#x27;CCC&#x27;], &#x27;Gln&#x27;:[&#x27;CAG&#x27;,&#x27;CAA&#x27;], &#x27;Arg&#x27;:[&#x27;AGG&#x27;,&#x27;AGA&#x27;,&#x27;CGG&#x27;,&#x27;CGA&#x27;,&#x27;CGA&#x27;,&#x27;CGT&#x27;,&#x27;CGC&#x27;], &#x27;Ser&#x27;:[&#x27;AGT&#x27;,&#x27;AGC&#x27;,&#x27;TCG&#x27;,&#x27;TCA&#x27;,&#x27;TCT&#x27;,&#x27;TCC&#x27;], &#x27;Thr&#x27;:[&#x27;ACG&#x27;,&#x27;ACA&#x27;,&#x27;ACT&#x27;,&#x27;ACC&#x27;], &#x27;Val&#x27;:[&#x27;GTG&#x27;,&#x27;GTA&#x27;,&#x27;GTT&#x27;,&#x27;GTC&#x27;], &#x27;Trp&#x27;:[&#x27;TGG&#x27;], &#x27;Tyr&#x27;:[&#x27;TAT&#x27;,&#x27;TAC&#x27;], &#x27;*&#x27;:[&#x27;TGA&#x27;,&#x27;TAG&#x27;,&#x27;TAA&#x27;]&#125;# 读入fasta序列（代替SeqIO.parse）def fasta_generator(file_path): with open(file_path, &#x27;r&#x27;) as file: first_line = file.readline().strip() if not first_line.startswith(&#x27;&gt;&#x27;): # 给一个fasta格式判断 raise ValueError(&#x27;Invalid file format&#x27;) sequence_id = first_line[1:] # 储存当前序列名称 sequence = &#x27;&#x27; # 储存当前序列内容 for line in file: line = line.strip() if line.startswith(&#x27;&gt;&#x27;): # &gt;开头为序列名称行 if sequence_id: # 如果已存在序列名称，返回上一个序列名称和内容 yield &#123;&#x27;id&#x27;: sequence_id, &#x27;seq&#x27;: sequence&#125; sequence_id = line[1:] sequence = &#x27;&#x27; else: # 否则，行为序列内容 sequence += line if sequence_id: # 处理完最后一个序列，返回最后一个序列名称和内容 yield &#123;&#x27;id&#x27;: sequence_id, &#x27;seq&#x27;: sequence&#125;class MY_GUI(): # 初始化函数，定义实例的属性 def __init__(self,init_window_name): self.init_window_name = init_window_name self.image_file = None # PhotoImage没有引用会自动销毁，这里需要显示引用 # 定义一个类方法，设置窗口 def set_init_window(self): self.init_window_name.title(&quot;密码子统计工具_v1.0&quot;) self.init_window_name.geometry(&#x27;1048x680+400+150&#x27;) # 1068x681窗口大小，+横坐标 +纵坐标 定义窗口弹出时的默认展示位置 self.init_window_name.attributes(&quot;-alpha&quot;,1) # 虚化，值越小虚化程度越高 self.init_window_name.iconbitmap(&#x27;d:/zhuomian/python/myscript/codon/codon源码/bitbug_favicon.ico&#x27;) self.init_window_name.resizable(0,0) # 禁止改变窗口大小 canvas = Canvas(self.init_window_name, width=1024, height=680, bg=None) self.image_file = PhotoImage(file=&quot;d:/zhuomian/python/myscript/codon/codon源码/bg.gif&quot;) self.resized_image = self.image_file.zoom(2, 2) canvas.create_image(520, 35, anchor=&#x27;n&#x27;, image=self.resized_image) canvas.grid(row=0,rowspan = 20,column=0,columnspan=23) # 标签 self.init_data_label = Label(self.init_window_name, text=&quot;导入序列&quot;) self.init_data_label.grid(row=0, column=0) self.result_data_label = Label(self.init_window_name, text=&quot;Number(Frequency)&quot;) self.result_data_label.grid(row=0, column=12) self.result_out_label = Label(self.init_window_name, text=&quot;Codon Usage results&quot;) self.result_out_label.grid(row=6,column=13) self.log_label = Label(self.init_window_name, text=&quot;运行日志&quot;) self.log_label.grid(row=11, column=0) # 文本框 self.init_data_Text = ScrolledText(self.init_window_name, width=60, height=35) # 原始数据录入框 self.init_data_Text.grid(row=1, column=0, rowspan=10, columnspan=10, padx=20,pady=5) self.init_data_Text.bind(&#x27;&lt;KeyPress&gt;&#x27;, lambda f: &#x27;break&#x27;) # 绑定事件禁止键入 self.log_data_Text = ScrolledText(self.init_window_name, width=60, height=9,) # 日志框 self.log_data_Text.grid(row=12, column=0, rowspan=5, columnspan=10,padx=20,pady=5) self.log_data_Text.bind(&#x27;&lt;KeyPress&gt;&#x27;, lambda f: &#x27;break&#x27;) self.result_data_Text = ScrolledText(self.init_window_name, width=60, height=20, wrap=&#x27;none&#x27;) # 频数频率展示 self.result_data_Text.grid(row=1, column=12, rowspan=5, columnspan=10, padx=10,pady=5) self.result_data_Text.bind(&#x27;&lt;KeyPress&gt;&#x27;, lambda f: &#x27;break&#x27;) self.result_fre_Text = ScrolledText(self.init_window_name, width=40, height=20) # 结果展示 self.result_fre_Text.grid(row=7, column=12, rowspan=10, columnspan=10,padx=10,pady=5) self.result_fre_Text.bind(&#x27;&lt;KeyPress&gt;&#x27;, lambda f: &#x27;break&#x27;) # 按钮 self.load_file_button = Button(self.init_window_name, text = &quot;导入fasta文件&quot;,borderwidth=2,relief=RAISED, command=self.select_file) # 绑定内部命令 self.load_file_button.grid(row=2, column=11) self.codon_count_button = Button(self.init_window_name, text=&quot;开始统计&quot;,borderwidth=2,relief=RAISED,command=self.codon_count) self.codon_count_button.grid(row=3, column=11) self.export_count_button = Button(self.init_window_name, text=&quot;导出表格&quot;,borderwidth=2,relief=RAISED,command=self.export_count) self.export_count_button.grid(row=4, column=11) self.export_fre_button = Button(self.init_window_name, text=&quot;导出结果&quot;, borderwidth=2,relief=RAISED,command=self.export_fre) self.export_fre_button.grid(row=5,column=11) self.clean_button = Button(self.init_window_name, text=&#x27;清空窗口&#x27;, borderwidth=2,relief=RAISED,command=self.window_clean) self.clean_button.grid(row=6,column=11) # 滚轮与绑定（ScrolledText只带有垂直滚动条） self.scrollbar_x = Scrollbar(self.init_window_name, orient=HORIZONTAL) # 创建滚动条部件 self.result_data_Text.config(xscrollcommand=self.scrollbar_x.set) # 文本框-控制-滚动条 self.scrollbar_x.config(command=self.result_data_Text.xview) # 滚动条-控制-文本框 self.scrollbar_x.grid(row=5, column=12, rowspan=1,columnspan=10, sticky=&quot;ESW&quot;,padx=10) # 设置滚动条位置 # 导入序列功能函数 def select_file(self): global file_name file_name = filedialog.askopenfilename(title=&quot;选择文件&quot;) if file_name != &#x27;&#x27;: try: records = fasta_generator(file_name) number = 0 # 计数，导入多少序列 for i in records: name = i[&#x27;id&#x27;] seq = i[&#x27;seq&#x27;] if len(seq)&gt;48: seq = seq[:45] + &#x27;...&#x27; + seq[-3:] self.init_data_Text.insert(END,f&quot;Name:&#123;name&#125;\\nSeq:&#x27;&#123;seq&#125;&#x27;\\n&quot;) number += 1 self.write_log_to_Text(f&quot;INFO:fasta文件导入成功！共加载&#123;number&#125;条序列。&quot;) except: messagebox.showerror(&quot;ERROR&quot;, &quot;载入失败，请检查文件是否为fasta格式！&quot;) self.write_log_to_Text(&quot;ERROR:载入失败，请检查文件格式。&quot;) # 分析统计功能函数 def codon_count(self): if file_name != &#x27;&#x27;: records = fasta_generator(file_name) CodonsDict = &#123;codon: 0 for codon_list in codon_table.values() for codon in codon_list&#125; # 新的字典，统计密码子数量用 # 输出表头 self.result_data_Text.insert(END, f&quot;&#123;&#x27;Name&#x27;:&lt;15&#125;&quot;) for key in CodonsDict: self.result_data_Text.insert(END, f&#x27;&#123;key:&lt;12&#125;&#x27;) self.result_data_Text.insert(END,&#x27;\\n&#x27;) for i in records: # 每条序列判断ATG开头，是否有屏蔽序列,长度是否为3的倍数 if i[&#x27;seq&#x27;].startswith(&#x27;ATG&#x27;) and &#x27;N&#x27; not in i[&#x27;seq&#x27;] and len(i[&#x27;seq&#x27;]) % 3 ==0: for j in range(0, len(str(i[&#x27;seq&#x27;])), 3): codon = str(i[&#x27;seq&#x27;])[j:j+3] if codon in CodonsDict.keys(): CodonsDict[codon] +=1 else: self.write_log_to_Text(&quot;WARNING:序列%s存在未识别的密码子，跳过。&quot; % (i[&#x27;id&#x27;])) break total = sum([CodonsDict[key] for key in CodonsDict.keys()]) name = i[&#x27;id&#x27;] self.result_data_Text.insert(END, f&#x27;&#123;name:&lt;15&#125;&#x27;) # 这里的f-string格式化输出f&#x27;&#123;i[&#x27;id&#x27;]:&lt;15&#125;&#x27;会报错，所以用了个变量name代替 self.result_fre_Text.insert(END,&#x27;Results for %d residue sequence &quot;%s&quot;:\\n\\nAA\\tCodon\\tNumber\\tFrequency\\n\\n&#x27; % (total, name)) # 计算频率 for key, value in CodonsDict.items(): frequency = &#x27;%.2f&#x27; % (value * 3000 / total) content = &#x27;%d(%s)&#x27; % (value, frequency) self.result_data_Text.insert(END,f&#x27;&#123;content:&lt;12&#125;&#x27;) # 结果文本框内的输出 for key_, value_ in codon_table.items(): if key in value_: AA = key_ self.result_fre_Text.insert(END, &#x27;%s\\t%s\\t%d\\t%s\\n&#x27; % (AA, key, value, frequency)) self.result_fre_Text.insert(END,&#x27;\\n----------------------------------------\\n&#x27; ) self.result_data_Text.insert(END,&#x27;\\n&#x27;) else: self.write_log_to_Text(&quot;WARNING:序列%s非ATG开头/存在屏蔽序列/非3的倍数，该序列将不会出现在统计结果中。&quot; % (i[&#x27;id&#x27;])) self.write_log_to_Text(&quot;INFO:统计结束!&quot;) else: self.write_log_to_Text(&quot;ERROR:请先载入fasta文件！&quot;) # 导出频数频率统计表 def export_count(self): content = self.result_data_Text.get(&#x27;1.0&#x27;, END) if &#x27;Name&#x27; not in content: self.write_log_to_Text(&quot;ERROR:请先点击“载入fasta文件”并点击“开始统计”按钮！&quot;) else: try: count_file = filedialog.asksaveasfilename() count_file = count_file + &#x27;.csv&#x27; with open(count_file, &#x27;w&#x27;) as count: content = re.sub(r&quot;[^\\S\\r\\n]+&quot;,&#x27;,&#x27;,content) # 正则匹配换行符之外的所有空格，处理成csv格式的输出 count.write(content) self.write_log_to_Text(&quot;INFO:密码子频数频率统计表保存成功!文件路径：%s&quot; % (count_file)) except: self.write_log_to_Text(&quot;ERROR:ERROR:导出失败，请检查是否有同名文件未关闭！&quot;) # 导出结果文件 def export_fre(self): content = self.result_fre_Text.get(&#x27;1.0&#x27;, END) if &#x27;Results&#x27; not in content: self.write_log_to_Text(&quot;ERROR:请先点击“载入fasta文件”并点击“开始统计”按钮！&quot;) else: try: result_file = filedialog.asksaveasfilename() result_file = result_file + &#x27;.txt&#x27; with open(result_file, &#x27;w&#x27;) as out: out.write(content) self.write_log_to_Text(&quot;INFO:结果文件保存成功!保存路径：%s&quot; % (result_file)) except: self.write_log_to_Text(&quot;ERROR:导出失败，请检查是否有同名文件未关闭！&quot;) # 清空所有文本框 def window_clean(self): self.init_data_Text.delete(1.0, END) self.log_data_Text.delete(1.0, END) self.result_data_Text.delete(1.0, END) self.result_fre_Text.delete(1.0, END) # 日志打印 def write_log_to_Text(self,logmsg): current_time = time.strftime(&#x27;%Y-%m-%d %H:%M:%S&#x27;,time.localtime(time.time())) logmsg_in = str(current_time) +&quot; &quot; + str(logmsg) + &quot;\\n&quot; self.log_data_Text.insert(END, logmsg_in)def gui_start(): init_window = Tk() GUI = MY_GUI(init_window) GUI.set_init_window() init_window.mainloop()gui_start()","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"tkinter","slug":"tkinter","permalink":"http://www.shelven.com/tags/tkinter/"},{"name":"pyinstaller","slug":"pyinstaller","permalink":"http://www.shelven.com/tags/pyinstaller/"},{"name":"密码子统计工具","slug":"密码子统计工具","permalink":"http://www.shelven.com/tags/%E5%AF%86%E7%A0%81%E5%AD%90%E7%BB%9F%E8%AE%A1%E5%B7%A5%E5%85%B7/"}]},{"title":"ATAC-seq和CUT&Tag技术原理和实验流程","slug":"ATAC-seq和CUT-Tag技术原理和实验流程","date":"2023-08-17T16:21:11.000Z","updated":"2023-08-17T16:24:01.000Z","comments":true,"path":"2023/08/18/a.html","link":"","permalink":"http://www.shelven.com/2023/08/18/a.html","excerpt":"前阵子去兰州开全国植物生物学大会，做实验的师弟问了我一个问题：什么是ATAC-seq？因为王茂军老师课题组有同学在做CUT&amp;Tag，我脑海里第一个出现的也是CUT&amp;Tag，两者的研究内容虽然不同，但是使用的分析方式是非常相似的。正好看到菲沙基因做过这两个技术的讲座，这篇博客就整理一下介绍这两个技术以及衍生技术的分析原理，加深下自己的理解，详细的分析流程留到以后需要做的时候再记录。","text":"前阵子去兰州开全国植物生物学大会，做实验的师弟问了我一个问题：什么是ATAC-seq？因为王茂军老师课题组有同学在做CUT&amp;Tag，我脑海里第一个出现的也是CUT&amp;Tag，两者的研究内容虽然不同，但是使用的分析方式是非常相似的。正好看到菲沙基因做过这两个技术的讲座，这篇博客就整理一下介绍这两个技术以及衍生技术的分析原理，加深下自己的理解，详细的分析流程留到以后需要做的时候再记录。 1. ATAC-SeqATAC-seq全称Assay for Transposase Accessible Chromatin with high-throughput sequencing，翻译为转座酶可及染色质的高通量测序分析，简单来说这个技术是运用转座酶获取开放染色质区，然后通过高通量测序技术和生物信息学挖掘相关的基因信息，解决生物学相关问题。 1.1 背景介绍什么是开放染色质？在前面介绍三维基因组的博客中，介绍了真核生物的染色质结构由低级到高级可以分为4种，染色体的基本结构单位是核小体，核小体串珠结构螺旋化（也就是不断地压缩折叠）形成了直径为30nm的染色质纤维，细胞核内大多数染色质都是以这种染色质纤维的形式存在的。 我们知道DNA的复制和转录过程需要将染色质紧密的结构打开（打开的过程与组蛋白乙酰化有密切联系，组蛋白乙酰化使组蛋白携带的正电荷减少，削弱了组蛋白与DNA结合的能力，从而使染色质区域的结构从紧密变得松散），这部分打开后结构疏松的染色质就是开放染色质（open chromatin），当染色质打开后，暴露的DNA序列就有足够的空间和转录因子（Transcription factors，TF）结合，进而调控基因的表达。 这种允许顺式调控元件和反式作用因子结合，也就是允许与染色质进行物理接触的程度就是染色质的可接近性（chromatin accessibility），也称为染色质可及性。 如何检测染色质开放区？简单说一下几个常用的检测染色质开放区的方法。 一种是传统的使用DNA酶的实验方法MNase-seq和Dnase-seq。两者的思路都是将开放染色质区的DNA用DNA酶酶切后进行高通量测序。前者用的是限制性外切酶，将不受核小体保护的区域切除，只留下核小体上缠绕的DNA序列；后者用的限制性内切酶，将受核小体保护的区域切除，留下核小体之间的序列。 另一种是基于酚氯仿抽提的技术FAIRE-seq技术，超声波破碎甲醛固定的染色质，酚氯仿抽提得到的上层水相认为是潜在的开放染色质区，针对抽提得到的片段化开放性染色质区进行建库测序。 还有一种就是经典的研究蛋白与DNA互作的ChIP-seq技术，因为需要制作对应的转录因子的抗体去拉DNA，所以该技术只能根据明确的转录因子来检测该转录因子与DNA的互作，局限性比较大，这里就提一下不放在一起比较了。 最后就是ATAC-seq技术，依赖改造的Tn5转座酶（转座DNA设计为测序接头）将测序接头引入染色质开放区，对酶切后的DNA片段进行富集，最后通过PCR扩增后进行高通量测序。另一方面，转座酶还可以切割开放区染色质附近的核小体间连接区DNA，简单来说可以得到MNase-seq和Dnase-seq两种技术的结果。 如下图所示，我们可以比较一下这几种检测染色质开放区技术的检测范围和灵敏度： 研究方法 细胞数量 获取方式 优点 缺点 DNase-seq 1*10^7 DNase Ⅰ切割不受保护的DNA序列 单碱基对的酶切位点分辨率 酶用量要准确控制，切割有偏好性 MNase-seq 1*10^7 MNase优先切割受保护的DNA序列 酶切特性有较高分辨率 酶用量要准确控制，切割有偏好性 FAIRE-seq 1*10^5~1*10^7 超声波打断染色质 无偏性分析，重复性好 信噪比低，数据解读困难 ATAC-seq 5*10^2~5*10^4 改造的Tn5转座酶切割开放区并插入测序接头 细胞需求量少，实验时间短，灵敏度高，重复性好 容易引入线粒体污染 1.2 实验流程整个实验流程可以分为6个步骤： 细胞悬液制备（500~50000个细胞，最难的一步） 细胞裂解，制备细胞核（完整性十分重要） Tn5酶切，37℃酶切孵育 DNA片段纯化，磁珠法回收 PCR扩增12-15个循环 上机测序 上面PCR扩增这一步的流程，可以看到Tn5酶切过程中会在上下游分别产生一个缺口，因此需要72℃延伸的过程来补平缺口。引入barcoded primer是为了区分不同的样品（单细胞测序的话是区分不同类型细胞）。 从上面的实验流程也可以看出，ATAC-seq中比较重要的步骤是细胞悬液制备和提取完整的细胞核，在细胞裂解和提取细胞核过程中，线粒体DNA可能会与染色体DNA一起被提取和处理，从而引入线粒体污染。线粒体是没有组蛋白保护的，容易被Tn5转座酶切割，同时线粒体的拷贝数也比染色体高很多，如果线粒体在实验过程中没有去除，很容易导致线粒体DNA被富集，影响染色体DNA测序深度和覆盖度。 1.3 生信分析获得下机数据后，就可以开始做上下游的生信分析。因为我自己没跑过这个流程，所以这里以菲沙基因提供的流程为例，着重介绍ATAC-seq流程中产生的图如何解读，以及我们可以做哪些下游分析。 下机数据预处理拿到下机数据后首先去接头（adapter trimming），然后比对到参考基因组（alignment），对比对后得到的bam文件进行过滤，具体而言是提取可靠比对、去除PCR重复（推荐用picard软件）、去除细胞器污染（主要是线粒体和叶绿体）这三步。这些处理方式都是老朋友了。 数据质量评估ATAC-seq数据质量评估主要是看两个图，一个是插入片段分布图（Fragment Insertion Size Distribution），一个是TSS富集峰图。 插入片段分布图 ATAC-seq的插入片段分布有着非常鲜明的特点，一般把&lt;100 bp的片段区域称NFR（Nucleosome-Free Region）也就是无核小体区，这部分区域也是转座酶最容易切割的区域，每隔10.5 bp就有一个小齿，对应DNA螺旋一周的间距。200 bp有一个峰对应的是核小体单体的插入片段长度，再远点的400 bp和600 bp有两个小峰，对应核小体二聚体和核小体三聚体的插入片段长度。 TSS富集峰图 转录起始位点(Transcription Start Site,TSS)是没有核小体的，所以在ATAC-seq质控分析中，可以明显看到NFR在转录起始位点富集。以上图为例，我们选择TSS上下游3Kb的区域，NFR reads在TSS位点两侧有明显富集趋势。底下的热图也是同样的意思，每一行表示一个基因或者转录本，图中的红色区域也不一定要延伸到底，因为部分TSS可能没有在这个时期开放，这是很正常的现象。 这两个质控步骤可以先做第一个，第二个TSS富集峰图需要在peak calling和转换文件格式为.bw之后，使用Deeptools工具作图。 Reads Shifting质控后还有一个步骤是进行reads shifting，前面说过Tn5酶切过程中会在上下游产生一个缺口，因此需要将正链正向移动4bp，负链负向移动5bp。 这一步在ACAT-seq的原文中有做，不做的话对单碱基分辨率要求比较高的分析是有影响的（比如转录因子足迹分析，下面的Motif Analysis会说）。 Peak Callingpeak calling是后续所有分析的基础。简单来说，在将reads比对到参考基因组后，因为进行的是pair-end测序，一对reads之间的序列为一个fragment，统计每个碱基上fragment的数量作图，哪个地方fragment数量多，在统计图上就会显示出一个峰，也就是一个peak。peak calling的过程就是检测染色质开放区的fragment富集信号。 这一步用的软件有比较经典的MACS2，这个软件可以处理ChIP-seq、ATAC-seq、CUT&amp;TAG等等的数据，需要调整不同的参数。与ChIP-seq不同，ATAC-seq的Tn5转座酶酶切的是染色质开放区域，在TF结合区域的DNA是拉不下来的（反映在峰图上是一个谷，ChIP-seq是一个峰），因此在调整峰值偏移（peak shift）的时候，一般用shift-extend的方法进行分析，ATAC-seq需要向外shift。如下图： 比如我们测序reads长度是150bp，两条reads的5‘端代表Tn5的酶切位点，我们需要向外shift 75bp，让酶切位点处于reads的中间位置，再进行peak calling。 用上面的软件进行peak calling后会生成bedGraph文件，也就是.bdg后缀的文件，是bed文件的一种扩展，可以在IGV基因组浏览器中打开（可能会比较卡），也可以借助UCSC的工具bedGraphToBigWig转成BigWig文件后（.bw后缀）再到IGV基因组浏览器中打开。还有一个重要的结果文件是.narrowPeak后缀的文件，也可以直接导入IGV。 以上上游分析的步骤可以参考ATAC-seq data analysis: from FASTQ to peaks | Yiwei Niu’s Note。 接下来是常见的一些下游分析的方法。 IDR Peak对于一个样本如果做了多个重复，就需要对样本的可重复性进行评估。可以用ENCODE项目的一个软件包Irreproducible Discovery Rate (IDR) ，导入两个样本的.narrowPeak结果文件后作图分析，这个软件的作用是评估重复样本间peak的一致性，生成的图如下： IDR算法同时考虑了peaks间的overlap和富集倍数的一致性。上面的图所有的点都是两个样本间相互overlap的peak，也就是都是可重复的，红点代表富集倍数是有差别的，黑点代表富集倍数是一致的，因此黑点数量越多越好。 Peak Annotation拿到peak后，如果想要知道这些peak在基因组的哪些地方分布功能是什么，就需要对peak进行注释，常用的有R包ChIPseeker。 Motif Analysis这一部分能做的分析还是相当多的，列举几个： 从头预测：预测新的motif，注释已存在的motif。软件：MEME+Tomtom Motif扫描：除了开放染色质区域，寻找其他序列所有motif的位置信息。软件：FIMO 转录因子富集：软件AME或者HOMER 转录因子足迹（TF FootPrint）：转录因子占位效应（转录因子结合在DNA上，阻止了Tn5酶切，在开放染色质区域留下一个缺失的位置），注意要进行前面说的reads shifting。软件R&#x2F;centipade 常用的motif数据库： PlantTFDB：PlantTFDB - Plant Transcription Factor Database @ CBI, PKU (gao-lab.org) JASPAR：JASPAR - A database of transcription factor binding profiles (genereg.net) MEME：Download Releases - MEME Suite (meme-suite.org) TRANSFAC：Gene Regulation (gene-regulation.com) HOCOMOCO：HOmo sapiens COmprehensive MOdel COllection (autosome.org) Nucleosome positioning核小体定位，从前面的插入片段分布图可以看出，在ATAT-seq文库中，核小体单体插入片段数量相比NFR明显少很多，但是也有一些软件比如NuleoATAC和HMMRATAC可以用于核小体的占位分析。 联合分析 ChIP-seq：由于转录因子的结合区域在染色质开放区，因此ATAC-seq的peak和ChIP-seq的peak之间存在部分重叠，因此这两个组学联用可以相互验证，而转录因子在ChIP-seq中独有的Peak则暗示这个转录因子可能是结合在异染色质区域的驱动型转录因子（Pioneer TFs）。对于组蛋白修饰的ChIP-seq而言，前面也说过组蛋白乙酰化与染色质开放区形成有重要联系，同样可以与ATAC-seq进行联合分析。 RNA-seq：比如将ATAC-seq的信号在gene body上的分布做比较，或者按照基因不同的表达量做分类，再与ATAC-seq联用分别统计不同表达量基因的TSS上的富集信号，研究ATAC-seq的富集信号是否与基因表达量相关、差异表达的基因是否受染色质可及性的调控等等。 2. CUT&amp;TagCUT&amp;Tag全称Cleavage Under Target &amp; Tagmentation，翻译为靶向剪切及转座酶技术，是一种研究蛋白-DNA互作的技术，替代传统的ChIP-seq方法。开头介绍ATAC-seq和CUT&amp;Tag非常相似，原因就在于CUT&amp;Tag也用Tn5转座酶，只不过这个酶是Protein A&#x2F;G融合的Tn5转座酶。当然，两者研究内容还是不一样的，下面详细说一下。 2.1 背景介绍ChIP前面介绍ATAC-seq的时候已经拿ChIP-seq做过对比，这里为了引出CUT&amp;Tag还是对ChIP技术做个简单介绍。ChIP全称Chromatin Immunoprecipitation，翻译为染色质免疫共沉淀，顾名思义，这个技术有个鲜明的特征就是抗原抗体免疫反应。 下面是ChIP-seq的经典流程： 我们知道，抗原抗体反应具有专一性，所以我们制备特定的转录因子的抗体（一般是多克隆抗体），将细胞核内的染色质用甲醛交联固定后进行超声破碎，这个时候与转录因子结合的DNA序列不会被打断。加入抗体做免疫共沉淀，解交联后获得与转录因子结合的DNA序列，建库测序就可以做后面的分析。 ChIP技术分类 N-ChIP：用的是Native Chromatin，原生态染色质，DNA片段化的方法为酶切，用上面提到的MNase。只能处理结合能力比较强的蛋白（一般用于组蛋白修饰），蛋白复合体存在解离的风险，实验难度相对较大。 X-ChIP：用的是Cross-linked Chromatin，甲醛交联的染色质，DNA片段化方式为超声波。甲醛交联的背景一般比较高，抗体识别位点可能会被屏蔽。 ChIP-seq技术非常依赖于抗体质量，如果研究低表达的蛋白，制备抗体的也是很大的挑战。近年在鉴定转录因子结合位点上又出了个新技术DAP-Seq，通过体外蛋白表达技术，表达出带有Halo标签的转录因子蛋白。通过Halo标签的抗体富集对应的蛋白DNA复合物，从而使所有蛋白都可以被一种抗体（Halo标签抗体）富集，绕过了抗体制备的难题（和后面要说的没啥关系，写到技术分类这里提一嘴）。 CUT系列技术 CUT&amp;RUN：Cleavage Under Targets and Release Using Nuclease，靶向剪切和核酸酶释放，这里用的核酸酶是与Protein A&#x2F;G融合的MNase。 CUT&amp;Tag：Cleavage Under Targets and Tagmentation，靶向剪切和转座酶，这里用的酶是Protein A&#x2F;G融合的Tn5转座酶，是CUT&amp;RUN技术的改进版。 两种技术用的酶不一样，Tn5转座酶可以插入测序标签，因此CUT&amp;Tag比CUT&amp;RUN节省了更多建库时间，1天就可以完成建库。 2.2 实验流程整个实验流程可以分为6步： 收集细胞，刀豆蛋白的磁珠吸附细胞膜 细胞电穿孔后分别孵一抗和二抗，一抗结合目标蛋白，二抗放大信号 Hyperactive pA&#x2F;pG-Tn5 Transposon结合，这种改造的Tn5转座酶会特异性识别抗体并结合 加入镁离子或者钙离子激活Tn5转座酶，片段化DNA 提取DNA PCR扩增文库 上面的流程图可以看出，CUT&amp;Tag与ATAC-seq的区别就在于，CUT&amp;Tag用了抗体，Tn5转座酶进一步改造可以识别抗体。 因此CUT&amp;Tag实验需要做阴性对照（IgG），CUT&amp;Tag文库和ATCA文库差别就在于抗体识别的蛋白，如果抗体的特异性很差，比如在所有组蛋白上都有结合，那这个时候建库得到的就是ATCA文库而不是CUT&amp;Tag文库。这个时候阴性对照就很重要了，如果在IgG上也能出正常的PCR结果，就说明抗体有问题或者实验设计有问题了。 因为CUT&amp;Tag用的是Tn5转座酶，所以也有一个缺陷，比如要研究异染色质的蛋白与DNA互作就做不了，因为Tn5转座酶无法在异染色质区剪切DNA。或者你要研究的蛋白空间结构比较大，导致Tn5转座酶无法剪切到DNA，这个时候也不能用CUT&amp;Tag。 2.3 生信分析CUT&amp;Tag生信分析和ATAC-seq几乎一模一样，下游分析也可以做IDR Peak、Peak Annotation和Motif Analysis，这里就不赘述了。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"表观遗传学","slug":"表观遗传学","permalink":"http://www.shelven.com/categories/%E8%A1%A8%E8%A7%82%E9%81%97%E4%BC%A0%E5%AD%A6/"}],"tags":[{"name":"ATAC-seq","slug":"ATAC-seq","permalink":"http://www.shelven.com/tags/ATAC-seq/"},{"name":"CUT&Tag","slug":"CUT-Tag","permalink":"http://www.shelven.com/tags/CUT-Tag/"}]},{"title":"go-cqhttp登录异常（错误码45）的解决办法","slug":"go-cqhttp登录异常（错误码45）的解决办法","date":"2023-08-04T14:57:57.000Z","updated":"2023-08-04T15:01:30.000Z","comments":true,"path":"2023/08/04/a.html","link":"","permalink":"http://www.shelven.com/2023/08/04/a.html","excerpt":"曾经写了一篇go-cqhttp扫码登录异常的解决方法点击此处，当时go-cqhttp版本为v1.0.0，如今（2023年8月4日）已不再适用。在v1.1.0版本之后需要自建或者使用别人搭建的签名服务器，否则会返回错误代码45，这里记录下自己的操作和踩的坑。","text":"曾经写了一篇go-cqhttp扫码登录异常的解决方法点击此处，当时go-cqhttp版本为v1.0.0，如今（2023年8月4日）已不再适用。在v1.1.0版本之后需要自建或者使用别人搭建的签名服务器，否则会返回错误代码45，这里记录下自己的操作和踩的坑。 问题描述go-cqhttp更新版本v1.1.0之后，无法通过替换device.json文件登录，返回错误码45，需要配置签名服务器。 解决方法1. linux操作系统解决方法1.1 安装和启动docker123456789# 下载docker安装脚本，一键安装curl -fsSL https://get.docker.com -o get-docker.shbash get-docker.sh# 启动docker服务systemctl start docker# 查看docker状态，是否正常启动service docker status 1.2 查看ANDROID_ID如果你的device.json文件还没有删除，打开它，找到android_id值，比如我这里是d9b3a88f3cd1f951（瞎打的，总之是这样子的格式）。 如果你已经删除上面的文件，再次运行go-cqhttp，会自动生成device.json文件，同上操作。 这个参数非常重要，每次重启go-cqhttp会随机生成新的android_id值，如果使用别人的签名服务器，需要将你的device.json文件中android_id值改成别人签名服务器提供的，两者的值要对应。 1.3 自建签名服务器实例化qsign的docker镜像： 12345678910# 开放防火墙端口（用docker默认的8080）firewall-cmd --permanent --add-port=8080/tcp# 重载防火墙firewall-cmd --reload# 运行dockerdocker run -d --restart=always --name qsign -p 8080:8080 -e ANDROID_ID=d9b3a88f3cd1f951 xzhouqd/qsign:8.9.63# 检查运行是否成功，访问主机端口没有报错就行curl localhost:8080 映射的主机端口不要改，就用默认的8080，否则docker运行后会无法访问映射的主机端口，curl l映射的端口会出现报错curl: (56) Recv failure: Connection reset by peer，运行go-cqhttp也会出现获取协议T544报错和获取sso sign报错reset by peer！ 1.4 修改config.yml回到go-cqhttp目录，修改config.yml文件的sign-server字段，如下： 如果没有该字段，说明你的go-cqhttp版本不对，去github下载新的。 1.5 运行go-cqhttp如果你之前用过go-cqhttp，把主目录下的data/versions/6.json文件删除，否则会因为协议版本和签名服务器的协议版本不一致导致仍然报错45，仍然提示你配置sign service！ 删除6.json后，同样会让你进行滑块验证，到上面提示的网址手动滑块验证后，可能和我一样会提示账号开启了设备锁，不要慌，同样是到提示的网站，用手机QQ扫一下（不需要服务器和手机QQ在同一个网络环境），然后再次运行go-cqhttp，再次进行滑块验证即可。 成功运行~ 2.windows操作系统解决方法2.1 查看ANDROID_ID这步和1.2一样，先从device.json获取android_id值，不再赘述。 2.2 自建签名服务器下载这个仓库Releases · fuqiuluo&#x2F;unidbg-fetch-qsign (github.com)，release版本V1.0.3 JAR，注意版本。 解压后可以看到两个目录bin和lib，在主目录下创建txlib/8.9.86这样结构的两个文件夹，将unidbg-fetch-qsign&#x2F;txlib&#x2F;8.9.63 at master · fuqiuluo&#x2F;unidbg-fetch-qsign (github.com)这个仓库下的两个.so结尾的文件下载到8.9.86文件夹中。 回到主目录，创建一个批处理文件run.bat： 123.\\bin\\unidbg-fetch-qsign.bat --host=127.0.0.1 --port=8080 --count=1 --library=txlib\\8.9.63 --android_id=d890fd5ae11be94d# 这里--port可以自定义端口，--count表示最大连接数，--library就是两个.so文件的路径，--android_id是第一步你获取的值 双击run.bat，一会儿后看到[FEKit_]info: task_handle.h:74 TaskSystem not allow是正常的。 2.3 修改config.yml，运行go-cqhttp同1.4，1.5，不再赘述。 以上实现方式均参考自签名服务器相关问题 · Mrs4s&#x2F;go-cqhttp · Discussion #2245 (github.com) 我自己在linux和windows上均试过没有问题，感谢提出解决方案的大佬。","categories":[{"name":"QQ机器人","slug":"QQ机器人","permalink":"http://www.shelven.com/categories/QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/"}],"tags":[{"name":"qq bot","slug":"qq-bot","permalink":"http://www.shelven.com/tags/qq-bot/"},{"name":"go-cqhttp","slug":"go-cqhttp","permalink":"http://www.shelven.com/tags/go-cqhttp/"}]},{"title":"Hi-C染色体挂载（2）——3D-DNA配置运行和手动调整Hi-C互作图","slug":"Hi-C染色体挂载（2）——3D-DNA配置运行和手动调整Hi-C互作图","date":"2023-07-13T13:47:54.000Z","updated":"2023-09-11T12:56:24.000Z","comments":true,"path":"2023/07/13/a.html","link":"","permalink":"http://www.shelven.com/2023/07/13/a.html","excerpt":"前一篇博客主要讲了如何使用juicer进行Hi-C测序的下机数据处理，这篇博客我们按照Aiden团队的基因组组装“CookBook”继续接下来的操作，主要记录下3D-DNA软件的配置运行，以及如何手动调整结果。","text":"前一篇博客主要讲了如何使用juicer进行Hi-C测序的下机数据处理，这篇博客我们按照Aiden团队的基因组组装“CookBook”继续接下来的操作，主要记录下3D-DNA软件的配置运行，以及如何手动调整结果。 1. 下载和配置3D-DNA123456789101112131415# 拉取3D-DNA仓库git clone https://ghproxy.com/https://github.com/aidenlab/3d-dna.git## 将run-asm-pipeline-post-review.sh和run-asm-pipeline.sh属性分别改成可执行，对应chmod的0755权限chmod 755 run-asm-pipeline-post-review.shchmod 755 run-asm-pipeline.sh# 安装LastZ（跑二倍体模式需要用，一个DNA序列比对工具）conda install LastZ# 安装GNU Parallel## 官方推荐用该shell下实现并行运算的工具，加快程序运行速度。集群用户如果没有预装可以在~/bin中以如下方式编译安装wget http://ftp.gnu.org/gnu/parallel/parallel-latest.tar.bz2tar -xvjf parallel-latest.tar.bz2cd parallel-20230622./configure --prefix=$HOME &amp;&amp; make &amp;&amp; make install 3D-DNA有两个pipeline脚本，12个独立的功能模块（每个模块一个文件夹），官方给出的pipeline如下： 三个橘色框是需要手动调整的地方，稍微了解下这几个独立模块分别在做什么（具体参考manual_180319 (aidenlab.org)）： 主要的8个独立模块（对应上面的流程）： scaffold：对给定的scaffolds进行排序和定向，转换基于3D proximity的一系列单个片段序列成为单个的megascaffold，这个megascaffold用于检测错误的连接或者保留用于后续处理（split模块还会用到） visualize：与后续的Juicebox Assembly Tools处理对接，也就是可视化组装结果。在3D-DNA中用于连接各个处理阶段，便于审查和调整参数。 edit：包含检测3D-DNA错误连接的脚本和一些校正算法，这个模块在做特殊处理的时候最可能需要调整参数 polish：校正3D-DNA scaffolding算法可能引起的错误，类型基因组的polish过程 split：分割megascaffold成为染色体 seal：消除上一步结果的假阳性（通过引入碎片的方式，详细看手册说明） merge：融合代表替代单倍型的组装片段（仅在二倍体模式下）起作用 finalize：生成最终的fasta格式输出，在最终fasta生成过程中，考虑到可能的顺序和方向，将被识别为同一染色体内部的scaffold连接起来，同时在每个scaffold之间添加固定大小（500bp）的间隙 附加的4个独立模块： utils：一些其他模块用到的核心脚本，包括从.fasta文件生成.assembly文件 lift：一些从基因组草图到最后组装结果的核心脚本 supp：几个附加脚本，包括生成色谱图的脚本 data：一些数据表 如果要研究各个步骤的算法就可以在各个模块中找源码，现在的我只是个调包侠，程序不出问题就不深入研究了（以后有时间一定&#x3D; &#x3D;） 两个pipeline脚本也是对应不同阶段使用的： run-asm-pipeline.sh 将几个独立模块串联，组装基因组（也就是上面流程图用的脚本） run-asm-pipeline-post-review.sh 用于Juicebox Assembly Tools (JBAT)手动调整之后执行，只会执行上个脚本的后几个阶段（finalize或者seal和finalize），生成最终的hic文件（用于质控）和fasta序列 2. 运行3D-DNA了解不同脚本和模块作用后，接下来就是很简单的设置脚本参数运行了。 123456789101112131415161718# 创建run.slurm脚本vim run.slurm# 脚本内容如下---------------------------------------------------------------#!/bin/bash#SBATCH -n 30#SBATCH -N 1#SBATCH -t 7200/public/home/wlxie/biosoft/3d-dna/run-asm-pipeline.sh \\ /public/home/wlxie/biosoft/juicer/reference/genome.fa \\ -r 0 \\ /public/home/wlxie/biosoft/juicer/aligned/merged_nodups.txt---------------------------------------------------------------# 运行脚本sbatch run.slurm 220Mb参考基因组，50G的merged_nodups.txt文件，实际运行结束时长为10小时。 run-asm-pipeline.sh脚本用法和参数如下： 12345678910USAGE: ./run-asm-pipeline.sh [options] &lt;path_to_input_fasta&gt; &lt;path_to_input_mnd&gt;path_to_input_fasta：组装的基因组fasta文件位置path_to_input_mnd：juicer处理后得到的去重复的Hi-C reads比对基因组文件位置，也就是merged_nodups.txtOPTIONS:-m|--mode haploid/diploid 单倍体/二倍体模式（默认单倍体）-i|--input input_size 指定输入的 contig/scaffold size阈值，默认15000，小于15000的将被忽略-r|--rounds number_of_edit_rounds 指定纠错轮数（默认为2轮）-s|--stage stage 指定运行的阶段，可以是polish, split, seal, merge和finalize 对于运行模式，作者团队建议是先运行默认的haploid模式，检查拼接后的图谱中是否存在与杂合度不足相关的信号，diploid模式会尝试合并一些单倍型。 The diploid mode is to be used when one suspects large amounts of under collapsed heterozygosity to be present in the draft genome assembly (this was indeed the case for AaegL2). Running in the diploid mode will attempt to analyze the final assembly to remove the interspersed haplotigs and merge overlaps not recognized by the contigger because of variant differences. In most cases the default haploid mode should be used. 可以看官方的这篇文章帮助理解下两种模式的区别，以及软件LastZ在diploid模式中起的作用：Extended_Hi-C_methods.docx (dropbox.com) 至于纠错轮数，最好是按照默认的参数跑2轮，然后选择效果最好的一次结果导入juicerbox进行调整。 那么问题来了，怎么确认用哪个结果呢？首先要确认下结果文件有些啥。 3. 3D-DNA结果文件这个软件产生的结果文件非常多，中间步骤产生的文件是不会自动删除的，看一下主要的几个文件： .fasta 基因组序列文件，最终组装的基因组序列名称为.FINAL.fasta .hic 高度压缩的二进制文件，与下面的.assembly文件都可以载入Juicebox Assembly Tools，不同阶段产生不同的hic文件，0表示未校正 .assembly 空格分隔的文本，记录对基因组草图执行的指令，包括拆分、更改顺序、方向和锚定到染色体中（不同阶段都会产生，同时产生同名的.cprops和.asm，这两种文件已弃用） .scaffold_track.txt &amp; .superscaf_track.txt scaffold和super scaffold的染色体边界文件，Juicebox 2D 注释格式，使用juicerbox的时候可以用到，但是使用Juicebox Assembly Tools不需要用（因为边界注释会根据. assembly 文件自动生成） .bed &amp; .wig 对pipeline进行故障审查的时候用到，可以与.hic文件导入juicebox，暂时与Juicebox Assembly Tools不兼容 可以看出很多中间文件还是为了导入juicebox做分析产生的，而我们仅仅是为了辅助基因组组装，确认染色体的挂载情况，用到的是Aiden团队开发的juicebox的桌面应用拓展模块，也就是Juicebox Assembly Tools(JBAT)，很多中间文件已经用不到了，这里我们需要用到的是.hic和.assembly两种类型文件，且这两种文件名称是一一对应的。 如果是默认参数跑的话还会有genome.1.hic和genome.2.hic两个文件，分别代表校正了一次和两次的结果，都可以导入JBAT看结果。 看很多教程其实陷入了误区，需要校正多少轮，用哪一组数据其实没有固定说法，有的人用genome.0.hic，有的人用genome.1.hic，都是可以的，这几个只是polish前和polish后产生的hic文件，别忘了我们还有其他阶段产生的hic文件，都是可以用的。这里我用genome.rawchrom.hic和对应的genome.rawchrom.assembly这组文件，因为这组文件实际上区分染色体的情况最好。 下一步就是导入JBAT手动调整染色体边界和修改组装过程中产生的错误。 4. 导入JBAT这一步在个人电脑上完成，最好保证电脑有4G以上的运存（2023年了个人电脑都有这个配置了吧），否则会巨卡无比。 我用的官方1.11.08版本的windows工具： https://s3.amazonaws.com/hicfiles.tc4ga.com/public/Juicebox/Juicebox_1.11.08.exe 不要安装直接可以运行，首先导入.hic文件： 导入hic文件之后Assembly菜单就可以点了，导入对应名字的.assembly文件： 完整导入后界面如图所示，主要是用到以下几个菜单栏： ①：标准化方式，选择balance看起来舒服点&#x3D; &#x3D; ②：分辨率，调整显示的分表率大小 ③：色彩范围，调整表示互作强度的色彩范围 ④右下角几个颜色块代表图上线条框的区域处于什么状态。默认黄色线框的是待编辑区（这里没有，对区块进行操作的时候才有），紫色线框是染色体区块，绿色线框是scaffold区域 5. 调整Hi-C互作图我这个互作图没有明显的需要染色体易位、倒位的调整，只需要确定染色体边界（也就是蓝色的线）就行。 染色体易位和倒位的调整在官方视频里就有，b站有人做了翻译，看一个视频足够了翻译 | Juicebox Assembly Tools教程_哔哩哔哩_bilibili 调高分辨率，比如下面我要做的就是将紫色框分成两个： 放大到一定分辨率后，scaffold的交界处鼠标会变成L型，点一下就可以加上染色体边界，这里截图没截出来…… 还有一种方法，长按shift键，单击拖动鼠标框选住你要操作的scaffold（不需要完全覆盖scaffold，只要框的面积里有你要的scaffold就行），松开shift键，这个时候选中的scaffold会处于待编辑状态（黄色的框线）。右键，选择Add chr boundaries即可为选中的scaffold区域添加染色体边界。 如果想要撤销操作，右键后点击Undo即可。 整体调整完以后是这样： 染色体条数不是无缘无故添加的，既要以图为准，又要由实验确定，或者通过已经发表的文献（该物种或者近缘物种）佐证，纠正算法产生染色体边界的误差。我是通过查阅文献得到这个物种染色体条数为11，调整后的Hi-C互作图也能明显分为11个互作区块，证实组装是没有问题的。 官方的操作手册上也有详尽的手动调整Hi-C互作图教程，可以参考manual_180322.pdf (dropbox.com)。 手动调整完后，导出调整后的.assembly文件，我们需要用这个文件重新回到3D-DNA生成最终的染色体水平基因组fasta文件。 6. 3D-DNA处理简单来说，我们在JBAT导出的最终.assembly文件记录了各个scaffold的坐标位置和互作信息，只需要在3D-DNA中跑最后finalize流程就可以了，软件提供了脚本run-asm-pipeline-post-review.sh： 12345678910111213USAGE: ./run-asm-pipeline-post-review.sh [options] -r &lt;review.assembly&gt; &lt;path_to_input_fasta&gt; &lt;path_to_input_mnd&gt; path_to_input_fasta：指定组装的草图基因组fasta文件path_to_input_mnd：指定juicer产生的merged_nodups.txtOPTIONS:-r|--review path_to_review_assembly 指定上一步JBAT导出的.assembly文件-i|--input input_size 指定输入的 contig/scaffold size阈值，默认15000，小于15000的将被忽略-s|--stage stage 指定运行开始的阶段，可以是seal或者finalize，默认finalize-q|--mapq mapq 指定最终map的可视化MAPQ阈值，默认1-g|--gap_size gap_size 指定最终scaffold之间的间隔，默认500--sort-output 对最终输出的染色体级别的scaffold长度排序，降序--build-gapped-map Option to output an additional contact map corresponding to the assembly after the gaps have been added between scaffolded sequences.（我也不知道干啥的） 比较重要的就三个文件位置参数： 123456789101112131415161718# 创建run_postview.slurm脚本vim run_postview.slurm# 脚本内容如下---------------------------------------------------------------#!/bin/bash#SBATCH -n 30#SBATCH -N 1#SBATCH -t 7200/public/home/wlxie/biosoft/3d-dna/run-asm-pipeline-post-review.sh \\ -r /public/home/wlxie/biosoft/3d-dna/baima_diploid/genome_rawchrom.review.assembly \\ /public/home/wlxie/biosoft/juicer/reference/genome.fa \\ /public/home/wlxie/biosoft/juicer/aligned/merged_nodups.txt---------------------------------------------------------------# 运行脚本sbatch run_postview.slurm 静静等待生成最终的fasta序列就可以啦，如果前面做过contig基因组草图注释的话，还需要将注释的基因信息转坐标到最终的染色体水平基因组上；如果没做过注释的话，跑一遍注释流程吧！ 2023.7.17补充最终生成的基因组序列要看genome.FINAL.fasta，发现染色体数目和前面手动标定染色体边界的数目不一致，这很正常。可以用seqkit工具统计下各个染色体的长度，如下： 可以看到前11条是染色体级别的contig，这和手动标记的染色体数目一致，后面的contig长度占比非常小，可以标记区分一下，这些都要放在组装的基因组文件里。 顺便放一下自己写的python代码，同样的处理效果，顺手就当python练习了（运行前提：fasta文件中没有空行）。 123456789101112131415161718192021fasta_file = &#x27;genome.FINAL.fasta&#x27; # 换成自己的fasta文件路径def fasta_length(file_path): sequences = &#123;&#125; with open(file_path, &#x27;r&#x27;) as file: content = file.read() # 读整个文件 blocks = content.split(&#x27;&gt;&#x27;) # 根据关键字“&gt;”分块 for block in blocks[1:]: # 第一个块为空，跳过 index = block.find(&#x27;\\n&#x27;) # 查找第一个换行符索引 newline_number = block.count(&#x27;\\n&#x27;) # 统计换行符数量 header = block[:index] # 序列名称 sequence_length = len(block) - index - newline_number # 序列长度 sequences[header] = sequence_length # 序列名称和长度存入字典 return sequencessequence_lengths = fasta_length(fasta_file)for header, length in sequence_lengths.items(): print(f&#x27;&#123;header&#125;:&#123;length&#125;&#x27;) 2023.9.11补充考虑到juicebox调整的这个图不能直接用在论文里（看起来有点不直观），这里再推荐两个项目： Atvar2&#x2F;plotHicGenome: The tools are used for displaying hic signal of genome (github.com) biotools&#x2F;Hic&#x2F;juicerbox2matrix at main · yukaiquan&#x2F;biotools (github.com) 第一个工具可以将Juicebox调整的结果（.review.assembly文件）和juicer2的结果（merged_nodups.txt）结合，做全基因组层面的Hi-C互作图。第二个工具是另一个作者优化了生成bin matrix矩阵的过程，测试了下吃个饭的功夫就跑完了。其实也可以用.hic以及.review.assembly文件做matrix，然后用HiCPlotter作图（怎么用HiCPlotter可以看之前的这篇博客 三维基因组学——如何用Hi-C数据分析拓扑关联结构域），效果基本上是差不多的。 这里记录下使用上面项目的过程和最后跑出来的效果： 1234567891011#!/bin/bash#SBATCH -n 8#SBATCH -t 7200assembly=/public/home/wlxie/biosoft/3d-dna/baima_diploid/genome_rawchrom.review.assemblymerged_nodups=/public/home/wlxie/biosoft/juicer/aligned/merged_nodups.txt./juicerbox2matrix -a $&#123;assembly&#125; -c 11 -i $&#123;merged_nodups&#125; -o runplotHicGenome juicer $&#123;merged_nodups&#125; $&#123;assembly&#125; -H run/Hicmatrix.txt -W whole -n 11 -s False -l t -F 4 -r 500000 -X 2 -w 0.5 -d 3 -S &#x27;dashed&#x27; -i 300 -z 6,6 -C &#x27;black&#x27; -L 0.8 -A 0.8 -B &#x27;1%&#x27; -D 0.2 -o Juicerbox.pdf -R ./run","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"基因组三代测序分析","slug":"基因组三代测序分析","permalink":"http://www.shelven.com/categories/%E5%9F%BA%E5%9B%A0%E7%BB%84%E4%B8%89%E4%BB%A3%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/"}],"tags":[{"name":"Hi-C染色体挂载","slug":"Hi-C染色体挂载","permalink":"http://www.shelven.com/tags/Hi-C%E6%9F%93%E8%89%B2%E4%BD%93%E6%8C%82%E8%BD%BD/"},{"name":"3D-DNA","slug":"3D-DNA","permalink":"http://www.shelven.com/tags/3D-DNA/"},{"name":"JBAT","slug":"JBAT","permalink":"http://www.shelven.com/tags/JBAT/"}]},{"title":"Hi-C染色体挂载（1）——juicer2处理Hi-C数据","slug":"Hi-C染色体挂载（1）——juicer2处理Hi-C数据","date":"2023-07-11T10:04:56.000Z","updated":"2023-07-11T13:03:50.000Z","comments":true,"path":"2023/07/11/a.html","link":"","permalink":"http://www.shelven.com/2023/07/11/a.html","excerpt":"前面经过三代数据结合二代数据的组装和polish，已经把基因组组装成了contigs的水平，下一步就是进一步提升到染色体水平。从实现的方式上来说有Bionano的光学图谱技术（作用是减少Scaffold数量，基因组纠错），Hi-C技术，遗传图谱以及依靠算法实现的基于近缘物种参考基因组的染色体水平组装（比如RagTag）。","text":"前面经过三代数据结合二代数据的组装和polish，已经把基因组组装成了contigs的水平，下一步就是进一步提升到染色体水平。从实现的方式上来说有Bionano的光学图谱技术（作用是减少Scaffold数量，基因组纠错），Hi-C技术，遗传图谱以及依靠算法实现的基于近缘物种参考基因组的染色体水平组装（比如RagTag）。 对于一个没有遗传图谱，也没有近缘物种参考基因组的物种，考虑到光学图谱费用昂贵，一般最划算用的最多的是测一个Hi-C来进行基因组染色体级别组装。一些经典的Hi-C辅助组装的软件应运而生，比如LACHESIS、3D-DNA、YaHS等等。这篇笔记主要记录下软件3D-DNA的染色体挂载流程。 然而3D-DNA不能直接处理Hi-C下机数据，因此总的流程是用juicer2先处理Hi-C数据，再用3D-DNA进行染色体挂载，最后用Juicebox Assembly Tools (JBAT)进行手工纠错。流程参考自Baylor College of Medicine &amp; Rice University Aiden团队Genome Assembly Cookbook，这几个软件也是出自他们团队。 juicer2Juicer是一款非常经典的Hi-C数据处理软件，但是配置运行起来稍微有点麻烦，花了小半天时间踩坑记录一下。需要非常注意的一点，直接从github官网拉取的juicer仓库是juicer2，在release版本中有一个稳定版juicer1.6，两者的配置和产生的结果文件是不一样的！！！ 秉着软件用新不用旧的原则，本篇笔记全程用的是juicer2，如果有软件运行问题可以在3D Genomics - Google 网上论坛交流，或者在github官方提Issues（不建议）。 顺便提一下我使用Juicer2过程中碰到的版本问题： juicer2配置的juicer_tools版本要在2.0以上，否则会报错Exception in thread &quot;main&quot; java.lang.RuntimeException: Unknown command: statistics，该报错会直接导致无法生成inter.txt、inter_hists.m 、inter_30.txt和inter_30_hists.m文件，也就是Hi-C互作的统计数据和矩阵。 juicer2结果文件中不会自动产生merged_nodups.txt文件，该文件原本作为3D-DNA的输入文件，在juicer2中被同名的merged_nodups.bam文件和merged*.txt代替。如果想要merged_nodups.txt文件，需要加上参数--assembly。 1. 下载和配置juice212345678910111213# 拉取最新版本的juicer2仓库（这里用的github镜像，集群可能有dns污染无法直接访问github）git clone https://ghproxy.com/https://github.com/aidenlab/juicer.gitcd juicer# juicer主目录下配置scripts（必需）## 个人电脑的是建立软链接到CPU文件夹下，其他如slurm、LSF、AWS和Univa等集群或者云端跑juicer是建立软链接或者复制到对应文件夹的scripts文件夹下ln -s CPU scripts# scripts/common文件夹中下载juicer_tools（必需）cd scripts/commonwget -c https://ghproxy.com/https://github.com/aidenlab/Juicebox/releases/download/v2.20.00/juicer_tools.2.20.00.jar# 修改文件属性为可执行文件后，建立软链接ln -s juicer_tools.2.20.00.jar juicer_tools.jar 本来想配置slurm跑的，因为塔大集群使用的是slurm作业调度系统。花了好大功夫配置环境发现运行SLURM/scripts底下的juicer.sh还需要配置CUDA，晕，学校的集群没有GPU（怨念 &#x3D; &#x3D;）……所以如果集群没有GPU的话就老老实实用CPU文件夹下的juicer.sh，按照CPU流程跑后面的程序，缺点是不能用集群提交多线程作业非常难受。 官方也是推荐小的Hi-C实验可以用CPU版本，如果数据量比较大，还是推荐带有GPU加速的集群（最好是SLURM）或者云端跑。如下是官方推荐的两种方式： Running Juicer on a cluster · aidenlab&#x2F;juicer Wiki (github.com) ENCODE-DCC&#x2F;hic-pipeline: HiC uniform processing pipeline (github.com) juicer主目录下需要配置两个必需的文件夹reference和restriction_sites（第二个在juicer流程中非必须，但是做染色体挂载一定要） 12345678910# juicer目录下创建参考基因组文件夹，放入参考基因组（复制或者软链接）和构建参考基因组索引文件（必需用bwa）mkdir reference &amp;&amp; cd referencecp /path/to/your/reference/genome.fa ./bwa index genome.fa# juicer目录下创建限制性酶切位点文件夹，MboI酶酶切参考基因组（根据自己测hic用的限制酶）mkdir restriction_sites &amp;&amp; cd restriction_sitespython ~/biosoft/juicer/misc/generate_site_positions.py MboI genome ~/biosoft/juicer/reference/genome.fa## 生成的酶切图谱文件名为genome_MboI.txt，同个文件夹下生成contig长度文件awk &#x27;BEGIN&#123;OFS=&quot;\\t&quot;&#125;&#123;print $1, $NF&#125;&#x27; genome_MboI.txt &gt; genome.chrom.sizes 官方的酶切参考基因组的脚本generate_site_positions.py支持HindIII、DpnII、MboI、Sau3AI和Arima4种限制性核酸内切酶，如果你Hi-C测序用的是其他酶，可以根据实际修改这个脚本中的字典类型数据patterns，根据实际情况加入键值对信息： 稍微解释一下官网给的awk &#39;BEGIN&#123;OFS=&quot;\\t&quot;&#125;&#123;print $1, $NF&#125;&#39;这个命令，这里awk的程序部分由两部分组成： BEGIN&#123;OFS=&quot;\\t&quot;&#125;：BEGIN块是在处理文件之前执行的代码块。在这里，它设置输出字段分隔符（OFS）为制表符（\\t）。这意味着输出的字段将使用制表符进行分隔。 &#123;print $1, $NF&#125;：这是awk的主要部分，它定义了要执行的操作。在这里，它打印每行的第一个字段$1和最后一个字段（NF）。通过使用逗号分隔它们，它们将以制表符分隔的形式打印出来。 genome.chrom.sizes文件如下所示： 工作目录下必需配置一个文件夹fastq，其中存放Hi-C的双端测序数据，命名格式参考juicer.sh文件中的正则表达式*_R*.fastq*。 1234# 工作目录下创建存放hic测序数据的文件夹，我这里为了方便查看，工作目录就是juicer主目录，测序数据可以用软链接的形式存放mkdir fastq &amp;&amp; cd fastqln -s ~/hi-c/BM_R1.fq.gz Av_R1.fastq.gzln -s ~/hi-c/BM_R2.fq.gz Av_R2.fastq.gz 2. 运行juicer2官网的juicer.sh参数非常之多，我这里只展示一些关键的，其他用默认参数即可。1.x版本可以参考Usage · aidenlab&#x2F;juicer Wiki (github.com)，2.0版本具体可以用bash juicer.sh -h查看，两个版本指令稍有不同。CPU版本和其他集群版本也稍有不同，以CPU中的2.0版本为例： 12345678910111213141516171819202122232425262728Usage: juicer.sh [-g genomeID] [-d topDir] [-s site] [-a about] [-S stage] [-p chrom.sizes path] [-y restriction site file] [-z reference genome file] [-D Juicer scripts parent dir] [-b ligation] [-t threads] [-T threadsHic] [-i sample] [-k library] [-w wobble] [-e] [-h] [-f] [-j] [-u] [-m] [--assembly] [--cleanup] [--qc]-g genomeID 必需项，指定基因组和版本，比如人类的&quot;hg19&quot; 或者小鼠的&quot;mm10&quot;，如果没有，可以用-z命令替代，指定参考基因组文件-z reference genome file 指定参考基因组文件，此文件中必需有BWA索引文件-d topDir 指定输出目录，默认是当前目录。[topDir]/fastq必需包含fastq文件-s site 必需项，指定限制性核酸内切酶。如果不做片段级别的分析可以写none-S stage 指定运行pipeline的阶段，固定是&quot;chimeric&quot;, &quot;merge&quot;, &quot;dedup&quot;, &quot;final&quot;, &quot;postproc&quot;, &quot;early&quot;其中之一，报错调试用 chimeric： alignment结束或者从aligned文件开始 merge: alignment结束但是没有生成merged_sort文件 dedup： 文件已经merge结束，但是没有生成merged_nodups文件 final： reads在merged_nodups文件中已经删除重复，但是尚未生成最终的state和hic文件 postproc： hic文件已经生成，只有特征注释尚未完成 early： 在hic文件生成前提前结束程序-p chrom.sizes path 指定染色体长度文件-y restriction site file 指定参考基因组酶切文件-D Juicer scripts parent dir 指定Juicer/scripts所在目录-t threads 指定跑BWA的线程数-T threadsHic 指定生成hic文件用的核数（2.0版本新增）--assembly 接下游3D-DNA分析，会提前结束并生成老版本的merged_nodups文件（2.0新增）--cleanup 如果pipeline成功运行，自动清除中间文件（2.0新增）如果是在集群中跑juicer，以下两个参数也是必需要改的，否则用默认分区名会直接报错：-q queue 指定跑alignments的队列分区（默认commons），slurm中的分区也就是partition，可以理解为LSF、PBS等作业调度系统中的队列-l long queue 指定跑需要时间更长的job，比如生成hic文件的队列分区（默认long） 因为我不是做三维基因组，Hi-C只测了一个样（主要用于辅助基因组组装，染色体挂载），比如做三维基因组就会有大量的Hi-C数据，juicer也支持多个结果的合并（使用mega.sh），详细也可以参考上面的juicer Wiki。 上面的限速步骤主要是跑BWA，因为第一次跑juicer不知道要多久，就稍微申请多一点的核数（虽然集群没有GPU，但是CPU资源很充足平常没人用）。 12345# 创建一个slurm作业vim juicer.slurm# 提交slurm作业sbatch juicer.slurm juicer.slurm文件内容如下（再次提醒--assembly 参数非常重要）： 12345678910111213#!/bin/bash#SBATCH -N 1#SBATCH -n 30#SBATCH -t 7200/public/home/wlxie/biosoft/juicer/scripts/juicer.sh \\-z /public/home/wlxie/biosoft/juicer/reference/genome.fa \\-p /public/home/wlxie/biosoft/juicer/restriction_sites/genome.chrom.sizes \\-y /public/home/wlxie/biosoft/juicer/restriction_sites/genome_MboI.txt \\-s MboI \\-D /public/home/wlxie/biosoft/juicer \\-t 30 \\--assembly 运行时间可以参考一下我这里220 Mb的参考基因组，Hi-C测序数据39G（双端测序，gz文件），实际上运行了13小时才出结果。 运行pipeline成功后会在日志中提示(-: Pipeline successfully completed (-: 3. 结果文件CPU模式下会在工作目录创建aligned和splits文件夹： splits 文件夹存放整个pipeline的临时文件，跑完流程并且确认结果没问题后可以运行cleanup.sh或者直接删除（按照帮助文档的说法，–cleanup参数应该可以自动删除，我没有试过） aligned 文件夹存放运行结果 如果你是用集群模式跑的，比如SLURM，还会生成一个debug文件夹（CPU模式下用SLURM跑的没有该文件夹），可以查看各个步骤的error报告和output报告 aligned文件夹有以下结果文件： 我这里实际上是多了一些文件（实际上跑了两遍），因为一开始没有加上--assembly参数，所以一直运行到出hic结果文件，而且没有merged_nodups.txt。 我做染色体挂载只需要最后一个文件，第二次运行加了上面的参数，并且加上-S final参数，这样就省去了前面比对和去重复的时间（90%以上的时间花在这里），一个小时可以重新跑完出结果。 顺便了解一下其他结果文件的用途： inter.hic &#x2F; inter_30.hic: The .hic files for Hi-C contacts at MAPQ &gt; 0 and at MAPQ &gt;&#x3D; 30, respectively merged_nodups.txt: The Hi-C contacts with duplicates removed. This file is also input to the assembly and diploid pipelines （后面跑3D-DNA的输入文件） inter.txt, inter_hists.m &#x2F; inter_30.txt, inter_30_hists.m: The statistics and graphs files for Hi-C contacts at MAPQ &gt; 0 and at MAPQ &gt;&#x3D; 30, respectively. These are also stored within the respective .hic files in the header. The .m files can be loaded into Matlab. The statistics and graphs are displayed under Dataset Metrics when loaded into Juicebox （可以后续导入juicer box）","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"基因组三代测序分析","slug":"基因组三代测序分析","permalink":"http://www.shelven.com/categories/%E5%9F%BA%E5%9B%A0%E7%BB%84%E4%B8%89%E4%BB%A3%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/"}],"tags":[{"name":"juicer2","slug":"juicer2","permalink":"http://www.shelven.com/tags/juicer2/"},{"name":"Hi-C染色体挂载","slug":"Hi-C染色体挂载","permalink":"http://www.shelven.com/tags/Hi-C%E6%9F%93%E8%89%B2%E4%BD%93%E6%8C%82%E8%BD%BD/"}]},{"title":"python自学笔记（8）——10种排序方式的python实现","slug":"python自学笔记（8）——10种排序方式的python实现","date":"2023-07-04T15:14:44.000Z","updated":"2023-07-04T15:37:54.000Z","comments":true,"path":"2023/07/04/a.html","link":"","permalink":"http://www.shelven.com/2023/07/04/a.html","excerpt":"最近中期答辩结束，稍微有点空闲的时间捋一捋数据结构和算法方面的知识。虽然现在用python实现排序就一个sort()函数的事，但是还是想锻炼下自己的思维，从底层代码学习一下10种经典排序的实现方式。","text":"最近中期答辩结束，稍微有点空闲的时间捋一捋数据结构和算法方面的知识。虽然现在用python实现排序就一个sort()函数的事，但是还是想锻炼下自己的思维，从底层代码学习一下10种经典排序的实现方式。 对于时间复杂度和空间复杂度的计算，自己还是一知半解，每种排序方式后面放了自己的理解，有错误会继续修改，最后有一张菜鸟教程总结的图可以参考。 本篇笔记的内容主要是跟着b站up主做的，代码整理来自英雄哪里出来的个人空间 我这里先定义一个生成随机整数序列的函数，后面都会调用，就不重复写了： 12345678import random# 生成指定范围、长度的序列def generate_random_sequence(len, min, max): seq = [] for i in range(len): seq.append(random.randint(min, max)) return seq 1. 选择排序从第一个元素到最后一个元素中选择最小的元素，和第一个元素进行交换；然后从第二个元素到最后一个元素选择最小的元素，和第二个元素交换，依此类推。通过对未排序的元素比较和交换，选择出最小的，直到最后成为一个升序序列。 1234567891011121314151617181920212223242526def SelectionSort(a): n = len(a) for i in range(n - 1): # 排完倒数第二个数之后就不用再排了，所以这里用n-1而不是n min = i for j in range(i + 1, n): if a[j] &lt; a[min]: min = j a[i], a[min] = a[min], a[i] print(a)a = generate_random_sequence(10, 1, 100)print(a)SelectionSort(a)&#x27;&#x27;&#x27;输出结果：[77, 76, 21, 51, 29, 23, 19, 68, 53, 37][19, 76, 21, 51, 29, 23, 77, 68, 53, 37][19, 21, 76, 51, 29, 23, 77, 68, 53, 37][19, 21, 23, 51, 29, 76, 77, 68, 53, 37][19, 21, 23, 29, 51, 76, 77, 68, 53, 37][19, 21, 23, 29, 37, 76, 77, 68, 53, 51][19, 21, 23, 29, 37, 51, 77, 68, 53, 76][19, 21, 23, 29, 37, 51, 53, 68, 77, 76][19, 21, 23, 29, 37, 51, 53, 68, 77, 76][19, 21, 23, 29, 37, 51, 53, 68, 76, 77]&#x27;&#x27;&#x27; 这个算法时间复杂度（算法中循环执行的次数，量级估算）为O(n^2)，其中n是输入序列的长度。空间复杂度（算法运行过程中临时占用存储大小，量级估算）为O(1)，因为它只需要使用常数级别的额外空间。 2. 冒泡排序通过不断比较相邻元素，将数值大的元素往后排。第一个元素和第二个元素比较，如果第一个元素大，则进行交换，再比较第二个元素和第三个元素大小，以此类推，直到最大的元素移动到最后一个位置，然后进行第二轮比较。每一轮中数值较大的元素，不断到达数组的尾部。 123456789101112131415161718192021222324def BubbleSort(a): n = len(a) for i in range(n - 1, 0, -1): # range()左闭右开，n-1可以取到右边界，逆序枚举 for j in range(0, i): if a[j] &gt; a[j + 1]: a[j], a[j + 1] = a[j + 1], a[j] print(a)a = generate_random_sequence(10, 1, 100)print(a)BubbleSort(a)&#x27;&#x27;&#x27;输出结果：[57, 86, 40, 11, 38, 46, 21, 38, 18, 6][57, 40, 11, 38, 46, 21, 38, 18, 6, 86][40, 11, 38, 46, 21, 38, 18, 6, 57, 86][11, 38, 40, 21, 38, 18, 6, 46, 57, 86][11, 38, 21, 38, 18, 6, 40, 46, 57, 86][11, 21, 38, 18, 6, 38, 40, 46, 57, 86][11, 21, 18, 6, 38, 38, 40, 46, 57, 86][11, 18, 6, 21, 38, 38, 40, 46, 57, 86][11, 6, 18, 21, 38, 38, 40, 46, 57, 86][6, 11, 18, 21, 38, 38, 40, 46, 57, 86]&#x27;&#x27;&#x27; 这个算法的时间复杂度为O(n^2)（最好的情况下数据本来有序，复杂度O(n)），其中n是待排序数组的长度。空间复杂度为O(1)，因为只使用了常数级别的额外空间。和选择排序算法是一样。 3. 插入排序对前i-1个数已经有序的情况下，将第i个数插入到合适的位置。 将第二个元素和第一个元素比较，如果第二个元素小于等于第一个元素，则将第一个元素向后移动，并将第一个元素执行插入，这样前两个元素就是有序的。接着进行第二轮比较，也就是将第三个元素依次和第二元素和第一个元素比较，并插入到合适的位置，使前三个元素有序。以此类推，迭代执行n-1次插入，每次插入都是将元素插入到有序序列中。 123456789101112131415161718192021222324252627def InsertionSort(a): n =len(a) for i in range(1, n): x = a[i] j = i - 1 while j &gt;= 0 and x &lt;= a[j]: # 若x&lt;=a[j]，则将a[j]往后移动，继续判断前一个数 a[j + 1] = a[j] j -= 1 a[j + 1] = x print(a)a = generate_random_sequence(10, 1, 100)print(a)InsertionSort(a)&#x27;&#x27;&#x27;输出结果：[95, 69, 37, 81, 21, 11, 53, 12, 22, 16][69, 95, 37, 81, 21, 11, 53, 12, 22, 16][37, 69, 95, 81, 21, 11, 53, 12, 22, 16][37, 69, 81, 95, 21, 11, 53, 12, 22, 16][21, 37, 69, 81, 95, 11, 53, 12, 22, 16][11, 21, 37, 69, 81, 95, 53, 12, 22, 16][11, 21, 37, 53, 69, 81, 95, 12, 22, 16][11, 12, 21, 37, 53, 69, 81, 95, 22, 16][11, 12, 21, 22, 37, 53, 69, 81, 95, 16][11, 12, 16, 21, 22, 37, 53, 69, 81, 95]&#x27;&#x27;&#x27; 这个算法的时间复杂度为O(n^2)，其中n是待排序数组的长度。空间复杂度为O(1)，因为只使用了常数级别的额外空间。 要改善选择排序的时间复杂度，可以考虑使用其他更高效的排序算法，例如快速排序（Quick Sort）或归并排序（Merge Sort）。这些算法的时间复杂度通常为O(nlogn)，比上面三个排序算法的O(n^2)更快。此外，还可以考虑使用内置的排序函数，如Python中的sorted()函数，它使用了优化的排序算法。如果待排序数组已经基本有序，可以通过引入一些优化措施来提高插入排序的性能，例如使用二分查找来确定插入位置，减少比较和交换的次数。 4. 归并排序利用分治的思想，采用递归的形式，对元素进行排序。当有两个长度为n的有序数组时，可以通过两个指针的移动，在O(n)的时间复杂度内，快速合并成一个有序数组。而这两个长度为n的有序数组，也可以通过两个n&#x2F;2的有序数组合并而来。因此，只要不断对数组进行分治，就可以把一个无序数组变成有序。 对数组拆分的过程用到递归，对数组组合的过程用到了合并，故命名归并排序。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950# 实现一个合并函数(a列表start到mid的元素，以及mid+1到end的元素，需要分别按照递增顺序排列)，执行后a列表start到end的元素也按照递增顺序排序def Merge(a, start, mid, end): tmp = [] l = start # l和r是两个区间的起点 r = mid + 1 # 当两个区间都未到达右端点，判断a[l]和a[r]，小的值放入临时列表，下标自增 while l &lt;= mid and r &lt;= end: if a[l] &lt;= a[r]: tmp.append(a[l]) l += 1 else: tmp.append(a[r]) r += 1 # 跳出循环时，剩余部分全部放入临时列表（因为跳出循环表示一个列表已经排完了，另一个列表剩下的也是有序的） tmp.extend(a[l : mid + 1]) tmp.extend(a[r : end + 1]) # 临时列表值拷贝回原列表a，完成一次合并 for i in range(start, end + 1): a[i] = tmp[i - start] print(start, end, tmp)# 实现一个递归函数（作用是拆分子数组）def MergeSort(a, start, end): # 待排序元素只有一个则返回 if start == end: return # 计算中点mid，整数除法，向下取整 mid = (start + end) // 2 MergeSort(a, start, mid) MergeSort(a, mid + 1, end) # 两次调用MergeSort()产生两个有序数组，之后对两个有序数组进行Merge()合并 Merge(a, start, mid, end)a = generate_random_sequence(10, 1, 100)print(a)MergeSort(a, 0, 9)&#x27;&#x27;&#x27;输出结果：[92, 87, 91, 24, 5, 36, 76, 62, 66, 89]0 1 [87, 92]0 2 [87, 91, 92]3 4 [5, 24]0 4 [5, 24, 87, 91, 92]5 6 [36, 76]5 7 [36, 62, 76]8 9 [66, 89]5 9 [36, 62, 66, 76, 89]0 9 [5, 24, 36, 62, 66, 76, 87, 89, 91, 92]&#x27;&#x27;&#x27; 其实也可以不用递归的方法，用迭代的方式来实现归并排序： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657# 实现一个合并函数def merge(arr, start, mid, end, temp): i = start j = mid k = start while i &lt; mid and j &lt; end: if arr[i] &lt; arr[j]: temp[k] = arr[i] i += 1 else: temp[k] = arr[j] j += 1 k += 1 while i &lt; mid: temp[k] = arr[i] i += 1 k += 1 while j &lt; end: temp[k] = arr[j] j += 1 k += 1 # 实现一个拆分子数组和合并的函数def merge_sort(arr): if len(arr) &lt;= 1: return arr # 创建一个临时数组用于存储排序结果 temp = [0] * len(arr) # 设置初始步长为1 step = 1 while step &lt; len(arr): # 按照步长将数组分为多个子数组进行合并 for start in range(0, len(arr), 2 * step): # 计算子数组的起始索引、中间索引和结束索引 mid = min(start + step, len(arr)) end = min(start + 2 * step, len(arr)) # 合并两个子数组 merge(arr, start, mid, end, temp) # 将临时数组的结果复制回原始数组 arr[:] = temp[:] # 增加步长 step *= 2 print(arr) return arrarr = generate_random_sequence(10, 1, 100)print(arr)sorted_arr = merge_sort(arr)&#x27;&#x27;&#x27;输出结果：[65, 50, 64, 33, 58, 7, 97, 87, 92, 52] （原序列）[50, 65, 33, 64, 7, 58, 87, 97, 52, 92] （步长2）[33, 50, 64, 65, 7, 58, 87, 97, 52, 92] （步长4）[7, 33, 50, 58, 64, 65, 87, 97, 52, 92] （步长8）[7, 33, 50, 52, 58, 64, 65, 87, 92, 97] （最终序列）&#x27;&#x27;&#x27; 在这个实现中，使用了一个临时数组temp来存储排序的结果。首先，设置初始步长为1，然后在每一轮迭代中，按照步长将原始数组分为多个子数组，并调用merge函数将这些子数组进行合并。合并后的结果存储在临时数组temp中。最后，将临时数组的结果复制回原始数组。迭代的思想在于通过不断迭代地合并子数组，直到得到完整的有序数组。 归并排序的时间复杂度是O(nlogn)，其中n是待排序数组的大小。空间复杂度是O(n)，因为在每次合并操作中需要创建一个临时列表来存储合并后的结果。 时间复杂度的算法可以参考如何计算归并排序算法的时间复杂度？ 空间复杂度的算法可以参考归并排序的空间复杂度 5. 桶排序生成一些桶，让数字散列在不同桶中，对桶中元素分别执行排序，再将元素依次取出。 比如建立4个桶，遍历所有数字并依次分散到4个桶中，保证第2个桶所有数字都大于第1个桶，第3个桶所有数字都大于第2个桶。每个桶中分别进行选择排序，4个桶的元素都有序之后，再将元素依次取出。 123456789101112131415161718192021222324252627282930313233343536373839404142434445# 确定桶内排序方法（这里用选择排序）def SelectionSort(a): n = len(a) for i in range(n - 1): min = i for j in range(i + 1, n): if a[j] &lt; a[min]: min = j a[i], a[min] = a[min], a[i]def BucketSort(a): # 确定列表元素最小值和最大值，定义桶数量 minV = min(a) maxV = max(a) bucketCount = 3 # 桶的数量 bucket = [[], [], []] # 计算每个桶的范围 perBucket = (maxV - minV + bucketCount) // bucketCount # 遍历列表每个元素，计算该元素放入的桶的索引，并且放入相应桶中 for num in a: bucketIndex = (num - minV) // perBucket bucket[bucketIndex].append(num) # 遍历每个桶，对每个桶的元素进行选择排序 for i in range(bucketCount): SelectionSort(bucket[i]) idx = 0 # 遍历每个桶，遍历桶中元素，将元素放回原列表 for i in range(bucketCount): for v in bucket[i]: a[idx] = v idx += 1 print(bucket) print(a) a = generate_random_sequence(10, 1, 100)print(a)BucketSort(a)&#x27;&#x27;&#x27;输出结果：[84, 66, 53, 83, 22, 15, 95, 6, 32, 70][[6, 15, 22, 32], [53], [66, 70, 83, 84, 95]][6, 15, 22, 32, 53, 66, 70, 83, 84, 95]&#x27;&#x27;&#x27; 桶的数量可以根据待排序元素的分布情况和排序的要求来决定，一般将待排序的元素均匀分配到桶中，桶内的排序算法可以是任意一种排序算法，取决于应用场景和性能要求。这个算法挺有意思的，可以看到每个桶的元素数量不一定一样，桶排序一般不会直接用，往往会做变形。 这个桶排序算法的时间复杂度为O(n + k^2)，其中n是待排序元素的数量，k是桶的数量。具体来说，遍历列表并将元素放入桶中的时间复杂度为O(n)，对每个桶进行选择排序的时间复杂度为O(k^2)，遍历每个桶并将元素放回原列表的时间复杂度为O(n)。因此，总的时间复杂度为O(n + k^2)，也就是O(n)。 空间复杂度方面，除了原始列表外，额外使用了一个大小为k的桶列表来存储元素。因此，空间复杂度为O(n + k)，也就是O(n)。 6. 计数排序利用哈希表的思想，对数据类型和范围有要求。 首先生成一个计数器数组，并且一开始所有值的计数都为0，然后遍历枚举原数组的所有元素，在元素值对应的计数器上执行计数操作。最后遍历枚举计数器数组，按照数组中元素个数放回到原数组中，这样所有元素都是升序排列了。 1234567891011121314151617181920212223242526272829def CountingSort(a): n = len(a) # 获取原数组中最大值，加1，作为计数器列表的实际长度 cntlen = max(a) + 1 # 生成一个值都为0的计数器列表 cnt = [0] * cntlen # 遍历枚举原数组所有元素，在对应的计数器上加1 for val in a: cnt[val] += 1 print(cnt) n = 0 # 遍历枚举计数器列表，cnt[val]代表val这个数有多少个，大于0，则将它的计数器减一，并放到原来的列表中。如果还有则继续迭代至计数为0 for val in range(0, cntlen): while cnt[val] &gt; 0: cnt[val] -= 1 a[n] = val n += 1a = generate_random_sequence(10, 1, 20)print(a)CountingSort(a)print(a)&#x27;&#x27;&#x27;输出结果[8, 14, 18, 13, 16, 17, 7, 10, 8, 15] （原列表）[0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1] （计数器列表）[7, 8, 8, 10, 13, 14, 15, 16, 17, 18] （计数排序后的列表）&#x27;&#x27;&#x27; 很明显，这种排序方式对数据有较大的限制，适用于数据范围较小的非负整数，且数据分布较均匀的情况（并不是说负数就完全不能用）。这很好理解，数据范围太广，会导致计数数组很大，占用大量内存空间，如果数据分布不均匀，计数的效率也会降低。 本质上来说这种计数排序算法是一种简单的桶排序算法，一个计数器就是一个桶。计数排序算法**时间复杂度是O(n)，空间复杂度是O(n)**。 7. 基数排序和上面的计数排序很像，本质上也是桶排序，只不过用数位来划分桶。 首先建立0-9的10个桶，对待排序的每个元素，按照个位数的值放入对应的桶中，按顺序遍历桶中元素，取出来放回原数组。对于待排序的每个数字，按照十位数的值放入对应桶中，按顺序遍历桶中元素，取出来放回原数组。以此类推，按照百位数、千位数的值放入桶中，遍历，取出，直到排序完成。 123456789101112131415161718192021222324252627282930313233def RadixSort(a): base = 1 # base为取的数位 maxv = max(a) # 从低到高遍历每个数位 while base &lt; maxv: bucket = [] # 每次遍历定义10个桶 for idx in range(10): bucket.append([]) # 每个原列表元素根据当前数位放入对应的桶中 for num in a: idx = num // base % 10 # //向下取整，%除法取余 bucket[idx].append(num) l = 0 # 遍历每个桶，按顺序放回原列表 for idx in range(10): for v in bucket[idx]: a[l] = v l += 1 print(a) base *= 10a = generate_random_sequence(10, 1, 1000)print(a)RadixSort(a)&#x27;&#x27;&#x27;输出结果：[119, 13, 832, 247, 117, 126, 996, 904, 112, 396] （原序列）[832, 112, 13, 904, 126, 996, 396, 247, 117, 119] （按照个位数放入桶中，遍历取出）[904, 112, 13, 117, 119, 126, 832, 247, 996, 396] （按照十位数放入桶中，遍历取出）[13, 112, 117, 119, 126, 247, 396, 832, 904, 996] （按照百位数放入桶中，遍历取出）&#x27;&#x27;&#x27; 上面的代码只适用于正整数，我们通过循环遍历每个数位，所以外层循环的次数是位数d。内层循环中，我们遍历了待排序数组并将每个元素放入对应的桶中，所以内层循环的时间复杂度是O(n)。最后，我们遍历每个桶，按顺序将元素放回原列表，这也需要O(n)的时间复杂度。 总的来说，基数排序的时间复杂度为O(d * (n + k))，其中d表示位数，n表示待排序数组的长度，k表示桶的数量。空间复杂度为O(dk+n)。 如果有负整数，可以把原数组元素分为正整数和负整数，分别进行基数排序后合并： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152def RadixSort(a): # 分离正数和负数 positive_nums = [num for num in a if num &gt;= 0] negative_nums = [-num for num in a if num &lt; 0] # 对正数部分进行基数排序 if len(positive_nums) &gt; 0: base = 1 maxv = max(positive_nums) while base &lt; maxv: bucket = [[] for _ in range(10)] for num in positive_nums: idx = num // base % 10 bucket[idx].append(num) positive_nums = [v for bucket_list in bucket for v in bucket_list] print(positive_nums) base *= 10 # 对负数部分进行基数排序 if len(negative_nums) &gt; 0: base = 1 maxv = max(negative_nums) while base &lt; maxv: bucket = [[] for _ in range(10)] for num in negative_nums: idx = num // base % 10 bucket[idx].append(num) negative_nums = [v for bucket_list in bucket for v in bucket_list] print(negative_nums) base *= 10 # 将负数部分反转 negative_nums = [-num for num in negative_nums[::-1]] print(negative_nums) # 合并正数和负数部分 sorted_a = negative_nums + positive_nums return sorted_aa = generate_random_sequence(10, -1000, 1000)print(a)a = RadixSort(a)print(a)&#x27;&#x27;&#x27;输出结果：[-918, -574, 385, -322, -164, 880, -158, -400, 607, -746] (原序列)[880, 385, 607][607, 880, 385][385, 607, 880] （基数排序后的正数序列）[400, 322, 574, 164, 746, 918, 158][400, 918, 322, 746, 158, 164, 574][158, 164, 322, 400, 574, 746, 918] （基数排序后取反的负数序列）[-918, -746, -574, -400, -322, -164, -158] （反转的成原来的负数序列）[-918, -746, -574, -400, -322, -164, -158, 385, 607, 880] （整合排序后的结果）&#x27;&#x27;&#x27; 8. 快速排序找到一个基准点，把小于它的和大于它的数分开，分别递归执行快速排序。也是用了分治的思想，属于冒泡排序的改进算法。 12345678910111213141516171819202122232425262728293031323334353637383940# 从a列表start到end之间寻找基准数下标，并且将所有小于等于它的数放在它左边，大于它的数放在右边def QuickSortPivot(a, start, end): pivot = start # 最左边数为基准数 j = start + 1 # j代表大于基准数的数的下标左边界 # 遍历列表所有数，如果当前数小于等于基准数，则a[i]和a[j]交换，j自增；大于则不处理（保证j下标以前的数小于等于基准数） for i in range(start + 1, end + 1): if a[i] &lt;= a[pivot]: a[i], a[j] = a[j], a[i] j += 1 # 遍历之后，基准数与小于基准数的最后一个数交换（这样就可以让基准数左边和右边分开，且基准数位置就是正确的了） a[pivot], a[j - 1] = a[j - 1], a[pivot] # 更新基准数下标 pivot = j - 1 print(a[pivot], a[start : pivot], a[pivot + 1 : end + 1]) return pivot# 快速排序函数，用来对区间[start, end]的数递归执行快速排序def QuickSort(a, start, end): if start &gt;= end: return # 获得基准数下标，分别递归计算左边和右边部分 pivot = QuickSortPivot(a, start, end) QuickSort(a, start, pivot - 1) QuickSort(a, pivot + 1, end)a = generate_random_sequence(10, 1, 100)print(a)QuickSort(a, 0, 9)print(a)&#x27;&#x27;&#x27;输出结果：[55, 100, 41, 99, 52, 90, 50, 71, 92, 44] # 原序列55 [44, 41, 52, 50] [90, 99, 71, 92, 100] # 基准数，基准数左边序列，基准数右边序列44 [41] [52, 50]52 [50] []90 [71] [99, 92, 100]99 [92] [100][41, 44, 50, 52, 55, 71, 90, 92, 99, 100] # 快速排序后的序列&#x27;&#x27;&#x27; 这种排序算法也有一个缺点，如果很不巧每次选取的基准点都是序列的最大值或者最小值，那么时间复杂度将会是最大值O(n^2)。 时间复杂度： 在每一次划分操作中，需要遍历待排序数组的所有元素，这需要O(n)的时间。 在每一次划分操作中，将数组划分为两个子数组，每个子数组的长度大约是原数组的一半（最好的情况）。因此，划分操作的时间复杂度为O(n)。 快速排序的递归深度为logn，因为每次划分操作都将数组的规模减半。 因此，最好的情况下时间复杂度为O(nlogn)，最坏情况下时间复杂度为O(n^2)。 空间复杂度： 快速排序使用递归调用来对子数组进行排序，每次递归调用都需要保存当前的函数调用信息（包括参数、局部变量等）。 快速排序的递归深度通常为logn，因此需要的栈空间也是logn。 因此，总的空间复杂度为O(logn)。最坏的情况下是O(n)，随机化基准值pivot可以防止最坏情况发生。 可以用随机快速排序，每次找基准点采用了一次随机，规避快速排序最坏的情况发生。 1234567891011121314151617181920212223242526272829303132333435363738394041import randomdef QuickSortPivot(a, start, end): # 引入区间中随机一个元素的索引值，和最左边的数交换（本来是最左边的数作为下一轮的基准数） randIdx = random.randint(start, end) a[start], a[randIdx] = a[randIdx], a[start] pivot = start j = start + 1 for i in range(start + 1, end + 1): if a[i] &lt;= a[pivot]: a[i], a[j] = a[j], a[i] j += 1 a[pivot], a[j - 1] = a[j - 1], a[pivot] pivot = j - 1 print(a[pivot], a[start : pivot], a[pivot + 1 : end + 1]) return pivotdef QuickSort(a, start, end): if start &gt;= end: return pivot = QuickSortPivot(a, start, end) QuickSort(a, start, pivot - 1) QuickSort(a, pivot + 1, end) a = generate_random_sequence(10, 1, 100)print(a)QuickSort(a, 0, 9)print(a)&#x27;&#x27;&#x27;输出结果：[24, 2, 44, 75, 32, 32, 68, 36, 9, 79]68 [9, 2, 44, 32, 32, 24, 36] [75, 79]36 [9, 2, 32, 32, 24] [44]9 [2] [32, 32, 24]24 [] [32, 32]32 [32] []79 [75] [][2, 9, 24, 32, 32, 36, 44, 68, 75, 79]&#x27;&#x27;&#x27; 9. 希尔排序本质是一种改进后的插入排序，又称“缩小增量排序”，增量在这里是指按照一定规则选择的间隔值（这里也是分组数），通常设置为数组长度的一半，每次缩小增量直到增量为1，组内排序方法为插入排序。每轮希尔排序的分组数越来越小，也就是说组内元素越来越多，最后一组就是整个数组。 123456789101112131415161718192021222324252627282930def ShellSort(a): n = len(a) # gap为增量，每隔gap值执行插入排序 gap = n // 2 while gap &gt; 0: for i in range(gap, n): x = a[i] j =i while j &gt;= gap: if x &lt; a[j - gap]: a[j] = a[j - gap] else: break j -= gap a[j] = x print(a) # 增量除2向下取整，继续迭代 gap = gap // 2a = generate_random_sequence(10, 1, 100)print(a)ShellSort(a)&#x27;&#x27;&#x27;输出结果：[20, 17, 75, 69, 34, 85, 38, 23, 57, 28] # 原序列[20, 17, 23, 57, 28, 85, 38, 75, 69, 34] # 第一次希尔排序，实际分了5组[20,85][17,38][75,23][69,57][34,28]并组内进行了插入排序[20, 17, 23, 34, 28, 57, 38, 75, 69, 85] # 第二次希尔排序，实际分了2组[20,23,28,38,69][17,57,85,75,34]并组内进行了插入排序[17, 20, 23, 28, 34, 38, 57, 69, 75, 85] # 第三次希尔排序，实际就是1组，所有组内元素插入排序&#x27;&#x27;&#x27; 希尔排序的时间复杂度是根据增量序列的选择而变化的。在最坏情况下（原序列为逆序），时间复杂度是O(n^2)；最好的情况下（原序列本身有序），时间复杂度是O(n)。平均情况下，希尔排序的时间复杂度可以达到O(nlogn)。 希尔排序的空间复杂度是O(1)，即不需要额外的空间来存储数据。希尔排序是一种原地排序算法，它通过交换元素的位置来实现排序，不需要额外的辅助数组或链表。因此，希尔排序的空间复杂度是常数级别的。 10. 堆排序堆是一颗完全二叉树，假设一个节点编号为idx，则左子树树根编号为idx*2，右子树树根编号为idx*2+1，把每个结点的编号和顺序表下标对应，就可以把这颗二叉树用顺序表形式存储起来。 对于一个给定的顺序表，首先构造成大顶堆（所有根结点大于左右子结点），方法是从顺序表的最后一个元素开始，自底向上构造堆。对于某个元素，取左右子树中的大者和该元素比较，如果比该元素大，则与之交换（该元素所在位置下沉）。由于每个堆左右子树都是满足堆的性质的，当枚举完根结点后大顶堆就构造完毕了。 这个时候堆顶的元素是最大的，把堆顶元素和顺序表最后一个元素进行交换（弹出），最大值就在最后一位了。继续利用堆的下沉操作，除了最后一位以外继续构造大顶堆，把次大元素交换到倒数第二位，依此类推，最终整个顺序表就是升序排列的有序顺序表了。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748# 实现大顶堆下沉操作，heap整个顺序表start到end之间组成合法的堆，start为根结点坐标def maxHeapify(heap, start, end): son = start * 2 # 左子树根 # 左子树存在，则取左子树和右子树根中的大者的下标，存储到son中 while son &lt;= end: if son + 1 &lt;= end and heap[son + 1] &gt; heap[son]: son += 1 # 如果结点点的值大于根结点的值，则将根结点和子结点交换（下沉），子结点迭代执行 if heap[son] &gt; heap[start]: heap[start], heap[son] = heap[son], heap[start] start, son = son, son * 2 # 如果子结点的值小于等于根结点的值，说明堆构造没问题，跳出循环 else: break# 实现堆排序操作def HeapSort(a): # 堆下标从1开始，列表下标从0开始，所以在0的位置加上占位符None heap = [None] + a # 定义堆顶元素下标root为1 root = 1 l = len(heap) # 从顺序表l//2个元素开始(因为堆的最后一层是没有子结点的)逆序枚举，自底向上构造堆 for i in range(l // 2, root - 1, -1): maxHeapify(heap, i, l - 1) # 堆顶和最后一个元素交换，除最后一个元素外，重构堆 for i in range(l - 1, root, -1): heap[i], heap[root] = heap[root], heap[i] maxHeapify(heap, root, i - 1) print(heap[root:])a = generate_random_sequence(10, 1, 100)print(a)HeapSort(a)&#x27;&#x27;&#x27;输出结果：[3, 52, 44, 78, 60, 100, 54, 61, 38, 1] # 原数列[78, 61, 54, 52, 60, 44, 3, 1, 38, 100] # 最大数为100，1-9位重新构造大顶堆[61, 60, 54, 52, 38, 44, 3, 1, 78, 100] # 次大数为78，1-8位重新构造大顶堆[60, 52, 54, 1, 38, 44, 3, 61, 78, 100] # 第三大数为61，1-7重新构造大顶堆[54, 52, 44, 1, 38, 3, 60, 61, 78, 100] .[52, 38, 44, 1, 3, 54, 60, 61, 78, 100] .[44, 38, 3, 1, 52, 54, 60, 61, 78, 100] .[38, 1, 3, 44, 52, 54, 60, 61, 78, 100] .[3, 1, 38, 44, 52, 54, 60, 61, 78, 100] .[1, 3, 38, 44, 52, 54, 60, 61, 78, 100] # 最后一次构造大顶堆，只有一个最小元素1，此时数列已经升序排好&#x27;&#x27;&#x27; 堆排序的时间复杂度为O(nlogn)，n是待排序元素的数量，空间复杂度为O(1)，因为它是原地排序算法，不需要额外的空间来存储元素。 最后是一张来自菜鸟教程的排序算法总结图：","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"编程自学","slug":"编程自学","permalink":"http://www.shelven.com/categories/%E7%BC%96%E7%A8%8B%E8%87%AA%E5%AD%A6/"}],"tags":[{"name":"python","slug":"python","permalink":"http://www.shelven.com/tags/python/"}]},{"title":"群体基因组学——GWAS分析","slug":"群体基因组学——GWAS分析","date":"2023-06-20T10:40:24.000Z","updated":"2023-06-24T07:28:17.000Z","comments":true,"path":"2023/06/20/a.html","link":"","permalink":"http://www.shelven.com/2023/06/20/a.html","excerpt":"本篇笔记主要记录如何在linux命令行中用TASSEL5和PLINK2软件做GWAS分析，以及如何可视化GWAS结果（在R中绘制曼哈顿图和QQ图）。关于GWAS是做什么的，以及基本概念介绍可以看上一篇笔记介绍：群体基因组学——概述和图表详解 - 我的小破站 (shelven.com)","text":"本篇笔记主要记录如何在linux命令行中用TASSEL5和PLINK2软件做GWAS分析，以及如何可视化GWAS结果（在R中绘制曼哈顿图和QQ图）。关于GWAS是做什么的，以及基本概念介绍可以看上一篇笔记介绍：群体基因组学——概述和图表详解 - 我的小破站 (shelven.com) PLINK和TASSEL都是做GWAS分析用的经典软件，两个软件都有linux版本和windows版本，我这里是在linux集群环境中跑的分析流程，所有软件下载linux版本，两款软件可以在下方官网中安装： PLINK 2.0 (cog-genomics.org)、Tassel TASSEL官网有tassel pipeline命令行的帮助文档，一些常用的参数可以参考Tassel5PipelineCLI.pdf (bytebucket.org) TASSEL中文文档可以参考本站Tassel5中文操作手册.pdf 1. 数据格式plink的数据格式有两套，每套各自的前缀名称相同，一套后缀为.bed、.bin和.fam，另一套后缀为.map和.ped，后面的分析以第一套为例，读取速度比较快。 那么这三个是怎么来的呢？我们做群体重测序后，通过GATK等软件做变异检测最终会生成一个VCF文件，通过软件plink可以将VCF文件转化成上面的三个文件，分别展示一下三个文件的内容和结构： fam文件（家族信息文件）有6列，分别为家系编号、个体编号、父系编号（0表示信息缺失）、母系编号（0表示信息缺失）、性别编号（1表示男，2表示女，0表示未知性别）、表型值（1表示对照，2表示病例，0&#x2F;-9或者其他非数字表示信息缺失） bim文件（个体信息文件）有6列，分别为染色体编号、SNP标识、以摩根或厘摩为单位的位置（可以用0）、碱基对坐标、Allele1和Allele2（通常是主效等位基因） bed文件为二进制文件 转化成这三个文件主要是为了下一步更快过滤数据，因为bed是二进制文件，计算机处理起来更快。 以上数据来源是贺师兄做的棉花重测序样本的部分变异信息文件。 2. 基因型数据清洗（使用PLINK）使用plink软件过滤掉最小等位基因频率（Minor Allele Frequency，MAF）小于0.05的变异位点，在关联分析中MAF值太小会造成假阳性。比如说，一个基因座上有两个等位基因A和B，A在群体中的频率为0.6，B在群体中的频率为0.4，那么MAF值就是0.4，可以想到一个基因座上MAF值越小，基因座上的等位基因越单一，MAF太低的位点贡献的信息很少，不与表型做关联分析。 1234567# 过滤MAF小于0.05的SNP，重新生成.bed、.bin和.fam文件## --make-bed 创建PLINK1二进制文件集plink --bfile Course_GWAS --maf 0.05 --make-bed --out Course_GWAS_maf0.05# 重新将三个过滤后的文件转化成vcf文件## --recode 创建新文件集，可选格式&#x27;vcf&#x27;，&#x27;vcf-fid&#x27;，和&#x27;vcf-iid&#x27;plink --bfile Course_GWAS_maf0.05 --recode vcf-iid --out GWAS_vcf 可以通过查看过滤前后的bim文件，统计过滤了多少位点（plink软件在屏幕上的标准输出也会显示）： 123456789101112131415161718192021222324# plink输出结果PLINK v2.00a5LM 64-bit Intel (7 Jun 2023) www.cog-genomics.org/plink/2.0/(C) 2005-2023 Shaun Purcell, Christopher Chang GNU General Public License v3Logging to Course_GWAS_maf0.05.log.Options in effect: --bfile Course_GWAS --maf 0.05 --make-bed --out Course_GWAS_maf0.05Start time: Tue Jun 20 14:38:58 20231837 MiB RAM detected, ~914 available; reserving 850 MiB for main workspace.Using up to 2 compute threads.216 samples (0 females, 0 males, 216 ambiguous; 216 founders) loaded fromCourse_GWAS.fam.10000 variants loaded from Course_GWAS.bim.Note: No phenotype data present.Calculating allele frequencies... done.3030 variants removed due to allele frequency threshold(s)(--maf/--max-maf/--mac/--max-mac).6970 variants remaining after main filters.Writing Course_GWAS_maf0.05.fam ... done.Writing Course_GWAS_maf0.05.bim ... done.Writing Course_GWAS_maf0.05.bed ... done. 需要注意下我这里使用的表型数据都是处理好的，所以只对基因型数据做过滤就行，如果自己有表型数据还要做一下表型数据清洗，比如删除异常值等等。 生成的GWAS_vcf.vcf用于下一步关联分析。 3. 关联分析（使用TASSEL5）PLINK软件也可以做关联分析，网上也能找到一把教程，但是PLINK只能做GLM模型的关联分析，现在文献中用的比较多的软件是TASSEL5，接下来演示用命令行的Tassel Pipeline做关联分析。 3.1 计算亲缘关系矩阵12345678# -Xmx10G 控制最大堆（heap size）的大小为10G# -importGuess 使用Tassel的importGuess函数载入文件# -KinshipPlugin 调用亲缘关系矩阵插件，与 -endPlugin 联用# -method 这里指定计算IBS亲缘关系矩阵# -export 指定输出文件，输出文件类型与input数据有关，比如基因型表默认Hapmap格式，距离矩阵默认SqrMatrix# -exportType 指定输出文件类型，有Hapmap, HDF5, VCF, Plink, SqrMatrix等等perl /opt/TASSEL5/run_pipeline.pl -Xmx10G -importGuess GWAS_vcf.vcf -KinshipPlugin -method Centered_IBS -endPlugin -export kinship.txt -exportType SqrMatrix 生成的216个样本的亲缘关系矩阵kinship.txt如下： 3.2 主成分分析123456# -fork&lt;id&gt; 用于区分不同的pipeline，代表一个pipeline的起始，后面可以是数字或者字符（非空格）# -PrincipalComponentsPlugin 调用主成分分析插件，同样和 -endPlugin 联用# -covariance true 计算协方差矩阵（用来识别主成分），两种方法，相关系数(correlation)或者协方差(covariance)# -runfork&lt;id&gt; 这个参数已经可以不需要了，pipeline会自动执行需要的forkperl /opt/TASSEL5/run_pipeline.pl -fork1 -importGuess GWAS_vcf.vcf -PrincipalComponentsPlugin -covariance true -endPlugin -export pca -runfork1 默认情况下会生成的PCA结果主要展示前5个主成分，且这一步会生成三个txt文件，PCA结果展示在第一个文件pca1.txt： 3.3 可视化亲缘关系矩阵和PCA结果（群体结构分析）在拿到这两个矩阵之后就可以通过R可视化结果，首先是亲缘关系矩阵热图： 1234567891011library(data.table)kinship = fread(&quot;kinship.txt&quot;,skip = 3) # 前3行不用读入setDF(kinship) # 将data.table格式转化成data.frame格式row.names(kinship) = kinship$V1kinship$V1 = NULL colnames(kinship) = row.names(kinship) # 第一列做行名，删除第一列，行名设置为列名 kinship = as.matrix(kinship) # 转成矩阵格式pdf(&quot;kinship.pdf&quot;)heatmap(kinship,labRow=F,labCol=F) # 绘制热图，不在行和列上显示标签dev.off() 用颜色深浅不同表示每个样本之间的亲缘关系远近，颜色越深亲缘关系越近。 PCA结果作图： 123456789library(data.table)library(ggplot2)pca_re = fread(&quot;pca1.txt&quot;,skip = 2)plot = ggplot(pca_re, aes(x=PC1, y=PC2)) + geom_point(size=2) + geom_hline(yintercept = 0) + # 添加x坐标 geom_vline(xintercept = 0) + # 添加y坐标 theme_bw()ggsave(plot =plot, filename=&quot;2D-PCA.pdf&quot;) # 以第一主成分为X轴，第二主成分为y轴作图即可 这里的群体结构差异有但不能很好分类。如果做群体结构分析的时候可以分成明显的几个不同的部分，那就要考虑后续做GWAS分析过程中要考虑群体结构的分层问题了。这里我们只是拿部分数据跑个简单的流程，继续往下。 3.4 基于GLM模型进行GWAS分析现在分别有了如下的基因型数据（GWAS_vcf.vcf）、表型数据（phenotype.tassel.txt），就可以以PCA结果作为协变量，基于GLM模型进行GWAS分析： 12345# -excludeLastTrait 移除表型数据的最后一列（不太明白什么意思？官网说可用于删除的最后一列用于MLM或GLM的群体结构）# -combine&lt;id&gt; 用在新的pipneline开头，将多个来自不同pipeline的数据集组合到一起，后面使用 -input&lt;id&gt; 指定，以 -intersect 结尾# -FixedEffectLMPlugin 使用GLM模型perl /opt/TASSEL5/run_pipeline.pl -fork1 -importGuess GWAS_vcf.vcf -fork2 -importGuess phenotype.tassel.txt -fork3 -importGuess pca1.txt -excludeLastTrait -combine5 -input1 -input2 -input3 -intersect -FixedEffectLMPlugin -endPlugin -export glm 主要结果为glm1.txt，结果如下： 我们主要用到的数据是： 第一列：表型 第二列：SNP名称 第三列：染色体编号 第四列：处于染色体的位置 第六列：p值 3.5 基于MLM模型进行GWAS分析在tassel中运行MLM模型和GLM模型相似，MLM模型需要亲缘关系矩阵来定义个体之间的关系，以PCA和kinship作为协变量，基于MLM模型进行GWAS分析： 123# -mlm -mlmVarCompEst P3D -mlmCompressionLevel Optimum 使用P3D和最优水平压缩perl /opt/TASSEL5/run_pipeline.pl -fork1 -importGuess GWAS_vcf.vcf -fork2 -importGuess phenotype.tassel.txt -fork3 -importGuess pca1.txt -fork4 -importGuess kinship.txt -combine5 -input1 -input2 -input3 -intersect -combine6 -input5 -input4 -mlm -mlmVarCompEst P3D -mlmCompressionLevel Optimum -export mlm 主要结果为mlm6.txt（前5个是5个表型的分析数据），结果如下： 我们主要用到的数据是： 第一列：表型 第二列：SNP名称 第三列：染色体编号 第四列：处于染色体的位置 第七列：p值 3.6 计算核酸多态性值1vcftools --vcf GWAS_vcf.vcf --site-pi --out pi 用vcftools就可以根据vcf文件统计平均每个位点的π值。 4. GWAS结果可视化1234567891011121314151617181920212223242526272829303132# qqman包绘制曼哈顿图和qq图library(qqman)library(data.table)glm &lt;- fread(&quot;glm1.txt&quot;)[,c(&quot;Trait&quot;,&quot;Marker&quot;,&quot;Chr&quot;,&quot;Pos&quot;,&quot;p&quot;)]names(glm) &lt;- c(&quot;Trait&quot;,&quot;SNP&quot;,&quot;CHR&quot;,&quot;BP&quot;,&quot;P&quot;)mlm &lt;- fread(&quot;mlm6.txt&quot;)[,c(&quot;Trait&quot;,&quot;Marker&quot;,&quot;Chr&quot;,&quot;Pos&quot;,&quot;p&quot;)]mlm &lt;- na.omit(mlm) # 需要注意mlm结果文件有一行是NaN值，去除names(mlm) &lt;- c(&quot;Trait&quot;,&quot;SNP&quot;,&quot;CHR&quot;,&quot;BP&quot;,&quot;P&quot;) # 自定义作图函数plot_func &lt;- function(data,trait,model)&#123; pdf(paste(model,&quot;_&quot;,trait,&quot;.manhttan.pdf&quot;,sep = &quot;&quot;), width = 11,height = 6) manhattan(data[Trait==trait,2:5], # 曼哈顿图需要的是&quot;SNP&quot;,&quot;CHR&quot;,&quot;BP&quot;,&quot;P&quot;这几列信息 suggestiveline = F, genomewideline = F) # remove the suggestive(Default -log10(1e-5)) and genome-wide(Default -log10(5e-8)) significance lines，也就是去掉两条阈值线 dev.off() pdf(paste(model,&quot;_&quot;,trait,&quot;.qq.pdf&quot;,sep = &quot;&quot;)) qqman::qq(data[Trait==trait,]$P) # qq图只要获得每个SNP位点的p值就可以作图 dev.off()&#125;# 区分下不同表型for (trait in unique(glm$Trait))&#123; plot_func(glm,trait,&quot;glm&quot;)&#125;for (trait in unique(mlm$Trait))&#123; plot_func(mlm,trait,&quot;mlm&quot;)&#125; 生成各个表型GWAS分析的曼哈顿图和qq图： 随便查看一个MLM模型的GWAS曼哈顿图和qq图结果：","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"群体基因组学","slug":"群体基因组学","permalink":"http://www.shelven.com/categories/%E7%BE%A4%E4%BD%93%E5%9F%BA%E5%9B%A0%E7%BB%84%E5%AD%A6/"}],"tags":[{"name":"群体基因组学","slug":"群体基因组学","permalink":"http://www.shelven.com/tags/%E7%BE%A4%E4%BD%93%E5%9F%BA%E5%9B%A0%E7%BB%84%E5%AD%A6/"},{"name":"Tassel5","slug":"Tassel5","permalink":"http://www.shelven.com/tags/Tassel5/"},{"name":"Plink","slug":"Plink","permalink":"http://www.shelven.com/tags/Plink/"}]},{"title":"群体基因组学——概述和图表详解","slug":"群体基因组学——概述和图表详解","date":"2023-06-16T08:47:16.000Z","updated":"2023-06-16T08:57:50.000Z","comments":true,"path":"2023/06/16/a.html","link":"","permalink":"http://www.shelven.com/2023/06/16/a.html","excerpt":"最近看群体遗传学的文章，苦于不能理解研究者做的另人眼花缭乱的图表……哎，该补补基础了。这篇笔记先从樊龙江主编的《植物基因组学》教材开始学习基础概念，有部分摘自知乎和一些文献，加上这个领域论文图表的解读和自己的理解做汇总整理。下一篇笔记自己实操跑一下GWAS流程。","text":"最近看群体遗传学的文章，苦于不能理解研究者做的另人眼花缭乱的图表……哎，该补补基础了。这篇笔记先从樊龙江主编的《植物基因组学》教材开始学习基础概念，有部分摘自知乎和一些文献，加上这个领域论文图表的解读和自己的理解做汇总整理。下一篇笔记自己实操跑一下GWAS流程。 1. 群体基因组学概述群体基因组学，将基因组数据和技术与群体遗传学理论体系结合，通过覆盖全基因组范围的多态性推测全基因组效应和位点特异性效应。说人话，这门学科的作用就是通过检测SNP等的信息来回答关于物种起源、进化以及环境适应的分子机制。 群体基因组研究的基础是高质量的群体基因型数据，在获得群体原始测序数据后，如何高效准确的进行变异检测和群体基因分型是后续研究的关键（因为要用到大量的测序数据，所以也很烧钱）。 变异检测的流程可分为数据质控——读序联配——变异检测——基因分型 上图的bam文件通过软件GATK检测结构变异或者SNP就是变异检测，这部分内容我前面组装三代基因组测序数据中使用过，因为我只有一个二倍体基因组，所以当时也没用到基因分型，GATK用法可以看我的这篇笔记： 0基础学习三代基因组测序组装（9）——GATK检测植物基因组SNP和INDEL变异 - 我的小破站 (shelven.com) 2. 群体基因组进化分析方法2.1 群体系统发生树和群体结构群体发生树反映特定群体中个体间亲缘关系。一般我们做进化树都是用单拷贝基因，而做群体研究构建进化树用了整个基因组数据信息（比如全基因组SNP、Indel、SV等），能一定程度抵消横向基因转移和单个基因速率差异带来的分析误差，比单基因构建的结果更接近真实进化关系。全基因组SNP构建进化树（一般是把SNP merge到一起），个体间两两比较，根据SNP差异计算个体差异距离，构建群体差异矩阵。软件有MEGA、PHYLIP、FastTree等。 还有一个非常重要的概念：群体遗传结构，指基因型或者基因在空间和时间上的分布模式，包括种群内的遗传变异和种群间的遗传分化。种群遗传结构反映物种进化历史中的一些特殊进化事件，软件有Structure、Frappe等。总体流程确定亚群数（K），然后计算各个体归属第K亚群的概率Q值。以及主成分分析（PCA）也常用于群体结构划分。 上图是华农王茂军老师课题组做的不同二倍体棉花的物种发生树和群体结构。 2.2 群体遗传分化2.2.1 固定系数 Fst在明确一个物种存在群体结构后，通产需要量化该物种亚群间的分化程度。固定系数（Fst）反映群体等位基因杂合性水平，Fst越大，种群间遗传分化程度越大。 Fst&#x3D; (Ht-Hs）&#x2F;HtHs:亚群体中的平均杂合度Ht:复合群体中的平均杂合度 2.2.2 核酸多态性 𝝅做群体的文献中经常出现这个指标类似𝝅野生/𝝅栽培这样的系数，核酸多态性（Nucleotide diversity）是用于衡量群体的多态性的，为群体内平均每两个样本每个位点的差异核苷酸数量。一般称为𝝅，自然群体多态性一般高于栽培群体。 需要注意下这个𝝅的单位，一般都在 10^(-3) 这个数量级。 这些群体分化的相关系数计算可以用软件Arlequin、FSTAT、VCFtools等。 2.3 基因流（渐渗）基因流（也称为基因迁移）指从一个物种的一个种群向另一个种群引入遗传物质，从而改变群体的遗传组成。 当一个种群中的一个个体迁移到另一个群体，就会把基因带到新的群体，也就是产生“基因的流动”。基因流越大，群体间的相似性越大，会导致群体间基因频率和基因型频率呈现哈迪-温伯格平衡（在一个随机交配的大群体中，没有突变、选择等外界环境因素的影响，基因频率和基因型频率世代恒定）。 自然选择和遗传漂变会使群体之间的差异增加，而基因流的作用是“弱化”群体间的遗传差异，群体之间趋于一致。在植物中，种子扩散和花粉传播是植物基因流的最主要方式。从上面的描述也能看出，基因流与Fst成反比；与种群间地理距离成反比。检测方法主要有D-统计（ABBA-BABA）、Treemix、Migrate-N等。 2.4 种群动态和进化历史种群动态指种群大小或密度随时间或空间的变化。 有效群体大小（Ne）指与实际群体有相同基因频率方差或者相同杂合度衰减率的理想群体含量，通常小于绝对群体大小，决定群体平均近郊系数增量大小，反映群体遗传结构中基因的平均纯和速度。种群动态理论与方法主要包括种群大小及其变化、种群生长模式的量化描述，以及引起种群变化的外在环境因素。基于全基因组的种群历史动态分析方法主要有PSMC、MSMC等。 上图展示了不同地理来源的拟南芥的有效群体大小变化。可以看到拟南芥在9万～12万年前，由祖先群体在非洲开始分离形成亚群。欧亚祖先群体在 8 万年前从非洲分化形成，然后欧亚拟南芥群体在4万年前进一步分化。这一模式与包括人类在内的多种物种分化时间模式非常相似，这意味着间冰期和洪积世时期（即9万～12万年前）的气候事件对物种分布十分重要。 3. 基因组选择信号自然群体区别于栽培群体的最大特征是丰富的遗传多样性。草本作物祖先自然群体多态性（𝝅）一般在 0.003~0.008，高于相应的驯化作物遗传多态性。 遗传瓶颈效应：由于环境骤变或人类活动，某一生物种群的规模迅速减少，仅有少部分个体能够顺利通过瓶颈事件，之后可能经历一段恢复期并产生大量后代。由于连锁不平衡（LD）的作用，不仅仅是驯化基因的多态性降低，其侧翼区域遗传多样性也会降低。 有害性突变（deleterious SNP，dSNP）指导致生物个体的整体适合度（fitness）减低的突变。植物被驯化的过程中，基因组上有害突变的数量、频率会不断增加和累积，导致驯化后的作物在原本自然环境中适合度降低，称为作物的“驯化成本”。 在作物群体基因组中，一个明显的特征是存在大量来自野生祖先种的遗传渐渗。来自野生群体的基因渗入可以有效增加栽培种的环境适应性。 选择分析可以在宏观和微观两个尺度下进行选择基因和信号鉴定。 3.1 宏观进化尺度 宏观进化尺度 基于基因：Ka&#x2F;Ks（非同义替换比同义替换）、MKT检验（比较物种内和物种间的Ka&#x2F;Ks值） 基于进化速率：HKA 宏观尺度检测选择信号的方法，通常在亲缘关系相近的物种之间进行同源基因序列的比较，判断基因是否在某一物种或进化分支上存在加速进化的情况。 判断加速进化的背景指标是Ka&#x2F;Ks，比较每个位点区域中非同义替换率与每个位点的同义替换率。同义突变总体是中性进化的（中性基准），如果存在过多的非同义突变意味着存在倾向于蛋白序列改变的正向选择（正选择表现为固定某种有利等位基因，负选择表现为清除不利的等位基因）。MKT检验本质是比较物种内和物种间的Ka&#x2F;Ks值，中性情况下相等，如果物种间的比值显著高于物种内比值，意味着物种中存在正向选择信号，如果是在作物驯化中，可能是人工选择的信号。 3.2 微观进化尺度 微观进化尺度 基于等位基因频谱：Tajima’s D, Fu andLi’sD, Fay and Wu’sH, CLR, Hp 基于连锁不平衡：LRH、iHS、连锁不平衡衰减（LDD）、IBD分析 基于群体分化：LKT、LSBL 组合方法：CLR、XP-CLR（适合SNP大数据集）、DH检验、CMS 微观尺度鉴定方法，在正向选择的作用下，有利等位基因在群体中频率会变高甚至固定。当有利等位基因和周围变异达到较高频率的时候，这段区间在群体水品就会呈现遗传多态性降低的现象，也就是选择性清除（selective sweep）。 比如，栽培物种在选择性清除区域的遗传多样性显著降低，就是驯化区域的典型特征。选择性清除还会使连锁不平衡区块延长、群体间固定指数增大、Tajima‘s D值为负且显著偏离零。中性模型为基础的检测方法很多，Tajima‘s D检验是最经典的。 总体来说，选择信号检测原理和方法可以分为以下5类： A 基于群体多态性。原理：受选择位点两侧序列多态性因连带效应保持很低水平。在驯化选择区间内，𝝅野生&#x2F;𝝅栽培的值变高。 B 基于等位基因频谱。原理：有利突变不断在群体中固定，当完全固定时，周围可能由于随机突变出现稀有等位基因 C 基于连锁不平衡。原理：选择性清除会引起包含等位基因的单倍体纯和性提高，与周围变异的连锁不平衡程度变高。当群体处于正向选择作用下时，基因突变及其连锁位点在正选择的作用下，在短时间内会达到较高频率，形成大片段的纯合单倍型。 D 基于群体分化。随着受选择的等位基因频率上升，导致与原群体的Fst变大。Fst的取值范围为0-1，1表示群体间完全分化的位点，0表示在群体间完全没有分化的位点。 E 组合方法。 在检测选择信号时，需要考虑遗传漂移（genetic drift）对选择信号的影响，为了降低该影响，通常在全基因组扫描窗口的基础上，仅考虑极端值（前5%）区域作为选择位点（这点很重要，后面实操的时候会说）。 选择信号检测方法都是基于自下而上的，通过群体基因组扫描鉴定具有选择信号的基因组区域，从而挖掘可能与某种表型或者适应性相关联的基因，假阳性高。 也可以用自上而下的方法进行佐证，比如获得该物种多个时间点或者多个世代的群体基因组数据，就可以直接检测该位点等位基因频率变化加以验证，比如用QTL、GWAS等传统定位方法。 4. 连锁不平衡（LD）连锁不平衡理论对群体研究非常重要，前面说到基于连锁不平衡的原理检测选择信号，这里再加深一下理解。 连锁不平衡（linkage disequilibrium，LD）：在某一群体中，两个基因同时遗传的频率大于随机组合的频率。 连锁不平衡的三个衡量指标： D值：D &#x3D; P(AB) - P(A) X P(B)，也就是实际概率减去独立遗传的理论概率，D值绝对值越大，连锁程度越大。 D‘值：理解维归一化之后的D值，归一化之的值可以用于比较不同基因连锁程度的大小。0表示完全连锁平衡，独立遗传；1表示完全连锁不平衡。 r平方 r值定义如下： 通常文献里也是用r平方来表征连锁不平衡程度，r平方等于0时，表示完全连锁平衡，独立遗传；r平方等于1时, 表示完全连锁不平衡。 这里就要引出另一个很重要的概念——LD衰减，也是做GWAS出现最多的图。 4.1 LD衰减曲线LD衰减指位点间由连锁不平衡到连锁平衡的演变过程；LD衰减的速度在不同物种间或同物种的不同亚群间差异非常大。所以，通常会使用“LD衰减距离”来描述LD衰减速度的快慢。 衰减距离，是当平均LD系数衰减到一定大小的时候，对应的物理距离。（这个一定大小是没有特别规定的，比如可以到一半大小，可以到0.5，可以到0.1） 上面的图描绘了不同水稻群体的LD衰减曲线，横坐标是物理距离（kb），纵坐标是LD系数（r^2）。 LD衰减曲线就是利用曲线图来呈现基因组上分子标记间的平均LD系数随着标记间距离增加而降低的过程。大概的计算原理就是先统计基因组上两两标记间的LD系数大小，再按照标记间的距离对LD系数进行分类，最终计算出一定距离的分子标记间的平均LD系数大小。 我们看左边的图，Japonic这个亚群（红色的线）在基因组100Kb距离的平均LD系数大小为0.35，到了200kb距离，对应的LD系数降低到了不到0.3。LD衰减速度在不同亚群是不一样，Japonica衰减速度最慢（其他亚群在物理距离很小的时候LD系数降就从0.35衰减到了0.3），衰减距离最大。 知道这个衰减速度快慢和衰减距离有什么用呢？ LD衰减速度越慢，形成的单体型区块越大，关联分析中需要的群体和标记数目越少，但定位越不精准。此外，同一个连锁群上，LD衰减地慢说明该群体受到选择，一般来说，野生群体比驯化改良群体LD衰减快，遗传多样性高。而驯化选择会导致群体遗传多样性下降，位点间的相关性（连锁程度）加强。所以，驯化程度越高，选择强度越大的群体，LD衰减速度越慢。 也就是说左边这个图的4个水稻品种中，Japonic是驯化程度最高的。 LD衰减距离应用： 辅助分析进化和选择，同一个连锁群上，LD衰减地慢说明该群体受到选择。 一般而言，两个位点在基因组上离得越近，相关性就越强，LD系数就越大。反之，LD系数越小。也就是说，随着位点间的距离不断增加，LD系数通常情况下会慢慢下降。 一般而言，LD系数大于0.8就是强相关。如果LD系数小于0.1，则可以认为没有相关性。如果LD衰减到0.1这么大的区间内都没有标记覆盖的话，即使这个区间有一个效应很强的功能突变，也是检测不到关联信号的。所以，通常可以通过比较LD衰减（到0.1）距离和标记间的平均距离，来判断标记是否对全基因组有足够的覆盖度。 如果GWAS检测到显著关联的区间后，则可以通过进一步绘制局部的LD单倍型块图（这个后面讲），来进一步判断显著相关的SNP和目标基因间是否存在强LD关系。 基因组上那些受选择的区域相比普通的区域，LD衰减速度也是更慢的。 判断GWAS所需标记量，决定GWAS的检测效力以及精度； GWAS标记量 &#x3D; 基因组大小 &#x2F; LD衰减距离。 4.2 单倍型块（Haplotype Block）描述LD不平衡的另一个常用的图就是LD单倍型块图。 单倍型块，即连锁不平衡区域，是指同一条染色体上处于连锁不平衡状态的一段连续的区域。单倍型块分析可以用于筛选tag SNP、确定候选基因的范围等。 颜色从白色到红色，代表连锁程度从低到高，方框中的数值为LD系数r^2，为了美观，这里将 r2^2乘以了100。 上面的图中每个正方形是两个相邻SNP的LD值计算结果，如果大于设定的阈值（这里估计是大于94），那么就构成一个block，图中黑框为一个block，共有三个。可以从三个block中分别选择一个SNP作为Tag SNP来分别代表这三个block。 5. 全基因组关联分析（GWAS）全基因组关联分析（Genome-Wide Association Study, GWAS），以连锁不平衡（linkage disequilibrium, LD）为基础，通过分析数百个或者数千个个体的高密度分子标记的分离特征（一般是上万个或者上百万个SNP标记），筛选与复杂性状表现型变异相关联的分子标记，进而分析分子标记对表现型的遗传效应。 插一句题外话，GWAS中最后一个字母已经是study，在写英文文章的时候不要写成GWAS study…… 传统的QTL定位研究通常以2个亲本杂交群体为研究对象, 通过连锁作图定位目标性状位点。局限性是投入大量资源构建数量庞大的重组群体。而关联分析则可以利用个体在全基因组范围的遗传变异标记进行多态性检测，获得更高分辨率的定位结果（单碱基水平）, 遗传变异来源也更为广泛，根据统计量或者显著性P值筛选最有可能影响该性状的遗传变异，往往能定位到比双亲本作图群体中更多的性状关联位点（这可节省太多时间了）。 GWAS的局限性在于可以确定相关位点但不能直接确定基因本身，假阳性也比较高。解决这一局限性有两种策略，一是算法，二是群体的选取。 5.1 GWAS算法模型目前用的算法模型有以下几种： 1.GLM （Generalized linear model；一般线性模型） 2.MLM （Mixed linear model；混合线性模型） 3.GEMMA、CMLM、SUPER、FarmCPU、Blink 主要介绍前两个，GLM模型以群体结构矩阵 Q或主成分分析矩阵PCs为协变量做回归拟合。 如果两个表型差异很大，但群体本身还含有其他的遗传差异（如地域等），则那些与该表型无关的遗传差异也会影响到相关性。MLM模型可以把群体结构矩阵 Q、亲缘关系矩阵（kinship）或联合利用主成分分析矩阵PCs和亲缘关系矩阵为协变量，把这种位点校正掉（也就是抑制假关联）。 其他模型大多是基于GLM和MLM进行优化，比如GEMMA 计算个体基因型相似性矩阵，排除了LD的干扰。其他暂时就不多说了，感兴趣再深入研究研究。 5.2 GWAS群体选取群体中丰富的表型变异和充分的遗传重组是GWAS 成功的关键条件，有以下选取策略： (1) 群体内没有明显的群体结构，样本间没有过近的亲缘关系，同时具有丰富的表型变异 (2) 群体来自具有一定水平遗传分化的不同类群(如不同亚种与亚群)，具有丰富的遗传和表型变异，但同时不同类群之间存在频繁的遗传交流，保证目标性状在不同类群内部也存在一定水平的变异 目前GWAS样本量普遍大于100份 前面也说过，同时要考虑GWAS标记量，计算公式GWAS标记量 &#x3D; 基因组大小 &#x2F; LD衰减距离。 在用GATK做基因分型的时候也要注意，结果一般保留maf值大于0.05的 SNP，通常认为这是在驯化选择区间内。 5.3 GWAS结果图解还是先说明一下，做GWAS需要有三类数据：SNP数据、表型数据和群体结构。这些数据在实操会再次提到。 GWAS的结果通常以曼哈顿图和QQ图来展示。曼哈顿图显示每个SNP在关联分析中的显著性水平; QQ 图反映关联分析的效果。 以下图721份水稻GWAS结果图为例： 5.3.1 曼哈顿图（Manhattan Plot）图4（A）就是一个曼哈顿图，每个点代表一个SNP，x轴代表SNP在基因组上的遗传位置，y轴为–log10 (P-value)，显著性水平线有红蓝两条（P &#x3D; 0.01和P&#x3D; 0.05）。y轴值越大，说明该位点表型的关联程度越大，受到连锁不平衡（LD）的影响，基因组上强关联位点周围的SNP也会呈现出关联性由高到低连续变化的信号强度，从而在P值小的地方出现尖峰（peak）。 上面文章深入分析水稻6号染色体上与抽穗期相关的一个尖峰，将其定位在Hd3a附近, 估计候选区间大概在 2.68–4.62 Mb (图4C)。这个候选区间是如何确定的呢？ 我们通常将显著关联SNP在N kb以内的位置确认为相关区间，这个N就是对应的LD衰减距离。确定GWAS鉴定的候选区间后，就可以在候选区间内找到基因功能注释和表型相关的基因，或者有其他组学或者功能研究支持的基因进行验证和深入研究。 5.3.2 QQ图（QQ Plot）图4（B）是QQ图，本质上就是做两组数据的比较，判断是否一致。每个点代表一个SNP，横坐标是期望的P-value，纵坐标为实际观测到的P-value，虚线代表实际观测和期望的P-value值一致的情况。 我们做关联分析，当然是希望大部分的位点观测值和期望值一样（在对角线，也就是这里的虚线上），也就是这部分位点确定是与性状不关联的。一部分位点在虚线的上方，也就是观测值超过期望值，说明这些位点的效应超过随机效应，也就是这些位点是与性状显著相关的。也就是出现4（B）这个图才是理想的结果。 还有以下三种其他情况： 1 观察值低于期望值（点在对角线下方），可能是模型不合理，P-value被过度矫正。或者是群体中大量SNP位点间存在连锁不平衡，有效位点数（相互间不存在连锁不平衡的位点）明显低于实际位点数，所以P-value的期望值被低估了。 2 观察值和期望值相同，说明没有找到与性状显著关联的位点。 3 观察值显著高于期望值（点全都在对角线上方），也就是所有位点都与某个性状显著相关，说明分析模型不合理，假阳性太多了。 现在基于GWAS分析还衍生出其他诸如TWAS（基因表达量做标记）、PWAS（蛋白做标记）、EWAS（甲基化表观信息做标记）等关联分析方法，做标记的信息不同，本质上也都是和表型做关联分析。 6. 泛基因组（Pan-Genome）想了想还是把泛基因组也放了进来，虽然泛基因组研究方法和上面的研究方法不一样，但也是群体基因组学的一个重要分支，主要是开展群体基因组重测序和遗传变异的分析工作。 我们知道单一的参考基因组仅能代表物种基因组空间范围的一小部分（同一个物种不同亚群基因组存在差异），以线性参考基因组进行群体变异的分析就会错失一些变异位点（SV&amp;CNV&amp;PAV）。所以这个时候我们就需要获取一个物种的全部遗传信息（只能说是相对的全部），并解析每个个体间的遗传变异，这就诞生了泛基因组（Pan-Genome）研究。 6.1 核心基因&#x2F;非核心基因在泛基因组中有两个非常重要的概念： 1 核心基因（core genome）：在物种所有个体内都存在的，保持生命体基本功能，代表物种基本表型特征。 2 非必需基因（dispensable genome）：使不同个体在表型，生活方式、代谢等多方面发生明显的分化，最终表现为丰富的遗传多样性。 上图可以看出核心基因和非必需基因的区别，以及最后融合成pan-genome。主要注意一点，核心基因是这个物种中所有个体都存在的，但不一定是必须基因，必须基因的概念比核心基因窄，核心基因包含了必须基因。 现在的pan-genome分析的文章一般还会对基因集做更进一步的细分： core 核心基因，所有样本共享 softcore 次核心基因，90%样本共享 dispensable 非必需基因，多个样本共享但 &lt; 90% private 特有基因，1%，或者仅存在于一个样本中 对不类型基因集进行保守性分析，有助于挖掘适应性进化或驯化中发挥关键作用的基因。文章中用的比较多的还有核心基因&#x2F;非必需基因与重复序列相关性分析、表达水平分析等等，这些展开来说太多了，具体文章具体分析。 6.2 泛基因组组装泛基因组组装方式现在见的比较多的是两种： 6.2.1 基于二代测序（迭代组装） How the pan-genome is changing crop genomics and improvement | Genome Biology | Full Text (biomedcentral.com) 将多个样本二代下机数据与参考基因组比对，未比对上的reads组装成新的contigs，将这些contigs添加到原始参考序列中（一般直接放在最后），最终获的物种的泛基因图谱。 看得出来这种方式简单粗暴，可以快速得到泛基因组信息（也省钱），但是有二代数据的通病——如果物种的基因组比较大，或者测序深度不够深的话，组装的contigs连续性会比较差。 6.2.2 基于三代测序（从头组装&amp;图形泛基因组） Plant pan-genomes are the new reference | Nature Plants 对多个个体进行从头组装、注释，从全基因组层面识别变异信息，也是现在用的最广泛的方法。不依赖参考基因组，但是需要较高的测序深度（保证准确性），组装到染色体水平。图形泛基因组是在从头组装的基础上，基于图论的组装方法，利用有向图将物种基因组分为核心基因组和非必需基因组。 6.3 泛基因组分析主要可以分以下两部分： 这部分内容留到以后我做泛基因组组装实操再做详细解释和补充（先挖个坑）。 下篇笔记将简单实操一下GWAS分析，使用软件为TASSEL。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"群体基因组学","slug":"群体基因组学","permalink":"http://www.shelven.com/categories/%E7%BE%A4%E4%BD%93%E5%9F%BA%E5%9B%A0%E7%BB%84%E5%AD%A6/"}],"tags":[{"name":"群体基因组学","slug":"群体基因组学","permalink":"http://www.shelven.com/tags/%E7%BE%A4%E4%BD%93%E5%9F%BA%E5%9B%A0%E7%BB%84%E5%AD%A6/"}]},{"title":"三维基因组学——如何用Hi-C数据分析拓扑关联结构域","slug":"三维基因组学——如何用Hi-C数据分析拓扑关联结构域","date":"2023-06-14T16:24:17.000Z","updated":"2023-06-16T08:49:30.000Z","comments":true,"path":"2023/06/15/a.html","link":"","permalink":"http://www.shelven.com/2023/06/15/a.html","excerpt":"本篇笔记主要记录三维基因组学的学习，以及演示如何利用Hi-C数据分析Compartment和拓扑关联结构域（TAD），所使用的分析Hi-C数据的软件为HiC-Pro，可视化软件为HiCPlotter和R包HiTC。","text":"本篇笔记主要记录三维基因组学的学习，以及演示如何利用Hi-C数据分析Compartment和拓扑关联结构域（TAD），所使用的分析Hi-C数据的软件为HiC-Pro，可视化软件为HiCPlotter和R包HiTC。 1. 三维基因组简介首先什么是三维基因组学？三维基因组学(Three-Dimensional Genomics, 3D Genomics)，是指在考虑基因组序列、基因结构及其调控元件的同时，对基因组序列在细胞核内的三维空间结构，及其对基因转录、复制、修复和调控等生物过程中功能的研究。 随着基因组学和表观基因组学的发展，基因组学研究的维度经历了从一维到三维的转变： 一维：基因组序列的测定与组装 二维：调控序列&#x2F;转录因子—基因互作网络、染色质状态、表观修饰 三维：基因组的三维空间结构 基因组不是简单的线性序列，是有三维空间结构的，而且这种三维空间结构可以对DNA辅助、基因转录调控、染色质浓缩分离等生物学过程产生重要的影响。 我们知道，真核生物的染色质结构由低级到高级可以分为4种： 一级结构：一系列核小体相互连接成的念珠状结构 二级结构：由核小体连接起来的纤维状结构经螺旋化形成中空的螺线管 三级结构：由螺线管螺旋化形成的筒状结构，称为超螺线管 四级结构：超螺线管进一步螺旋折叠形成染色单体 三维基因组的层级结构类似于真核生物的染色质结构，在不同的分辨率下也可以划分为4个层级结构： 染色质环（Chromatin loops），分辨率：&lt;1 Kb - few Mb：染色质在空间中形成的环状结构，使相距很远的染色质区域在三维空间中可以聚集在一起。 拓扑关联结构域（Topologically associating Domains, TAD），分辨率：40 Kb - 3 Mb：相互作用相对频繁的染色质区域。 染色质区室（A&#x2F;B compartments），分辨率：1 - 100 Mb：A compartments：开放的染色质、表达活跃、基因丰富、较高的GC含量、激活型的组蛋白标记，通常位于细胞核内部；B compartments：关闭的染色质、表达不活跃、基因缺乏、结构紧凑、沉默基因的组蛋白标记，通常位于细胞核外围。 染色质疆域（Chromosome Territory, CT），分辨率：~100 Mb：在真核生物中，细胞核内染色质分布并不是随机的，为了跨越较大距离实现相互作用，这些染色质会在三维空间中靠的更近，这就是染色质疆域。 不同层次分辨率下的研究重点不同，比如最小的loop层次对应的是基因级别甚至更小的元件互作；10kb级别一般就可以鉴定TAD之间的互作关系（也是研究比较多的）；更大一些的染色质区室也是研究比较多的内容；在染色质疆域这个层次主要就是研究染色体之间的互作关系了。相应的，分辨率越高，需要的有效互作数据量也越大。 2. 三维基因组技术目前三维基因组结构的检测时基于染色体构象捕获技术，也就是3C（chromosome conformation capture）技术，3C是所有染色体构象捕获技术的基础。根据染色质的互作类型，3C技术又可以大致分为5种方法： 1 versus 1：3C的由来，经过酶切、DNA片段绑定、反向交联后，通过qPCR确认互作位点。 1 versus Many&#x2F;All：4C技术，3C技术的升级版。反向交联前和3C一样，经过了第二轮消化和绑定，通过特定位点的反向PCR检测特定位点与全基因组潜在位点互作情况。 Many versus Many：5C技术，基于3C的另一升级版。5C技术的通量增大。 Many versus All：Capture-C技术，最大不同是在互作片段对的捕捉技术上，它是利用生物素标记反向互补到限制酶酶切位点，从而进行对所有感兴趣的互作位点和全基因组位点之间互作对之间的捕捉。 All versus All 其中“1”“Many”以及“All”代表的是在一次实验中所涉及的位点，比如说 “1 versus All” 的意义就是该次实验调查的是一个位点和全基因组中所有可能潜在互作位点之间的互作情况。 近年来all versus All也就是检测全局的互作技术发展比较快，有以下一些技术应用： Hi-C技术。近年最火的全基因组 3D 基因组测序技术，不仅可以用于检测全基因组的三维基因组结构和染色质互作，同时还可以用于辅助基因组组装（同样用的很多，现在组参考基因组都要测HiC，以组装到染色体水平）等。 ChIA-PET技术（ chromatin interaction analysis paired-end tag sequencing）：与3C基础上发展的其他技术不同，区别在于第一步对于互作位点的 DNA 破碎不是通过限制酶进行消化，而是利用超声波击碎。然后应用抗体对特定蛋白参与的互作区段进行富集，并对这些互作区段进行消化连接，提取含有接头的双端序列（ paired end tag， PET）进行互作检测。 DLO Hi-C技术（ digestion-ligation-only Hi-C）：该技术相对于传统的全基因组染色体构象捕获技术 Hi-C 而言更加高效简单，仅需要两轮的消化连接过程，无须生物素标记，未连接的 DNA 也可以被有效地去除，极大地提高了染色体构想捕获效率。 DLO Hi-C 技术更像是 Hi-C 技术的一个升级优化。 原位Hi-C (in situ Hi-C)：使用完整的细胞核进行后续反应，减少了Hi-C中随机连接造成的背景噪音。使用四碱基酶Mbol进行酶切，提高了分辨率，实验时间由Hi-C的7天缩短至3天。 HiChIP (in situ Hi-C followed by chromatin immunoprecipitation)：该技术是一种利用原位Hi-C原理和转座酶介导构建文库来解析染色质构象的方法。 3. 利用Hi-C数据分析拓扑关联结构域（TAD）现在Hi-C测序是应用最广泛的三维基因组学技术，对Hi-C数据的处理，构建Hi-C互作图谱和鉴定TAD结构域是最关键的问题，也发展了一大批专门的生物信息学算法软件，我这里用经典的软件HiC-Pro、HiCPlotter和R包HiTC跑一遍Hi-C数据分析的流程。 为了快速得到结果，这里选择了Gossypium hirsutum四倍体陆地棉的两条染色体参考序列，和一部分Hi-C测序结果（50万条reads的双端测序结果）跑下流程。后续制作Hi-C互作矩阵，和分析Compartment和TAD的.bed后缀文件和.matrix后缀文件来自尤师姐（前面的这点数据做不出互作图，太少了，跑完所有数据又很慢……）。 两个软件安装过程就不说了，可以参考github官方，如果HiC-Pro很难安装依赖的话可以用官方提供的singularity镜像： nservant&#x2F;HiC-Pro: HiC-Pro: An optimized and flexible pipeline for Hi-C data processing (github.com) 当前路径文件结构如下： 3.1 获得染色质互作矩阵（HiC-Pro）12345678# 1.准备酶切片段## dpnii是选择的限制性核酸内切酶，可以用别的，查看digest_genome.py源码python digest_genome.py Gh_genome.fa –r dpnii –o Gh_dpnii.bed# 2.统计酶切片段大小awk ’&#123;print $3-$2;&#125;’ Gh_dpnii.bed &gt; Gh_dpnii_size.txt# 3.构建参考基因组索引，生成基因组大小的文件samtools faidx Gh_genome.faawk ‘&#123;print $1”\\t”$2;&#125;’ Gh_genome.fa.fai &gt; Gh_size.txt 这里酶切参考基因组生成的bed文件如下所示： 123456789101112131415161718192021222324252627282930313233343536373839404142# 4.修改config文件## 主要修改基因组索引文件路径、基因组大小文件路径、酶切片段文件路径和分辨率## BOWTIE2_IDX_PATH、GENOME_SIZE、GENOME_FRAGMENT、BIN_SIZEvim config.txt######################################################################### Alignment options#######################################################################FORMAT = phred33MIN_MAPQ = 0BOWTIE2_IDX_PATH = /home/Bioinfor/Gh_indexBOWTIE2_GLOBAL_OPTIONS = --very-sensitive -L 30 --score-min L,-0.6,-0.2 --end-to-end --reorderBOWTIE2_LOCAL_OPTIONS = --very-sensitive -L 20 --score-min L,-0.6,-0.2 --end-to-end --reorder######################################################################### Annotation files#######################################################################REFERENCE_GENOME = GhGENOME_SIZE = /home/Bioinfor/Gh_size.txt######################################################################### Digestion Hi-C#######################################################################GENOME_FRAGMENT = /home/Bioinfor/Gh_dpnii.bedLIGATION_SITE = AAGCTAGCTTMIN_FRAG_SIZE = 100MAX_FRAG_SIZE = 160000MIN_INSERT_SIZE = 200MAX_INSERT_SIZE = 600######################################################################### Contact Maps#######################################################################BIN_SIZE = 5000 20000 100000MATRIX_FORMAT = upper 主要是修改以上内容，但也要注意下Hi-C双端测序文件的后缀，要让软件能匹配上。 12# 5.运行HiC-Pro，获得染色质互作矩阵HiC-Pro -c config.txt -i Gh/ -o HiC_Pro_out HiC-Pro的主要结果放置在目录HiC_Pro_out&#x2F; hic_results&#x2F;matrix&#x2F;Gh&#x2F;下，为5000、20000、100000 分辨率下的_abs.bed 以及_iced.matrix后缀文件。其他结果文件和分析图片可以在hic_results文件夹里查看，这里不展示了。 主要展示后续用的文件，以下为Gh_5000_abs.bed文件： 这个文件将染色体划分为5000 bp的bin，并且在第四列进行编号。 以下为Gh_5000_iced.matrix文件： 这个文件第一列和第二列都是bin编号，第三列为两个bin之间归一化之后的互作强度。 3.2 绘制染色质互作图（HiCPlotter）这里使用的是尤师姐提供的跑完了A01染色体的Gh_20000_iced.matrix与Gh_20000_abs.bed文件（我的示例Hi-C数据量太少）。 1234567891011# HiCPlotter绘制染色体互作图python HiCPlotter.py -f Gh_20000_iced.matrix -o Ghir_A01 -r 20000 -tri 1 -bed Gh_20000_abs.bed -n Ghir_A01 -chr Ghir_A01## HiCPlotter绘制染色质互作几个常用参数：-chr 染色体名称，如果染色体名称不是Chr*，-chr参数需传入对应的值-o 输出文件名-tri 默认值为0，1代表着传入的matrix和bed文件是HiC-Pro运行的结果-r 分辨率-n 任务名# ZModem协议传输文件sz Ghir_A01-Ghir_A01.ofBins\\(0-5887\\).20K.png 染色体Ghir_A01内部的互作图Ghir_A01-Ghir_A01.ofBins(0-5887).20K.png如下所示。 3.3 鉴定TAD（HiCPlotter）这里使用的数据与3.2一样。 12345678910# HiCPlotter鉴定TADpython HiCPlotter.py -f Gh_20000_iced.matrix –bed Gh_20000_abs.bed –o TAD -r 20000 -n Ghir_A01 -chr Ghir_A01 -tri 1 -fh 0 -s 600 -e 900 -ptd 1 -pi 1## HiCPlotter绘制TAD几个常用参数：-ptd 默认0，输入1，调用绘制TAD算法-fh 输入文件中抬头需要删除的行数，没有header lines就是0-s 起始位点（第几个bin）-e 结束位点（第几个bin）# ZModem协议传输文件sz TAD-Ghir_A01.ofBins\\(600-900\\).20K.png 染色体Ghir_A01的12Mb到18Mb之间TAD鉴定结果图TAD-Ghir_A01.ofBins(600-900).20K.png如下： 3.4 鉴定染色质区室和TAD（HiTC包）这里使用的数据来自尤师姐提供的LG02_50000_abs.bed与LG02_50000_iced.matrix文件，也是HiC-Pro跑出来的结果文件。 因为用到了R包，集群R有点问题，我暂时传到本地用自己电脑跑了下： 12345678910111213141516# 下载和加载HiTC包&gt; BiocManager::install(&quot;HiTC&quot;)&gt; setwd(&quot;D:/zhuomian/D5_50Kb/D5_50Kb&quot;)&gt; library(HiTC)# 导入数据（importC函数读取HiC-pro的结果）&gt; mydata &lt;- importC(&quot;D:/zhuomian/D5_50Kb/D5_50Kb/LG02_50000_iced.matrix&quot;, xgi.bed = &quot;D:/zhuomian/D5_50Kb/D5_50Kb/LG02_50000_abs.bed&quot;)# 主成分分析和鉴定Compartment&gt; pc &lt;- pca.hic(mydata$LG02LG02, npc = 1, asGRangesList = TRUE)&gt; write.csv(pc, file = &quot;D:/zhuomian/D5_50Kb/D5_50Kb/LG02_50k.csv&quot;)&gt; mydata2 &lt;- read.table(&quot;D:/zhuomian/D5_50Kb/D5_50Kb/LG03_50k.csv&quot;,header = TRUE,sep = &quot;,&quot;)&gt; barplot(mydata2$score)# 热图展示&gt; mapC(mydata$LG02LG02, trim.range = 0.94, col.pos = c(&quot;white&quot;, &quot;red&quot;)) 这里主成分分析得到的LG02_50k.csv，统计第一主成分score做条形图就可以鉴定染色质区室Compartment A&#x2F;B了，以下链接是提出者的文章。 https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2858594/ 跑出来的互作热图如下： 也可以选取染色体的一部分（一般是自己感兴趣的部分），做热图： 12&gt; data1 &lt;- extractRegion(mydata$LG02LG02,chr = &quot;LG02&quot;, from = 1000, to = 5000000)&gt; mapC(data1, trim.range = 0.94,col.pos = c(&quot;white&quot;, &quot;red&quot;)) 关于如何用HiTC包分析Hi-C数据，也可以看bioconductor的一篇文章： Analyzing Hi-C data with the HiTC BioC package (bioconductor.org)","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"三维基因组学","slug":"三维基因组学","permalink":"http://www.shelven.com/categories/%E4%B8%89%E7%BB%B4%E5%9F%BA%E5%9B%A0%E7%BB%84%E5%AD%A6/"}],"tags":[{"name":"HiC-Pro","slug":"HiC-Pro","permalink":"http://www.shelven.com/tags/HiC-Pro/"},{"name":"HiCPlotter","slug":"HiCPlotter","permalink":"http://www.shelven.com/tags/HiCPlotter/"},{"name":"HiTC","slug":"HiTC","permalink":"http://www.shelven.com/tags/HiTC/"}]},{"title":"单细胞转录组分析","slug":"单细胞转录组分析","date":"2023-06-13T14:06:51.000Z","updated":"2023-06-16T08:50:07.000Z","comments":true,"path":"2023/06/13/a.html","link":"","permalink":"http://www.shelven.com/2023/06/13/a.html","excerpt":"最近因为学校网络信息中心升级防火墙，导致集群无法访问公网，我搭建的反向代理服务器也暂时无法使用（真的想吐槽学校的网络管理员，三个星期了还没能解决集群的网络问题）……近期要进行中期答辩，先用向日葵远程一下实验室闲置的电脑应急，顺便把最近的学习笔记补上。 这篇笔记主要记录下单细胞组学的学习，以及单细胞转录组（Single-cell RNA-sequencing，scRNA-seq）的分析流程。","text":"最近因为学校网络信息中心升级防火墙，导致集群无法访问公网，我搭建的反向代理服务器也暂时无法使用（真的想吐槽学校的网络管理员，三个星期了还没能解决集群的网络问题）……近期要进行中期答辩，先用向日葵远程一下实验室闲置的电脑应急，顺便把最近的学习笔记补上。 这篇笔记主要记录下单细胞组学的学习，以及单细胞转录组（Single-cell RNA-sequencing，scRNA-seq）的分析流程。 1. 单细胞测序发展我们做植物高通量测序做的最多的是RNA-seq，比较不同组织、不同时期或者不同处理下同一个组织基因的差异表达。我们做RNA-seq是建立在对一个组织的细胞进行测序的基础上，而组织是几类细胞的集合，因此我们得到的基因表达量是所有细胞的平均值。 单细胞测序可以在单个细胞的水平上构建细胞图谱，让我们更深入了解植物组织的细胞类型，获取每个细胞的转录本信息，研究细胞的发育动态（比如细胞如何进行分化）等等。 Nature杂志每年都会总结每个领域最有价值的年度技术，2018年是单细胞转录组技术，2019年是单细胞多组学技术，2020年是空间转录组技术，可以看出带有单细胞和空间分辨率转录组技术应用的重要性。 上图是单细胞技术在植物中的研究历程，最后一个2022年的Stereo-seq也就是华大自研的时空组学技术，据华大发表在cell上的文章Spatiotemporal transcriptomic atlas of mouse organogenesis using DNA nanoball-patterned arrays描述，Stereo-seq的技术参数优于当前其他空间转录组技术，对空间异质性的描述更为灵敏和直观。 对于Stereo-seq我个人的理解是补上了部分空间转录组测序无法做到单个细胞分辨率的短板，真正做到对动植物的组织或者器官中的所有细胞进行转录组信息分析，鉴定不同类型细胞的差异基因表达，构建空间图谱来分辨不同细胞的发育轨迹。感兴趣可以看下面华大的这篇scStereo-seq技术用于拟南芥的文章：The single-cell stereo-seq reveals region-specific cell subtypes and transcriptome profiling in Arabidopsis leaves - ScienceDirect 2. 单细胞测序平台 10x Genomics Chromium 微流控芯片技术获得单细胞反应体系，并在传统文库构建的基础上引入标签，通过追溯标签序列将众多mRNA、表面蛋白信息定位回原来的单个细胞。捕获效率最高达65% BD Rhapsody™ Single-Cell Analysis System 能为单细胞中每个转录本标记特异性分子标签，实现单细胞水平上基因表达谱的绝对定量。捕获效率最高达80% Illumina® Bio-Rad® Single-Cell Sequencing Solution 捕获效率低，仅为3%，但测序成本相对较低 ICELL8 Single-Cell System 捕获效率为30%，成本相对较低 C1™ 单细胞全自动制备系统 通量低、成本高、周期慢、对试验人员要求高，操作较繁琐和困难 3. 单细胞测序分析流程 质控部分和RNA-seq没有区别，去掉低质量的读序和测序接头。10X Genomics平台测的单细胞数据需要通过Cell Ranger回比到参考基因组，示例用法如下： 12345678 cellranger count --id=sample345 --transcriptome=/opt/refdata-cellranger-GRCh38-3.0.0 --fastqs=/home/jdoe/runs/HAWT7ADXX/outs/fastq_path --sample=mysample# --id 文件名# --transcriptome 参考基因组# --fastqs 转录组数据所在的路径# --sample 指定要使用的样本 这里主要记录下细胞过滤到亚群定义和标记基因筛选所要用到的软件Seurat4。因为我自己没有这方面的实验数据，仅仅只是尝试跑下流程，以下分析流程和代码来自： 单细胞转录组|Seurat 4.0 使用指南 - 知乎 (zhihu.com) 《Seurat 4 R包源码解析》 总目录 | 单细胞转录组分析标准流程 - 知乎 (zhihu.com) 示例数据来自10X Genomics免费提供的外周血单核细胞(PBMC)数据集：https://cf.10xgenomics.com/samples/cell/pbmc3k/pbmc3k_filtered_gene_bc_matrices.tar.gz 将示例数据上传至集群，解压，得到如下文件： 123├── barcodes.tsv（10X Genomics测序的与细胞相关的barcode信息，用于标识细胞）├── genes.tsv（基因信息，包括了基因组数据库人类登记号和基因名称）└── matrix.mtx（基因表达量矩阵） 这三个文件实际上要通过软件Cell Ranger对10X Genomics单细胞测序的下机数据进行比对基因组，统计捕获的细胞数、测序量得到。详细可以参考官方Cell Ranger软件的用法和结果分析，这里用的是官方整理后的数据，只进行下一步Seurat分析的演示。 以所在目录为工作目录，在linux中键入R进入交互命令行，运行Seurat。 3.1 导入数据和初步过滤123456789101112# 安装和加载Seurat和dplyr（用于数据清洗）R包BiocManager::install(&quot;Seurat&quot;) BiocManager::install(&quot;dplyr&quot;)library(dplyr)library(Seurat)# 读入数据并初步筛选pbmc.data &lt;- Read10X(data.dir=&quot;/path/to/yourfile&quot;)# 创建Seurat对象，过滤检测少于200个基因的细胞，和少于3个细胞检测出的基因pbmc &lt;- CreateSeuratObject(counts = pbmc.data, project = &quot;pbmc3k&quot;, min.cells = 3, min.features = 200)pbmc 可以看到初步过滤后，现在的一个数据集包含了2700个细胞的13714个基因。 3.2 细胞过滤123456789101112131415161718# 新增一列percent.mt用于统计映射到线粒体基因组的reads百分比pbmc[[&quot;percent.mt&quot;]] &lt;- PercentageFeatureSet(pbmc, pattern = &quot;^MT-&quot;)# 绘制细胞的三种特征，nFeature_RNA（每个细胞测到的特异基因数目）、nCount_RNA（每个细胞测到所有基因的表达量之和）、percent.mt的小提琴图png(&quot;fig01_cell_feature.png&quot;)VlnPlot(pbmc, features = c(&quot;nFeature_RNA&quot;, &quot;nCount_RNA&quot;, &quot;percent.mt&quot;), ncol = 3)dev.off()# 细胞特征间的相关性绘图png(&quot;fig02_cell_feature_correlation.png&quot;, width=1000, height=400) plot1 &lt;- FeatureScatter(pbmc, feature1 = &quot;nCount_RNA&quot;, feature2 = &quot;percent.mt&quot;)plot2 &lt;- FeatureScatter(pbmc, feature1 = &quot;nCount_RNA&quot;, feature2 = &quot;nFeature_RNA&quot;)CombinePlots(plots = list(plot1, plot2))dev.off()# 根据特殊基因的数目以及线粒体基因比例过滤细胞，这里选取200 &lt; nFeature_RNA &lt; 2500 和percent.mt &lt; 5的数据pbmc &lt;- subset(pbmc, subset = nFeature_RNA &gt; 200 &amp; nFeature_RNA &lt; 2500 &amp; percent.mt &lt; 5) pbmc fig01_cell_feature.png如下所示： 这里可以看到有的细胞检测到的特异基因数特别多，可能是因为多个细胞被同时捕获了，而特异基因数特别少的可能是低质量细胞。而线粒体基因比例特别高的细胞，有可能是一些快要死亡的细胞。这些低质量的细胞需要在这一步被过滤。 fig02_cell_feature_correlation.png如下所示： 这两个图分别表示了每个细胞测到所有基因的表达量之和与线粒体基因组百分比呈负相关，每个细胞测到所有基因的表达量之和与每个细胞测到的特异基因数目呈正相关。 这一步过滤后数据集剩下2638个细胞，共13714个基因。 3.3 细胞群体聚类1234567891011121314151617# 表达水平标准化## normalization.method 标准化方法，默认为“LogNormalize”## scale.factor 比例因子，用以计算标准化值，默认为“10000”pbmc &lt;- NormalizeData(pbmc, normalization.method = &quot;LogNormalize&quot;, scale.factor = 10000)# 鉴定mark基因（也就是特征基因）## selection.method mark基因筛选方法，“vst”为通过方差与均值比进行筛选## nfeatures 要筛选的mark基因的数目pbmc &lt;- FindVariableFeatures(pbmc, selection.method = &quot;vst&quot;, nfeatures = 2000)top10 &lt;- head(VariableFeatures(pbmc), 10)# 展示mark基因png(&quot;fig03_10marker_genes.png&quot;,width=1000,height=400)plot1 &lt;- VariableFeaturePlot(pbmc)plot2 &lt;- LabelPoints(plot = plot1, points = top10, repel = TRUE)CombinePlots(plots = list(plot1, plot2))dev.off() fig03_10marker_genes.png如下所示： 这里筛选出2000个mark基因用于后续的下游分析，并且展示区分能力最强的前10个mark基因 123456789101112# Mark基因权重标准化## ScaleData 缩放基因的表达，给予基因同等的权重，使高表达基因不占据主导地位all.genes &lt;- rownames(pbmc)pbmc &lt;- ScaleData(pbmc, features = all.genes) # PCA主成分分析## RunPCA 计算特征值，在细胞间具有高度表达差异的基因有助于区分不同类型的细胞## 采用DimPlot方法可视化pbmc &lt;- RunPCA(pbmc, features = VariableFeatures(object = pbmc))png(&quot;fig04_PCA.png&quot;)DimPlot(pbmc, reduction = &quot;pca&quot;)dev.off() fig04_PCA.png如下所示： 12345678910111213# 评估主成分维度## num.replicate 重采样次数## dims 维度范围pbmc &lt;- JackStraw(pbmc, num.replicate = 100) pbmc &lt;- ScoreJackStraw(pbmc, dims = 1:20)## 评估主成分维度的方法1png(&quot;fig05_PC_importance_01.png&quot;,width=700,height=400)JackStrawPlot(pbmc, dims = 1:15)dev.off()## 评估主成分维度的方法2png(&quot;fig05_PC_importance_02.png&quot;,width=700,height=400)ElbowPlot(pbmc)dev.off() R包 Seurat 函数 JackStraw 、ScoreJackStraw进行重采样测试，评估用以进行细胞聚类的主成分维度。 fig05_PC_importance_01.png如下所示： fig05_PC_importance_02.png如下所示： 上图是比较不同主成分（PC）的P值分布与均匀分布（虚线）；显著的主成分具有较低的P值（位于虚线上方）；似乎10-12个主成分后，主成分的重要性急剧下降。 下图是肘部法则以确定最佳主成分数量，9-10个主成分附近有个拐点，表明大部分真实信号是在前10个pc中捕获的。 所以这里选择10个主成分用于后续分析。 12345678# 细胞群体聚簇pbmc &lt;- FindNeighbors(pbmc, dims = 1:10) pbmc &lt;- FindClusters(pbmc, resolution = 0.5) ## 绘图pbmc &lt;- RunUMAP(pbmc, dims = 1:10) png(&quot;fig06_cluster_UMAP.png&quot;,width=700,height=400) DimPlot(pbmc, reduction = &quot;umap&quot;)dev.off() fig06_cluster_UMAP.png如下所示 可以看到，根据mark基因的表达，所有细胞最终被分为了8种类型。 做完以上分析之后，还可以根据自己的研究目标新型不同的下游分析，具体来说可以筛选亚群的标记基因（与其他类别细胞的差异表达基因）、进行细胞的发育轨迹分析、做不同品种间细胞类型的比较等等。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"单细胞转录组","slug":"单细胞转录组","permalink":"http://www.shelven.com/categories/%E5%8D%95%E7%BB%86%E8%83%9E%E8%BD%AC%E5%BD%95%E7%BB%84/"}],"tags":[{"name":"Seurat","slug":"Seurat","permalink":"http://www.shelven.com/tags/Seurat/"}]},{"title":"基因组共线性分析——MCScanX","slug":"基因组共线性分析——MCScanX","date":"2023-04-20T15:55:19.000Z","updated":"2023-05-08T13:55:51.000Z","comments":true,"path":"2023/04/20/a.html","link":"","permalink":"http://www.shelven.com/2023/04/20/a.html","excerpt":"因为自己的生信基础知识比较薄弱，最近在华农跟着王老师上了一些植物基因组课程，记录一下。这一次主要结合课堂内容、MCScanX官方文档以及自己的理解，演示基因组共线性工具MCScanX的用法。","text":"因为自己的生信基础知识比较薄弱，最近在华农跟着王老师上了一些植物基因组课程，记录一下。这一次主要结合课堂内容、MCScanX官方文档以及自己的理解，演示基因组共线性工具MCScanX的用法。 1. 共线性分析在樊龙江主编的《植物基因组学》中提到，植物起源于水生藻类，不同植物在基因水平上具有一定保守性（也就是具有一定的相同基因）。在一定的亲缘关系内，这种基因组水平上的保守性（基因组区块排列顺序保守性），也就是不同植物基因组间的共线性。 当我们拿到两个植物基因组数据，想要分析两个物种间是否存在基因进化历史、染色体结构变异、重要功能基因的插入缺失或者鉴定全基因组复制事件的时候，就可以利用一些基因组共线性分析工具进行直观的作图和分析。 做共线性分析之前需要区分两个描述基因组共线性的名词： Synteny：两个物种的一组基因位点，在每个物种中位于同一条染色体（顺序不一定相同）。 Collinearity：两个物种的一组基因位点，分别位于各自的同一条染色体上，并且顺序也是一致的。 这里染色体打了个重点，因为所有的共线性分析都是基于染色体水平的基因组进行比较的，只有contig数据分析的话意义不大。现在的共线性研究以及开发的工具一般用的是collinearity（包括后面要说的MCScanx）。 共线性分析的原理主要都是分为三步： 获得基因在染色体上的位置（如基因组注释得到的gff文件）。 将基因的CDS&#x2F;蛋白序列进行比对，得到高度相似的基因对（Anchoring）。 鉴定相同基因排列顺序的共线性区块（Chaining），不同软件算法不一样，这里不讨论算法只讨论如何应用。 其他就不过多介绍了，接下来主要讲讲MCScanX软件的用法。 2. 下载和编译MCScanX按照官网克隆仓库，编译即可。MCScanX github官网 123git clone https://github.com/wyp1125/MCScanX.gitcd MCScanXmake 编译之后可以看到主文件的MCScanX、MCScanX_h和Duplicate_gene_classifier三个核心分析程序，以及downstream_analyses下游分析文件夹中的12个与下游分析有关的java和perl文件。 3. 运行MCScanX3.1 数据预处理MCScan支持的输入文件有两个： m8输出格式的BLASTP比对结果文件 记录染色体、基因名称以及起始和终止位点4个信息的gff文件 这里以棉花基因组和近缘物种可可基因组为例，两者都可以在NCBI上找到蛋白序列和注释的gff3文件。由于上机课中给的蛋白序列和gff文件都是处理好的，如果自己处理gff文件，总体思路是从gff文件的第3列提取’gene’关键词，从第9列分离基因名称信息，保留第1列染色体信息，保留第4列和第5列保留start和end信息即可。 这里输入的gff文件不是标准格式，简单写个python脚本处理： 1234567891011import osimport pandas as pdfile_path = &#x27;./Theobroma_cacao.chr.gff3&#x27;with open(file_path, &quot;r&quot;) as file: temp = pd.read_csv(file, sep = &#x27;\\t&#x27;,comment = &#x27;#&#x27;, header = None) # 制表符分隔，#号为注释标识，无列名 temp = temp.drop(temp[temp[2] != &#x27;gene&#x27;].index) # 第3列不为gene的行的索引，drop()删除 temp = temp[[0,8,3,4]] temp[8] = temp[8].map(lambda x: x.split(&#x27;;&#x27;)[0].split(&#x27;=&#x27;)[1].split(&#x27;:&#x27;)[1]) # 对第9列的处理，只取geneid temp.to_csv(&#x27;Tcacao.gff3&#x27;, header = None, index = None, sep = &#x27;\\t&#x27;) 当然，根据官网的表述，最好将染色体名称改为两个字母（物种缩写） + 数字（代表染色体编号）的形式。不改也没关系，两个基因组的染色体名字不要一样就好了，不改的话只有在下游分析对共线性区块分组的时候有点影响（添加的物种那列只显示两个字母）实质上不会有什么影响。 这步检查一下gene数量与pep文件的蛋白质条数是否一样，不一样的话可能是pep中有转录本蛋白序列，重新筛选完整的gff3文件，再用gffread提取蛋白序列，这里就不赘述了，如果处理有问题后续在更新。 本例中，棉花Gossypium herbaceum相关文件前缀为Gh；可可Theobroma cacao相关文件前缀为Tcacao。 12345678910# 合并蛋白序列（方便做基因组组内和组间共线性分析）cat Gh.pep Tcacao.pep &gt; Gh_Tcacao.pep# blast建库makeblastdb -in /public/home/wlxie/biosoft/MCScanX/Data/ExerciseData/Gh_Tcacao.pep -dbtype prot -input_type fasta -out Gh_Tcacao# 蛋白序列拆分40份（方便提交并行任务到集群）perl fasta-splitter.pl --n-parts 40 Gh_Tcacao.pepmkdir Gh_Tcacaomv Gh_Tcacao.part* Gh_Tcacao 用到的蛋白序列拆分perl脚本来自于Kirill Kryukov，具体在哪个仓库找不到了……这里提供下载，拆分后文件夹名称如下： 上面拆分的40个蛋白序列名称数字部分是等宽的，不方便提交并行任务到集群，这里简单修改下文件名称。 12345678910111213141516171819import os # 获取目录下所有文件列表path = &#x27;/public/home/wlxie/biosoft/MCScanX/Data/ExerciseData/Gh_Tcacao/&#x27;fileList = os.listdir(path)# 设置待修改的前缀和后缀prefix = &#x27;Gh_Tcacao_&#x27;suffix = &#x27;.pep&#x27;# 批量修改文件名m = 1for file in fileList: old_path = path + os.sep + file if os.path.isdir(old_path): continue new_path = path + os.sep + prefix + str(m) + suffix os.rename(old_path, new_path) m += 1 修改之后提交40个blastp并行任务，每个任务4核，很快就可以跑完。 1234567#!/bin/bash#SBATCH --array=1-40#SBATCH --cpus-per-task=4echo start on $(date)srun blastp -query Gh_Tcacao$&#123;SLURM_ARRAY_TASK_ID&#125;.pep -out Gh_Tcacao_$&#123;SLURM_ARRAY_TASK_ID&#125;.blast -db Gh_Tcacao -outfmt 6 -num_threads 4 -num_alignments 5 -evalue 1e-10echo end on $(date) 最后合并blastp结果。 12cat Gh_Tcacao_*.blast &gt; Gh_Tcacao.blastrm Gh_Tcacao_*.blast 3.2 运行MCScanX和结果解读MCScanX有三个主命令： MCScanX共线性分析 MCScanX_h也是共线性分析，输入不是BLASTP文件，而是第三方检测的以制表符分隔的成对同源关系文件 Duplicate_gene_classifier使用MCScanX的算法鉴定singleton（单基因）和重复基因 这里用MCScanX，前面处理好了的blastp结果文件和gff文件放在同一个文件夹，输入的文件相对路径要到文件名的前缀部分 1./MCScanX Data/ExerciseData/Gh_Tcacao 结果文件如下： .collinearity 是两个基因组共线性结果文件（默认分析collinearity），包含了本次运行的参数、计算出的共线性区块等。还可以根据这个文件用grep的方法提取两个物种之间的同源基因（提取第二列第三列物种名字不一样的行，去重复，计数），这里也不赘述了。 .html 这个文件夹每个文件对应一条染色体共线性分析结果，包括基因座的共线性区块数量、基因名称（串联重复基因会标红）和具体比对上哪些共线性区块： .tandem文件显示基因组内所有串联重复基因对： 3.3 下游分析和作图官方在downstream_analyses文件夹中提供了12个下游分析的perl和java脚本。我个人将这个文件下的分析工具分为两类： 功能相关（此部分与数据处理相关） 12345678910111213141516# Detect_syntenic_tandem_arrays 检测串联重复基因../../../downstream_analyses/detect_collinear_tandem_arrays -g Gh_Tcacao.gff -b Gh_Tcacao.blast -c Gh_Tcacao.collinearity -o tandem_arrays# Dissect_multiple_alignment 将共线性区块分为物种内和物种间共线性区块../../../downstream_analyses/dissect_multiple_alignment -g Gh_Tcacao.gff -c Gh_Tcacao.collinearity -o dissect_multiple_alignment# add_ka_and_ks_to_collinearity.pl 计算ka和ks值（在collinearity结果后面增加两列，执行时间较长）cat Gh.cds Tcacao.cds &gt; Gh_Tcacao.cds # 需要cds序列，且与collinearity文件中的序列名要一致，否则算出来全部都是-2perl ../../../downstream_analyses/add_ka_and_ks_to_collinearity.pl -i Gh_Tcacao.collinearity -d Gh_Tcacao.cds -o add_kaks_to_synteny# group_collinear_genes.pl 基因分组，构建基因家族（结果文件需要去掉第一行无效信息）perl ../../../downstream_analyses/group_collinear_genes.pl -i Gh_Tcacao.collinearity -o group_collinear_genes# 以及以下几种功能就不一一试了# detect_collinearity_within_gene_families.pl 检测基因家族的共线性基因对，需要用到前面构建的基因家族文件# origin_enrichment_analysis.pl 根据Duplicate_gene_classifier的结果识别输入基因家族的重复基因起源的潜在富集？不太懂什么意思 作图相关（此部分均有对应的配置文件，在downstream_analyses文件夹操作，其他文件路径java会发生未知错误） 1234567# dot_plotter 两组染色体所有共线性区块做点图java dot_plotter -g ../Data/ExerciseData/Gh_Tcacao/Gh_Tcacao.gff -s ../Data/ExerciseData/Gh_Tcacao/Gh_Tcacao.collinearity -c dot.ctl -o dot.png# dot.ctl配置文件内容如下800 //x轴维度（像素大小，下同，不再赘述）800 //y轴维度Ghir_A01,Ghir_A02,Ghir_A03,Ghir_A04,Ghir_A05,Ghir_A06,Ghir_A07,Ghir_A08,Ghir_A09,Ghir_A10,Ghir_A11,Ghir_A12,Ghir_A13 //x轴染色体名称Chromosome_1,Chromosome_2,Chromosome_3,Chromosome_4,Chromosome_5,Chromosome_6,Chromosome_7,Chromosome_8,Chromosome_9 //y轴染色体名称 1234567# dual_synteny_plotterjava dual_synteny_plotter -g ../Data/ExerciseData/Gh_Tcacao/Gh_Tcacao.gff -s ../Data/ExerciseData/Gh_Tcacao/Gh_Tcacao.collinearity -c dual_synteny.ctl -o dual_synteny.png# dual_synteny.ctl600 //图宽800 //图高Ghir_A01,Ghir_A02,Ghir_A03,Ghir_A04,Ghir_A05,Ghir_A06,Ghir_A07,Ghir_A08,Ghir_A09,Ghir_A10,Ghir_A11,Ghir_A12,Ghir_A13 //位于左边的染色体名称Chromosome_1,Chromosome_2,Chromosome_3,Chromosome_4,Chromosome_5,Chromosome_6,Chromosome_7,Chromosome_8,Chromosome_9 //位于右边的染色体名称 12345# circle_plotterjava circle_plotter -g ../Data/ExerciseData/Gh_Tcacao/Gh_Tcacao.gff -s ../Data/ExerciseData/Gh_Tcacao/Gh_Tcacao.collinearity -c circle.ctl -o circle.png# circle.ctl800 //图宽和高Ghir_A01,Ghir_A02,Ghir_A03,Ghir_A04,Ghir_A05,Ghir_A06,Ghir_A07,Ghir_A08,Ghir_A09,Ghir_A10,Ghir_A11,Ghir_A12,Ghir_A13,Chromosome_1,Chromosome_2,Chromosome_3,Chromosome_4,Chromosome_5,Chromosome_6,Chromosome_7,Chromosome_8,Chromosome_9 //环状图的染色体名称 1234567# bar_plotterjava bar_plotter -g ../Data/ExerciseData/Gh_Tcacao/Gh_Tcacao.gff -s ../Data/ExerciseData/Gh_Tcacao/Gh_Tcacao.collinearity -c bar.ctl -o bar.png# bar.ctl800 //x轴维度800 //y轴维度Ghir_A01,Ghir_A02,Ghir_A03,Ghir_A04,Ghir_A05,Ghir_A06,Ghir_A07,Ghir_A08,Ghir_A09,Ghir_A10,Ghir_A11,Ghir_A12,Ghir_A13 //参考染色体Chromosome_1,Chromosome_2,Chromosome_3,Chromosome_4,Chromosome_5,Chromosome_6,Chromosome_7,Chromosome_8,Chromosome_9 //目标染色体 123# 还有两个作图的工具也不一一试了，以后有需要再做# family_circle_plotter 基因家族同源基因圆形图，红线连接一个基因家族所有同源基因# family_tree_plotter 基因家族树，共线性基因对用红线连接，串联重复基因用蓝线连接 可以看到这个软件绘图还是非常简单方便的，不过图片质量不是很好，作图的像素点大小都是由自己定义的，因此排版缩放也很容易失真。还是比较推荐JCVI一类的软件，引入多种过滤参数功能更强大，且做的图是矢量图，比较好看……而且有docker镜像，不怕安装依赖的问题： 1singularity -d build jcvi.sif docker://tanghaibao/jcvi 以后有空再更新吧~ 2023.5.8 更新上面例子仅仅只是作图，没有阐明具体的生物学问题。这里通过以上的数据补充几个思考： 棉花和可可的WGD（全基因组加倍）事件分别在多少年前？ 在多少年前棉花和可可发生了物种分化？ 在解决上面两个问题前，需要知道一个基本概念——中性进化论。 在中性进化理论中，分子水平的变异是中性的，不受自然选择的影响。也就是说对于一个基因序列而言，每个位点上的演化（也就是发生突变）速率都是恒定的，如果一个基因位点发生同义突变，氨基酸序列并未发生变化，则这种突变不会影响物种的适应性。 同义突变率ds（Ks）指平均每个同义位点上发生同义置换的数目，在物种进化中代表了进化过程的背景碱基替换率，两个物种或者同个物种之间的Ks值可以通过上面的MCScanX的下游分析程序add_ka_and_ks_to_collinearity.pl计算得出。 如果一个物种发生了全基因组加倍事件，则会产生大量的旁系同源基因，反映在Ks值上就是有大量的Ks值接近的同源基因对产生，在Ks统计图中会出现一个峰（peak）；如果两个物种之间发生了物种分化，同样产生大量的直系同源基因（物种形成的伴随事件），同样是Ks值接近的同源基因产生，并且在Ks统计图出现峰值。因此，我们可以根据同一个物种内以及不同物种间的同源基因Ks值来反推物种的WGD事件和物种分歧事件，Ks峰值处发生的事件即为最近一次的物种WGD事件或物种分歧事件。 这些事件发生的时间点，如果有已知的化石证据则最准确（根据放射性同位素衰变），如果没有就需要根据分子钟理论计算对应的时间，我们用最基础的公式T=Ks/2r。Ks，即同义突变率，平均每个位点的突变次数；r是核酸突变速度，也就是这个分类的物种每个位点每年的突变概率。 解释一下这个公式怎么来的，在两个物种分化一定的时间T后，两者都以相似的速度r累积突变（分化后是近缘物种，核酸突变速度类似），则两个物种之间核酸替换率K=T*（r+r）。实际上为了避免进化选择对突变速率的影响，这里一般用同义突变率替代核酸替换率。r值是怎么计算的呢？同样要依赖化石证据，根据两个物种共同祖先的化石时间反推r值，假设同一类物种核酸突变率类似，则这个r值还可以进一步用于别的近缘物种。 以上理论依据建立在同一类物种核酸突变率类似的假设中，实际不一定如我们所愿，且化石依据也会存在一定误差。这个r值也只是估计个大概，实际上只要在10的-9次方数量级，算出来的时间能自圆其说就行。 12345# 利用MCScanX计算物种内部的共线性结果./MCScanX -b 1 Data/ExerciseData/Gh_Tcacao_1# 利用MCScanX计算两个物种之间的共线性结果./MCScanX -b 2 Data/ExerciseData/Gh_Tcacao_2 分别整理棉花与棉花、可可与可可、棉花与可可的基因组共线性结果，只选取最后一列ks值，用R做Ks密度分布图，可以参考现有的教程： Ks密度曲线分布图绘图 - 简书 (jianshu.com) Finding Peak Values For a Density Distribution (ianmadd.github.io) 找到Ks密度分布图的峰值，选一个参考文献里合适的r值，就可以计算上面两个问题了。 顺便补充一下，下面这篇教程里有一个python脚本可以提取最长转录本，因为原作者给的是图片懒得敲下来试了，看了下代码逻辑是处理pep文件，根据序列名比较同一个基因的不同转录本长度，选取最长的那个。逻辑没有问题，因为不是刚需，有需要自己再去复现，就不重复造轮子了。 WGD（全基因组复制）分析——Ka&#x2F;Ks及4Dtv值计算 - 简书 (jianshu.com)","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"比较基因组学","slug":"比较基因组学","permalink":"http://www.shelven.com/categories/%E6%AF%94%E8%BE%83%E5%9F%BA%E5%9B%A0%E7%BB%84%E5%AD%A6/"}],"tags":[{"name":"MCScanX","slug":"MCScanX","permalink":"http://www.shelven.com/tags/MCScanX/"},{"name":"共线性分析","slug":"共线性分析","permalink":"http://www.shelven.com/tags/%E5%85%B1%E7%BA%BF%E6%80%A7%E5%88%86%E6%9E%90/"}]},{"title":"基因组注释（5）——预测基因筛选","slug":"基因组注释（5）——预测基因筛选","date":"2023-04-11T14:58:20.000Z","updated":"2023-09-18T07:51:00.000Z","comments":true,"path":"2023/04/11/a.html","link":"","permalink":"http://www.shelven.com/2023/04/11/a.html","excerpt":"注释得到的基因集中，可能某些基因存在被转座子插入的情况，该基因会在后续功能注释的时候被注释上，但实际在基因组中该基因可能已经被插入失活。因此在基因组的功能注释前，需要用检测转座子软件（如TransposonPSI、TEsorter等）将含有转座子的基因找出并去除。","text":"注释得到的基因集中，可能某些基因存在被转座子插入的情况，该基因会在后续功能注释的时候被注释上，但实际在基因组中该基因可能已经被插入失活。因此在基因组的功能注释前，需要用检测转座子软件（如TransposonPSI、TEsorter等）将含有转座子的基因找出并去除。 这里记录下TEsorter软件筛选预测基因的方法。 1. TEsorter安装TEsorter原本是用于调用LTR_retriever鉴别长末端重复序列反转座子（LTR-RTs），也可以用于其他类型TE的鉴别，其鉴定原理为将待测序列与数据库REXdb（整合viridiplantae_v3.0 + metazoa_v3）的TE序列进行比对。 也可以使用GyDB数据库进行比对，官网上有具体的参数用法。 zhangrengang&#x2F;TEsorter: TEsorter: an accurate and fast method to classify LTR-retrotransposons in plant genomes (github.com) TEsorter提供conda安装，但是我没有安装成功，这里还是新建conda环境后手动安装各种依赖： 1234567891011121314conda create -n &quot;TEs&quot;conda activate TEsconda install python==3.11 # 官方要求python版本高于3，否则运行会报错conda install biopythonconda install xopenconda install hmmerconda install blastgit clone https://ghproxy.com/https://github.com/zhangrengang/TEsorter.git # 从github镜像网站下载cd TEsorterpython setup.py installTEsorter TEsorter/test/rice6.9.5.liban # 测试 2. TEsorter运行这里有一个问题，Braker预测基因有gtf和gff3两种格式的输出结果，但是两者的行数不一样。braker.aa蛋白序列和braker.codingseq基因序列的条数与gtf文件中的transcript条数一致，但是比gff3文件中的mRNA条数多（按理来说两者应该是一致的）。 后来发现Braker加入--gff3参数生成的gff3文件mRNA数量 + gtf文件的mRNA数量 = gtf文件的transcript数量，不理解为什么有这种关系，方便起见我这里处理了gtf结果文件。 TEsorter软件可以输入基因序列或者蛋白序列，以基因序列为例，简单编写脚本如下： 12345#!/bin/bash#SBATCH -n 8#SBATCH -t 7200TEsorter /public/home/wlxie/baima_pre_mydb/braker.codingseq -eval 1e-6 -p 8 大约十几分钟运行完毕。 3. 结果文件处理结果文件如下： .tsv后缀的文件中以列表形式列出了所有预测的TE类型，一个基因可能有多种类型的TE插入，因此需要处理结果文件，统计含有TE的基因，并在gtf结果文件中将该基因去除。 12345678# 筛选含有TE的基因grep -v &quot;^#&quot; braker.codingseq.rexdb.cls.tsv | cut -f1 | sort | uniq | cut -f1 -d &quot;_&quot; | sort | uniq &gt; TE-genes.txt# 去除含有TE的基因序列grep -Fvf /public/home/wlxie/biosoft/TEsorter/baima_mydb/TE-genes.txt braker.gtf | awk &#x27;$3 ~ /gene/&#x27; &gt; baima_gene_only.gtf# 去除含有TE的转录本序列grep -Fvf /public/home/wlxie/biosoft/TEsorter/baima_mydb/TE-genes.txt braker.gtf | awk &#x27;$3 ~ /transcript/&#x27; &gt; baima_transcript.gtf 可以看看去除TE序列后的转录本和基因数量： 123456(base) wlxie 17:03:52 ~/baima_pre_mydb$ cat baima_transcript.gtf | wc -l23716(base) wlxie 17:04:05 ~/baima_pre_mydb$ cat baima_gene_only.gtf | wc -l20742 本想通过gffread软件根据处理后的gtf文件重新提取基因组的蛋白序列，但是运行过程中总是报错no genomic sequence available，原因暂时未知（可能是因为braker预测结果braker.gtf不是标准的gtf文件格式，同样用gffread做gtf2gff转换的时候会有部分信息丢失）。 可以直接写一个脚本处理braker.aa文件，根据前面筛选的TE-genes.txt文件，去除含有TE的蛋白序列，这里后续用到再做更新。 2023.4.13 更新gffread报错的原因找到了： 基因组文件的序列编号有空格 gtf文件缺少必要的位置信息 主要还是跑braker过程的疏忽和对gtf以及gff3数据格式的不了解。 在braker.log日志文件中有提示，基因组的fasta文件的header中包含了空格，可能会导致后续的错误，因此braker运行时自动将空格替换为了下划线“_”，这就导致了预测后的gtf文件与基因组文件无法匹配上，自然就报错no genomic sequence available。 解决方法： 手动将基因组文件中的header部分的空格用下划线“_”代替（我的基因组是59条contig，也就是手动改59个空格），并删除原fai索引文件（一定要删除，否则仍然无法找到基因序列）。 用gffread软件做gtf和gff3格式相互转换的时候，确实会损失一部分信息，但仍然会保留最基本的CDS信息。如果直接从gtf文件的第三列提取gene和transcript信息保存成新的gtf文件，这个新的gtf文件是无法用gffread定位和提取蛋白序列的。 这一点在GTF官方文档对第三列的&lt;feature&gt;解释中有提到： &lt;feature&gt;The following feature types are required: “CDS”, “start_codon”, “stop_codon”. The features “5UTR”, “3UTR”, “inter”, “inter_CNS”, “intron_CNS” and “exon” are optional. All other features will be ignored. The types must have the correct capitalization shown here. 也就是说我如果从第三列只提取gene或者transcript，这些feature是会被忽略的，使用gffread提取蛋白序列会提示这是一个非法的GTF文件。 因此，正确的筛选方式和提取蛋白的方式应该为： 1234567891011121314# 筛选含有TE的基因grep -v &quot;^#&quot; braker.codingseq.rexdb.cls.tsv | cut -f1 | sort | uniq | cut -f1 -d &quot;_&quot; | sort | uniq &gt; TE-genes.txt# 去除含有TE的序列grep -Fvf /public/home/wlxie/biosoft/TEsorter/Ap_mydb/TE-genes.txt braker.gff3 &gt; Ap_rmTE.gff3# 从基因组重新提取去除了TE的CDS序列和蛋白序列gffread Ap_rmTE.gff3 -g ~/Genome/Ap.fasta -x Ap_rmTE.codingseqgffread Ap_rmTE.gff3 -g ~/Genome/Ap.fasta -y Ap_rmTE.aa# 计算基因总长度，基因数量和平均基因长度cat Ap_rmTE.gff3 | awk &#x27;&#123;if ($3==&quot;gene&quot;) print $0&#125;&#x27; | awk &#x27;&#123;sum+=($5 -$4)&#125; END &#123;print sum, NR, sum/NR&#125;&#x27;66715801 19644 3396.24","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"基因组三代测序分析","slug":"基因组三代测序分析","permalink":"http://www.shelven.com/categories/%E5%9F%BA%E5%9B%A0%E7%BB%84%E4%B8%89%E4%BB%A3%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/"}],"tags":[{"name":"TEsorter","slug":"TEsorter","permalink":"http://www.shelven.com/tags/TEsorter/"}]},{"title":"基因组注释（4）——基因预测","slug":"基因组注释（4）——基因预测","date":"2023-04-03T14:09:26.000Z","updated":"2023-04-08T02:38:55.000Z","comments":true,"path":"2023/04/03/a.html","link":"","permalink":"http://www.shelven.com/2023/04/03/a.html","excerpt":"在对基因组重复序列和ncRNA进行注释后，接下来是基因预测和功能注释，这也是寻找功能基因的基础和前提。这里主要记录下怎么用Braker3进行基因组的基因预测（也就是结构注释）。","text":"在对基因组重复序列和ncRNA进行注释后，接下来是基因预测和功能注释，这也是寻找功能基因的基础和前提。这里主要记录下怎么用Braker3进行基因组的基因预测（也就是结构注释）。 基因预测的方法主要有三种： 基于隐马尔可夫模型的自训练和迭代，获得从头预测的基因结构模型（软件Augustus、GeneMark-ES等） 基于已发表的近缘物种基因序列、蛋白序列的同源预测（软件DIAMOND、GeMoMa等） 基于本物种的RNA-Seq转录组数据，比对基因组内含子结构模型和基因侧翼序列信息（软件Hisat2、STAR等） 一般的流程是将以上三种基因预测结果通过软件EvidenceModeler（EVM）进行整合，最终得到预测结果gff文件。网上对于上面的流程有很多教程，针对不同软件有不同的设置，比如知乎的这篇文章使用AUGSTUS + Geneid + GeneMark + GeMoMa + GenomeThreader + Exonerate 进行基因结构预测 - 知乎 (zhihu.com) 为了简化流程，现在也有越来越多的基因预测pipeline工具得以开发，比较有名的就是Braker和Maker，感兴趣的话可以做两者预测结果的比较，我这里就用发表时间比较近的Braker3为例。 Braker本质上是一个结合了多种基因组注释工具的perl程序，其核心为braker.pl文件。 1. 安装Braker3目前为止（2023年4月3日）Braker的最新版本为3.0.2，conda上能搜到的最新版本只有2.1.6，因此不建议用conda安装，尤其是最新的版本Braker可以直接使用RNA-seq和蛋白数据，整合GeneMark-ETP和AUGUSTUS训练和预测基因，对于预测结果有较高的支持度。 因为整个pipeline包含了十几个注释用的软件，用到的perl模块也非常多（数了一下配置环境需要安装20个perl模块），还是推荐用给官方给的**container**。 1.1 申请和下载GeneMark-ETP密钥在Braker3中使用RNA-seq数据和蛋白数据预测基因，都要用到GeneMark-ETP这个软件。但是这个软件不能直接用，需要到GeneMark网站申请和下载对应的密钥文件放在集群用户的家目录中。 申请完成之后获得名称为gm_key_64.gz的密钥文件，解压之后命名为.gm_key（注意点号）并上传到集群用户的家目录下即可。 12gunzip gm_key_64.gzmv gm_key_64 .gm_key 1.2 创建Braker3镜像这一步在dockerhub网站的Braker3仓库中有详细说明，我这里选择创建singularity镜像： 1singularity build braker3.sif docker://teambraker/braker3:latest 得到的braker3.sif就是Braker3的singularity image 创建braker3镜像文件的环境变量： 1export BRAKER_SIF=/your/path/to/braker3.sif 可以复制三个示例脚本到当前目录： 123singularity exec -B $PWD:$PWD braker3.sif cp /opt/BRAKER/example/singularity-tests/test1.sh .singularity exec -B $PWD:$PWD braker3.sif cp /opt/BRAKER/example/singularity-tests/test2.sh .singularity exec -B $PWD:$PWD braker3.sif cp /opt/BRAKER/example/singularity-tests/test3.sh . 在本地申请计算资源并跑一下三个示例脚本： 12345salloc -n 50 # 申请50个核跑test.sh，注意不要在登录节点直接运行计算程序bash test1.sh # tests BRAKER1bash test2.sh # tests BRAKER2bash test3.sh # tests BRAKER3exit # 退出并释放计算资源 2. 运行Braker3官方提供了4种BRAKER pipeline 模式： RNA-Seq数据跑BRAKER 蛋白数据跑BRAKER 整合RNA-Seq数据以及蛋白数据跑BRAKER 整合短读长与长读长的RNA-Seq数据以及蛋白数据跑BRAKER 4种pipeline模式在调用软件的方法上有区别，根据自己手上有的数据选择用哪种，我这里选择第三种。 上图是整合RNA-Seq数据和蛋白数据跑Braker的流程图，需要注意基因组文件genome.fa在输入前需要需要进行softmasking（重复序列屏蔽为小写字母），官方建议不要用hardmasking（重复序列屏蔽为N），hardmasking后预测的基因数量会偏少，因为重复序列中可能也有功能基因的部分信息，屏蔽为N后就无法检测到了。 对RNA-Seq数据的处理，首先是通过SRA tookit将SRA ID对应的fastq数据下载下来（如果本来就是fastq格式就不需要这一步），用Hisat2比对到softmasking后的参考基因组并生成bam文件，再用stringtie进行转录本组装。 GeneMark-ETP以组装后的转录本和同源蛋白数据库作为输入数据进行训练和预测，之后再用AUGUSTUS软件结合上一步的预测结果进行训练和预测，最后用TSEBRA对预测的基因集进行整合，得到最终的gtf结果文件。 barker.sh脚本可以如下编写: 123456789101112#!/bin/bash#SBATCH -n 48#SBATCH -t 7200wd=baima_preif [ -d $wd ]; then rm -r $wdfisingularity exec -B $&#123;PWD&#125;:$&#123;PWD&#125; $&#123;BRAKER_SIF&#125; braker.pl --genome=/public/home/wlxie/biosoft/db_data/baima/RepeatMasker_soft/genome.nextpolish.fasta.masked --prot_seq=/public/home/wlxie/busco_soft/busco/test_data/eukaryota/busco_downloads/lineages/eudicots_odb10/refseq_db.faa --softmasking --threads 48 --workingdir=$&#123;wd&#125; --rnaseq_sets_dirs=/public/home/wlxie/RNAseq/BYT2022020901/rnaseq/baima --rnaseq_sets_ids=4-216031965_raw 几个参数的解释： genome softmasking后的基因组文件位置 prot_seq 同源蛋白库的文件位置 –softmasking mask的方式 –threads 跑程序用的核数 –workingdir 工作目录位置 rnaseq_sets_dirs RNA-Seq数据所在目录 –rnaseq_sets_ids 双端测序数据文件前缀（比如我这里是4-216031965_raw_1.fq和4-216031965_raw_2.fq） 说明一下同源蛋白来源于前面做BUSCO评估的真双子叶植物单拷贝直系同源库，怎么来的详情可见这篇博客（同源蛋白库建议用官方推荐的OrthoDB或者找几个模式植物的蛋白数据合并，见博客最下方的更新） 前面说过塔大集群的计算节点没有安装singularity，所以在运行该容器的时候要在申请核在本地跑程序，并且用screen维持当前会话： 1234567screen -S singularity # 创建singularity会话salloc -n 48 -t 7200 # 申请计算资源bash barker.shscreen -r singularity # 进入singularity会话exit # 退出会话exit # 运行结束释放计算资源 正常跑完花费了9个小时时间（200Mbp大小的基因组），如果中途不幸出bug，braker支持有限度的断点重新运行，主要分为以下三个阶段： 只要有中间文件存在，就可以在这三个阶段继续加入其他参数，跳过已经运行的阶段继续运行，详情可以看官方文档https://github.com/Gaius-Augustus/BRAKER#starting-braker-on-the-basis-of-previously-existing-braker-runs 3. 结果文件可以在前面给定的工作目录中看到如下结果文件: braker.gtf——Braker预测的基因集，包括了各种不同的基因结构预测结果 braker.codingseq——fasta格式的编码序列基因集（基因序列） braker.aa——fasta格式的蛋白序列基因集（蛋白序列） braker.gff3——需要–gff3参数指定，这里我没有，就是基因集的gff3格式 Augustus&#x2F;*——AUGUSTUS预测的基因集（包括gtf文件、基因序列和蛋白序列） GeneMark-ETP&#x2F;*——GeneMark-ETP预测的基因集以及其他中间文件 hintsfile.gff——从RNA-Seq数据和蛋白库数据中提取的外部证据数据 可以通过awk命令查看gft文件的第三列，查看预测的编码蛋白基因数量和转录本数量： 12345$ awk &#x27;$3==&quot;gene&quot;&#x27; braker.gtf | wc -l17869$ awk &#x27;$3==&quot;transcript&quot;&#x27; braker.gtf | wc -l20832 后续就可以对这些预测的基因做质量评估，然后比对各数据库做功能注释。 2023.4.7 更新1. OrthoDB蛋白数据库下载官方推荐使用OrthoDB数据库作为同源蛋白来源。 123456789101112# 真菌Fungi: https://v100.orthodb.org/download/odb10_fungi_fasta.tar.gz# 后生动物Metazoa: https://v100.orthodb.org/download/odb10_metazoa_fasta.tar.gz # 节肢动物 - Arthropoda: https://v100.orthodb.org/download/odb10_arthropoda_fasta.tar.gz # 脊椎动物 - Vertebrata: https://v100.orthodb.org/download/odb10_vertebrata_fasta.tar.gz# 单细胞生物Protozoa: https://v100.orthodb.org/download/odb10_protozoa_fasta.tar.gz# 绿色植物Viridiplantae: https://v100.orthodb.org/download/odb10_plants_fasta.tar.gz 我这里要分析的物种是植物，所以下载最后一个绿色植物蛋白库： 123nohup wget https://v100.orthodb.org/download/odb10_plants_fasta.tar.gz &amp;tar zxvf odb10_plants_fasta.tar.gzcat plants/Rawdata/* &gt; plant_proteins.fasta 绿色植物蛋白库约780Mb大小，建议用wget下载，如果windows下载再ftp拖拽上传到集群可能会损坏文件（并且没有md5效验码没办法确认是否真的损坏）。 解压并将所有数据合并到一个文件plant_proteins.fasta中，截至目前2023年4月7日为止，这个数据库共有3510742条蛋白序列，总文件大小为1.4Gb，比原来我比对的蛋白库大了1500倍。而蛋白比对是一个很缓慢的过程，因此这一步预测基因的时间将会很长，可以根据自己要做的物种确定用哪些注释比较完善的模式生物的蛋白库。 2. 自建蛋白数据库在NCBI网站上直接找一些组装注释结果较好的模式生物和近缘物种蛋白： 12345678910111213# 拟南芥（TAIR10.1）wget https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/001/735/GCF_000001735.4_TAIR10.1/GCF_000001735.4_TAIR10.1_protein.faa.gz# 栽培烟草（Ntab-TN90）wget https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/715/135/GCF_000715135.1_Ntab-TN90/GCF_000715135.1_Ntab-TN90_protein.faa.gz# 水稻（IRGSP-1.0）wget https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/001/433/935/GCF_001433935.1_IRGSP-1.0/GCF_001433935.1_IRGSP-1.0_protein.faa.gz# 近缘物种coffea arabicawget https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/003/713/225/GCF_003713225.1_Cara_1.0/GCF_003713225.1_Cara_1.0_protein.faa.gz# 近缘物种coffea canephorawget https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/900/059/795/GCA_900059795.1_AUK_PRJEB4211_v1/GCA_900059795.1_AUK_PRJEB4211_v1_protein.faa.gzgunzip *.gzcat *.faa &gt; mydb_proteins.fasta 顺便记录一下近缘物种的同源蛋白是如何找到的： plant Biology - Usadel lab (plabipd.de)这个网站记录了多种已发表的植物基因组文章和数据，点击cladogram view可以直观地看到已测过基因组的植物学名和树状图，比如我要找的物种是夹竹桃科（Apocynaceae），直接ctrl + F 就可以定位到夹竹桃科所处的进化节点。 然后用Apocynaceae祖先节点和子节点的已发表基因组的植物学名，一个一个去搜NCBI网站的Genome库，有protein序列的就可以直接下载。 两种同源蛋白建库方式预测的基因数量和花费的时间： OrthoDB Plant数据库 自建蛋白数据库 花费时间 13 h 12.5 h 预测基因数 23746 23953 用自建蛋白数据库跑braker预测的基因数更多，且花费时间更短。后续以该预测结果继续分析。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"基因组三代测序分析","slug":"基因组三代测序分析","permalink":"http://www.shelven.com/categories/%E5%9F%BA%E5%9B%A0%E7%BB%84%E4%B8%89%E4%BB%A3%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/"}],"tags":[{"name":"Barker3","slug":"Barker3","permalink":"http://www.shelven.com/tags/Barker3/"}]},{"title":"Apptainer/Singularity使用方法记录","slug":"Apptainer-Singularity使用方法记录","date":"2023-03-28T16:05:34.000Z","updated":"2023-03-28T16:21:56.000Z","comments":true,"path":"2023/03/29/a.html","link":"","permalink":"http://www.shelven.com/2023/03/29/a.html","excerpt":"在做生信分析的时候，难免会遇到一个pipeline上的软件存在冲突的情况，一般的解决方法是创建不同的conda环境，然后分别在不同的环境下跑不同的软件。这种操作可以解决环境冲突的问题但不适合写流程化的脚本，同时又非常占用空间。有的软件整合了pipeline流程的所有软件，按照顺序进行调用，这种软件虽然可以节省时间实现自动化分析，但是环境依赖的问题更加复杂，因此这一类的软件也往往提供容器来方便人们在一个封闭的环境中使用。","text":"在做生信分析的时候，难免会遇到一个pipeline上的软件存在冲突的情况，一般的解决方法是创建不同的conda环境，然后分别在不同的环境下跑不同的软件。这种操作可以解决环境冲突的问题但不适合写流程化的脚本，同时又非常占用空间。有的软件整合了pipeline流程的所有软件，按照顺序进行调用，这种软件虽然可以节省时间实现自动化分析，但是环境依赖的问题更加复杂，因此这一类的软件也往往提供容器来方便人们在一个封闭的环境中使用。 这篇博客主要讲一讲关于容器的一些基本常识，以及记录下学校集群中singularity的使用方法。 1. 容器（Container）前面说到为了规避软件与现有环境依赖冲突，我们往往会把一个pipeline的软件封装到一个容器中。容器是一种在Linux系统上广泛采用的应用封装技术，它将可执行程序与依赖库打包成一个镜像文件，启动时与宿主节点共享操作系统内核。 镜像（Image）：可执行的独立软件包，用于保存环境 实例（Instance）：基于镜像启动的运行实例，运行实际任务，不同实例之间互相隔离 由于这个镜像文件自带了可执行文件和依赖库，因此不需要用到宿主机的依赖库，也就从源头上避免了环境冲突的情况。听起来这种实现方式类似于虚拟化技术，但还是有一些区别的：前面说过容器启动时与宿主机共享操作系统内核，没有运行独立的操作系统任务，在资源的占用上明显低于虚拟机。虚拟化可以认为它更全面和彻底一些，每个虚拟机从宿主机的物理框架中分割出来，有自己的一整套操作系统，会运行各种独立的操作系统任务，即使没有运行程序也会消耗内存和系统资源。 上图来自Microsoft Azure容器与虚拟机的比较。总结来说，在安全性和隔离性上虚拟机优于容器，在资源占用、可移植性和运行速度上，容器优于虚拟机。 现有的容器软件比较多，Docker（5.8k star）是代表性的软件之一，其他开源容器化工具还有Podman（17.4k star，无守护进程的容器技术，无需root权限）、LXD（3.8k star，可运行多个进程）、Apptainer（以前叫singularity，2.4k star，无需root权限）、Containerd（13.5k star）和RunC（10.1k star）等。 这些开源的容器化技术软件各有其特点，详情可以点各自的链接了解，这里就不过多介绍了。主要说下塔大集群部署的singularity（现在已改名为Apptainer，很多人不知道改名了，两个名字就放一块儿说）的使用方法。 2. Apptainer&#x2F;Singularity首先还是要说明以一下什么时候选择用容器，并不是说每一个软件都要用容器封装——反而这样是对系统资源的浪费。一般是在需要批量部署环境、或者快速部署一个pipeline环境的时候选择用容器。在HPC上进行大规模计算的时候，一般考虑安全性不会用Docker（需要root权限），Apptainer&#x2F;Singularity这种无需root权限的容器工具是最好的选择。 需要说明一下，两年前Singularity改名为Apptainer，并且整个项目已经转移成为了Linux Foundation的一部分。Apptainer用法和Singularity几乎一模一样，可以参考https://apptainer.org/docs/user/latest/quick_start.htmlhttps://docs.sylabs.io/guides/latest/user-guide/quick_start.html#两个官方手册。因为塔大超算预装了singularity，以下统一用Singularity命令来讲解。 Singularity的镜像文件以.sif为后缀（Singularity Image File, SIF），且该文件是只读的，这和Docker镜像文件有本质上的区别。 2.1 使用镜像库获取镜像文件Singularity image文件是基于Docker image创建的： 1234567singularity -d build braker3.sif docker://teambraker/braker3:latest# 可以获取的镜像文件库（云平台）有以下几种# Sylabs cloud library library://# Docker docker://# Shub shub://# OCI registry oras://# 创建之后的文件名为braker3.sif build&#x2F;pull 这两个命令都可以拉取镜像文件并创建为singularity的sif文件 创建的image路径、名字都可以在-d参数后根据需要自己改 当一个软件提供docker镜像，我们就可以通过上面的方法下载并创建一个singularity镜像，需要注意这个镜像文件是只读的。 2.2 创建自定义镜像文件这里顺带提一下如何制作自定义的SIF镜像文件： 12345678singularity -d build --sandbox ubuntu/ docker://ubuntu# 以沙盒的形式创建一个空的操作系统，放在ubuntu这个文件夹中singularity shell --writable ubuntu# --writable或者-w以可修改模式进入沙盒。也可以不用这种方法进入，直接进入对应的文件位置修改即可singularity build name.sif ubuntu# 创建sif镜像文件 进入沙盒，就可以和正常的linux操作系统一样进行安装软件，最后build制作成名为name.sif的singularity镜像，和2.1从镜像库拉取创建的镜像后续是一样的用法。 第二步以可修改模式进入沙盒时可能会有如下提示： 12WARNING: By using --writable, Singularity can&#x27;t create /public destination automatically without overlay or underlayFATAL: container creation failed: mount /var/singularity/mnt/session/public-&gt;/public error: while mounting /var/singularity/mnt/session/public: destination /public doesn&#x27;t exist in container 无法自动创建public这个文件夹，并且进入/var/singularity/mnt/session/这个文件夹下你会发现是空的，此时需要手动在你创建ubuntu的文件夹中创建public文件夹 mkdir public，提示缺少其他文件也是一样的处理方法，缺啥创建啥，就可以正常进入了。 需要注意，塔大集群无法制作sif镜像文件！！！会在最后一步build的时候提示permission denied，因此，创建自定义镜像文件要在自己的计算机上（拥有root权限），制作完成之后的sif镜像文件可以上传到集群中再运行。 2.3 运行镜像文件singularity主要有两种运行方式，一种是执行镜像文件中的命令 singularity exec；一种是进入交互模式singularity shell 12345singularity exec name.sif test/test.pl # 运行name.sif镜像文件中test文件夹下的test.pl程序singularity shell name.sif# 以交互模式进入name.sif镜像文件 需要注意，运行镜像文件后，singularity会自动挂载当前目录$PWD、用户家目录$HOME和宿主机的/tmp目录，对这些目录的文件进行修改会影响到原文件。对于一般的程序来说已经足够了，如果需要访问宿主机的其他目录，需要用--bind将宿主机目录映射到容器内。 12345singularity exec --bind /pub/software:/mnt name.sif python test.py# --bind挂载宿主机的文件夹，冒号前为宿主机的路径，冒号后为容器中的路径。内容挂载到/mnt中singularity exec --bind /pub/software name.sif python test.py# 不写挂载点，则与宿主机的目录一致。内容挂载到/pub/software中 2.4 在集群中提交singularity作业一般来说登录节点预装了singularity，计算节点也会装singularity才对，但是无论我直接用singularity命令还是指定singularity命令的绝对路径，在sbatch提交作业后都是提示该命令不存在。很疑惑，又去查了一些资料，发现有的平台需要在作业里module load singularity之后才可以加载，但是塔大集群用这个指令仍然行不通，只有本地（登录节点）才可以使用该命令。 百思不得其解，询问集群管理员暂时没有答复，后续有新消息会更新。这里说一下我的解决方法： 既然可以在本地运行singularity，那就可以用salloc申请计算资源，在本地跑程序。但是我又不可能一直坐在电脑跟前，因此需要用到screen这个工具维持当前会话。 1234567891011screen -S test# 创建名为test的session对象salloc -n 50 -t 7200# 申请50核的计算资源export BRAKER_SIF=\\$PWD/braker3.sif# 给host添加环境变量（非必须，打个比方）singularity esec braker3.sif braker.pl # 运行容器中的程序 运行之后就可以双手离开键盘，关上电脑，等待第二天程序运行结束了。 再次打开session的时候只需要运行如下命令： 12345678screen -r test# 再次打开sessionexit# 退出sessionexit# 释放计算资源 注意需要两次exit之后才会回到原来的登录节点。 singularity还有很多其他参数，对我而言暂时用不到，需要用的时候再更新。 可以参考武大超算中心的文档运行 Singularity · GitBook (whu.edu.cn)和北鲲云的介绍文档https://www.cloudam.cn/helpce/docs/2030/about2/。（可恶，我们学校集群什么时候能出一个详细的文档啊。好想吐槽，slurm调度系统和各种软件都要自己学，功能还不一定全，也不知道到底预装了哪些东西，以后要是我来管理集群一定会做详细的文档介绍所有花里胡哨的功能，而不是藏着不告诉用户） 2023.3.29更新破案了，计算节点确实没装singularity（噎住.jpg）","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"容器","slug":"容器","permalink":"http://www.shelven.com/tags/%E5%AE%B9%E5%99%A8/"},{"name":"singularity","slug":"singularity","permalink":"http://www.shelven.com/tags/singularity/"}]},{"title":"基因组注释（3）——ncRNA注释","slug":"基因组注释（3）——ncRNA注释","date":"2023-03-21T16:29:28.000Z","updated":"2023-03-21T16:31:39.000Z","comments":true,"path":"2023/03/22/a.html","link":"","permalink":"http://www.shelven.com/2023/03/22/a.html","excerpt":"非编码RNA(non-coding RNA，ncRNA)指不编码蛋白质的RNA，包括rRNA、tRNA、snRNA、snoRNA 和 microRNA 等多种已知功能的 RNA，和未知功能的RNA。tRNA预测可以使用经典的tRNAscan-SE，其他类型的RNA都可以用Infernal+Rfam数据库方式预测。","text":"非编码RNA(non-coding RNA，ncRNA)指不编码蛋白质的RNA，包括rRNA、tRNA、snRNA、snoRNA 和 microRNA 等多种已知功能的 RNA，和未知功能的RNA。tRNA预测可以使用经典的tRNAscan-SE，其他类型的RNA都可以用Infernal+Rfam数据库方式预测。 1. tRNAscan-SEtRNAscan-SE的安装需要依赖Infernal软件，因此可以用conda直接安装tRNAscan-SE顺带解决依赖问题： 1conda install -c bioconda trnascan-se 写一个脚本运行tRNAscan-SE： 12345#!/bin/bash#SBATCH -n 50#SBATCH -t 7200tRNAscan-SE --thread 50 -E -I -m tRNA_luobuma.stats -o tRNA_luobuma.out -f tRNA_luobuma.ss /public/home/wlxie/NextPolish/luobuma_rundir/genome.nextpolish.fasta 参数解释： -E 搜寻真核生物tRNA -I 使用Infernal软件进行搜索 -m 保存结果统计文件 -o 输出tRNA预测结果 -f 保存tRNA的二级结构 也可以直接使用-j参数保存gff3格式，-b参数保存bed格式，详情可以见tRNAscan-SE -h 生成的二级结构结果文件如下： str一行记录的二级结构信息，每个&lt;&gt;是互相配对的，代表在二级结构中这两个碱基连在一起。可以通过其他软件（如VARNA）绘制成图。 输出的out文件也推荐转成gff文件方便在基因组上可视化，因为我这里只是粗略统计一下tRNA数量，所以只看stat文件就可以了： 可以看到第一轮预测出526个tRNA，通过Infernal验证的有479个。 2. Infernal + RfamInfernal（INFERence of RNA ALignment）是Sanger实验室开发的ncRNA预测软件，他们建立了1600多个RNA家族，每个家族建立了一致性二级结构和协方差模型，也就是Rfam数据库。总体的注释思路是基因组与 Rfam数据库进行比对，Rfam是一个RNA分类数据库，其比对方法是调用软件Infernal中的程序cmscan，将提交的序列在Rfam.cm数据库中进行检索，从而得到其比对的结果。 cmscan（search sequence(s) against a covariance model database, 针对协方差模型数据库的序列搜索），主要参考官方手册Userguide.pdf (eddylab.org)中的Searching the Rfam CM database with a query sequence步骤。 前面已经安装了Infernal，这里需要再下载一个Rfam数据库。 1234567# 下载Rfam数据库，注意两个文件版本必须一致wget ftp://ftp.ebi.ac.uk/pub/databases/Rfam/CURRENT/Rfam.cm.gzwget ftp://ftp.ebi.ac.uk/pub/databases/Rfam/CURRENT/Rfam.clanin# 解压建库gunzip Rfam.cm.gzcmpress Rfam.cm 官方手册这里使用默认参数运行cmscan，稍微注意下-Z，以下是官方对-Z参数的定义： -Z Calculate E-values as if the search space size was megabases (Mb). Without the use of this option, the search space size changes for each query sequence, it is defined as the length of the current query sequence times 2 (because both strands of the sequence will be searched) times the number of CMs in . Z值代表搜索数据库的大小（database size），是和E-Values计算相关的，在默认情况下，每一个query sequence的-Z参数值是不同的，等于query sequence本身的碱基数*2*CM数据库中模型的数量，只有E-Values小于10的hits会被报道。 在作者的原文中，可以找到这么一句话： To manually set the database size used in the E-value calculation to megabases when running cmsearch or cmscan on the command line, use the -Z option. It makes sense to do this if, for example, a large sequence file has been split up into many smaller files, and searches have been performed in parallel on a compute cluster, with the results combined. In that scenario, if is set as the total number of models used times the total number of nucleotides in all sequence files times two (for both strands), then the combined results should have appropriate E-values. That is, the expectation is that in the collection of all hits between all sequences and models there will be about 1 hit with an E-value of 1 or below by chance (not due to homology), about 10 with an E-value of 10 or below by chance, etc. Non-coding RNA analysis using the Rfam database - PMC (nih.gov) 也就是说一个大的序列文件被分割成数个文件，并在一个集群上并行搜索，最终将结果文件整合的时候，设置Z值为使用的CM模型数量*所有序列文件的核苷酸总数*2，合并的结果会有一个适当的E-value值。 前面建库的时候可以看到CM数据库中模型的数量： CM模型的数量不可以直接用cat Rfam.cm | grep &quot;ACC&quot; | wc -l这种方式查询，你会发现这种只搜索ACC或者NAME字段查找到的数量是实际数量的两倍（包括了HMM filter）。 Z值&#x3D; 基因组核苷酸数*2*数据库中模型数量/1000000 1esl-seqstat my-genome.fa # HMMER插件，统计基因组大小，计算Z值用 因此这里的Z值计算如下：$$Z &#x3D; 22308888634108&#x2F;1000000&#x3D;1896982.90$$但是很神奇的是，在Rfam的帮助文档中给了一个对古菌Methanobrevibacter ruminantium注释ncRNA的例子，其中也用了Rfam数据库的，计算Z值时没有乘以CM模型的数量，我也有点疑惑，以下是链接地址。 Genome annotation — Rfam Help documentation For the purposes of Infernal, the total database size is the number of nucleotides that will be searched, in units of megabases (Mb, millions of nucleotides). So, it is the total number of nucleotides in all sequences that make up the genome, multiplied by two (because both strands will be searched), and divided by 1,000,000 (to convert to millions of nucleotides). 就 Infernal 而言，数据库总大小是将要搜索的核苷酸数量，以兆碱基（Mb，百万核苷酸）为单位。因此，它是构成基因组的所有序列中的核苷酸总数乘以2（因为将搜索两条链），然后除以 1,000,000（转换为Mb）。 两种方法计算Z值相差4000多倍，我无法断定哪种是正确的，后续有更深的理解再更新（也许是版本问题？）。 这里我按照文章作者给的默认参数对基因组进行注释（也就是没有指定Z值，每条序列的Z值是变动的）。 运行脚本如下： 12345#!/bin/bash#SBATCH -n 50#SBATCH -t 7200cmscan --cut_ga --rfam --nohmmonly --tblout luobuma.tblout --fmt 2 -o luobuma.out --clanin Rfam.clanin Rfam.cm /public/home/wlxie/NextPolish/luobuma_rundir/genome.nextpolish.fasta 参数解释： –cut_ga 指定Rfam GA阈值，决定哪些hits可以报告。有多种标准，可以见Glossary — Rfam Help documentation –fram 以快速模式运行 –nohmmonly 决定所有模型都是CM模型（非HMM模型） –tblout 表格形式输出结果 –fmt 2 输出格式2，包括overlapping hit的注释 -o 标准输出文件 –clanin Rfam.clanin文件的位置，该文件记录哪些模型属于同一家族 最终获得luobuma.out的标准输出文件和整理成表格的luobuma.tblout文件，这里整理一下表格文件： 27列对应预测ncRNA类型和信息；前后都有#键注释的行，除此之外每一行是预测的ncRNA具体内容 需要注意olp这一列，在infernal 1.1.4版本这一列有以下四个值： * indicates this hit does not overlap with any other reported hits 这条序列与其他已报道的序列之间无重叠区域（保留） ˆ indicates that this hit does overlap with at least one other hit, but none of the hits that overlap with it have a lower E-value (occur above it in the hit list) 这条序列与至少一条已报道的序列之间有重叠区域，但是这条序列的E-value最低（保留） $ indicates that this hit does overlap with at least one other hit that does have a lower E-value (occurs above it in the hit list) but none of those higher scoring hits have ˆ in this column 这条序列与至少一条已报道序列之间有重叠区域，且其他序列E-value更低但不是最低的（过滤，1.1.2版本的infernal中没有） &#x3D; indicates that this hit does overlap with at least one other hit that has a lower E-value (occurs above it in the hit list) and does itself have a ˆ in this column 这条序列与至少一条已报道序列之间有重叠区域，且其他序列的E-value值更低且是最低的（过滤） 我们只关注预测结果中准确度最高的ncRNA，记录种类和长度，因此可以写个python脚本处理并统计数据。 因为这里输出的列表没有具体给出分类，因此对数据处理前要去Rfam官网的Entry type search栏下找到每个accession号对应的ncRNA类型Rfam: Search Rfam： 我这里只关心上面红框中的ncRNA（根据情况自己选择），勾选之后点击submit： 拉到最底下看到官网提供未格式化的列表，点击show，将显示的列表复制粘贴到一个新建的accession.txt文档，接下来就是对tblout文件和accession.txt文件处理： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970&#x27;&#x27;&#x27;Infernal预测ncRNA结果文件统计脚本2023.3.22&#x27;&#x27;&#x27;# 结果文件数据过滤，获取每条预测ncRNA的accession号和长度loci_length = []accession = []with open(&#x27;./luobuma.tblout&#x27;, &#x27;r&#x27;) as input: for i in input.readlines(): if i.find(&#x27;#&#x27;) != -1 or i.find(&#x27;=&#x27;) != -1 or i.find(&#x27;$&#x27;) != -1: continue else: lst = i.strip().split() if len(lst) &lt; 1: continue length = abs(int(lst[10]) - int(lst[9])) loci_length.append(length) accession.append(lst[2])len_sum = 0for i in loci_length: len_sum += i# 处理accession.txt,提取accession号和ncRNA类型的关系accession_num = []dicts = &#123;&#125;with open(&#x27;./accession.txt&#x27;, &#x27;r&#x27;) as ac: for i in ac.readlines(): m = i.strip().split(&#x27;\\t&#x27;) # 以制表符分割 accession_num.append(m[0]) nc_type = m[2].split(&#x27;;&#x27;)[1].strip() # 获取第三列第二个分号处的ncRNA类型 if m[0] not in dicts: dicts[m[0]] = nc_type# 统计结果文件accession号对应的ncRNA类型数量mi = s = sn = lnc = t = r = other = 0mi_len = s_len = sn_len = lnc_len = t_len= r_len = other_len =0for i in range(len(accession)): item = accession[i] if item in dicts: if dicts[item] == &#x27;miRNA&#x27;: mi += 1 mi_len += int(loci_length[i]) elif dicts[item] == &#x27;sRNA&#x27;: s += 1 s_len += int(loci_length[i]) elif dicts[item] == &#x27;snRNA&#x27;: sn += 1 sn_len += int(loci_length[i]) elif dicts[item] == &#x27;lncRNA&#x27;: lnc += 1 lnc_len += int(loci_length[i]) elif dicts[item] == &#x27;tRNA&#x27;: t += 1 t_len += int(loci_length[i]) else: r += 1 r_len += int(loci_length[i]) else: other += 1 other_len += int(loci_length[i])outputlst = [(&#x27;miRNA&#x27;, mi, mi_len), (&#x27;sRNA&#x27;, s, s_len), (&#x27;snRNA&#x27;, sn, sn_len), (&#x27;lncRNA&#x27;, lnc, lnc_len), (&#x27;tRNA&#x27;, t, t_len), (&#x27;rRNA&#x27;, r, r_len), (&#x27;others&#x27;, other, other_len), (&#x27;total&#x27;, len(accession), len_sum)]# 输出结果with open(&#x27;./res.xls&#x27;, &#x27;w&#x27;) as output: output.write(&#x27;Type\\tCopy Number\\tTotal length(bp)\\n&#x27;) for i in outputlst: type = str(i[0]) number = str(i[1]) length = str(i[2]) output.write(type + &#x27;\\t&#x27; + number + &#x27;\\t&#x27; + length + &#x27;\\n&#x27;) 我对python掌握的不好，统计的地方可以写个循环的，怕自己绕不清楚这里就用最笨的方法….. 结果统计如下： tRNA这里预测470，与上面的tRNAscan-SE预测的479个基本没有差别。 顺带说一下，Rfam官网上也说了这种方法可以统计所有类型的RNA，如果针对不同ncRNA有特殊需求的话，可以用不同软件进行分析（但是RNAMMER现在似乎已经用不了了）。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"基因组三代测序分析","slug":"基因组三代测序分析","permalink":"http://www.shelven.com/categories/%E5%9F%BA%E5%9B%A0%E7%BB%84%E4%B8%89%E4%BB%A3%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/"}],"tags":[{"name":"tRNAscan-SE","slug":"tRNAscan-SE","permalink":"http://www.shelven.com/tags/tRNAscan-SE/"},{"name":"Rfam/Infernal","slug":"Rfam-Infernal","permalink":"http://www.shelven.com/tags/Rfam-Infernal/"}]},{"title":"SSL证书申请和部署","slug":"SSL证书申请和部署","date":"2023-03-17T10:00:39.000Z","updated":"2023-04-13T08:41:09.000Z","comments":true,"path":"2023/03/17/a.html","link":"","permalink":"http://www.shelven.com/2023/03/17/a.html","excerpt":"不知不觉这个小破站运行也快要一年整了，一年前网站刚开放，我天天修bug到凌晨两三点的情景还历历在目……主要还是自己对网站搭建框架不熟悉，看不懂代码整不清楚linux操作（虽然现在也没好到哪儿去）。一年过去了通过自学确实学习了很多计算机方面的知识，有空再做个总结吧~ 一年前想写如何部署ssl证书的，如今一年快到了正好要续上ssl证书，这篇博客算是补档吧~记录下自己的操作","text":"不知不觉这个小破站运行也快要一年整了，一年前网站刚开放，我天天修bug到凌晨两三点的情景还历历在目……主要还是自己对网站搭建框架不熟悉，看不懂代码整不清楚linux操作（虽然现在也没好到哪儿去）。一年过去了通过自学确实学习了很多计算机方面的知识，有空再做个总结吧~ 一年前想写如何部署ssl证书的，如今一年快到了正好要续上ssl证书，这篇博客算是补档吧~记录下自己的操作 1. SSL部署的意义前面在http原理部分说过，HTTPS的安全基础是ssl，部署ssl之后有以下优点： 建立数据信息安全通道，保障信息安全 有https协议的网站更容易被google、baidu收录 用户浏览https协议的网站地址有锁头标志，不会显示信息安全提醒页面 2. 申请SSL证书我是在腾讯云上购买的轻量云服务器，在哪个服务器供应商买的服务器就到对应的平台，搜索SSL证书，点击申请免费证书 选择第一个免费版即可，填写你要绑定的域名，验证方法选择手动DNS验证，提交申请 这一步需要到对应的域名供应商那里进行DNS解析 我是在阿里云买的域名，因此在阿里云控制台找到你要绑定的域名，添加记录，输入上面图红框里的对应信息 回到腾讯云，点击验证域名即可，后续根据自己的服务器类型（我是Apache 服务器）选择对应的证书。第一次申请的话可能会让你完善身份信息。需要注意，如果域名被托管到其他平台，需要到对应的托管平台进行DNS解析，否则会查询不到解析记录。 3. 部署SSL证书申请成功后，进入SSL证书管理平台，点击已签发，就可以看到刚刚申请的SSL证书了，首先把证书下载到本地 解压可以看到如下四个文件，.crt后缀的是证书链和证书文件，.csr后缀的是提供给CA的文件，.key后缀是私钥文件 再次强调一下Apache服务器、Nginx服务器等等的部署目录是不同的，我这里是apache服务器，需要将上面的四个文件上传到服务器/etc/httpd/ssl/目录下。 如果之前部署过ssl证书，到这一步以后直接service network restart重启http服务就行了。 如果是第一次安装，进入/etc/httpd/conf目录，修改 httpd.conf 配置文件： 1Include conf.modules.d/*.conf # 第56行确保该命令未被注释，用于加载SSL的配置目录 进入/etc/httpd/conf.modules.d目录，修改00-ssl.conf 配置文件： 1LoadModule ssl_module modules/mod_ssl.so # 第1行确保该命令未被注释，用于加载SSL模块 进入/etc/httpd/conf.d目录，修改ssl.conf配置文件： 123456DocumentRoot &quot;/var/www/html&quot; # 配置虚拟主机的位置，路径可以改，建议还是用默认的ServerName xxxxx.com # 填写证书网站名称SSLEngine on # 确保SSL功能打开SSLCertificateFile /etc/httpd/ssl/xxxxx.com.crt # 确定证书路径SSLCertificateKeyFile /etc/httpd/ssl/xxxxx.com.key # 确定私钥路径SSLCertificateChainFile /etc/httpd/ssl/root_bundle.crt # 确定证书链路径 以上配置完成后，重启网络服务service network restart，这个时候再访问网站就是https协议了。 参考自SSL 证书 Apache 服务器 SSL 证书安装部署（Linux）-证书安装-文档中心-腾讯云 (tencent.com) 需要注意下，证书到期之后不会自动部署…一般这种免费的SSL证书时间都是1年，在到期前一个月会有提醒，申请完成之后直接覆盖快到期的原证书即可。（省下了一笔自动部署的90块钱） 特别注意SSL证书部署后都是立即生效的，如果你发现网站仍然提示非安全连接，可以看看自己是否用了其他第三方加速。 比如你的网站用了CDN加速，需要同时在第三方加速平台上进行HTTPS配置更改，否则SSL证书无法生效！ 比如我这里用了又拍云的CDN加速，且设置了HTTPS访问，不更改成新申请的证书就无法生效。每个CDN加速平台设置HTTPS方法不一样，这里就不详细说了。","categories":[{"name":"个人主页","slug":"个人主页","permalink":"http://www.shelven.com/categories/%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5/"}],"tags":[{"name":"建站","slug":"建站","permalink":"http://www.shelven.com/tags/%E5%BB%BA%E7%AB%99/"}]},{"title":"基因组注释（2）——散在重复序列注释","slug":"基因组注释（2）——散在重复序列注释","date":"2023-03-16T15:13:10.000Z","updated":"2023-07-10T14:40:07.000Z","comments":true,"path":"2023/03/16/a.html","link":"","permalink":"http://www.shelven.com/2023/03/16/a.html","excerpt":"前面我们注释了串联重复序列（Tandem repeat，TR），接下来是对散在重复序列（也称转座子，transposable element，TE）进行注释。注释之后我们对所有重复序列在基因组上进行屏蔽，就可以进行后面的结构基因预测和注释了。","text":"前面我们注释了串联重复序列（Tandem repeat，TR），接下来是对散在重复序列（也称转座子，transposable element，TE）进行注释。注释之后我们对所有重复序列在基因组上进行屏蔽，就可以进行后面的结构基因预测和注释了。 1. 散在重复序列散在重复序列可以分为反转录转座子（class-I TEs）和DNA转座子（class-II TEs） 反转录转座子：通过RNA介导的copy and paste机制进行转座，主要由LTR（long terminal repeat）构成，而non-LTR根据长度又分为LINEs（long interspersed nuclear elements）和SINEs（short interspersed elements）。 DNA转座子：通过DNA介导的cut and paste机制进行转座。 这里我们用RepeatModeler和RepeatMasker两个软件跑一遍基因组散在重复序列注释的流程，需要注意下因为前面做了TRF注释串联重复序列，我们运行RepeatMasker的时候要改下下参数设置。 2. RepeatModeler和RepeatMasker安装不建议用conda安装两款软件的本体（但是可以安装其他依赖） RepeatMasker配置成功过是RepeatModeler配置的前提条件，且两者之间有版本关联（比如最新的RepeatModeler版本为2.0.4，需要最新的RepeatMasker版本4.1.4安装为前提），conda直接安装RepeatMasker会导致RepeatModeler无法找到RepeatMasker的路径，且输入正确路径也会提示找不到（不知道是不是我的原因）。 下载源码包编译，可以看官网RepeatMasker Home Page。 本篇博客所使用RepeatMasker版本为4.1.2，RepeatModeler版本为2.0.3 2.1 RepeatMasker安装本体安装过程不多说，主要说一下加载Repbase数据库： RepeatMasker自带的重复序列数据库是Dfam数据库，这是一个转座子（TE）序列数据库，收录的物种比较少。Repbase是重复序列参考数据库，其中收录了大部分真核物种，适用于重复序列的同源预测。然而Repbase不是RepeatMasker自带的，需要额外下载，我这里提供20181026版本的Repbase下载地址：点击这里 下载Repbase数据库后用tar -xvf解压，将RMRBSeqs.embl和README.RMRBSeqs两个数据库文件放在RepeatMasker安装目录的Libraries目录下，注意不要修改后缀名。 在RepeatMasker安装目录下运行perl ./configure，一路回车确定路径，如果有缺失的依赖就用conda下载，一直到最后选择序列搜索比对的软件，我这里输入3回车，之后的界面再输入5回车确认： 当看到提示信息Dfam和RBRM（也就是RepBase数据库）两个数据库版本的时候，就说明加载Repbase数据库成功了。 用RepeatMasker -h查看是否可以正常运行，如果提示Devel::Size这个perl模块缺失，可以用conda安装： 1conda install -c bioconda perl-devel-size 最后需要修改一下环境变量（不修改运行的时候找不到pm文件），将RepeatMasker 安装路径添加到PERL5LIB环境变量中： 12# 打开 ~/.bashrcexport PERL5LIB=&quot;/public/home/wlxie/miniconda3/envs/biosoft/share/RepeatMasker:$PERL5LIB&quot; 2.2 RepeatModeler安装安装过程与RepeatMasker差不多，有一个比较坑的地方是官方可选的一部分软件（比如CD-HIT）在configure过程中是必须指定的，所以还是按照github上的说明将所有依赖都用conda安装好。Dfam-consortium&#x2F;RepeatModeler: De-Novo Repeat Discovery Tool (github.com) 接下来在RepeatModeler安装的目录下运行perl ./configure，同样是一路回车到底确定路径，最后会询问是否需要预测LTR结构，因为我在之前的求LAI指数的博客中已经做过LTR预测，因此这一步选择n跳过，后续我会说明如何利用LTR预测数据： 3. TE注释策略因为我要注释的生物是非模式生物，在Dfam库和Repbase库中均没有该物种信息（无法在RepeatMasker软件中指定特定的物种，-species 和 -lib的参数是冲突的，需要自建数据库），因此注释所用的数据库将由以下三种数据库组成： LTR_retriever整合的LTR预测数据库（见这篇博客） 同源的（指该类群祖先和衍生节点）重复序列数据库 使用RepeatModeler从头预测序列，训练该物种的重复序列模型，构建预测的重复序列数据库 需要注意这三种数据库都需要fasta格式，将三种数据库合并之后，使用RepeatMasker -lib指定自建数据库，预测TE序列。 4. 注释流程4.1 导出同源物种重复序列库前面2.1步骤将Repbase和Dfam数据库整合之后，RepeatMasker/Libraries目录下RepeatMaskerLib.h5这个文件为整合后构建的数据库文件，我们要在这个文件中导出同源物种的重复序列。 在RepeatMasker目录下提供了famdb.py这个程序查询目标近缘物种。如果你不知道自己的物种在什么分支上，我这里推荐一个查找已发表的植物基因组的网站Published Plant Genomes (plabipd.de)，可以一级一级查看哪些近缘物种有人做过了。用以下命令查看物种重复序列否收录到库中： 1python famdb.py -i Libraries/RepeatMaskerLib.h5 lineage -ad lamiids # lamiids是我能查找到的最近的分支 找到最近的分支后，导出最近分支的祖先节点和衍生节点物种的重复序列库，使用内置的perl软件转换成fasta格式： 1234python famdb.py -i Libraries/RepeatMaskerLib.h5 families -f embl -a -d lamiids &gt; lamiids.embl # 查找近缘物种及其上祖先节点，其下所有类群repeat famlies，输出格式embl。 -a ancestor，-d descendentbuildRMLibFromEMBL.pl lamiids.embl &gt; lamiids.fasta # 转换格式为fasta，方便后续合并 4.2 RepeatModeler从头预测新建一个目录，用于存放RepeatModeler的预测结果，写一个repeatmodeler.slurm脚本： 1234567#!/bin/bash#SBATCH -n 100#SBATCH -t 7200BuildDatabase -name luobuma -engine ncbi /public/home/wlxie/NextPolish/luobuma_rundir/genome.nextpolish.fasta # 用基因组组装结果构建数据库RepeatModeler -pa 25 -database luobuma -engine ncbi # 自训练 RepeatModeler以自身基因组数据做训练集，用三种重复序列分析软件（ RECON, RepeatScout 和 LtrHarvest&#x2F;Ltr_retriever）进行预测，最后给出de novo预测结果。需要i说明一下，程序结束之后会给出如下四个文件： sample-families.fa de novo预测重复序列家族文件，也就是预测的重复序列库 sample-familes.stk Seed alignments RM_123456.XXXXXXXXX 中间文件（记录每一轮训练的流程和结果，仅用于中间程序崩了以后可以识别并继续跑流程） sample-rmod.log log文件 最终得到的luobuma-families.fa文件是我们需要的，里面记录了各种de novo预测的重复序列家族。中间文件具体有什么可以参考官方的github文档，这里仅仅是起到Recover from a failure的作用，中间程序没有崩就不用管它。 注意下RepeatModeler -pa参数，1 pa可以运行4个线程，我申请了100个核，这里就是25 pa可以用完所有资源。 这一步运行时间最久，100个核对200Mbp大小的植物基因组进行de novo预测重复序列，跑了17个小时。 4.3 整合数据库将4.1、4.2步骤的结果，以及前面做的LTR预测结果进行整合（都是fasta格式）： 1cat lamiids.fasta luobuma-families.fa luobuma.fasta.mod.LTRlib.fa &gt; final_luobuma_repeat.fasta # 合并同源数据库、RepeatModeler训练结果和LTR预测结果 此时得到的final_luobuma_repeat.fasta就是后一步运行RepeatMarsker需要指定的自建数据库。 4.4 RepeatMasker搜索重复序列根据需求确定参数，写一个repeatmasker.slurm脚本： 12345#!/bin/bash#SBATCH -n 100#SBATCH -t 7200RepeatMasker -nolow -no_is -pa 25 -lib final_luobuma_repeat.fasta -engine ncbi -gff -norna -dir luobuma /public/home/wlxie/NextPolish/luobuma_rundir/luobuma.fasta RepeatMasker的参数非常多，介绍一下这里用到的： -nolow Does not mask low_complexity DNA or simple repeats 不屏蔽低复杂度DNA或简单重复序列（有的学者认为simple repeat不算严格意义上的重复序列类型） -norna Does not mask small RNA (pseudo) genes 不屏蔽sRNA -no_is Skips bacterial insertion element check 跳过细菌插入元件检查 -pa 和RepeatModeler一样，1 pa是4个线程 -lib 指定自建数据库（与-species冲突） -gff 生成gff文件 -dir 指定输出目录 在输出目录下可以找到以下几种格式的文件: sample.fasta.cat.gz 基因组和数据库中参考重复序列比对详情，i代表碱基转换，v代表碱基颠换 sample.fasta.masked 重复序列屏蔽我iN后的序列 sample.fasta.out 预测的重复序列详细信息，Smith-Waterman 算法得分等等 sample.fasta.out.gff 上一个文件的gff格式 sample.fasta.tbl RepeatMasker的结果报告 主要看一下结果报告： TE的预测结果被分为逆转录转座子、DNA转座子和Unclassified三类，总的转座子序列数量和在基因组的占比见Total interspersed repeats统计结果。做到这里可以再结合前面做的TR分析，做一个基因组重复序列注释汇总表，我这里就不再演示了。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"基因组三代测序分析","slug":"基因组三代测序分析","permalink":"http://www.shelven.com/categories/%E5%9F%BA%E5%9B%A0%E7%BB%84%E4%B8%89%E4%BB%A3%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/"}],"tags":[{"name":"RepeatModeler","slug":"RepeatModeler","permalink":"http://www.shelven.com/tags/RepeatModeler/"},{"name":"RepeatMasker","slug":"RepeatMasker","permalink":"http://www.shelven.com/tags/RepeatMasker/"}]},{"title":"基因组注释（1）——串联重复序列注释","slug":"基因组注释（1）——串联重复序列注释","date":"2023-03-12T15:14:40.000Z","updated":"2023-03-12T15:18:13.000Z","comments":true,"path":"2023/03/12/a.html","link":"","permalink":"http://www.shelven.com/2023/03/12/a.html","excerpt":"本系列笔记开始记录如何对组装的植物基因组进行注释。前面通过一系列组装过程，我们拿到了组装好的基因组草图，而这个基因组草图只是研究的开始，我们关注的是基因组中有哪些我们感兴趣的功能基因或者结构基因，以及怎么用这些基因阐述生物学问题等等，这个时候一个高准确度的基因组注释结果就非常重要了。","text":"本系列笔记开始记录如何对组装的植物基因组进行注释。前面通过一系列组装过程，我们拿到了组装好的基因组草图，而这个基因组草图只是研究的开始，我们关注的是基因组中有哪些我们感兴趣的功能基因或者结构基因，以及怎么用这些基因阐述生物学问题等等，这个时候一个高准确度的基因组注释结果就非常重要了。 基因组注释可以分为两部分：基因组的结构注释（重复序列识别、非编码基因预测、编码基因预测）和基因功能注释，结构注释是功能注释的基础。 这里先从结构注释中的重复序列注释开始。我们知道植物基因组多倍化频繁，且基因组中存在大量的重复序列（有的植物基因组中重复序列甚至能达到80%），这些重复序列控制植物表型调控中有非常重要的作用。基因组中的重复序列可以分为以下几种： 1. 串联重复序列注释串联重复（Tandem Repeat, TR）指DNA中的一个或多个核苷酸前后相连接的重复。串联重复又分为卫星DNA(Satellite DNA)、小卫星（Minisatellite）、微卫星（Microsatellite）。微卫星在植物中一般称为SSR（Simple Sequence Repeats）SSR在植物基因组常被用做遗传标记使用。下面我用两款软件跑下串联重复序列注释。 1.1 GMATA这个软件主要用来搜索重复单元较短的简单重复序列，也就是微卫星SSR序列。这软件运行速度比较快，而且可以同时设计SSR引物，还可以预测elect-PCR结果，或者将预测结果显示在基因组浏览器上，可以在github上找到项目地址：XuewenWangUGA&#x2F;GMATA: software GMATA (github.com) 需要注意如果是在linux系统上跑一键流程的话，需要单独安装primer3和e-pcr（可以直接用conda安装），分别是设计SSR引物和模拟PCR的时候需要调用。如果没有这方面需要，可以在设置文件default_cfg.txt修改为不启用后面的模块。我这里统一用linux系统演示，只演示命令行操作，这个软件在windows上运行有UI界面，还是比较直观的。 12345#!/bin/bash#SBATCH -n 50#SBATCH -t 7200perl gmata.pl -c default_cfg.txt -i /public/home/wlxie/NextPolish/luobuma_rundir/genome.nextpolish.fasta 我这里直接用了一键流程，修改默认的设置文件中三个模块[set]:doprimer_smt、[set]:elctPCR和[set]:mk2gff3的ModulRun = N，虽然可以批量设计引物，但是我这里用不着….. 预测的SSR结果在原fasta文件路径下，以.ssr和.ssr.sat2为后缀： 在sat结果文件中，最终结果以4个表格的方式呈现，分别统计motif k-mer、motif和成对的motif信息以及最后每个contig的SSR统计信息。以上是其中两个表格。 1.2 TRF这个软件和上面软件类似，可以统计整个基因组上的串联重复序列，在上面一个软件输出结果上稍微有些不同。 12345#!/bin/bash#SBATCH -n 50#SBATCH -t 7200trf /public/home/wlxie/NextPolish/luobuma_rundir/genome.nextpolish.fasta 2 7 7 80 10 50 500 -f -d -m -r -h 说明一下这个软件使用过程中传参的一堆数字代表什么： 12345678910111213Match = matching weight # 匹配上的权重，缺省值2Mismatch = mismatching penalty # 未匹配上的权重，缺省值7Delta = indel penalty # 插入罚分，缺省值7PM = match probability (whole number) # 比对上的概率，可选值为80和75PI = indel probability (whole number) # 插入的概率，可选值为10和20Minscore = minimum alignment score to report # 串联重复序列的比对必须达到或超过要报告的比对分数MaxPeriod = maximum period size to report # 最大重复单元的bp数，不指定的话从1到2000其他主要可选参数（列一部分）:-m 输出屏蔽重复序列后的基因组-f 记录每个重复序列侧翼的500个核苷酸，主要用于PCR引物设计-d 生成屏蔽数据文件，与汇总表有相同的信息，不包含标签，主要方便做其他处理-h 不生成html结果文件（contig数量多的话建议使用，否则有大量的文件生成） 运行结束后可以生成.mask后缀的屏蔽后的序列文件，还有一个.dat后缀的结果文件，包含了重复序列的详细信息。 主要讲解下这个dat文件，先less -S打开看看： 上面记录的参数和其他信息就不说了，主要是底下的数据，每一行是一个重复序列的信息，每行分为15列： 第1列和第2列是预测到的重复序列的起始和结束位点； 第3列是重复单元的长度； 第4列是重复单元的拷贝数，不一定是整数，因为可能存在插入缺失； 第5列是一致性序列的长度； 第6列是匹配的百分率； 第7列是插入缺失的百分率； 第8列是TRF软件给的分值，越高越可靠； 第9-12列分别为ACGT碱基的个数； 第13列表示比对的熵值； 第14列是一致性序列的具体碱基排列； 第15列是整个重复序列的具体碱基排列顺序。 对于结果文件的处理有两种方法，一种是将.dat后缀的结果文件转换成标准的.gff3文件格式，然后用bedtools提取trf特征。转化gff的的方法github上有不少开源的项目，这里推荐一个Adamtaranto&#x2F;TRF2GFF: Convert Tandem Repeat Finder dat file output into gff3 format (github.com) 还有一种方法就是自己写个脚本，可以看到同一位点处可能有多条预测的串联重复序列，也就是说这些串联重复序列之间可能存在交叠，思路是将同一位点预测的重复序列只保留最短的一条（起始位点相同保留前一条，结束位点相同保留后一条），然后统计第3列重复序列k-mer数量和类型，根据第1列和第2列计算长度，统计总长度和占比即可。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394&#x27;&#x27;&#x27;自编TFR dat格式结果文件统计脚本2023.3.12&#x27;&#x27;&#x27;from collections import Counter# 数据过滤loci_start = []loci_finish = []total_line = []with open(&#x27;./genome.baima.fasta.2.7.7.80.10.50.500.dat&#x27;, &#x27;r&#x27;) as input: for i in input.readlines()[15:]: if i.find(&#x27;Sequence&#x27;) != -1 or i.find(&#x27;Parameters&#x27;) != -1: continue else: lst = i.strip().split(&#x27; &#x27;) if len(lst) &lt; 15: continue if len(loci_start) &lt; 1 and len(loci_finish) &lt; 1: # 处理列表为空的情况 loci_start.append(lst[0]) loci_finish.append(lst[1]) total_line.append(lst) else: if lst[0] != loci_start[-1] and lst[1] != loci_finish[-1]: # 开始结束位点都不同，则记录数据 loci_start.append(lst[0]) loci_finish.append(lst[1]) total_line.append(lst) elif lst[0] == loci_start[-1]: # 开始位点相同，跳过 continue elif lst[1] == loci_finish[-1]: # 结束位点相同，删除列表最后一个元素并加入新元素 del loci_start[-1] del loci_finish[-1] del total_line[-1] loci_start.append(lst[0]) loci_finish.append(lst[1]) total_line.append(lst)# 提取motif长度和重复序列长度motif_lst = []leng_lst = []for i in total_line: motif_lst.append(i[2]) leng = int(i[1]) - int(i[0]) + 1 leng_lst.append(leng)# 统计相同motif的总长度和所有重复序列总长度total_leng = &#123;&#125;motif_sum = 0for i in range(len(motif_lst)): item = motif_lst[i] motif_sum += leng_lst[i] if item in total_leng: total_leng[item] += leng_lst[i] else: total_leng[item] = leng_lst[i]# 统计motif-mer数量，总数，占比count_motif = Counter(motif_lst)count_lst = list(count_motif.items())count_lst.sort(key = lambda x : x[1], reverse = True)lst_ = []hit_num = 0for i in count_lst: hit_num += i[1] for i in count_lst: ls = i[0] lst1 = list(i) if ls in total_leng: lst1.append(total_leng[ls]) precentage = &#x27;%.2f%%&#x27;%(100 * i[1] / hit_num) lst1.append(precentage) lst_.append(lst1)# 统计结果过滤（取前二十）lst_filted = []hit_ = 0motif_ = 0for i in range(1, 20): lst_filted.append(lst_[i]) hit_ += lst_[i][1] motif_ += lst_[i][2]lst_filted.append([&#x27;Other&#x27;, int(hit_num - hit_), int(motif_sum - motif_), &#x27;%.2f%%&#x27;%(100 - 100 * hit_ / hit_num)])lst_filted.append([&#x27;Total&#x27;, int(hit_num), int(motif_sum), &#x27;100%&#x27;])# 输出结果with open(&#x27;./stastics.xls&#x27;, &#x27;w&#x27;) as output: output.write(&#x27;Motif(-mer)\\tNumber\\tLength(bp)\\tPrecentage\\n&#x27;) for i in lst_filted: motif = i[0] number = i[1] length = i[2] pre = i[3] output.write(motif + &#x27;\\t&#x27; + str(number) + &#x27;\\t&#x27; + str(length) + &#x27;\\t&#x27; + str(pre) + &#x27;\\n&#x27;) **写的有点冗长，能实现统计功能就行…..**实现的结果如下： 可以看到两个软件统计结果还是有比较大的出入的，可能是在算法上有不同。在单独分析SSR序列的时候还是用GMATA准确一些，如果是统计全基因组上的串联重复序列则使用老牌的TRF更为合适。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"基因组三代测序分析","slug":"基因组三代测序分析","permalink":"http://www.shelven.com/categories/%E5%9F%BA%E5%9B%A0%E7%BB%84%E4%B8%89%E4%BB%A3%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/"}],"tags":[{"name":"GMATA","slug":"GMATA","permalink":"http://www.shelven.com/tags/GMATA/"},{"name":"TRF","slug":"TRF","permalink":"http://www.shelven.com/tags/TRF/"}]},{"title":"绕过双重封锁部署ChatGPT到zhenxun_bot","slug":"绕过双重封锁部署ChatGPT到zhenxun-bot","date":"2023-03-08T13:54:56.000Z","updated":"2023-03-08T14:01:24.000Z","comments":true,"path":"2023/03/08/a.html","link":"","permalink":"http://www.shelven.com/2023/03/08/a.html","excerpt":"作为一个从ChatGPT公测用到现在的用户，有些无奈很难言说。本来OpenAI就不对咱们这个区域开放，使用官方的API搭建应用可以不借助VPN访问，算是解除了区域限制。但是，从2023年3月2日傍晚开始，API接口就开始没有响应了，官网没有问题，四处查询发现可能是API的域名上了GFW名单（暂不确定，有可能重大会议过去后会恢复？）。","text":"作为一个从ChatGPT公测用到现在的用户，有些无奈很难言说。本来OpenAI就不对咱们这个区域开放，使用官方的API搭建应用可以不借助VPN访问，算是解除了区域限制。但是，从2023年3月2日傍晚开始，API接口就开始没有响应了，官网没有问题，四处查询发现可能是API的域名上了GFW名单（暂不确定，有可能重大会议过去后会恢复？）。 因此，现在摆在眼前的问题是如何绕过双重封锁调用OpenAI的API接口？最稳妥的方式当然是给服务器挂个全局代理，但是我的服务器本身就在作代理服务器，给服务器再上个代理会比较麻烦……这里记录下自己实现的方式，顺便记录下是如何部署ChatGPT到zhenxun_bot（这个bot真的超级好用！）上的。 本人在这方面是小白，只是记录实现过程。 此部分内容需要以部署zhenxun_bot为前提、有一个未上GFW名单的域名（国内需要实名）。 1. 部署ChatGPT到zhenxun_bot时间过去太久，已经找不到写插件的原作者了…我是在原插件的基础上copy和修改了一部分代码，实际上就是在zhenxun_bot的AI插件基础上做的一点删改（可能有些没删干净，懒得查了）。如果没有修改路径的话，原文件路径是/zhenxun_bot/plugins/ai/data_source.py，下面代码替代原文件内容（原文件最好另存以防万一）：import osimport randomimport refrom utils.http_utils import AsyncHttpxfrom configs.path_config import IMAGE_PATH, DATA_PATHfrom services.log import loggerfrom utils.message_builder import image, facefrom configs.config import Config, NICKNAMEfrom .utils import ai_message_managerfrom copy import deepcopyfrom transformers import GPT2TokenizerFastimport openaiopenai.api_key = &quot;xxxxxxxxxxxxxx&quot;try: import ujson as jsonexcept ModuleNotFoundError: import jsonsession_config = &#123; &#x27;preset&#x27;: &#x27;你是一个大型语言模型，可以回答我的问题。如果我有任何问题，请随时告诉你，你会尽力为我解答。&#x27;, &#x27;context&#x27;: &#x27;&#x27;&#125;sessions = &#123;&#125;tokenizer = GPT2TokenizerFast.from_pretrained(&quot;gpt2-large&quot;)check_url = &quot;https://v2.alapi.cn/api/censor/text&quot;index = 0anime_data = json.load(open(DATA_PATH / &quot;anime.json&quot;, &quot;r&quot;, encoding=&quot;utf8&quot;))# 获取对话sessiondef get_chat_session(sessionid): if sessionid not in sessions: config = deepcopy(session_config) config[&#x27;id&#x27;] = sessionid sessions[sessionid] = config return sessions[sessionid] def chat_with_gpt(prompt): try: resp = openai.Completion.create( model = &quot;text-davinci-003&quot;, temperature = 0.9, max_tokens=3000, top_p=1, presence_penalty=0, frequency_penalty=0, prompt=prompt) resp = resp[&#x27;choices&#x27;][0][&#x27;text&#x27;] except openai.OpenAIError as e: print(&#x27;openai 接口报错: &#x27; + str(e)) resp = str(e) return respasync def get_chat_result(text: str, img_url: str, user_id: int, nickname: str) -&gt; str: &quot;&quot;&quot; 获取 AI 返回值，顺序： 特殊回复 -&gt; GPT3 -&gt; 青云客 :param text: 问题 :param img_url: 图片链接 :param user_id: 用户id :param nickname: 用户昵称 :return: 回答 &quot;&quot;&quot; global index ai_message_manager.add_message(user_id, text) special_rst = await ai_message_manager.get_result(user_id, nickname) if special_rst: ai_message_manager.add_result(user_id, special_rst) return special_rst if index == 5: index = 0 if len(text) &lt; 6 and random.random() &lt; 0.6: keys = anime_data.keys() for key in keys: if text.find(key) != -1: return random.choice(anime_data[key]).replace(&quot;你&quot;, nickname) rst = await GPT_3(text, user_id) if not rst: rst = await xie_ai(text) if not rst: return no_result() if nickname: if len(nickname) &lt; 5: if random.random() &lt; 0.5: nickname = &quot;~&quot;.join(nickname) + &quot;~&quot; if random.random() &lt; 0.2: if nickname.find(&quot;大人&quot;) == -1: nickname += &quot;大~人~&quot; rst = str(rst).replace(&quot;小主人&quot;, nickname).replace(&quot;小朋友&quot;, nickname) ai_message_manager.add_result(user_id, rst) return rst# GPT3接口async def GPT_3(msg: str, sessionid: int) -&gt; str: &quot;&quot;&quot; 获取GPT3接口的回复 指令如下(群内需@机器人)：1.[重置会话] 请发送 重置会话2.[设置人格] 请发送 设置人格+人格描述3.[重置人格] 请发送 重置人格。 注意：重置会话不会清空人格,重置人格会重置会话!设置人格后人格将一直存在，除非重置人格或重启逻辑端! &quot;&quot;&quot; try: if msg.strip() == &#x27;&#x27;: return &#x27;您好，我是人工智能助手，如果您有任何问题，请随时告诉我，我将尽力回答。\\n如果您需要重置我们的会话，请回复`重置会话`&#x27; # 获得对话session session = get_chat_session(sessionid) if &#x27;重置会话&#x27; == msg.strip(): session[&#x27;context&#x27;] = &#x27;&#x27; return &quot;会话已重置&quot; if &#x27;重置人格&#x27; == msg.strip(): session[&#x27;context&#x27;] = &#x27;&#x27; session[&#x27;preset&#x27;] = session_config[&#x27;preset&#x27;] return &#x27;人格已重置&#x27; if msg.strip().startswith(&#x27;设置人格&#x27;): session[&#x27;preset&#x27;] = msg.strip().replace(&#x27;设置人格&#x27;, &#x27;&#x27;) session[&#x27;context&#x27;] = &#x27;&#x27; # 处理上下文逻辑 token_limit = 4096 - 3000 - len(tokenizer.encode(session[&#x27;preset&#x27;])) - 3 session[&#x27;context&#x27;] = session[&#x27;context&#x27;] + &quot;\\n\\nQ:&quot; + msg + &quot;\\nA:&quot; ids = tokenizer.encode(session[&#x27;context&#x27;]) tokens = tokenizer.decode(ids[-token_limit:]) # 计算可发送的字符数量 char_limit = len(&#x27;&#x27;.join(tokens)) session[&#x27;context&#x27;] = session[&#x27;context&#x27;][-char_limit:] # 从最早的提问开始截取 pos = session[&#x27;context&#x27;].find(&#x27;Q:&#x27;) session[&#x27;context&#x27;] = session[&#x27;context&#x27;][pos:] # 设置预设 msg = session[&#x27;preset&#x27;] + &#x27;\\n\\n&#x27; + session[&#x27;context&#x27;] print(msg) # 与ChatGPT交互获得对话内容 message = chat_with_gpt(msg) print(&quot;会话ID: &quot; + str(sessionid)) print(&quot;ChatGPT返回内容: &quot;) print(message) return message except Exception as error: traceback.print_exc() return str(&#x27;异常: &#x27; + str(error)) # 屑 AIasync def xie_ai(text: str) -&gt; str: &quot;&quot;&quot; 获取青云客回复 :param text: 问题 :return: 青云可回复 &quot;&quot;&quot; res = await AsyncHttpx.get(f&quot;http://api.qingyunke.com/api.php?key=free&amp;appid=0&amp;msg=&#123;text&#125;&quot;) content = &quot;&quot; try: data = json.loads(res.text) if data[&quot;result&quot;] == 0: content = data[&quot;content&quot;] if &quot;菲菲&quot; in content: content = content.replace(&quot;菲菲&quot;, NICKNAME) if &quot;艳儿&quot; in content: content = content.replace(&quot;艳儿&quot;, NICKNAME) if &quot;公众号&quot; in content: content = &quot;&quot; if &quot;&#123;br&#125;&quot; in content: content = content.replace(&quot;&#123;br&#125;&quot;, &quot;\\n&quot;) if &quot;提示&quot; in content: content = content[: content.find(&quot;提示&quot;)] if &quot;淘宝&quot; in content or &quot;taobao.com&quot; in content: return &quot;&quot; while True: r = re.search(&quot;&#123;face:(.*)&#125;&quot;, content) if r: id_ = r.group(1) content = content.replace( &quot;&#123;&quot; + f&quot;face:&#123;id_&#125;&quot; + &quot;&#125;&quot;, str(face(int(id_))) ) else: break return ( content if not content and not Config.get_config(&quot;ai&quot;, &quot;ALAPI_AI_CHECK&quot;) else await check_text(content) ) except Exception as e: logger.error(f&quot;Ai xie_ai 发生错误 &#123;type(e)&#125;：&#123;e&#125;&quot;) return &quot;&quot;def hello() -&gt; str: &quot;&quot;&quot; 一些打招呼的内容 &quot;&quot;&quot; result = random.choice( ( &quot;哦豁？！&quot;, &quot;你好！Ov&lt;&quot;, f&quot;库库库，呼唤&#123;NICKNAME&#125;做什么呢&quot;, &quot;我在呢！&quot;, &quot;呼呼，叫俺干嘛&quot;, ) ) img = random.choice(os.listdir(IMAGE_PATH / &quot;zai&quot;)) if img[-4:] == &quot;.gif&quot;: result += image(img, &quot;zai&quot;) else: result += image(img, &quot;zai&quot;) return result# 没有回答时回复内容def no_result() -&gt; str: &quot;&quot;&quot; 没有回答时的回复 &quot;&quot;&quot; return ( random.choice( [ &quot;你在说啥子？&quot;, f&quot;纯洁的&#123;NICKNAME&#125;没听懂&quot;, &quot;下次再告诉你(下次一定)&quot;, &quot;你觉得我听懂了吗？嗯？&quot;, &quot;我！不！知！道！&quot;, ] ) + image(random.choice(os.listdir(IMAGE_PATH / &quot;noresult&quot;)), &quot;noresult&quot;) )async def check_text(text: str) -&gt; str: &quot;&quot;&quot; ALAPI文本检测，主要针对青云客API，检测为恶俗文本改为无回复的回答 :param text: 回复 &quot;&quot;&quot; if not Config.get_config(&quot;alapi&quot;, &quot;ALAPI_TOKEN&quot;): return text params = &#123;&quot;token&quot;: Config.get_config(&quot;alapi&quot;, &quot;ALAPI_TOKEN&quot;), &quot;text&quot;: text&#125; try: data = (await AsyncHttpx.get(check_url, timeout=2, params=params)).json() if data[&quot;code&quot;] == 200: if data[&quot;data&quot;][&quot;conclusion_type&quot;] == 2: return &quot;&quot; except Exception as e: logger.error(f&quot;检测违规文本错误...&#123;type(e)&#125;：&#123;e&#125;&quot;) return text openai.api_key需要上官网获取后填入 实际上就是把原来的图灵接口替换成GPT3接口。引入openai库和transformers库，使用了前者的openai.Completion.create()方法和后者GPT2TokenizerFast.from_pretrained()预训练的GPT2模型和分词器。 关键在于前者，因为OpenAI的API网站已经上了GFW名单，所以我们现在就算有api_key也无法调用API接口（会显示超时）。以下是解决方法。 2. 托管域名到CLOUDFLARE后面我们要用到CLOUDFLARE，没有账户的话注册一个：https://dash.cloudflare.com/ 注册之后点击右边的Websites，按照操作流程添加主域名，修改两个DNS服务器名字。 比如我这里用阿里云买了一个域名，需要登录阿里云的域名控制台，点击管理，进入右边DNS修改页面 修改原来默认的DNS服务器为lorna.ns.cloudflare.com和ram.ns.cloudflare.com。 中间可能还需要你邮件确认，按照提示操作就可以。 3. 创建CLOUDFLARE Workers该步骤参考来自github [noobnooc]，感谢大佬提供的解决方案！ 回到CLOUDFLARE，点击右边的创建Workers——Create a Service，这里直接确认创建一个服务。 创建之后点击Quick edit修改workers代码如下（起到代理api.openai.com的作用）： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156// Website you intended to retrieve for users.const upstream = &#x27;api.openai.com&#x27;// Custom pathname for the upstream website.const upstream_path = &#x27;/&#x27;// Website you intended to retrieve for users using mobile devices.const upstream_mobile = upstream// Countries and regions where you wish to suspend your service.const blocked_region = []// IP addresses which you wish to block from using your service.const blocked_ip_address = [&#x27;0.0.0.0&#x27;, &#x27;127.0.0.1&#x27;]// Whether to use HTTPS protocol for upstream address.const https = true// Whether to disable cache.const disable_cache = false// Replace texts.const replace_dict = &#123; &#x27;$upstream&#x27;: &#x27;$custom_domain&#x27;,&#125;addEventListener(&#x27;fetch&#x27;, event =&gt; &#123; event.respondWith(fetchAndApply(event.request));&#125;)async function fetchAndApply(request) &#123; const region = request.headers.get(&#x27;cf-ipcountry&#x27;).toUpperCase(); const ip_address = request.headers.get(&#x27;cf-connecting-ip&#x27;); const user_agent = request.headers.get(&#x27;user-agent&#x27;); let response = null; let url = new URL(request.url); let url_hostname = url.hostname; if (https == true) &#123; url.protocol = &#x27;https:&#x27;; &#125; else &#123; url.protocol = &#x27;http:&#x27;; &#125; if (await device_status(user_agent)) &#123; var upstream_domain = upstream; &#125; else &#123; var upstream_domain = upstream_mobile; &#125; url.host = upstream_domain; if (url.pathname == &#x27;/&#x27;) &#123; url.pathname = upstream_path; &#125; else &#123; url.pathname = upstream_path + url.pathname; &#125; if (blocked_region.includes(region)) &#123; response = new Response(&#x27;Access denied: WorkersProxy is not available in your region yet.&#x27;, &#123; status: 403 &#125;); &#125; else if (blocked_ip_address.includes(ip_address)) &#123; response = new Response(&#x27;Access denied: Your IP address is blocked by WorkersProxy.&#x27;, &#123; status: 403 &#125;); &#125; else &#123; let method = request.method; let request_headers = request.headers; let new_request_headers = new Headers(request_headers); new_request_headers.set(&#x27;Host&#x27;, upstream_domain); new_request_headers.set(&#x27;Referer&#x27;, url.protocol + &#x27;//&#x27; + url_hostname); let original_response = await fetch(url.href, &#123; method: method, headers: new_request_headers, body: request.body &#125;) connection_upgrade = new_request_headers.get(&quot;Upgrade&quot;); if (connection_upgrade &amp;&amp; connection_upgrade.toLowerCase() == &quot;websocket&quot;) &#123; return original_response; &#125; let original_response_clone = original_response.clone(); let original_text = null; let response_headers = original_response.headers; let new_response_headers = new Headers(response_headers); let status = original_response.status; if (disable_cache) &#123; new_response_headers.set(&#x27;Cache-Control&#x27;, &#x27;no-store&#x27;); &#125; new_response_headers.set(&#x27;access-control-allow-origin&#x27;, &#x27;*&#x27;); new_response_headers.set(&#x27;access-control-allow-credentials&#x27;, true); new_response_headers.delete(&#x27;content-security-policy&#x27;); new_response_headers.delete(&#x27;content-security-policy-report-only&#x27;); new_response_headers.delete(&#x27;clear-site-data&#x27;); if (new_response_headers.get(&quot;x-pjax-url&quot;)) &#123; new_response_headers.set(&quot;x-pjax-url&quot;, response_headers.get(&quot;x-pjax-url&quot;).replace(&quot;//&quot; + upstream_domain, &quot;//&quot; + url_hostname)); &#125; const content_type = new_response_headers.get(&#x27;content-type&#x27;); if (content_type != null &amp;&amp; content_type.includes(&#x27;text/html&#x27;) &amp;&amp; content_type.includes(&#x27;UTF-8&#x27;)) &#123; original_text = await replace_response_text(original_response_clone, upstream_domain, url_hostname); &#125; else &#123; original_text = original_response_clone.body &#125; response = new Response(original_text, &#123; status, headers: new_response_headers &#125;) &#125; return response;&#125;async function replace_response_text(response, upstream_domain, host_name) &#123; let text = await response.text() var i, j; for (i in replace_dict) &#123; j = replace_dict[i] if (i == &#x27;$upstream&#x27;) &#123; i = upstream_domain &#125; else if (i == &#x27;$custom_domain&#x27;) &#123; i = host_name &#125; if (j == &#x27;$upstream&#x27;) &#123; j = upstream_domain &#125; else if (j == &#x27;$custom_domain&#x27;) &#123; j = host_name &#125; let re = new RegExp(i, &#x27;g&#x27;) text = text.replace(re, j); &#125; return text;&#125;async function device_status(user_agent_info) &#123; var agents = [&quot;Android&quot;, &quot;iPhone&quot;, &quot;SymbianOS&quot;, &quot;Windows Phone&quot;, &quot;iPad&quot;, &quot;iPod&quot;]; var flag = true; for (var v = 0; v &lt; agents.length; v++) &#123; if (user_agent_info.indexOf(agents[v]) &gt; 0) &#123; flag = false; break; &#125; &#125; return flag;&#125; 修改之后点击右下角Save and deploy，此时worker地址还不能直接代替openai的API地址，需要进一步绑定前面的域名（CLOUDFLARE Workers只能绑定托管到CLOUDFLARE的域名，所以有了前面一步）。 4. 绑定域名点击Workers进入管理页面，点击Triggers——Add Custom Domain，将前面托管的域名填进去，可以用自己喜欢的二级域名： 大约过几分钟，custom domains显示Certificate 为 Activate即可。 这个时候就可以通过你绑定的域名来访问api.openai.com了，可以通过其他POST工具调试接口，就不多说了。 5. 修改openai库前面做的一系列步骤是让你可以通过其他域名访问openai的API网站，但是前面第一步写的插件调用了openai.Completion.create()方法函数，此时仍然会直接访问api.openai.com，这个时候就是扒源代码修改了。 locate openai先找到服务器上openai下载的位置，在对应的路径修改，比如我的文件路径是/root/anaconda3/lib/python3.9/site-packages/openai，修改该路径下的__init__.py文件： 第34行api_base后面的网址改为刚刚绑定的网址（&#x2F;v1的部分不要动）。 上述步骤完成后，重启zhenxun_bot就可以在不对自己服务器做任何代理的情况下正常调用OpenAI的API接口了。 顺便说一下，2022年12月申请的openAI账号每个账户有18美元的额度，现在（2023年3月）申请的账号就只有5美元额度了，emmmmmmm… 不过上面的那个插件用的是text-davinci-003模型，和ChatGPT用的模型稍有不同，就在前几天ChatGPT公开了API，所使用的模型为gpt-3.5-turbo。并且我前面用的方法是Create completion，和ChatGPT创建实例的方法Create chat completion是不同的，且收费也不一样，现在ChatGPT API收费标准是0.002美元&#x2F;1000 tokens，token数和字数是不一样的，要看分词器怎么分，不过现在API输出上限均为4096 token。有空再更新一下模型方法，这里只是做个记录。 详细的API调用方法需要参考官网API Reference - OpenAI API","categories":[{"name":"网络相关","slug":"网络相关","permalink":"http://www.shelven.com/categories/%E7%BD%91%E7%BB%9C%E7%9B%B8%E5%85%B3/"},{"name":"QQ机器人","slug":"QQ机器人","permalink":"http://www.shelven.com/categories/QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/"}],"tags":[{"name":"ChatGPT","slug":"ChatGPT","permalink":"http://www.shelven.com/tags/ChatGPT/"}]},{"title":"0基础学习三代基因组测序组装（9）——GATK检测植物基因组SNP和INDEL变异","slug":"0基础学习基因组三代测序组装（9）——GATK检测植物基因组SNP和INDEL变异","date":"2023-03-07T09:53:32.000Z","updated":"2023-03-07T09:56:00.000Z","comments":true,"path":"2023/03/07/a.html","link":"","permalink":"http://www.shelven.com/2023/03/07/a.html","excerpt":"基因组组装完成之后，我们就可以对基因组进行变异分析了。这里主要介绍由 Broad Institute开发的一款基因组分析工具GATK，这款工具设计之初是用于处理分析Illumina二代测序技术产生的人类全外显子和全基因组数据，经过多个版本的优化迭代，GATK集合了多种高通量测序数据处理和质控的软件，如今GATK可以说是对DNA和RNA-seq数据检测SNP和Indel的标准。","text":"基因组组装完成之后，我们就可以对基因组进行变异分析了。这里主要介绍由 Broad Institute开发的一款基因组分析工具GATK，这款工具设计之初是用于处理分析Illumina二代测序技术产生的人类全外显子和全基因组数据，经过多个版本的优化迭代，GATK集合了多种高通量测序数据处理和质控的软件，如今GATK可以说是对DNA和RNA-seq数据检测SNP和Indel的标准。 1. GATK安装GATK的运行依赖于JAVA环境，目前（2023年3月6日）GATK更新到版本4.3.0，可以直接用conda下载。为了避免环境冲突，最好创建一个新环境专门用于GATK和相关变异检测工具运行。 12345conda create -n GATKconda install -c bioconda gatkconda install bwa-mem2conda install samtools bwa-mem2和samtools用于双端序列比对回基因组，需要单独下载这两个软件，后面再说。 安装完成之后可以通过gatk --help查看是否正常。 2. 流程详解流程内容主要参考官网Best Practices Workflows的文章。 GATK工具的变异注释主要包括3个部分：数据预处理（Data Pre-processing）、变异检测（Variant Discovery）和变异优化（Callset Refinement）。 以Germline short variant discovery (SNPs + Indels) ，即胚系短变异的发现为例，官网对多个样本（群组数据，Cohort Data）的变异检测分析流程如下： 单个样本（Single-Sample Data）的变异检测标准流程如下： 分析流程基本类似，以我前面组装的三代植物基因组为例跑一下这两个流程，强调一下我用的是植物基因组，后续无法用Germline的注释数据资源对变异集进行功能注释！因此这里只跑到变异集过滤的步骤，拿到SNP和INDEL。 2.1 数据预处理 构建参考基因组索引：组装的基因组作为reference参考基因组，首先需要对参考基因组建立索引，方便后续进行比对和对参考基因组进行查询。注意三个软件的索引文件不同，每个软件都必须建立索引。 1234567#!/bin/bashref=$1bwa-mem2 index $refsamtools faidx $refreferencename=`basename $ref | sed &quot;s/fasta/dict/&quot; ` # .fasta文件后缀改为.dictgatk CreateSequenceDictionary -R $ref -O $referencename fasta文件转化uBAM文件，标记adapter 序列：组装好的基因组格式是fasta格式，需要转换成uBAM格式（umapped的BAM文件），接着标记illumina二代测序的adapter序列。本质上都是调用了Picard工具，也可以直接用java写脚本。 123456#!/bin/bashsampleName=$1gatk FastqToSam -F1 raw_fastq/$&#123;sampleName&#125;_1.fq.gz -F2 raw_fastq/$&#123;sampleName&#125;_2.fq.gz -RG $sampleName -SM $sampleName -O ubam/$&#123;sampleName&#125;.bamgatk MarkIlluminaAdapters -I ubam/$&#123;sampleName&#125;.bam -O markadapeters/$&#123;sampleName&#125;.markadapeters.bam -M markadapeters/$&#123;sampleName&#125;.metrics.txt 标记后的序列转化成fastq格式，回比参考基因组，得到干净的BAM文件：第二和第三步来自官方的文章(How to) Map and clean up short read sequence data efficiently，通过联合SamToFastq、BWA - MEM和MergeBamAlignment三个程序，节省比对时间，绕过占用空间过大的SAM文件，MergeBamAlignment可以将已排序的SAM中的定义信息（我这里将SAM文件转换成BAM文件）与uBAM中的定义信息进行合并，得到干净的BAM并进行排序和构建索引。 123456789101112#!/bin/bashsampleName=$1threads=50ref=/public/home/wlxie/biosoft/GATK_file/gatk/ref/luobuma.fastagatk SamToFastq -I markadapeters/$&#123;sampleName&#125;.markadapeters.bam -F interleaved_fq/$&#123;sampleName&#125;_1.interleaved.fq.gz -F2 interleaved_fq/$&#123;sampleName&#125;_2.interleaved.fq.gz -CLIP_ATTR XT -CLIP_ACT 2bwa-mem2 mem -M -t $threads $ref interleaved_fq/$&#123;sampleName&#125;_1.interleaved.fq.gz interleaved_fq/$&#123;sampleName&#125;_2.interleaved.fq.gz | samtools view -Sb - &gt; raw_bam/$&#123;sampleName&#125;.bamgatk MergeBamAlignment -R $ref -UNMAPPED ubam/$&#123;sampleName&#125;.bam -O align_bam/$&#123;sampleName&#125;.bam -ALIGNED raw_bam/$&#123;sampleName&#125;.bam -MC true --CREATE_INDEX truerm -rf markadapeters/$&#123;sampleName&#125;.markadapeters.ba interleaved_fq/$&#123;sampleName&#125;_1.interleaved.fq.gz interleaved_fq/$&#123;sampleName&#125;_2.interleaved.fq.gz raw_bam/$&#123;sampleName&#125;.bam # 删除中间文件 标记重复序列：做SNP分析前最重要的一点就是标记重复序列（mark duplicate），二代测序是在PCR扩增的基础上进行的，因此PCR扩增产生的多拷贝会结合到flowcell的不同位置，生成完全相同的测序cluster，最后得到重复序列。这一步就是标记这些重复序列（但是没有删除，对结果应该不影响），最后得到一个metrics文件（duplicate的统计信息）和一个bam文件（duplicate的详细信息，注意要创建索引）。 123456#!/bin/bashsampleName=$1gatk MarkDuplicates -I align_bam/$&#123;sampleName&#125;.bam -O markdup/$&#123;sampleName&#125;.markdup.bam -M markdup/$&#123;sampleName&#125;.markdup_metrics.txt --CREATE_INDEX truerm -rf align_bam/$&#123;sampleName&#125;.bam # 删除中间文件 最终生成的bam文件进行下一步变异检测，可以用samtools -view 查看bam文件的内容（也没啥好看的，感兴趣可以看看之前博客写的sam文件格式解读）。 注意：官网的数据预处理后续还有一步碱基质量重校正BQSR（Base Quality Scores Recallbrate），官方提供了两个工具BaseRecalibrator和ApplyBQSR。第一个工具计算需要校正的reads和特征值，输出校准表文件，需要注意的是，这个工具需要一个或者多个已知且可靠的物种变异位点数据库，比如人类就有千人基因组计划的各种变异位点数据库，1000G_omni2.5.hg38.vcf.gz、dbsnp_146.hg38.vcf.gz等等；第二个工具根据第一个工具生成校准表，重新调整原来BAM文件中的碱基质量值，重新输出到一个新的BAM文件中。 因为我这个植物没有已知的可靠变异位点数据，因此不用做最后这一步。 本部分程序需要运行10小时。 2.2 变异检测因为我只有一个样本，所以可以按照单个样本（Single-Sample Data）的标准流程来做，也可以按照多样本（Cohort Data）的流程做。该部分主要用到的工具是HaplotypeCaller，两个流程只是对HaplotypeCaller工具产生的结果做了不同的处理，最后都是得到包含SNP和Indel的VCF文件。我也将分别跑两个流程来对比下差异。 首先要明白HaplotypeCaller这个工具具体做了什么，是怎么找出单碱基变异的： 1.定义活跃区域（Define active regions）：根据是否存在变异来确定需要操作的基因组的活跃区域。 2.通过组装活跃区域确定单倍型（Determine haplotypes by assembly of the active region）：对于每个活跃区域，构建一个类似De Bruijn图来重新组装活性区域，识别可能的单倍型，然后用Smith-Waterman算法将每个单倍型与参考基因组单倍型重新比对，发现潜在的变异位点。 3.确定read单倍型似然值（Determine likelihoods of the haplotypes given the read data）：对每个活跃区域使用PairHMM算法对每个read与每个单倍型进行两两比对，生成单倍型似然矩阵，将似然值边缘化，以获得每个潜在变异位点的等位基因的可能性。 4.指定样本基因型（Assign sample genotypes）：对每个潜在的变异位点使用贝叶斯算法，转化每个位点的基因型的似然值。然后将最可能的基因型指定为样本基因型。 以上流程翻译自HaplotypeCaller – GATK (broadinstitute.org)，这个工具可用参数非常之多，下面跑的流程就展示一些常用的。 2.2.1 多样本的SNP和INDEL检测 使用HaplotypeCaller的GVCF模式，找到每个样本SNP和INDEL变异。在GVCF模式下，每个样本的结果文件以gvcf（genomic vcf）格式文件呈现，实际上gvcf格式和vcf格式类似，gvcf记录所有位点的突变情况，并且提供这些位点是否是纯和的置信度，主要还是方便将所有样本的gvcf联合起来方便分析。 123456#!/bin/bashsampleName=$1threads=50ref=/public/home/wlxie/biosoft/GATK_file/gatk/ref/luobuma.fastagatk HaplotypeCaller -R $ref --native-pair-hmm-threads $&#123;threads&#125; --emit-ref-confidence GVCF -I ../../pre_processing/markdup/$&#123;sampleName&#125;.markdup.bam -O $&#123;sampleName&#125;.g.vcf.gz 这一步是整个SNP和IDEL检测中运行时间最长，需要算力最多的一步（主要是Pair-HMM算法花时间），Pair-HMM算法在本地调用的线程数是可以更改的，官方是给定默认值为4。GATK4.0版本开始放弃了多线程任务，这个参数可能是更新后遗漏的，因为我这里用的50线程和默认的4线程跑几乎没有区别，都是在28小时左右完成，此处参数存疑。 建库合并所有样本的GVCF文件（单样本不用做这步），并将GVCF文件转化为VCF文件。对于多样本的GVCF合并，现在官方建议用GenomicsDBImport这个工具进行建库合并，速度会快很多。 12345678#!/bin/bashsampleName=$1threads=50ref=/public/home/wlxie/biosoft/GATK_file/gatk/ref/luobuma.fasta# gatk GenomicsDBImport $(for file in `ls *.g.vcf.gz`; do echo &quot;-V $file&quot;; done) --genomicsdb-workspace-path database -L chr01 # 单样本不用做这步，因为就一个GVCF。多样本注意-L参数是建库必须的,根据fasta参考基因组的染色体名称命名，拆分gatk GenotypeGVCFs -R $ref -V $&#123;sampleName&#125;.g.vcf.gz -O raw_variants.vcf.gz # 多样本使用参数-V gendb://database 也就是上一步建的数据库名，单样本直接用gvcf文件 可以看看最后生成的VCF文件： 文件解读放在最后过滤和拆分SNP和INDEL的时候再说，这里是初步得到变异信息，需要经过过滤和筛选。 本部分程序需要运行28小时。 2.2.2 单个样本的SNP和INDEL检测使用HaplotypeCaller默认的single-sample模式，直接生成统计SNP和INDEL变异的VCF文件。 123456#!/bin/bashsampleName=$1threads=50ref=/public/home/wlxie/biosoft/GATK_file/gatk/ref/baima.fastagatk HaplotypeCaller -R $ref --native-pair-hmm-threads $&#123;threads&#125; -I ../../pre_processing/markdup/$&#123;sampleName&#125;.markdup.bam -O $&#123;sampleName&#125;.vcf.gz 同上一个步骤，此处参数--native-pair-hmm-threads对运算速度的提升存疑，最后同样是生成VCF文件，运行时间同样为28小时。 2.3 变异过滤（优化）变异集过滤方法主要有两种： 1.软过滤：基于机器学习的方法，对原始vcf文件进行变异质量重矫正和过滤。比如有基于卷积神经网络CNN的CNNVariantTrain（有预训练的模型1D和2D），VariantRecalibrator、ApplyVQSR等可以用已知的人类变异数据集作为训练集，检测得到的SNP和INDEL的准确性（官方推荐用于人类变异过滤的方法，Variant Quality Score Recalibration，VQSR）。缺点显而易见，需要已知的真实变异数据集，除人类以外大多数生物都没有这方面的数据集。如果是研究人类基因组的话，可以从GATK官网资源处下载。 2.硬过滤：通过对6个指标的硬性阈值筛选质量合格的SNP和INDEL。 记录下硬过滤的6个指标，有些说明看不懂干脆都放英文了，参考自官网Hard-filtering germline short variants： （1）QualByDepth (QD)：This is the variant confidence (from the QUAL field) divided by the unfiltered depth of non-hom-ref samples. 变异置信度，官方建议过滤该值小于2的变异。 （2）FisherStrand (FS)：This is the Phred-scaled probability that there is strand bias at the site. （3）StrandOddsRatio (SOR)：This is another way to estimate strand bias using a test similar to the symmetric odds ratio test. （4）RMSMappingQuality (MQ)：This is the root mean square mapping quality over all the reads at the site.比对reads质量的平方根。 （5）MappingQualityRankSumTest (MQRankSum)：This is the u-based z-approximation from the Rank Sum Test for mapping qualities. （6）ReadPosRankSumTest (ReadPosRankSum)：This is the u-based z-approximation from the Rank Sum Test for site position within reads. 看不懂没关系，官方给出了6个硬过滤指标在SNP和INDEL中的阈值设置，详情可以看Hard-filtering germline short variants – GATK (broadinstitute.org)。以下例子均以官方的硬过滤指标为准，感兴趣可以去官网看各个参数的作用或者自己微调。 SelectVariants工具用于从vcf文件中提取SNP和INDEL信息，VariantFiltration工具用于硬过滤筛选： 123456789101112131415161718#!/bin/bashsampleName=$1threads=50VARIANTS=/public/home/wlxie/biosoft/GATK_file/gatk/variants_discover/luobuma/raw_variants.vcf.gz# SNP筛选、过滤和提取gatk SelectVariants -select-type SNP -V $VARIANTS --restrict-alleles-to BIALLELIC -O $&#123;sampleName&#125;_SNP.vcf.gz # BIALLELIC 限制双等位基因，不考虑其他等位多态性gatk VariantFiltration -V $&#123;sampleName&#125;_SNP.vcf.gz --filter-expression &quot;QD &lt; 2.0 || MQ &lt; 40.0 || FS &gt; 60.0 || SOR &gt; 3.0 || MQRankSum &lt; -12.5 || ReadPosRankSum &lt; -8.0&quot; --filter-name &quot;Filter&quot; -O $&#123;sampleName&#125;_SNP.filter.vcf.gzgatk SelectVariants -V $&#123;sampleName&#125;_SNP.filter.vcf.gz --exclude-filtered true -O final.$&#123;sampleName&#125;_SNP.vcf.gz # 只显示通过过滤的变异（pass）rm -rf $&#123;sampleName&#125;_SNP.vcf.gz*rm -rf $&#123;sampleName&#125;_SNP.filter.vcf.gz*# INDEL筛选、过滤和提取gatk SelectVariants -select-type INDEL -V $VARIANTS --restrict-alleles-to BIALLELIC -O $&#123;sampleName&#125;_INDEL.vcf.gz # BIALLELIC 限制双等位基因，不考虑其他等位多态性gatk VariantFiltration -V $&#123;sampleName&#125;_INDEL.vcf.gz --filter-expression &quot;QD &lt; 2.0 || FS &gt; 200.0 || SOR &gt; 10.0 || MQRankSum &lt; -12.5 || ReadPosRankSum &lt; -8.0&quot; --filter-name &quot;Filter&quot; -O $&#123;sampleName&#125;_INDEL.filter.vcf.gzgatk SelectVariants -V $&#123;sampleName&#125;_INDEL.filter.vcf.gz --exclude-filtered true -O final.$&#123;sampleName&#125;_INDEL.vcf.gz # 只显示通过过滤的变异（pass）rm -rf $&#123;sampleName&#125;_INDEL.vcf.gz*rm -rf $&#123;sampleName&#125;_INDEL.filter.vcf.gz* 得到的final.sampleName_SNP.vcf.gz和final.sampleName_INDEL.vcf.gz为最终的变异集结果文件。 3. 结果文件解读因为结果文件时一个压缩过后的vcf文件，且vcf文件中前面带#部分的注释内容是用不到的，后面每一行代表一个变异位点信息，因此可以直直接统计行数来得到最终的SNP和INDEL的数量。 1zcat final.luobuma_SNP.vcf.gz | grep -v -P &quot;^#&quot; -c 用2.2.1多样本流程的SNP和INDEL结果文件为final.luobuma_SNP.vcf.gz和final.luobuma_INDEL.vcf.gz；用2.2.2单个样本流程的SNP和INDEL结果为final.luobuma_sm_SNP.vcf.gz和final.luobuma_sm_INDEL.vcf.gz。可以看到两者在统计SNP和INDEL数量上的差距非常小，说明这两个流程对单样本来说都是可以用的。 以final.luobuma_SNP.vcf.gz文件进行解读，通过less -S命令一行一条信息查看文件内容： 每列信息如下： 1.CHROM：染色体信息 2.POS：变异所在参考基因组的位置 3.ID：变异的ID，如果有参考变异集，会给出id，否则为.表示新发现的变异 4.REF：变异在参考基因组上的信息，必须为ATCGN五个之一 5.ALT：突变之后的情况，类型同上，.表示缺失 6.QUAL：突变后的质量值，质量值越高越可靠，通常只用pass的数据 7.FILTER：是否通过过滤 8.INFO：每个位点的详细信息（包括硬过滤的指标，详细可以到header里找） 9.FORMAT：格式 10.样本名（实际是前面格式的具体值） 主要解释一下第九列和第十列，就是上图中红色框框起来的部分，两列值是用冒号分隔且一一对应的，需要注意的值是GT： GT：0表示和参考序列一致（REF allele），1表示和样本序列一致（ALT allele），双等位基因只有0和1，0&#x2F;1和0|1表示杂合，1&#x2F;1和1|1表示纯和。“|”和“&#x2F;”区别是前者是phased genotype，就是知道REF&#x2F;ALT allele是来自于父本还是母本，在这里对我这个植物基因组没有什么意义，全都统计进杂合和纯和SNP个数就行。 AD：REF和ALT allele的覆盖度，在二倍体是是用逗号分割的两个值表示，前一个代表参考基因组的基因型，后者代表样本基因型。 DP：样本中该位点覆盖度，AD两个数字的和。 3.1 杂合率统计分别统计SNP和INDEL文件中杂合单碱基变异的个数： 1234zcat final.luobuma_SNP.vcf.gz | grep -c &quot;0/1&quot;zcat final.luobuma_SNP.vcf.gz | grep -c &quot;0|1&quot;zcat final.luobuma_INDEL.vcf.gz | grep -c &quot;0/1&quot;zcat final.luobuma_INDEL.vcf.gz | grep -c &quot;0|1&quot; 杂合率 &#x3D; (杂合SNP数 + 杂合INDEL数) &#x2F; 基因组大小 杂合SNP数(Hetero SNP) 杂合INDEL数(Hetero Indel) 基因组大小(bp) 杂合率 1,233,471 287,207 230,888,863 0.66% 此处计算的杂合率可以和前面做的基因组Survey做个比较，说明基因组Survey的可靠性。 3.2 单碱基准确度计算我们知道测序过程中不可避免地存在错误，三代测序数据单碱基变异的来源，包括真实的单碱基变异和测序错误导致的单碱基变异。当测序错误导致的单碱基变异存在于参考基因组上时，利用二代测序数据进行单碱基变异的检测时，会将其识别为纯合单碱基变异。因此，可以将三代数据组装的最终版基因组作为参考基因组，利用二代数据将纯合子单碱基变异率作为组装结果的错误率，即: 组装结果的准确率 &#x3D; 1 - 纯合子单碱基变异率 1234zcat final.luobuma_SNP.vcf.gz | grep -c &quot;1/1&quot;zcat final.luobuma_SNP.vcf.gz | grep -c &quot;1|1&quot;zcat final.luobuma_INDEL.vcf.gz | grep -c &quot;1/1&quot;zcat final.luobuma_INDEL.vcf.gz | grep -c &quot;1|1&quot; 纯和SNP数(Homo SNP) 纯和INDEL数(Homo Indel) 基因组大小(bp) 纯和子单碱基变异率 组装结果准确率 4,176 8,580 230,888,863 0.005525% 99.994475% 这种单碱基准确度的计算结果也可以作为基因组组装质量的评估指标之一，即序列一致性评估——利用高质量的二代测序数据来评估三代测序数据组装结果在单碱基水平上的准确性。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"基因组三代测序分析","slug":"基因组三代测序分析","permalink":"http://www.shelven.com/categories/%E5%9F%BA%E5%9B%A0%E7%BB%84%E4%B8%89%E4%BB%A3%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/"}],"tags":[{"name":"GATK","slug":"GATK","permalink":"http://www.shelven.com/tags/GATK/"}]},{"title":"0基础学习基因组三代测序组装（8）——基因组组装质量评估（QUAST）","slug":"0基础学习基因组三代测序组装（8）——基因组组装质量评估（QUAST）","date":"2023-03-02T15:24:41.000Z","updated":"2023-03-04T02:58:11.000Z","comments":true,"path":"2023/03/02/a.html","link":"","permalink":"http://www.shelven.com/2023/03/02/a.html","excerpt":"接上一篇博客，这一篇博客继续介绍一个常用的评估基因组组装质量的软件——QUAST","text":"接上一篇博客，这一篇博客继续介绍一个常用的评估基因组组装质量的软件——QUAST 1. QUAST介绍QUAST（Quality Assessment Tool for Genome Assemblies）是一个比较综合的评估基因组组装质量的软件，主要包括四种分析工具： QUAST：常规基因组组装质量评估 MetaQUAST：宏基因组（元基因组）组装质量评估 QUAST-LG：大型基因组组装质量评估 Icarus：Contig比对可视化工具（类似IGV浏览器的感觉） QUAST用到的软件如下（参考自国家微生物科学数据中心）： 序列比对：Minimap2 基因和功能：GeneMarkS、GeneMark-ES、GlimmerHMM、Barrnap和BUSCO 查找结构变异：BWA、Sambamba 覆盖度计算：bedtools MetaQUAST：MetaGeneMark、Krona tools、BLAST和SILVA数据库 QUAST-LG：KMC和Red 这个软件优点是可以使用参考基因组或者无参考基因组情况对组装的基因组进行评估，可以快速进行大批量的基因组组装质量比较，最终的结果有图表、excel和latex等多种表现形式，也有个可以交互的网页结果，非常直观和方便。 2. 安装如果从官网下载的话，需要安装非常多的依赖软件，好消息是：可以conda安装 12345conda install -c bioconda quastquast-download-busco quast-download-gridss # 检测基因组重排的软件quast-download-silva # 著名的16s数据库，提供最新的核糖体大小亚基rRNA注释信息 截至2023年3月2日，最新版本为5.2.0 后续需要安装什么软件都可以conda search一下，能省好多功夫。注意一下conda安装之后会提醒缺两个工具和一个数据库，直接运行命令下载即可。 3. 运行实例以我的植物基因组跑一个常规基因组组装质量评估的例子： 1234#!/bin/bash#SBATCH -n 50quast -t 50 -o quast_baima -1 /public/home/wlxie/clean_data/1.fq -2 /public/home/wlxie/2.fq /public/home/wlxie/NextPolish/baima_rundir/genome.nextpolish.fasta QUAST输入文件只有组装的基因组是必须的，同时也支持三代测序--pacbio、--nanopore数据，也支持二代数据输入。我这里同时输入了二代数据，因此结果文件中有组装基因组的质量评估，也有二代数据回贴组装基因组的分析数据。 4. 结果展示运行结束后的输出日志如下： 最终生成图表结果可以在report.pdf中找到，也可以看report.html，一次运行时常大约为6小时： 左边红框框起来的部分就是二代数据回比基因组的结果，mapping率高于100%说明有多比对，完美比对率（配对reads中两条序列比对上同一个参考基因组序列的比例，Properly Paired）93.45%，覆盖度（coverage）98.63%。这个比对率说明二代测序reads与组装的基因组有较高的一致性（Properly paired 90%以上，coverage 95%以上），可以进行后续的分析。 右边是contig长度累积图，横坐标从左到右contig长度依次减小，曲线越陡表明大片段越长、数量越多，也可以看到基因组组装的连续性良好。 左上角contig的具体数据，以及N50、GC含量可以在transposed_report.txt中查看，同时也提供了latex和excel格式的结果文件，非常贴心~或者可以在basic_stats文件夹中查看相应的pdf图表： Nx图横轴是Nx百分比，比如50就是N50；纵轴是contig长度。这张图也可以反映组装结果的连续性。 最后是icarus网页结果，前面说这个界面有点像IGV。。。总之就是将各个contig从长到短组装情况可视化的工具，可以拖动底下的黄色框左右移动来查看对应的contig情况。 在基因组组装质量评估方面，这个软件就可以一次给出序列一致性、组装完整性和测序覆盖均匀性评估，还是非常方便的~当然，如果你有参考基因组的话，就可以得到更多有效的评估信息。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"基因组三代测序分析","slug":"基因组三代测序分析","permalink":"http://www.shelven.com/categories/%E5%9F%BA%E5%9B%A0%E7%BB%84%E4%B8%89%E4%BB%A3%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/"}],"tags":[{"name":"QUAST","slug":"QUAST","permalink":"http://www.shelven.com/tags/QUAST/"}]},{"title":"0基础学习基因组三代测序组装（7）——基因组组装质量评估（BUSCO、LAI指数）","slug":"0基础学习基因组三代测序组装（7）——基因组组装质量评估（BUSCO、LAI指数）","date":"2023-03-01T12:39:05.000Z","updated":"2023-03-03T06:30:24.000Z","comments":true,"path":"2023/03/01/a.html","link":"","permalink":"http://www.shelven.com/2023/03/01/a.html","excerpt":"通过前面的纠错和校正步骤，我们得到了组装完成的基因组序列，接下来就是进行基因组的组装质量评估。质量评估的软件和方法比较多，这里分两篇博客记录，本篇主要演示如何用BUSCO和LAI指数评价基因组组装质量。","text":"通过前面的纠错和校正步骤，我们得到了组装完成的基因组序列，接下来就是进行基因组的组装质量评估。质量评估的软件和方法比较多，这里分两篇博客记录，本篇主要演示如何用BUSCO和LAI指数评价基因组组装质量。 复习一下前面说到的contig N50，按照contig从短到长的顺序依次相加，当相加的长度达到Contig总长度的一半，最后一个Contig长度即为contig N50. contig N50是基因组组装质量的第一指标，一般来说越高越好，但是contig N50不能完全代表一个基因组组装质量的高低，比如reads的错误连接也会使contig N50变高。接下来介绍几个现在常用的评估基因组组装质量的软件和方法。 1. 保守型基因评估BUSCO（Benchmarking Universal Single-Copy Orthologs）评估是在基因含量层面上评估基因组完整性。简单来说，通过已有的直系同源数据库进行基因组比对，同源的生物之间有保守基因序列，能比对上的基因数越多说明组装的结果越靠谱。 安装过程： 1234567891011121314151617181920# 1. 源码安装（需要安装前置软件）git clone https://gitlab.com/ezlab/busco.gitcd busco/python setup.py install# 前置软件：https://biopython.org/https://pandas.pydata.org/https://jgi.doe.gov/data-and-tools/software-tools/bbtools/https://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATESThttp://bioinf.uni-greifswald.de/augustus/https://github.com/soedinglab/metaeukhttps://github.com/hyattpd/Prodigalhttp://hmmer.org/https://github.com/smirarab/sepp/https://www.r-project.org/# 2. conda安装（推荐）conda install -c conda-forge -c bioconda busco=5.3.2 conda安装可能会比较慢，需要多试几次。实在不行就源码下载编译，不过需要下载非常多的前置软件，不同软件可能会有环境冲突问题、gcc版本问题等等（我花了大半天时间在折腾环境）。安装之后通过busco -h查看是否安装成功，如果提示缺什么软件就用conda补上（我当前环境中没有安装pandas就会有提示）。 通过busco --list-datasets可以查看当前有哪些物种的数据库，我的植物是双子叶龙胆目，这里的数据库只有真双子叶植物（eudicots）分支离的最近，因此选择这个数据库，v5版本所有单拷贝直系同源数据库网址https://busco-data.ezlab.org/v5/data/lineages/ 下载的数据库放在busco_downloads文件夹中，解压即可使用： 12nohup wget https://busco-data.ezlab.org/v5/data/lineages/eudicots_odb10.2020-09-10.tar.gz &amp;tar -zxvf eudicots_odb10.2020-09-10.tar.gz busco的详细参数可以看官网的user guide User guide BUSCO v5.4.4 (ezlab.org) 简单讲一讲格式和能用到的参数： 123456789101112busco -i [SEQUENCE_FILE] -l [LINEAGE] -o [OUTPUT_NAME] -m [MODE] [OTHER OPTIONS]&#x27;&#x27;&#x27;主要参数： -i 序列文件位置 -l 下载的同源物种保守基因数据库位置 -o 输出文件名 -m 模式，分为genome,proteins,transcriptome三种 其他参数： --cpu 设置cpu数量 --download 在线下载数据库，根据分类有&quot;all&quot;、&quot;prokaryota&quot;、&quot;eukaryota&quot;和&quot;virus&quot; （不推荐，速度慢） --offline 离线模式，不会更新数据库&#x27;&#x27;&#x27; 以下是我跑的程序，大约用了1个小时： 1busco -i /public/home/wlxie/NextPolish/01_rundir/genome.nextpolish.fasta -l /public/home/wlxie/busco_soft/busco/test_data/eukaryota/busco_downloads/lineages/eudicots_odb10 -o baima -m genome --cpu 8 --offline 截至2023&#x2F;02&#x2F;28，真双子叶植物库有2326个保守BUSCO基因序列，比对结果文件在short_summary.specific.xxx.xxx.txt中，如下： Complete BUSCOs (C) 多少个基因完全比对上BUSCOs Complete and single-copy BUSCOs (S) 多少个基因比对上单拷贝的BUSCOs Complete and duplicated BUSCOs (D) 多少个基因比对上多拷贝的BUSCOs Fragmented BUSCOs (F) 多少个基因部分比对上BUSCOs，可能基因只是部分存在 Missing BUSCOs (M) 多少个基因没有比对上BUSCOs，可能这些直系同源基因是缺失的 从上面的数据看，组装结果还是不错的。从中也可以看到BUSCO运行的两个步骤：用metaeuk进行基因预测（真核生物可以用tBLASTn与对应的BUSCO数据库序列进行比对从而确定候选区域，然后使用 Augustus 软件进行基因结构预测，两个软件可以替代metaeuk，详细参数见官网），以及HMMER进行同源基因的比对，从而评估基因组组装的完整性。 官方还提供了相应的python程序绘制结果图（调用了R包ggplot2），先将BUSCO结果文件放到新建的文件夹，运行相应的py程序，指定工作目录即可： 12345mkdir summariescp baima/short_summary.specific.eudicots_odb10.baima.txt summariesgenerate_plot.py -wd summaries 结果图如下： 当然，有结果数据就可以自己做更好看的图了，不一定要用官方的。 2. 长末端重复序列评估2018年发表在Nucleic Acids Research上的一篇文章Assessing genome assembly quality using the LTR Assembly Index (LAI)，研究者提出了一种对长末端重复序列（long terminal repeats,LTRs）评估从而评价基因组完整度的方法，并且开发了对应的分析工具LTR_retriever 具体的LTR注释我会在后续的基因组注释笔记中更新，这里暂时跳过原理和背景部分，介绍下文章中提出的评估核心——LAI指数（LTR Assembly Index，LAI），也就是长末端重复序列组装指数。raw LAI = (完整LTR-RTs长度/总LTR长度)*100，修正后，LAI = raw LAI + 2.8138 × (94 – 整个基因组LTR identity)。 以下是一个完整的LTR-RTs的结构示意图： 文章还阐明LAI独立于基因组大小、LTR-RT含量以及基因空间评估指标（如BUSCO和CEGMA）等参数，可以用于鉴定低质量的基因组区域。使用这个指标要求**基因组中完整的LTR-RTs应至少占基因组0.1%且总LTR-RTs长度至少占5%**。 文章最后给出了LAI评价基因组完整度的三个指标： 分类 LAI 举例 Draft 0 ≤ LAI &lt; 10 Apple (v1.0), Cacao (v1.0) Reference 10 ≤ LAI &lt; 20 Arabidopsis (TAIR10), Grape (12X) Gold 20 ≤ LAI Rice (MSUv7), Maize (B73 v4) 2.1 LTR序列预测LTR_retriever需要以LTR_finder和&#x2F;或ltrharvest的LTR预测结果文件为输入，也可以整合两个软件的预测结果作为输入（或者其他符合格式的LTR结果文件），因此需要先安装并运行以上软件，我这里以文章中提到的软件和参数运行。 12345# LTR_finder、ltrharvest和LTR_retriever安装（ltrharvest是genometools软件的一部分）conda install -c bioconda ltr_finderconda install -c bioconda genometools-genometoolsconda install -c bioconda ltr_retriever LTR_finder预测LTR序列（参数均由作者给出，只有文件是自己的）： 1234#!/bin/bash#SBATCH -n 10ltr_finder -D 15000 -d 1000 -L 7000 -l 100 -p 20 -C -M 0.85 /public/home/wlxie/NextPolish/01_rundir/genome.nextpolish.fasta &gt; baima_ltrfinder.scn 参数解释： -D NUM Max distance between 5’&amp;3’LTR, default is 20000 # 5’和3’LTR之间的最大距离 -d NUM Min distance between 5’&amp;3’LTR, default is 1000 -L NUM Max length of 5’&amp;3’LTR, default is 3500 # 5’和3’LTR最大长度 -l NUM Min length of 5’&amp;3’LTR, default is 100 -p NUM min length of exact match pair, default is 20 # 完全匹配最小长度 -C detect Centriole, delete highly repeat regions # 检测中心粒，删除高度重复区域 -M NUM min LTR similarity threshold, default is 0.00, [0,1] #最小LTR相似度 ltrharvest预测LTR序列（ltrharvest参数均由作者给出，只有文件是自己的）： 12345678#!/bin/bash#SBATCH -n 10mkdir indexgt suffixerator -db /public/home/wlxie/NextPolish/01_rundir/genome.nextpolish.fasta -indexname index/baima -tis -suf -lcp -des -ssp -sds -dnagt ltrharvest -index index/baima -minlenltr 100 -maxlenltr 7000 -mintsd 4 -maxtsd 6 -motif TGCA -motifmis 1 -similar 85 -vic 10 -seed 20 -seqids yes &gt; baima_ltrharvest.scn 这里要注意下要先使用genome tools里的suffixerator创建基因组索引文件，然后才可以使用ltrharvest进行LTR预测。 创建基因组索引的参数不做解释了，可以 gt suffixerator -help 查看。稍微记录下ltrharvest参数： -minlenltr specify minimum length for each LTR，default: 100 -mintsd specify minimum length for each TSD，default: 4 -motif specify 2 nucleotides startmotif + 2 nucleotides endmotif: **** -motifmis specify maximum number of mismatches in motif [0,3]，default: 4 -similar specify similaritythreshold in range [1..100%]，default: 85.00 -vic specify the number of nucleotides (to the left and to the right) that will be searched for TSDs and&#x2F;or motifs around 5’ and 3’boundary of predicted LTR retrotransposons, default: 60 -seed specify minimum seed length for exact repeats，default: 30 -seqids use sequence descriptions instead of sequence numbers in GFF3 output，default: no 以上两个软件以同样的LTR最小相似度0.85预测LTR，得到两个结果文件baima_ltrfinder.scn和baima_ltrharvest.scn。 2.2 LAI指数计算用上一步的输出的两个结果文件，运行LTR_retriever鉴定LTR和计算LAI指数。 1234#!/bin/bash#SBATCH -n 20LTR_retriever -genome /public/home/wlxie/NextPolish/01_rundir/genome.nextpolish.fasta -inharvest baima_ltrharvest.scn -infinder baima_ltrfinder.scn -threads 20 这一步运行结果如下： 其他文件可以后续做LTR分析用到，这里我们只要看最后一个LAI的计算结果文件： 可以看到这个结果文件中包含了整个genome和各个contig的raw LAI和LAI指数，这里就只看整个genome的LAI指数15.37，根据上面文章作者提到的分类，属于Reference级别，也就是说可以认为达到参考基因组级别。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"基因组三代测序分析","slug":"基因组三代测序分析","permalink":"http://www.shelven.com/categories/%E5%9F%BA%E5%9B%A0%E7%BB%84%E4%B8%89%E4%BB%A3%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/"}],"tags":[{"name":"BUSCO","slug":"BUSCO","permalink":"http://www.shelven.com/tags/BUSCO/"},{"name":"LAI","slug":"LAI","permalink":"http://www.shelven.com/tags/LAI/"}]},{"title":"0基础学习基因组三代测序组装（6）——基因组polish","slug":"0基础学习基因组三代测序组装（6）——基因组polish","date":"2023-02-27T03:02:16.000Z","updated":"2023-02-27T03:05:01.000Z","comments":true,"path":"2023/02/27/a.html","link":"","permalink":"http://www.shelven.com/2023/02/27/a.html","excerpt":"三代基因组de novo组装后得到一系列contig，由于三代测序的错误率较高，我们需要对组装结果进行打磨（以下均用polish表示）以提高基因组的拼接指标如Contig N50，Scaffold N50。","text":"三代基因组de novo组装后得到一系列contig，由于三代测序的错误率较高，我们需要对组装结果进行打磨（以下均用polish表示）以提高基因组的拼接指标如Contig N50，Scaffold N50。 常用软件主要有Pilon、Racon，针对PacBio的有Quiver &amp; Arrow，针对Nanopore的有NanoPolish，以及武汉希望组为NextDenovo配套开发的NextPolish等等。要注意下先进行三代测序数据矫正，再进行二代测序数据矫正，顺序不能反，因为三代数据读长长准确率低，二代读长短准确率高，利用二代测序测序数据对三代测序数据进行纠错可以将三代测序错误率降低到二代测序的水平。如果不先进行三代序列纠错，由于基因组上存在过高错误率，导致二代序列的错误比对，影响最终polish效果。 这里以前面用NextDenovo组装的植物三代基因组为例，介绍下Racon和NextPolish用法。 1. Raconracon的基本用法如下 1racon [options ...] &lt;sequences&gt; &lt;overlaps&gt; &lt;target sequences&gt; 需要用到三种输入文件：sequences是指用来纠错的三代基因组测序数据（后面以原始数据称呼）；target sequences指需要校正的组装后的基因组数据（后面以组装基因组称呼）；overlaps指回比到组装基因组的原始数据文件，其中包含了所有的overlaps，其文件格式为MHAP&#x2F;PAF&#x2F;SAM三种之一。 因此在使用Racon之前需要使用其他比对工具将三代数据回贴到组装基因组上，在转录组分析笔记中有介绍过相关软件，我这里用minimap2进行比对，这是专门针对三代测序数据开发的比对工具，运行速度较快。 1minimap2 -a -t 20 &lt;target sequences&gt; &lt;sequences&gt; &gt; minimap_1.sam -a表示结果为sam格式，&lt;target sequences&gt;处传入组装基因组的绝对路径，&lt;sequences&gt;处传入原始数据的绝对路径，比对结果的sam文件命名为minimap_1.sam 1racon -t 50 &lt;sequences&gt; minimap_1.sam &lt;target sequences&gt; &gt; racon_minimap_1.fasta 如上一次循环下来（大约3小时），得到的racon_minimap_1.fasta就是经过一次三代数据校正的组装基因组。 一般要用三代数据polish 2-4次，之后用二代数据继续校正4次左右，可以写脚本循环，需要注意racon因为要一次读入三代原始数据和回比的sam数据，内存需求量非常大，申请的内核数需要自己计算一下，否则会报内存溢出的错误（220Mb的基因组，100X测序深度，申请50个核才能跑动）。 脚本文件racon.sh如下： 1234567#!/bin/bashminimap2 -a -t 50 $1 $2 &gt; minimap_1.samracon -t 50 $2 minimap_1.sam $1 &gt; racon_minimap_1.fastaminimap2 -a -t 50 racon_minimap_1.fasta $2 &gt; minimap_2.samracon -t 50 $2 minimap_2.sam racon_minimap_1.fasta &gt; racon_minimap_2.fasta recon.slurm： 123456789#!/bin/bash#SBATCH -J recon#SBATCH -N 1#SBATCH -n 50#SBATCH -t 7200datebash racon.sh /public/home/wlxie/NextDenovo/03_rundir/03.ctg_graph/nd.asm.fasta /public/home/wlxie/luobuma/luobuma/baima_rawdata/Third_generation_sequencing/clean_filter.fqdate 1sbatch recon.slurm 可以从输出日志中看到，racon运行主要分两步，分别是校准overlap和生成共有序列（也就是去重），在生成共有序列（consensus sequence）之后再进行二代数据的纠错。 这一步的Racon检测出两个contig可能是嵌合体（chimeric），所谓嵌合contig，该contig的某段区域可能可以比对上不同的染色体，或者头尾部分可能分别属于不同的染色体。第一遍racon的时候没有检测到，第二遍racon才出现这个提示，我不确定这两个contig是否真的是嵌合体，最终还是需要Hi-C数据来验证。 我这里两次循环得到polish的结果文件racon_minimap_2.fasta，接下来用NextPolish软件继续用二代数据polish。 2. NextPolishNextPolish是武汉那希望组开发的与NextDenovo配套的基因组polish软件，支持二代短读长、三代长读长和HiFi数据进行纠错。 和之前的NextDenovo操作方法类似，首先需要准备一个input文件，写入二代数据的绝对路径到sgs.fofn： 1realpath ./1.fq ./2.fq &gt; sgs.fofn 从doc文件夹中copy一份配置文件run.cfg，修改参数： 1234567891011121314151617[General]job_type = slurm # local, slurm, sge, pbs, lsf塔大学校集群选择slurmjob_prefix = nextPolishtask = best # all, default, best, 1, 2, 5, 12, 1212… 1，2是两个不同的短读长算法模块，5是长读长算法模块，默认bestrewrite = yesdeltmp = yes # 删除临时结果文件rerun = 3 # 重复执行polish次数parallel_jobs = 20 # 每个job线程数multithread_jobs = 5 # job数genome = /public/home/wlxie/baima_polish/racon_minimap_2.fastagenome_size = autoworkdir = ./01_rundirpolish_options = -p &#123;multithread_jobs&#125;[sgs_option] #optionalsgs_fofn = ./sgs.fofn # 输入文件位置（一行一条）sgs_options = -max_depth 100 -bwa # 使用bwa进行比对 长reads和HiFi的两段配置信息删除，只留下短读长sgs_options。 这个软件的优点是速度快（100线程，4次polish，220Mb的基因组，72G的二代数据量仅仅用了8小时），而且只需要提供配置和输入文件就可以到polish结束出结果，经过4次Polish结果的迭代，最终结果如下: Contig N50比一开始NextDenovo组装结果大，也就是组装效果更好。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"基因组三代测序分析","slug":"基因组三代测序分析","permalink":"http://www.shelven.com/categories/%E5%9F%BA%E5%9B%A0%E7%BB%84%E4%B8%89%E4%BB%A3%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/"}],"tags":[{"name":"NextPolish","slug":"NextPolish","permalink":"http://www.shelven.com/tags/NextPolish/"},{"name":"Racon","slug":"Racon","permalink":"http://www.shelven.com/tags/Racon/"}]},{"title":"0基础学习基因组三代测序组装（5）——三代数据组装","slug":"0基础学习基因组三代测序组装（5）——三代数据组装","date":"2023-02-23T14:22:00.000Z","updated":"2023-02-28T13:07:16.000Z","comments":true,"path":"2023/02/23/a.html","link":"","permalink":"http://www.shelven.com/2023/02/23/a.html","excerpt":"前段时间比较忙，现在继续整理基因组测序组装系列的学习笔记。第四篇笔记写的二代测序基因组组装，主要是演示二代测序数据组装的主流工具SOAPdenovo 2.0是如何应用的。我这里有了二代和三代的测序数据，后续组装还是以三代数据为主，这里就继续记录下几款三代测序数据组装的主流工具和用法。","text":"前段时间比较忙，现在继续整理基因组测序组装系列的学习笔记。第四篇笔记写的二代测序基因组组装，主要是演示二代测序数据组装的主流工具SOAPdenovo 2.0是如何应用的。我这里有了二代和三代的测序数据，后续组装还是以三代数据为主，这里就继续记录下几款三代测序数据组装的主流工具和用法。 现在主流的三代测序公司是Pacbio和Nanopore，两家测序公司测序原理不同，产生的数据类型也有区别。 1. 主流三代测序平台1.1 Pacbio测序平台Pacbio测序平台是单分子实时测序（single molecule real time sequencing，SMRT），原理是当DNA与聚合酶形成的复合物被ZMW（零模波导孔）捕获后，4种不同荧光标记的dNTP随机进入检测区域并与聚合酶结合，与模板匹配的碱基生成化学键并激发荧光，生成化学键激发的荧光存在的时间远远长于其他碱基被激发荧光的时间，从而实现单碱基的实时检测。 现在Pacbio有两种测序模式，一种是CLR测序模式（超长测序模式），产生数据基于单循环测序结果；一种是HiFi测序模式，也就是高保真测序模式，产生数据基于滚环一致序列（Circular Consensus Sequencing ，CCS）。具体原理就不说了，两种测序模式中HiFi数据相对来说准确率会高一些，所以不同软件对两种测序模式的数据也会有不同的处理。 1.2 Nanopore测序平台Nanopore测序平台前面第一篇博客介绍过了，可以点击这里。需要了解ONT测序平台测序产生的原始数据是电信号，经过basecalling之后才可以转化成我们要的测序数据。 2. 三代基因组测序组装软件2.1 NextDenovoNextDenovo是武汉希望组开发的集校正、比对和组装一体的，基于字符串图（string graph-based）的三代测序基因组组装软件。它的实现过程和另一款经典的三代基因组组装软件Canu类似，经过长读长数据的纠错校正后再进行组装。 官网上介绍原来可以对CLR、HiFi和ONT数据都可以组装，HiFi数据可以跳过数据的自我纠错过程，如今HiFi数据被划掉了，也许已经不再适用，但是对Pabio的CLR和Nanopore的ONT测序数据仍有较好的组装效果，其介绍是组装的准确率有98%-99.8%。 NextDenovo主要有两个核心模块 NextCorrect和NextGraph。NextCorrect用于原始数据纠错，NextGraph用于纠错后数据的组装。据作者介绍，与其他工具相比，NextDenovo在装配一致性和单碱基装配精度方面表现出较高的水平。我个人用起来是觉得这个软件运行时间相对Canu较短，需要的算力资源较小，可以很快地组装出结果（后面可以进行比较）。 安装并测试通过后，我们就可以开始使用这个工具了。 首先准备input文件，将前面质控后的三代测序数据的绝对路径写在input.fofn文件里： 1/public/home/wlxie/luobuma/luobuma/baima_rawdata/Third_generation_sequencing/clean_filter.fq 接下来也是最重要的，修改配置文件： 123456789101112131415161718192021222324[General]job_type = slurm # local, slurm, sge, pbs, lsf塔大学校集群选择slurmjob_prefix = nextDenovotask = all # all, correct, assemble选择只进行correct还是只进行assemble，或者两者都进行，基因组小的话可以直接allrewrite = yes # yes/no覆写deltmp = yes parallel_jobs = 20 # number of tasks used to run in parallel线程数，咱学校的集群20勉强够input_type = raw # raw, corrected输入的数据情况read_type = ont # clr, ont, hifi数据类型input_fofn = input.fofn # 输入数据的位置信息workdir = 03_rundir # 输出的文件夹名字[correct_option]read_cutoff = 1k # 进行correct的时候截取的最小readgenome_size = 230m # estimated genome size预估的基因组大小sort_options = -m 20g -t 15minimap2_options_raw = -t 8pa_correction = 3 # number of corrected tasks used to run in parallel, each corrected task requires ~TOTAL_INPUT_BASES/4 bytes of memory usage.correction_options = -p 15 -dbuf # 非常重要！-dbuf让每一步作业释放内存，防止节点卡死！[assemble_option]minimap2_options_cns = -t 8 nextgraph_options = -a 1 以上是我的配置文件信息，中文标注的地方都很重要，根据情况修改。其他参数可以用默认。其中预估的基因大小也是很有必要的，前面在做基因组Survey的时候预测过，这里就直接写预测的基因组大小。 其他参数的设定和使用可以参考这篇博客使用NextDenovo组装Nanopore数据，以及官方的参数说明手册NextDenovo Parameter Reference — NextDenovo latest documentation 需要强调一点，correction_options = -p 15 -dbuf这项参数是我在华农的集群平台手册上看到的，之前确实一直会卡死在某一步直到24h后台强杀这个进程，目前未知原因，加上之后运行正常。以我的数据来看，一个200多Mb的植物基因组，测序深度100X左右，一次组装运行结束需要12小时左右，已经非常快了。 最后是运行程序，我写了一个run.slurm文件： 1234#!/bin/bash#SBATCH -n 40./nextDenovo run.cfg 1sbatch run.slurm 基因组比较大的话，建议分步运行，先correct，再assemble。 因为是在集群中运行，所有输出都会在slurm-xxxx.out的文件夹中显示，打开以后可以看到每个时间节点完成了什么任务，当有任务卡住几个小时都没动的时候，就要检查是否是配置文件是否正确。 最后组装的基因组在03.ctg_graph目录下，文件名称nd.asm.fasta。最底下输出了组装结果概况，contig N50为9Mb，总共组装出225Mb的基因组序列，contig总数为59，组装结果还算不错。 2.2 CanuCanu是三代测序数据组装的经典工具，也是主要用于Pacbio和Nanopore公司的测序结果组装。 这个软件在安装过程中有点曲折，从官网下数据包，最后一步编译的过程会报错。目前我暂时没办法解决，但是可以用conda安装（虽然官网不建议这么做）。 1conda install -c conda-forge -c bioconda -c defaults canu 如果报错动态库出问题，可以参考第三篇博客中的方法，寻找根目录下的动态库中是否有对应的版本文件，如果有，直接修改软链接到对应的动态库下。 Canu运行分为三个步骤：纠错（Correct）、修剪（Trim）和组装（Assemble）。可以每一个步骤分开跑，比如纠错修剪之后的数据可以放到别的软件中组装，或者用别的软件纠错之后作为输入到Canu中组装。考虑到塔大集群24小时自动杀程序，保险起见还是三个步骤分开跑比较安全。 下面是官方的帮助文档，写的非常详细： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960usage: canu [-version] [-citation] \\ [-haplotype | -correct | -trim | -assemble | -trim-assemble] \\ [-s &lt;assembly-specifications-file&gt;] \\ -p &lt;assembly-prefix&gt; \\ # 输出文件前缀 -d &lt;assembly-directory&gt; \\ # 输出目录 genomeSize=&lt;number&gt;[g|m|k] \\ # 预测基因组大小 [other-options] \\ [-haplotype&#123;NAME&#125; illumina.fastq.gz] \\ [-corrected] \\ [-trimmed] \\ [-pacbio | -nanopore | -pacbio-hifi] file1 file2 ...example: canu -d run1 -p godzilla genomeSize=1g -nanopore-raw reads/*.fasta.gz To restrict canu to only a specific stage, use: # 描述canu要执行的主程序 -haplotype - generate haplotype-specific reads -correct - generate corrected reads -trim - generate trimmed reads -assemble - generate an assembly -trim-assemble - generate trimmed reads and then assemble them Reads can be either FASTA or FASTQ format, uncompressed, or compressed with gz, bz2 or xz. Reads are specified by the technology they were generated with, and any processing performed. [processing] # 描述reads状态 -corrected -trimmed [technology] # 描述测序平台（数据类型） -pacbio &lt;files&gt; -nanopore &lt;files&gt; -pacbio-hifi &lt;files&gt; Some common options: useGrid=string - Run under grid control (true), locally (false), or set up for grid control but don&#x27;t submit any jobs (remote) rawErrorRate=fraction-error # 降低这个参数会提高第一步的速度 - The allowed difference in an overlap between two raw uncorrected reads. For lower quality reads, use a higher number. The defaults are 0.300 for PacBio reads and 0.500 for Nanopore reads. correctedErrorRate=fraction-error # 降低这个参数可以提高组装效率 - The allowed difference in an overlap between two corrected reads. Assemblies of low coverage or data with biological differences will benefit from a slight increase in this. Defaults are 0.045 for PacBio reads and 0.144 for Nanopore reads. gridOptions=string - Pass string to the command used to submit jobs to the grid. Can be used to set maximum run time limits. Should NOT be used to set memory limits; Canu will do that for you. minReadLength=number - Ignore reads shorter than &#x27;number&#x27; bases long. Default: 1000. minOverlapLength=number - Ignore read-to-read overlaps shorter than &#x27;number&#x27; bases long. Default: 500. A full list of options can be printed with &#x27;-options&#x27;. All options can be supplied in an optional sepc file with the -s option. # 可以用-s来提供自己修改的参数文件Complete documentation at http://canu.readthedocs.org/en/latest/ 也可以点击这里，进官方手册看原文。下面用我自己的三代数据跑一个案例。 2.2.1 纠错（Correct）因为三代测序数据错误率较高，纠错的步骤是通过序列之间的一致性比较获得高可信的碱基。 创建一个canu的空文件夹，写入以下内容到correct.slurm: 12345#!/bin/bash#SBATCH -N 1#SBATCH -n 40canu -correct -p baima -d baima_nanopore genomeSize=230m -nanopore-raw /public/home/wlxie/luobuma/luobuma/baima_rawdata/Third_generation_sequencing/pass.fq 1sbatch correct.slurm 主要就是注意下参数，-p是输出文件的前缀，-d是输出文件的目录名，需要声明这个数据是什么平台测的，以及数据是什么状态。虽然我这里只申请了40个核，但是canu会自动提交作业直到你能申请的核数上限……在塔大集群我的权限是200个核，通过scontrol show job 可以查到，我这边一次性提交了136个作业，排队100多个任务，占用192个核….. 纠错、修整和组装每一个步骤会依次进行以下各个阶段，需要的内存和核数挺高的，所以推荐在集群中运行。 如果运行时间很长，建议到设置的输出文件夹目录下查看canu.out文件，详细记载了正在执行哪一步以及花了多少时间。如果不确定程序是否卡死，直接通过scontrol show job命令查看状态为RUNNING的作业，进入作业的输出目录，如果文件夹中的内容一直到最近的时间点都有更新，则可以放心地继续运行。 仅仅这一个步骤花了30个小时。并且这一步会将100X的测序数据量降到40X（默认，可以调整，见官方readSampleingCoverage参数介绍）。最后生成文件baima.correctedReads.fasta.gz，我为了方便复制到了前一个文件夹，修改文件权限为0755。 2.2.2 修整（trim）修整是在上一步纠错的基础上，再对reads进行修剪，删去可疑区域。 这一步经历的步骤与上一步是一样的，虽然上一步纠错已经将数据量降了一大半，对于我的基因组，这一步依然要跑32小时. 同样在canu文件夹写入如下内容到trim.slurm： 12345#!/bin/bash#SBATCH -n 50#SBATCH -t 7200canu -trim -p baima -d baima_trim genomeSize=230m -corrected -nanopore /public/home/wlxie/canu/baima.correctedReads.fasta.gz 1sbatch trim.slurm 注意修改参数以及reads所处的状态。 在canu.out输出文件中，可以找到trim步骤用了什么参数，处理了哪些类型的reads： 生成的结果文件在baima_trim文件夹中，名称为baima.trimmedReads.fasta.gz，同样修改文件权限，移到前一个文件夹方便操作。 2.2.3 组装（Assemble）经过前两步的数据纠错和修整，这一步才是正式组装基因组。 在canu文件夹写入如下内容到assemble.slurm： 12345#!/bin/bash#SBATCH -n 50#SBATCH -t 10800canu -assemble -p baima -d baima_assemble genomeSize=230m correctedErrorRate=0.144 -trimmed -corrected -nanopore /public/home/wlxie/canu/baima.trimmedReads.fasta.gz 1sbatch assemble.slurm 在官方的介绍中，correctedErrorRate这个参数可以根据前面纠错和修整的reads质量做修改的，默认是Pacbio数据0.045，Nanopore数据0.144，降低这个参数值可以加快组装的效率，但是存在遗漏overlap和组装片段断裂的风险。低于30X测序深度以下的数据，官方建议可以略微提高这个值，对于60X测序深度以上的数据可以略微降低这个值，每次改变1%左右比较合适。 我这里就用默认参数了，组装时间可能会比较长，就将作业的时间调整为7天。 实际运行时间为30小时，最终组装结果如下： 这个工具组装出的结果比预期大很多，前面基因组survey预测的基因组大小为230Mbp，实际通过canu组装出有276Mbp，且contig数明显比NextDenovo多，导致contig N50指标低。我觉得可能是correctedErrorRate这个值比较高，可以适当调低一些，过于严格的纠错标准可能导致组装的contig比较碎。 因为前面的NextDenovo组装的效果已经比较理想，因此这一步我也就不再细调参数了。以NextDenovo组装出的基因组继续后面的分析。以目前我的植物基因组来看，用NextDenovo组装三代基因组的效率和质量都比Canu高。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"基因组三代测序分析","slug":"基因组三代测序分析","permalink":"http://www.shelven.com/categories/%E5%9F%BA%E5%9B%A0%E7%BB%84%E4%B8%89%E4%BB%A3%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/"}],"tags":[{"name":"NextDenovo","slug":"NextDenovo","permalink":"http://www.shelven.com/tags/NextDenovo/"},{"name":"Canu","slug":"Canu","permalink":"http://www.shelven.com/tags/Canu/"}]},{"title":"解决github DNS污染的三种方法","slug":"解决github-DNS污染的三种方法","date":"2023-02-21T13:47:13.000Z","updated":"2023-02-21T13:49:36.000Z","comments":true,"path":"2023/02/21/a.html","link":"","permalink":"http://www.shelven.com/2023/02/21/a.html","excerpt":"最近因为需要安装各种生信软件，用github比较多，每次登github都要翻墙很是麻烦。索性花了点时间研究了一下，下面分别列举三种情况下的解决github网站登录的问题。","text":"最近因为需要安装各种生信软件，用github比较多，每次登github都要翻墙很是麻烦。索性花了点时间研究了一下，下面分别列举三种情况下的解决github网站登录的问题。 知其然知其所以然，首先我们需要明白为什么github在国内经常无法登录。我们在浏览器地址栏输入网址以后，域名服务器会对输入的域名进行解析（DNS解析），解析成为计算机之间可以识别的ip地址。然而因为一些众所周知的因素，很多国外的网站在国内是无法直接访问的，其中一个限制方法就是DNS污染，将域名服务器中缓存的域名指向不正确的ip地址。这种限制手段就和你公司电脑会限制你浏览一些网站是一样的。 因此要浏览这些被DNS污染的网站，我们需要跳过受污染的局域域名服务器，常用的方法就是代理服务器和VPN（VPN就是一个典型的正向代理），通过更远的服务器转发我们的http请求，在经过未污染的域名服务器解析之后，返回我们想要的网页内容。当然，如果仅仅只是用翻墙的方法的话，本篇博客这里可以结束了，下面通过三种情况分别讲一下如何通过修改host等其他方法访问github。 1. Windows系统修改host首先注意一点，如果你正在用翻墙软件或者VPN等，需要先将所有代理都关闭（防止全局代理导致设置的host失效）。 host文件是一个没有扩展名的系统文件，可以用notepad++打开编辑，其本质就是就是将访问的域名和ip地址建立关联。当浏览器中输入网址时，系统会首先从host文件中找到域名对应的ip地址，如果没有找到才会发送给域名解析器。所以我们只需要找到github相关域名对应的正确的ip地址，即可正常访问github（其他受DNS污染的网址同理）。 打开网址 https://www.ipaddress.com/ 主要查找以下github相关域名的ip地址，有多少个记录多少个 123456github.com # 主站nodeload.github.com api.github.com # APIcodeload.github.comgithub.global.ssl.Fastly.net # git clone速度相关assets-cdn.github.com # 静态资源相关 windows系统中host文件位置 C:\\WINDOWS\\System32\\drivers\\etc\\hosts notepad++打开host文件，最后加入如下查到的ip地址，保存 12345678910111213141516# domain: github.com# 更新时间 2023年2月21日140.82.113.3 github.com140.82.114.10 nodeload.github.com140.82.112.6 api.github.com140.82.114.10 codeload.github.com151.101.1.194 github.global.ssl.Fastly.net151.101.65.194 github.global.ssl.Fastly.net151.101.129.194 github.global.ssl.Fastly.net151.101.193.194 github.global.ssl.Fastly.net185.199.108.153 assets-cdn.github.com185.199.110.153 assets-cdn.github.com185.199.111.153 assets-cdn.github.com 最后一步打开cmd命令行，刷新缓存就可以正常登录github了 ipconfig /flushdns 2. Linux系统修改host方法步骤同上，需要注意linux系统修改host需要root权限! linux系统host文件路径 /etc/hosts 3. 无root权限的linux系统访问github有些时候我们会在集群中安装软件，这个时候是没有root权限的，无法通过修改host的方法直接访问，因此也无法用git clone的方法克隆仓库（会报错，错误代码443）。 今天碰到这个问题，找贺师兄聊了聊才发现可以找镜像资源曲线救国……突然打开了新世界的大门hhhh 真的解决了困扰我很久的疑惑，按照往常我只能翻墙下载源代码，再解压后传回服务器，一来一回校园网的速度要传很久很久…… 具体做法是先下载油猴（Tampermonkey）插件，这是个非常有名的脚本管理器，下载安装方式就不说了，网上一大把，自己搜下github官方也非常简单。Tampermonkey&#x2F;tampermonkey 然后是安装github增强加速插件，插件地址 https://greasyfork.org/zh-CN/scripts/412245-github-%E5%A2%9E%E5%BC%BA-%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD 我因为安装过了，这里就只演示一下： 安装之后再回到原来github页面，点击code按钮，就可以看到原来只有一个git clone地址，现在有好几个地址给出来了，在集群里随便git clone选择其他地址，就可以在成功下载啦。 这个javascript脚本感兴趣的话可以在油猴中看看，本质上也是个CDN加速和代理，只不过用的都是公益资源，速度也相当不错了。 4. 写在最后前面两个方法改host并不是一劳永逸的，隔一段时间github的ip地址就会更新（不定，可能几天，可能几周）。这种纯手动更新的方法仍然是不够智能不够优雅的，有能力的话以后写一个自动更新的脚本（间隔一段时间自动查找相关github域名的ip地址，自动更新到host文件中）。 目前为止，还是代理最为省心。","categories":[{"name":"网络相关","slug":"网络相关","permalink":"http://www.shelven.com/categories/%E7%BD%91%E7%BB%9C%E7%9B%B8%E5%85%B3/"}],"tags":[{"name":"github","slug":"github","permalink":"http://www.shelven.com/tags/github/"}]},{"title":"校园网代理服务器的搭建","slug":"校园网代理服务器的搭建","date":"2023-02-09T08:55:45.000Z","updated":"2023-02-09T08:58:49.000Z","comments":true,"path":"2023/02/09/a.html","link":"","permalink":"http://www.shelven.com/2023/02/09/a.html","excerpt":"以前的一篇博客讲过如何搭建反向代理服务器，从而实现在校外登录校内集群，详情点击这里。本篇博客主要记录下如果想要在校外登录学校教务平台、登录学校购买的数字资源库应该如何实现。","text":"以前的一篇博客讲过如何搭建反向代理服务器，从而实现在校外登录校内集群，详情点击这里。本篇博客主要记录下如果想要在校外登录学校教务平台、登录学校购买的数字资源库应该如何实现。 1. 实现思路首先要更正一下前一篇博客的错误之处，学校集群是有公网ip的，只是限制了ip访问。 使用的工具仍然是frp，需要的设备是一台在校内24h不断电的服务器（本篇博客中的校内集群），以及一台有公网ip的校外服务器（本篇博客中是我的轻量云服务器）。 上篇内网穿透博客记录的是典型的反向代理过程，将校内集群ssh登录的端口映射到校外服务器的其他端口，通过访问该端口登录校内集群，整个代理过程客户端无法得知服务端的真实ip和端口，可以做到隐藏服务端真实信息、确保服务端安全。 而我们这里想要登录校园内的其他网站、使用校园网ip登录知网万方等数据库的话，就需要用校内集群转发我们的http请求，将请求返回的结果通过校外服务器中转后返回给我们，按照我的理解，这是一个正向代理+反向代理结合的过程。 反向代理：隐藏了服务端，我并不知道我访问的实际是校内集群（输入的是校外服务器的ip地址和端口）。 正向代理：隐藏了客户端，集群将http请求转发到校内网站和学校买的数据库网站（后者并不知道发出请求的实际是校外服务器）。 校内集群在整个过程中信息完全被隐藏，校外服务器起到中转的作用，最后将http请求返回的结果传递给我们。 2. frp配置2.1 service端配置frps安装在校外服务器上，frps.ini配置文件完全不用修改，这里就顺便展示一下 123456789101112131415[common]bind_port = 7000 # frp监听的端口，默认7000，可改bind_udp_port = 7400 # UDP通讯端口，可不设置，用于点对点穿透token = xxxxxxxx # 安全考虑需要设置口令，client端需要用到dashboard_port = 7500 # frp管理端口，可改dashboard_user = xxxx # 管理端口认证的用户名，用于身份识别，自己设置dashboard_pwd = xxxx # 管理端口认证的密码，用于身份识别，自己设置enable_prometheus = truesubdomain_host = xxx.xxx.xxx # 设置子域名，主要方便登录管理界面。不用ip地址，用域名+端口的方式直接访问log_file = /usr/local/frp/frps.log # frp日志配置，这里是记录3天的日志信息log_level = infolog_max_days = 3 2.2 client端配置frpc安装在校内集群，frpc.ini配置文件修改如下 123456789[common]server_addr = xxx.xxx.xxx.xxx # 填写你的service端服务器公网ip，这里我写我的云服务器ipserver_port = 7000 # 前面设置的frp监听端口，需要保持一致token = xxxxxxxxx # 前面设置的口令[http_proxy] # 这里只演示http代理，有ssh需求的自行加入，其他参考frpc_full.initype = tcpremote_port = xxxx # 映射的service端服务器的端口，自己定义plugin = http_proxy # http代理插件（frpc自带） 2.3 开放端口，开启frp服务service端（也就是校外服务器）开放上一步client端设置的服务器端口，重载防火墙。 分别在service端和client端后台不挂起运行frps和frpc（对应文件夹中运行） 12nohup ./frps -c frps.ini &amp;nohup ./frpc -c frpc.ini &amp; service端可以查看运行日志frps.log文件，端口监听成功即可；client端可以查看nohup文件的运行结果（最好定时清一下，否则这个文件会很大）。 如果想要停止frp服务，查看任意service端或者client端的frp程序进程，结束即可 12ps -aux | grep frp # 查看任务进程号kill -9 进程号 # 结束任务进程 3. 代理实现按照上面步骤搭建好代理服务器，我们只需要在电脑上设置代理地址和端口，就可以在电脑上用外网访问校园内网和数据库网站了。 上面的图片我就不放真实信息了，根据图片意思设置即可，一般来说教程到这里就可以结束了，但是仅仅如此还不够优雅。 如果不对地址进行限制，那么所有http访问都将通过代理进行，即全局代理，一般情况下我们是不希望如此的。举个例子，如果访问的是localhost，我们一般是用直连（Direct）；访问限制ip的特定的网站走代理服务器（Proxy）；访问不限制ip的网站仍然用直连，因为直连速度最快，只受你电脑带宽限制。 如果访问所有网站都用代理的话，比如我的小破服务器就1M带宽，速度就很感人了…… 简单讲一讲三种方法优雅地实现校园网代理 3.1 使用设置脚本没错就是手动设置代理上面那个选项，这个脚本是以**.PAC为扩展名的JavaScript脚本**，决定http请求是通过直连目标还是通过代理的方式连接。 pac文件中使用的JavaScript 函数可以在官方查到用法，这里做个示例： 12345678910111213141516171819function FindProxyForURL(url, host) &#123; //设置代理池 var proxy1 = &quot;PROXY xxx.xxx.xxx.xxx:xxxx&quot;; var proxy2 = &quot;PROXY xxx.xxx.xxx.xxx:xxxx&quot;; //本地地址直连 if (isPlainHostName(host)) &#123; return &quot;DIRECT&quot;; &#125; // 代理1 if (shExpMatch(url, &quot;*.cnki.com/*&quot;)) &#123; return proxy1; &#125; // 代理2 if (shExpMatch(url, &quot;*.wanfangdata.com.cn/*&quot;)) &#123; return proxy2; &#125; return &quot;DIRECT&quot;;&#125; 将上面的文件保存为.pac格式文件，代理池部分填写前面做的代理服务器ip和端口（当然我只有一个代理服务器，根据需要自己改），需要代理的网址这里可以用shExpMatch函数进行正则匹配，完成后再设置自动设置代理部分。打开自动检测设置和使用设置脚本，将.pac文件的地址（可以是本地地址或者放在你自己的服务器上，能访问到就行）贴到脚本地址栏。 接下来就可以愉快地访问学校购买的数字资源啦并且上其他网站因为是直连网速也不会变慢 3.2 使用其他代理软件代理软件种类繁多，相比直接设置脚本，代理软件往往还提供更多更直观的方式控制http代理方式，这里就简单介绍个软件Proxifier 设置方法与手动设置大同小异（手动设置的代理规则比较反人类），同样是设置代理服务器ip，端口，可以设置不同的协议，还可以启用验证保证安全。 设置代理规则 代理规则就不一一细说了，这个软件就是比较直观，而且还可以记录代理产生的流量等等。 3.3 做个切换全局代理工具如果是自己用的话，使用代理脚本是最简单最优雅又不费事的方法。 如果要给同一个实验室其他人分享，又怕别人电脑不安全（直接分享脚本会导致源码泄露，万一别人电脑被黑了自己服务器的信息就被暴露了），就可以做一个代理工具，别人用得着的时候开启，用不着的时候就关闭（全局代理的重要性，就算忘记关闭代理，看到别的网页速度变慢了，也就会想起来去关闭代理了），可以一定程度上保护自己服务器的安全，又简化别人设置代理的步骤，一举两得哈哈~ 实现方式就是做一个批处理，然后将bat转化为exe即可 1234567891011121314151617181920212223242526272829303132333435363738394041424344@echo offfor /f &quot;tokens=1,2,* &quot; %%i in (&#x27;REG QUERY &quot;HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings&quot; /v ProxyEnable ^| find /i &quot;ProxyEnable&quot;&#x27;) do (set /A ProxyEnableValue=%%k)if %ProxyEnableValue% equ 0 ( echo 正在开启知网代理，请稍候... ping -n 2 127.0.0.1&gt;nul echo= echo 获取注册表中代理启用状态...... reg add &quot;HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings&quot; /v ProxyEnable /t REG_DWORD /d 1 /f ping -n 2 127.0.0.1&gt;nul echo= echo 设置代理服务器...... reg add &quot;HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings&quot; /v ProxyServer /d &quot;xxx.xxx.xxx.xxx:xxxx&quot; /f ping -n 2 127.0.0.1&gt;nul echo= echo 代理已开启，请阅读弹窗内容并按确认键关闭本窗口... echo= echo 知网一键代理工具 Version 1.0 echo 版权所有 塔里木大学研发中心405. 保留所有权利。 echo 该工具由405实验室内部开发，仅供本实验室人员使用，切勿外传。 echo msgbox&quot;代理开启期间网速会变慢，使用完毕后请再次点击该工具结束代理！&quot;,0,&quot;提示&quot;&gt; %tmp%\\\\tmp.vbs cscript /nologo %tmp%\\\\tmp.vbs del %tmp%\\\\tmp.vbs) else if %ProxyEnableValue% equ 1 ( echo 正在关闭知网代理，请稍候... ping -n 2 127.0.0.1&gt;nul echo= echo 获取注册表中代理启用状态...... reg add &quot;HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings&quot; /v ProxyEnable /t REG_DWORD /d 0 /f ping -n 2 127.0.0.1&gt;nul echo= echo 清除代理服务器设置...... reg add &quot;HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings&quot; /v ProxyServer /d &quot;&quot; /f ping -n 2 127.0.0.1&gt;nul echo= echo 代理已关闭，请按确认键退出本窗口... echo= echo 知网一键代理工具 Version 1.0 echo 版权所有 塔里木大学研发中心405. 保留所有权利。 echo 该工具由405实验室内部开发，仅供本实验室人员使用，切勿外传。 echo msgbox&quot;再见。&quot;,0,&quot;提示&quot;&gt; %tmp%\\\\tmp.vbs cscript /nologo %tmp%\\\\tmp.vbs del %tmp%\\\\tmp.vbs) 上面的内容文件保存为.bat后缀文件（有中文的话，保存时编码格式要改为ANSI），只需修改xxx.xxx.xxx.xxx:xxxx部分为你前面设置的代理服务器ip和端口即可。 原理就是获取注册表中代理服务的开启状态，转化为另一种状态， ping -n 2 127.0.0.1这个只是为了使用者有参与感……延迟两秒进行下一步处理hhhhhh 最后网上找个图，转成icon格式作为图标，然后将bat批处理格式文件转化成exe可执行程序文件即可，我这里用的Bat_To_Exe_Converter这个软件，转成exe源码不容易被泄露，而且怎么说呢看上去给人感觉也稍微正式一点（bushi）。 大概就是这样，每双击一次应用程序，切换全局代理的状态为开或者关 4. 注意浏览器是会缓存ip信息的，无论使用何种方式开启代理，最好都先关闭浏览器之后重新打开。","categories":[{"name":"网络相关","slug":"网络相关","permalink":"http://www.shelven.com/categories/%E7%BD%91%E7%BB%9C%E7%9B%B8%E5%85%B3/"}],"tags":[{"name":"内网穿透","slug":"内网穿透","permalink":"http://www.shelven.com/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"},{"name":"代理服务器","slug":"代理服务器","permalink":"http://www.shelven.com/tags/%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8/"}]},{"title":"基于requests和Xpath改进微信公众号爬虫","slug":"基于requests和Xpath改进微信公众号爬虫","date":"2022-12-18T15:00:18.000Z","updated":"2022-12-18T15:03:38.000Z","comments":true,"path":"2022/12/18/a.html","link":"","permalink":"http://www.shelven.com/2022/12/18/a.html","excerpt":"前面一篇博客讲了requests、Xpath和selenium的用法，最后用selenium模拟浏览器对搜狗微信文章做了自动化爬取。从搜狗微信网页爬取的公众号文章其实是不全的，不能保证公众号的所有文章都被搜狗收录，且selenium爬取速度相对较慢（但是对动态页面爬取很有用），因此可以选择另一种方式——直接从微信公众号后台进行爬取。","text":"前面一篇博客讲了requests、Xpath和selenium的用法，最后用selenium模拟浏览器对搜狗微信文章做了自动化爬取。从搜狗微信网页爬取的公众号文章其实是不全的，不能保证公众号的所有文章都被搜狗收录，且selenium爬取速度相对较慢（但是对动态页面爬取很有用），因此可以选择另一种方式——直接从微信公众号后台进行爬取。 这两天改了下代码，就讲一讲从微信公众号后台爬文章的思路。 1. 准备工作首先是申请微信公众号，自从2018年微信公众号加强用户管理以后，一个身份证只可以注册一个订阅号了，除非你有营业执照，以公司为主体注册名额还能加两个。比较建议多弄几个微信公众号，只要绑定自己是运营者就行，可以让朋友帮忙注册一下，从微信公众号后台直接爬是有可能被ban接口的，被反爬机制检测到第一次ban一小时，第二次可能ban一天，看情况而定。 我这里是准备了三个微信公众号，保证爬取过程不中断~ 首先进入微信公众号后台，点击图文消息，在跳转的编辑页面上方点击超链接。 在这个页面按F12进入开发者工具，链接内容选择其他公众号，输入你想要爬的公众号名字，点击右边放大镜搜索后对返回数据抓包。 这里第一个返回的数据包是显示公众号搜索内容的，一个重要的参数fakeid就是公众号名字的内部编号。然后返回前面的标头，获取cookie，这是我们登录微信公众号的凭证，后面爬取网页必须带上cookie内容。 点击我们要找的公众号（你名字输对的话肯定是第一个），又返回一个数据包，在负载里我们可以看到begin和count两个重要的参数。在试验过后可以发现，begin表示从哪一页开始，count表示一页显示多少天的推送，这里count值在我多次试验之后，发现最大值为5，传入超过5的数都会变成默认值5（也就是说不能通过一页获取所有文章的url）！ 而在响应体中，我们可以看到所有返回文章的title、link、update_time、digest等重要的信息都在app_msg_list中，上面的app_msg_count值我测试后发现是记录一共发布文章天数的。 在这个公众号例子中，digest本来应该是摘要的，但在这里只是一段甚至半段内容，无法提取有用的信息，所以我直接忽略了这部分数据；而且一般公众号会把subtitle分离出来，这个公众号没有，因此需要写一段代码分离标题中的分类标题，以标题中的竖线来分割“副标题（分类）|标题”。 接下来可以随便点一个link，F12看看文章的html结构，记录文章内容的xpath地址（不记得xpath地址怎么找的话，看前一篇xpath用法）。这里文章的图片我就没有收集了，我只收集了文字部分内容。 每个公众号排版不一样，根据内容再写一个正则匹配一下不需要的内容，也就是对内容“去噪”。不详细讲，因公众号而异，我这里要去除的噪声是公众号底部的进群邀请内容。 2. 代码部分截至目前为止（2022年12月28日），代码运行正常： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174import randomimport timeimport requests, refrom requests.packages import urllib3from lxml import etreeimport xlwtfrom pandas import DataFramekey_word = &quot;植物生物技术Pbj&quot;xpath_string = &#x27;//*[@id=&quot;js_content&quot;]//text()&#x27; # 文章内容的xpath路径last_date = 2018 # 想要获得哪一年之后的文章# 创建工作表格，存储爬取的临时数据book = xlwt.Workbook(encoding=&#x27;utf-8&#x27;,style_compression=0)sheet = book.add_sheet(key_word,cell_overwrite_ok=True)col = (&#x27;title&#x27;, &#x27;author&#x27;, &#x27;content&#x27;,&#x27;category&#x27;,&quot;link&quot;,&quot;date&quot;)for i in range(0,6): sheet.write(0,i,col[i]) # 第一行写入属性名称,write对应参数：行、列、值urllib3.disable_warnings() # 忽略警告# 最终爬取数据存放列表title_list = []link_list = []cat_list = []date_list = []content_list = []author_list = []s = requests.Session() # 维持会话# 对微信公众号查找的headersheaders = &#123; &#x27;User-Agent&#x27;: &quot;Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:72.0) Gecko/20100101 Firefox/72.0&quot;, &quot;Host&quot;: &quot;mp.weixin.qq.com&quot;, &#x27;Referer&#x27;: &#x27;https://mp.weixin.qq.com/&#x27;&#125;cookie_str = &quot;&quot;cookies = &#123;&#125;# 加载cookies，将字符串格式的cookies转化为字典形式def load_cookies(): global cookie_str, cookies for item in cookie_str.split(&#x27;;&#x27;): sep_index = item.find(&#x27;=&#x27;) cookies[item[:sep_index]] = item[sep_index + 1:]# 去噪函数，只适合该公众号def quzao(content): if type(content) == str: i = re.sub(&#x27;植物生物技术Pbj交流群&#x27;, &#x27;&#x27;, str(content)) i = re.sub(&#x27;为了能更有效地帮助广大的科研工作者获取相关信息.*&#x27;, &#x27;&#x27;, str(i)) return i else: return &#x27; &#x27;# 爬虫主函数def spider(): # 加载cookies load_cookies() # 访问官网主页 url = &#x27;https://mp.weixin.qq.com&#x27; res = s.get(url = url, headers = headers, cookies = cookies, verify = False) if res.status_code == 200: # 由于加载了cookies，相当于已经登陆了，系统作了重定义，response的url中含有我们需要的token print(res.url) # 获得token token = re.findall(r&#x27;.*?token=(\\d+)&#x27;, res.url) if token: token = token[0] else: # 没有token的话，说明cookies过时了，没有登陆成功，退出程序 print(&#x27;登陆失败&#x27;) return print(&#x27;token&#x27;, token) # 检索公众号 url = &#x27;https://mp.weixin.qq.com/cgi-bin/searchbiz&#x27; data = &#123; &quot;action&quot;: &quot;search_biz&quot;, &quot;begin&quot;: &quot;0&quot;, &quot;count&quot;: &quot;5&quot;, &quot;query&quot;: key_word, &quot;token&quot;: token, &quot;lang&quot;: &quot;zh_CN&quot;, &quot;f&quot;: &quot;json&quot;, &quot;ajax&quot;: &quot;1&quot; &#125; # 继续使用会话发起请求 res = s.get(url = url, params = data, cookies = cookies, headers = headers, verify = False) if res.status_code == 200: # 搜索结果的第一个提取它的fakeid fakeid = res.json()[&#x27;list&#x27;][0][&#x27;fakeid&#x27;] print(&#x27;微信公众号fakeid&#x27;, fakeid) page_size = 5 # 默认是5天文章1页，这个参数似乎最大值只有5 page_count = 278 # 公众号文章总页数（自己手动调整，爬取到第几页） cur_page = 1 # 爬取页数（从第几页开始爬取） l = 1 # excel计数用 while cur_page &lt;= page_count: url = &#x27;https://mp.weixin.qq.com/cgi-bin/appmsg&#x27; data = &#123; &quot;action&quot;: &quot;list_ex&quot;, &quot;begin&quot;: str(page_size * (cur_page - 1)), &quot;count&quot;: str(page_size), &quot;fakeid&quot;: fakeid, &quot;type&quot;: &quot;9&quot;, &quot;query&quot;: &quot;&quot;, &quot;token&quot;: token, &quot;lang&quot;: &quot;zh_CN&quot;, &quot;f&quot;: &quot;json&quot;, &quot;ajax&quot;: &quot;1&quot; &#125; time.sleep(random.randint(1, 5)) #继续会话发起请求 res = s.get(url = url, params = data, cookies = cookies, headers = headers, verify =False) if res.status_code == 200: print(&#x27;开始爬取页数：&#x27;, cur_page) # 文章列表位于app_msg_list字段中 app_msg_list = res.json()[&#x27;app_msg_list&#x27;] for item in app_msg_list: # 通过更新时间戳获得文章的发布日期 item[&#x27;post_date&#x27;] = time.strftime(&quot;%Y-%m-%d&quot;, time.localtime(int(item[&#x27;update_time&#x27;]))) if int(item[&#x27;post_date&#x27;].split(&#x27;-&#x27;)[0])&lt;last_date: continue # 以下标题分离只适合该公众号 if item[&#x27;title&#x27;].find(&quot;|&quot;) != -1: # 有竖线分离副标题 title = item[&#x27;title&#x27;].split(&quot;|&quot;)[1].strip() cat = item[&#x27;title&#x27;].split(&quot;|&quot;)[0].strip() elif item[&#x27;title&#x27;].find(&quot;｜&quot;) != -1: title = item[&#x27;title&#x27;].split(&quot;｜&quot;)[1].strip() # 分离中文竖线 cat = item[&#x27;title&#x27;].split(&quot;｜&quot;)[0].strip() elif item[&#x27;title&#x27;].find(&quot;│&quot;) != -1: title = item[&#x27;title&#x27;].split(&quot;│&quot;)[1].strip() # 分离另一种很神奇的竖线 cat = item[&#x27;title&#x27;].split(&quot;│&quot;)[0].strip() else: title = (item[&#x27;title&#x27;]) cat = &#x27;N/A&#x27; title_list.append(title) date_list.append(item[&#x27;post_date&#x27;]) link_list.append(item[&#x27;link&#x27;]) author_list.append(key_word) cat_list.append(cat) response = requests.get(url = item[&#x27;link&#x27;], headers = headers) print(&quot;正在解析网页&quot; + str(item[&#x27;link&#x27;]) + &#x27;......&#x27;) time.sleep(random.randint(1, 5)) # 爬一个，休息1-5秒 tree_content = etree.HTML(response.text) # 获取爬到的动态页面源码 try: # 解析xpath，去噪 content = tree_content.xpath(xpath_string) content = re.sub(r&#x27;\\s+&#x27;, &#x27;&#x27;, &#x27;&#x27;.join(content)) # 获取到的文章内容（去空格） content = quzao(content) except: content = &#x27;&#x27; # 没有内容的可能是内容违规已撤销 content_list.append(content) print(&#x27;解析文章&quot;&#x27;+title+&#x27;&quot;成功！&#x27;) try: # 以下逐行写入，备份数据用，防止反爬造成数据丢失 sheet.write(l , 0, title) sheet.write(l , 1, key_word) sheet.write(l , 2, content) sheet.write(l , 3, cat) sheet.write(l , 4, item[&#x27;link&#x27;]) sheet.write(l , 5, item[&#x27;post_date&#x27;]) savepath = &#x27;./微信公众号_&#x27; + key_word + &#x27;_.xls&#x27; l += 1 if l % 20 == 0: # 每20行保存一次（适当调大一点，以免保存失败） book.save(savepath) print(&quot;数据备份成功！已保存&quot; + str(l) + &quot;条！&quot;) except: continue # 当前页面数+1 cur_page += 1 print(&#x27;over！开始保存&#x27;) # 中途没有反爬的话，一次写入所有爬取数据 data = &#123;&#x27;title&#x27;: title_list, &#x27;author&#x27;: author_list, &#x27;content&#x27;: content_list,&#x27;category&#x27;: cat_list,&quot;link&quot;:link_list,&quot;date&quot;:date_list&#125; df = DataFrame(data) df.to_excel(&#x27;./微信公众号_&#x27; + key_word + &#x27;_.xlsx&#x27;) print(&#x27;保存成功！&#x27;)spider() 代码只有cookie需要登录微信公众号后台手动获取，复制粘贴进去；page_count由刚才查文章的界面往下拉，找到一共有多少页，其他参数都不用修改。 为了防止半路被反爬，引入了xlwt库，作用是创建工作表，逐行写入保存爬到的临时数据，不然有可能爬到一半被检测到，最后所有数据都不会保存（别问我为什么知道）！最后一步是写入所有数据，名称和临时数据不一样，也是多一步保险措施。爬取过程显示的数据如下： 如果中途被反爬机制检测到，换一个公众号cookie，然后从中断的cur_page处继续，excel另存。 通过以上代码，实现对公众号“植物生物技术Pbj”8447篇推送（从创建的第一天2019年3月1日至2022年12月18日）爬取： 上面的代码是根据“植物生物技术Pbj”这个公众号排版所特制的，一定要注意根据具体公众号决定制作怎么样的去噪函数，总页数其实也可以根据app_msg_count&#x2F;page_size值写一个函数自动计算出来，但是如果中途被反爬还是要手动改page值，这里就不多此一举了。还有，如果爬取的每页推送天数（也就是第二个data字典中的count值）可以突破5的话，就可以再写一个循环尽量一次拿到多的文章url，这样检测的机率就会大大降低（我每次被检测都是抓取app_msg_list的时候，而不是抓取文章内容的时候）。 经过半天的测试，有一点以下的经验之谈 微信公众号反爬机制可能是检测你翻页的次数，一天翻页的次数在100-200次间比较保险，也就是一次爬500天-1000天内的推送数据 每次抓取数据sleep1-5秒比较靠谱，1-3秒也容易在爬100条左右的时候被抓…… 有一个思路是通过保存所有文章url，再进行每个文章内容抓取，但是获取文章列表的data字典中count值最大只能是5，导致我们需要频繁翻页，这个地方如何突破是一个问题。 sheet.write方法有的时候会失效，在某一次打开excel之后可能没来得及写入数据就被保存，导致后续无法继续保存临时数据。解决方法之一是保存间隔大一点，这里我设置了每写入20行保存一次。 做好爬取数据的双保险！我这里做了临时数据保存，不要抱侥幸心，不然爬半天数据容易全部木大！","categories":[{"name":"网络相关","slug":"网络相关","permalink":"http://www.shelven.com/categories/%E7%BD%91%E7%BB%9C%E7%9B%B8%E5%85%B3/"}],"tags":[{"name":"python","slug":"python","permalink":"http://www.shelven.com/tags/python/"},{"name":"爬虫","slug":"爬虫","permalink":"http://www.shelven.com/tags/%E7%88%AC%E8%99%AB/"}]},{"title":"应用requests、Xpath和selenium编写爬虫脚本","slug":"应用requests、Xpath和selenium编写爬虫脚本","date":"2022-12-13T16:42:48.000Z","updated":"2022-12-13T16:47:45.000Z","comments":true,"path":"2022/12/14/a.html","link":"","permalink":"http://www.shelven.com/2022/12/14/a.html","excerpt":"这篇博客承接前面的HTTP基本原理，对requests、Xpath和selenium三个库&#x2F;工具做个简单介绍，并且用三个爬虫实例由浅到深理解爬虫的构思和实现过程，最后是用selenium+chromedriver模拟浏览器，实现对微信公众号文章的爬取。","text":"这篇博客承接前面的HTTP基本原理，对requests、Xpath和selenium三个库&#x2F;工具做个简单介绍，并且用三个爬虫实例由浅到深理解爬虫的构思和实现过程，最后是用selenium+chromedriver模拟浏览器，实现对微信公众号文章的爬取。 1. requestsrequests是python最常见的HTTP客户端库，可以调用requests模块的API伪装成浏览器对网站发起请求。 前面一篇爬虫博客介绍了requests的六种方法，这里不多赘述，主要回顾下发送请求和获得响应的过程。 requests库有两个重要的对象，Request和Response，Request对象对应的是请求，向目标网址发送一个请求访问服务。而Response对象，是包含了爬虫返回的内容。 Request对象完整的发起get和post请求方式： 1234567requests.get(url, params=None, **kwargs)requests.post(url, data=None, **kwargs)# url：想要获取的网页链接# params：显示在url中的参数，字典形式# data：不显示在url中，通过提交表单的方式提交参数，也是字典形式# **kwargs：控制访问的参数，字典形式 当服务器正常响应时，返回状态码200，这个时候就可以用Response对象的属性来获取网页信息。 Response对象属性： .status_code：HTTP响应状态码，200表示成功，其他状态码详见上篇博客 .text：HTTP响应体内容的字符串格式 .content：HTTP响应体内容的二进制格式 .encoding：从HTTP header中猜测的响应内容编码方式 .apparent_encoding：从内容中分析出的响应内容编码方式（备选编码方式） 这里需要注意，如果我们获得的响应内容是图片视频和音频的话，需要用二进制格式进行储存。 有了以上基础知识，就可以用request写一个爬虫项目了，我们现在目的是爬取豆瓣电影古装排行榜前20的电影图片。 进入豆瓣电影排行榜网页，按F12进入浏览器开发者工具，点击网页页面分类中的“古装”，对网页数据进行抓包。当鼠标滚轮往下滚动的时候我们可以发现，每次滚动更新，有一个名字很长的数据包会不断更新，还伴随着一大堆jpg图片的出现，很明显这个数据包是我们要抓取的对象。 点击表头选项的响应头，我们看到返回的数据是json格式，编码方式是utf-8。请求url栏中问号之前的部分是我们要的url，参数可以设置一个字典传入。 在负载部分，多次抓包以后可以看到前三个参数是一直不变的，猜测这几个参数可能是和电影类型和页面布局相关，这个可以不用管。翻页刷新后总是固定显示20个电影，因此limit和数据包内抓取的电影数相关，start和这个数据库中起始的电影编号相关。 再看看响应的json数据中，有一个“cover_url”的键对应值是电影的图片地址，至此思路就很明确了。 1234567891011121314151617181920212223242526import requestsurl = &#x27;https://movie.douban.com/j/chart/top_list&#x27;# 传入的url参数设置param = &#123; &#x27;type&#x27;: &#x27;30&#x27;, # 影片类型代号 &#x27;interval_id&#x27;: &#x27;100:90&#x27;, &#x27;action&#x27;:&#x27;&#x27;, &#x27;start&#x27;: &#x27;0&#x27;, # 从第一个影片开始 &#x27;limit&#x27;: &#x27;10&#x27;, # 需要抓取的影片数&#125;# 伪装浏览器headers = &#123; &#x27;User-Agent&#x27;: &#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Edg/108.0.1462.46&#x27;&#125;# 抓取上面定义范围内所有影片信息response = requests.get(url = url, params = param, headers = headers)# json字符串反序列化为list类型ls = response.json()# 解析电影图片地址，并抓取和保存图片for p in ls: with open(&#x27;./&#x27; + str(p[&#x27;title&#x27;]) + &#x27;.jpg&#x27;,&#x27;wb&#x27;) as img: response1 = requests.get(url = p[&quot;cover_url&quot;], headers = headers) img.write(response1.content) print(&#x27;over!!!&#x27;) .json()这个requests库自带的函数还是挺有意思的，在这个例子中是将返回的字符串JSON数据反序列化为list数据，list中嵌套了字典数据，每个电影的信息都储存在字典中。因此这里也可以用.json()[&#39;cover_url&#39;]直接对图片网址进行抓取，注意下这里第二次抓取的是图片，返回的是二进制数据，所以用content而不是text。 2. Xpath前面例子抓包返回的是JSON字符串，所以可以直接提取我们要的信息。如果返回的是HTML源代码，就可以用正则或者Xpath来解析我们想要的数据。 Xpath是一种解析XML文档信息的工具，我们可以通过lxml库（XML和HTML的解析库）中导入etree模块，实例化etree对象，使用xpath函数结合xpath表达式进行标签定位和指定数据的获取。 Xpath常用规则： 表达式 描述 nodename 选取此节点的所有子节点 &#x2F; 从当前节点选取直接子节点 &#x2F;&#x2F; 从当前节点选取所有子孙节点 . 选取当前节点 .. 选取当前节点的父节点 @ 选取属性 Xpath常用表达式： 123456789101112属性定位 //div[@class=&quot;slist&quot;] # 找到所有class属性值为slist的div标签层级定位 //div[@class=&quot;slist&quot;]/../li[2] # 找到class属性值为slist的div的父标签下的第二个直系子标签li多属性解析 //div[@class=&quot;slist&quot; and @name=&quot;Id&quot;] # 找到class属性为slist以及name属性为Id的div标签模糊匹配 //div[contains(@class, &quot;slist&quot;)] # 找到class属性中包含slist值得div标签文本获取 //li[@class=&quot;item&quot;]//text() # 取出class属性值为item的所有li标签下的所有标签文本（包括子标签） 获取属性 //li/a/@href # 取出所有li标签下a标签下的href属性值 etree对象实例化： 1234567本地文件（解析保存在本地的HTML文件）：tree = etree.parse(文件名)tree.xpath(&quot;xpath表达式&quot;)网络数据（实例化一个html类）：tree = etree.HTML(网页内容字符串)tree.xpath(&quot;xpath表达式&quot;) 注意下xpath解析出来的数据是以列表形式存储的，接下来示范一下requests结合Xpath写一个爬虫程序，目的是抓取彼岸图网的4k动漫封面图。 进入页面以后同样F12审查元素，点击不同页抓取返回的数据包，发现翻到第x页能抓到index_x.html，但是第一页没有下划线和其他页稍有不同，为了方便起见就从第二页开始抓。 仔细观察可以发现，所有封面图都在属性值为slist的div标签下的ul标签下的li标签中（这么说着好绕&#x3D; &#x3D;），前面http原理的博客说过，这样的标签可以看出是是无序列表，我们要找的封面图片地址可以通过img标签的src属性获得，图片名称可以通过alt属性获得，因此可以写如下的爬虫代码： 1234567891011121314151617181920212223242526272829303132import requestsfrom lxml import etreeimport os# 举个例子，这里抓取的是第二页数据for i in range(2,3): url = &#x27;http://pic.netbian.com/4kdongman/index_&#x27;+str(i)+&#x27;.html&#x27; headers = &#123; &#x27;User-Agent&#x27;:&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.3&#x27; &#125; response = requests.get(url = url, headers = headers) # 获取网页内容字符串 page_text = response.text # 实例化etree对象，获取所有图片li标签信息（列表格式） tree = etree.HTML(page_text) li_list = tree.xpath(&#x27;//div[@class=&quot;slist&quot;]/ul/li&#x27;) # 创建文件夹 if not os.path.exists(&#x27;./pic&#x27;): os.mkdir(&#x27;./pic&#x27;) # 解析li标签下孙子标签img的src属性和alt属性 for li in li_list: img_src = &#x27;http://pic.netbian.com&#x27; + li.xpath(&#x27;./a/img/@src&#x27;)[0] img_name = li.xpath(&#x27;./a/img/@alt&#x27;)[0] + &#x27;.jpg&#x27; # 这里需要处理中文乱码问题，重新编码和解码，gbk是中文最常用的 img_name = img_name.encode(&#x27;iso-8859-1&#x27;).decode(&#x27;gbk&#x27;) img_data = requests.get(url = img_src, headers = headers).content img_path = &#x27;pic/&#x27; + img_name with open(img_path,&#x27;wb&#x27;) as fp: fp.write(img_data) print(img_name,&#x27;下载成功！！！&#x27;) 当然，上面爬虫抓取的只是封面图片，并不是高清图片，因为高清图片是需要登录账号花钱下载的….我们只能合法地从我们能在浏览器中看到的图片爬取信息。而且如果你在短时间内发起大量请求的话，ip是很有可能被封的，以后再讲一些预防反爬的措施。 3. seleniumselenium是一个自动化测试工具，本质是通过驱动浏览器，完全模拟浏览器中的操作，比如拖动、点击下拉等等。为什么要模仿浏览器中的操作呢？因为很多网站是动态加载的，requests这一类的模块无法直接执行JavaScript代码，这个时候就可以通过测试工具selenium模仿人在浏览器中的操作，从而获得网页渲染之后的结果。 selenium官方网站：Selenium （很暖心地有中文文档）以最新的selenium指南为基础，简单介绍一下其用法。 强调两点： selenium在4.3版本做了代码重构，很多方法被改写，最重要的是find_element方法的改写，具体点击这里查看官方消息。本篇博客所有写法将按照最新的语法规则 一定要注意自己的浏览器与驱动版本是否匹配，本篇博客以chrome浏览器为例，chrome浏览器驱动程序官方下载地址请点击http://chromedriver.storage.googleapis.com/index.html 简单地以淘宝首页作为例子： 12345678910111213141516171819202122232425262728from selenium import webdriverfrom selenium.webdriver.common.by import Byfrom selenium.webdriver.chrome.service import Servicefrom time import sleep# 启动前先将驱动程序放在当前页面bro = Service(executable_path = &#x27;./chromedriver.exe&#x27;)# 启动谷歌浏览器driver = webdriver.Chrome(service = bro)# 进入淘宝网页页面driver.get(&#x27;https://www.taobao.com/&#x27;)# 标签定位，输入栏id属性值为&#x27;q&#x27;，id属性是整个html中唯一的，不会重复search_input = driver.find_element(By.ID, &#x27;q&#x27;)# 节点交互，向输入栏中输入数据&#x27;Iphone&#x27;search_input.send_keys(&#x27;Iphone&#x27;)# 标签定位，找到搜索按钮（可以用css选择器、id值或者Xpath等定位，这里用css选择器）btn = driver.find_element(By.CSS_SELECTOR, &#x27;.btn-search&#x27;)# 节点交互，点击搜索按钮btn.click()driver.get(&#x27;https://www.baidu.com&#x27;)sleep(2)# 回退driver.back()sleep(2)# 前进driver.forward()sleep(2)# 退出浏览器driver.quit() 简单来说，流程可以分为 创建驱动实例开启会话 driver = webdriver.Chrome() 在浏览器中执行操作 driver.get(&quot;https://www.baidu.com&quot;) 请求浏览器信息 title = driver.title 建立等待策略（隐式或显示） driver.implicitly_wait(0.5)或者用sleep（1） 定位标签 text_box = driver.find_element(by=By.NAME, value=&quot;my-text&quot;) 节点交互 text_box.send_keys(&quot;Selenium&quot;) 获取信息 value = message.text 结束会话，关闭浏览器 driver.quit() 浏览器创建selenium支持的浏览器有Chrome、Firefox、Edge、Internet Explorer和Safari。参考支持的浏览器列表 | Selenium 元素定位webdriver提供了8种内置的定位方法： 12345678910from selenium.webdriver.common.by import Byfind_element(By.ID, &#x27;value&#x27;) find_element(By.NAME, &#x27;value&#x27;)find_element(By.CLASS_NAME, &#x27;value&#x27;)find_element(By.TAG_NAME, &#x27;value&#x27;)find_element(By.LINK_TEXT, &#x27;value&#x27;)find_element(By.PARTIAL_LINK_TEXT, &#x27;value&#x27;)find_element(By,XPATH, &#x27;value&#x27;)find_element(By.CSS_SELECTOR, &#x27;value&#x27;) 节点交互常见的节点交互有以下内容： 123456789101112driver.get(&quot;https://www.baidu.com&quot;) # 打开网站driver.back() # 浏览器后退driver.forward() # 浏览器前进driver.refresh() # 浏览器刷新driver.add_cookie(&#123;&quot;name&quot;: &quot;key&quot;, &quot;value&quot;: &quot;value&quot;&#125;) # 当前浏览器添加cookiedriver.find_element(By.LINK_TEXT, &quot;new window&quot;).click() # 新窗口中打开链接driver.find_element(By.ID, &#x27;value&#x27;).send_keys(&#x27;value&#x27;) # 定位并发送内容driver.switch_to.new_window(&#x27;tab&#x27;) # 打开新标签页并切换到新标签页driver.switch_to.new_window(&#x27;window&#x27;) # 打开新窗口并切换到新窗口driver.switch_to.window(original_window) # 切回之前的标签页或窗口driver.close() # 关闭标签页或窗口driver.quit() # 关闭浏览器 动作链上面说的交互是对页面中存在的标签或者说是元素进行交互，而对于没有特定对象的，比对鼠标的双击、拖拽，鼠标滚轮的操作，键盘的输入等，这些操作就需要动作链来执行。该部分内容官网有详细介绍，这里就举个例子了解一下怎么用的就行。 12345678910111213141516171819202122232425import timefrom selenium.webdriver.common.by import Byfrom selenium import webdriverfrom time import sleepfrom selenium.webdriver import ActionChainsbro = webdriver.Chrome(executable_path = &#x27;./chromedriver&#x27;)bro.get(&#x27;https://www.runoob.com/try/try.php?filename=jqueryui-api-droppable&#x27;)# 如果定位的标签是存在于iframe标签之中的则必须通过如下操作在进行标签定位bro.switch_to.frame(&#x27;iframeResult&#x27;) # 切换浏览器标签定位的作用域div = bro.find_element(By.ID, &#x27;draggable&#x27;)# 动作链action = ActionChains(bro)# 点击长按指定的标签action.click_and_hold(div)for i in range(10): action.move_by_offset(5,0) # move_by_offset(x,y):x水平方向 y竖直方向 action.perform() # 执行动作链操作time.sleep(3)#释放动作链action.release()bro.quit() 微信公众号爬虫范例123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596import randomimport refrom pandas import DataFrameimport osimport requestsimport timefrom selenium import webdriverfrom selenium.webdriver.support import expected_conditions as ECfrom selenium.webdriver.support.wait import WebDriverWaitfrom selenium.webdriver.common.by import Byfrom time import sleepfrom selenium.webdriver import ChromeOptionsfrom lxml import etree# moder可以为author或者article，前者为按公众号搜索，后者为按文章关键字搜索modern=&#x27;author&#x27;# 搜索的关键字，如果modern = author，输入公众号名字，否则输入文章关键字keyword = &#x27;冷兔&#x27;# 爬取多少页，建议先手动搜索最大页码数，page大于最大页码将会报错page = 2headers = &#123; &#x27;User-Agent&#x27;:&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36&#x27; &#125;# 实现规避检测option = ChromeOptions()option.add_experimental_option(&#x27;excludeSwitches&#x27;, [&#x27;enable-automation&#x27;])bro = webdriver.Chrome(executable_path = &#x27;./chromedriver&#x27;, options=option)bro.get(&quot;https://www.sogou.com/index.php&quot;)wait = WebDriverWait(bro, 2)search_input = bro.find_element(By.ID, &#x27;query&#x27;)search_input.send_keys(keyword)# 点击搜索按钮btn = bro.find_element(By.ID, &#x27;stb&#x27;)btn.click()# 点击微信登陆time.sleep(2)btn = bro.find_element(By.XPATH, &#x27;//*[@id=&quot;loginBtn&quot;]&#x27;)btn.click()# 用微信扫码，只有十秒time.sleep(2)btn = bro.find_element(By.XPATH, &#x27;/html/body/div[3]/div[3]/div[2]/div[4]/div/a[2]&#x27;)btn.click()time.sleep(10)button = bro.find_element(By.ID, &#x27;sogou_weixin&#x27;)button.click()article_button = bro.find_element(By.XPATH, &#x27;//*[@id=&quot;scroll-header&quot;]/form/div/input[1]&#x27;)article_button.click()# 最后需要爬取的文章url都在这里url_list=[]for i in range(page): page_text = bro.page_source # 解析 tree = etree.HTML(page_text) author=tree.xpath(&#x27;/html/body/div[2]/div[1]/div[3]/ul/li/div[2]/div/a/text()&#x27;) print(author) url_page_list=tree.xpath(&#x27;/html/body/div[2]/div[1]/div[3]/ul/li/div[2]/h3/a/@href&#x27;) # 下面这个循环判断按author爬取还是按照aiticle爬取 for j in range(len(author)): if author[j]==keyword: url_list.append(url_page_list[j]) elif modern==&#x27;article&#x27;: url_list.append(url_page_list[j]) else: continue if i != page - 1: next_button = bro.find_element(By.ID, &#x27;sogou_next&#x27;) next_button.click() time.sleep(2)# 拼接地址url_list=[&#x27;https://weixin.sogou.com/&#x27;+i for i in url_list]title_list=[]content_list=[]time_list=[]author_list=[]for url in url_list: response = bro.get(url=url) time.sleep(random.randint(1, 3)) # 爬一个，休息1-3秒，怕被抓 page_text = bro.page_source tree_content = etree.HTML(page_text) # 获取爬到的动态页面源码 title = tree_content.xpath(&#x27;/html/body/div[1]/div[2]/div[1]/div/div[1]/h1/text()&#x27;) title = re.sub(r&#x27;\\s&#x27;, &#x27;&#x27;, &#x27;&#x27;.join(title)) # 获取到的文章题目 content = tree_content.xpath(&#x27;/html/body/div[1]/div[2]/div[1]/div/div[1]/div[3]//text()&#x27;) content = re.sub(r&#x27;\\s*&#x27;, &#x27;&#x27;, &#x27;&#x27;.join(content)) # 获取到的文章内容 time1=tree_content.xpath(&#x27;//*[@id=&quot;publish_time&quot;]/text()&#x27;)[0] author=tree_content.xpath(&#x27;//*[@id=&quot;js_name&quot;]/text()&#x27;)[0] author=re.sub(r&#x27;\\s&#x27;, &#x27;&#x27;, &#x27;&#x27;.join(author)) title_list.append(title) content_list.append(content) time_list.append(time1) author_list.append(author)# 写入xlsx文件中data = &#123;&#x27;title&#x27;: title_list, &#x27;time&#x27;:time_list,&#x27;author&#x27;:author_list,&#x27;content&#x27;: content_list&#125;df = DataFrame(data)df.to_excel(&#x27;./微信公众号_&#x27;+keyword+&#x27;.xlsx&#x27;) 这里规避检测识别是设置Chromedriver的启动参数，在启动Chromedriver之前，为Chrome开启实验性功能参数excludeSwitches，它的值为[‘enable-automation’]。这个参数有什么作用呢？ 我们正常运行selenium时，最上方是有提示”Chrome正受到自动测试软件的控制“的，这个参数设置就是禁用浏览器的提示。如果我们用selenium模拟chrome浏览器访问网站，网站可以通过检查window.navigator.webdriver返回值判断我们是用正常的浏览器访问还是用selenium模拟浏览器发起的访问。 如果返回值为undefined，说明是正常浏览器；如果返回true说明用selenium模拟的浏览器。 为Chrome开启实验性功能参数excludeSwitches后，和正常浏览器一样返回的是undefined。 当然，反爬手段不仅仅是这一个，这个以后的有空再细说。上面的爬虫代码参考了刘丹老师，不是最终版本，还可以对输出内容和样式继续做优化。简单看一下实现的结果：","categories":[{"name":"网络相关","slug":"网络相关","permalink":"http://www.shelven.com/categories/%E7%BD%91%E7%BB%9C%E7%9B%B8%E5%85%B3/"}],"tags":[{"name":"爬虫","slug":"爬虫","permalink":"http://www.shelven.com/tags/%E7%88%AC%E8%99%AB/"},{"name":"requests","slug":"requests","permalink":"http://www.shelven.com/tags/requests/"},{"name":"Xpath","slug":"Xpath","permalink":"http://www.shelven.com/tags/Xpath/"},{"name":"selenium","slug":"selenium","permalink":"http://www.shelven.com/tags/selenium/"}]},{"title":"HTTP基本原理","slug":"HTTP基本原理","date":"2022-12-10T15:10:45.000Z","updated":"2022-12-10T16:00:15.000Z","comments":true,"path":"2022/12/10/a.html","link":"","permalink":"http://www.shelven.com/2022/12/10/a.html","excerpt":"以前写过一篇博客如何爬取微博热搜的前50条，当时是从代码出发理解爬虫实现的过程。这篇博客主要讲一下HTTP的基本知识，知道从浏览器中输入网址到我们获取网页内容的过程中发生了什么，有助于进一步了解爬虫的基本原理。","text":"以前写过一篇博客如何爬取微博热搜的前50条，当时是从代码出发理解爬虫实现的过程。这篇博客主要讲一下HTTP的基本知识，知道从浏览器中输入网址到我们获取网页内容的过程中发生了什么，有助于进一步了解爬虫的基本原理。 1. URI、URL和URN先放上这三个名词的定义： URI：Uniform Resource Identifier 统一资源标志符 URL：Uniform Resource Locator 统一资源定位符 URN：Uniform Resource Name 统一资源名称 URI是一个抽象定义，只要能定位到一个资源，都叫做URI。 URL和URN都是URI的子集，简单来说，URL用地址定位资源，URN用名称定位资源。只是后来URN在互联网中使用非常少，导致现在几乎所有的URI都是URL，因此我们可以将一般网页链接称之为URI或者URL（后者用的最多）。 那么URL或者URI具体指什么呢？ 举个例子，本站图标地址https://www.shelven.com/tuchuang/bitbug_favicon.ico，通过这个地址可以访问到一只32*32像素大小的可爱小猫，通过这个地址URL&#x2F;URI指定了它的访问方式，包括了访问协议https，访问路径和资源名称bitbug_favicon.ico。这个访问资源可以是一个图片，一个CSS文档，一个HTML页面等等。 以HTTPS协议访问web服务器为例，拆解一下完整的URL结构： https://user:password@www.shelven.com:443/tuchuang/bitbug_favicon.ico 协议：URL开头部分必须是协议类型，常见的https、http、ftp和mailto，指明浏览器应当使用的访问方法，用&#x2F;&#x2F;做分隔符 用户名&#x2F;密码：user:password这部分可以省略 域名：我这里域名是www.shelven.com，我们在发送请求前会向DNS服务器解析这个域名的ip地址，域名只是方便我们人类记忆的，计算机访问的最终都是ip地址。当然，如果你能记得住ip地址也可以直接输入。 端口：用来区分不同网络服务（web服务、ftp服务等），和域名之间用冒号:分隔，端口不是URL必须的部分，http默认端口80，https默认端口443，ftp默认端口21。 文件路径&#x2F;文件名：从域名第一个/到最后一个/之间是虚拟目录；从域名最后一个/到?部分是文件名，没有?则是到#为止，都没有则是从最后一个/一直到结束都是文件名部分。文件名是可以缺省的。 2. 超文本超文本（Hyper Text, HT）是用超链接的方法，将不同空间文字信息组织在一起的网状文本。 举个例子，浏览器中看到的网页就是超文本解析而来的，网页本身就是一个文本文件，而超文本指这种文件既可以包含文本信息，又可以包含图片、视频、链接等非文字信息。 网页的源代码是一系列HTML（Hyper Text Markup Language, 超文本标记语言）代码，里面包含了一系列标签（尖括号&lt;&gt;包围的关键词，一般成对出现）和属性值。在浏览器中打开任意一个页面，按F12就可以打开浏览器的开发者工具，选择元素（Elements）选项卡就可以看到当前网页的源代码，而这些源代码都是超文本。 红框框住的左上角箭头，点击以后可以在页面中用鼠标悬停选中元素，右边对应的源代码部分会高亮，方便我们进行元素审查。 这里顺便记录下HTML常用的标签和属性： 标签名 用法 基本结构标签 HTML标签（根标签） &lt;html&gt;&lt;&#x2F;html&gt; 文档头标签 &lt;head&gt;&lt;&#x2F;head&gt; 文档标题标签（网页标题） &lt;title&gt;&lt;&#x2F;title&gt; 文档主体标签（页面内容） &lt;body&gt;&lt;&#x2F;body&gt; 列表标签 （这里因为渲染问题&amp;emsp无法显示空格…知道HTML有缩进的意思就行） 无序列表 &lt;ul type&#x3D;”disc&#x2F;circle&#x2F;square”&gt;&amp;emsp;&lt;li&gt;条目内容&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt; 有序列表 &lt;ol type&#x3D;”1&#x2F;a&#x2F;A&#x2F;i&#x2F;I”&gt;&amp;emsp;&lt;li&gt;条目内容&lt;&#x2F;li&gt;&lt;&#x2F;ol&gt; 定义列表 &lt;dl&gt;&amp;emsp;&lt;dt&gt;列表标题标签&lt;&#x2F;dt&gt;&amp;emsp;&lt;dd&gt;具体列表项&lt;&#x2F;dd&gt;&lt;&#x2F;dl&gt; 表格标签 表格标签（tr为行） &lt;table&gt;&amp;emsp;&lt;tr&gt;&amp;emsp;&amp;emsp;&lt;td&gt;单元格内容&lt;&#x2F;td&gt;&amp;emsp;&lt;&#x2F;tr&gt;&lt;&#x2F;table&gt; 常用标签 标题标签（h1-h6） &lt;h1&gt;一级标题&lt;&#x2F;h1&gt; 段落标签 &lt;p&gt;这里是内容&lt;&#x2F;p&gt; 字体标签 &lt;font size&#x3D;”10” color&#x3D;”black” face&#x3D;”微软雅黑”&gt;你好&lt;&#x2F;font&gt; 换行标签 &lt;br&#x2F;&gt; 水平线标签 &lt;hr size&#x3D;”10” color&#x3D;”red” width&#x3D;”50%” align&#x3D;”left”&#x2F;&gt; 盒子标签div &lt;div&gt;div标签内容独占一行&lt;&#x2F;div&gt; 盒子标签span &lt;span&gt;span标签内容一行可以多个&lt;&#x2F;span&gt; 图片标签 &lt;img src&#x3D;”地址” width&#x3D;’”宽度” height&#x3D;”高度”&gt;&lt;&#x2F;img&gt; 超链接标签 &lt;a href&#x3D;”跳转网址” target&#x3D;”窗口弹出方式”&gt;&lt;&#x2F;a&gt; 注释标签 &lt;!– 注释内容 –&gt; 还有表单标签&lt;form&gt;&lt;&#x2F;form&gt;等等，太多了这里就不一一详细说了，如果以后有必要再出一个详细的HTML笔记，现在只要看到这些标签心里有个数就行，真正要做前端再去详细探究。 3. 协议前面说URL的开头必须指明协议类型，常用的是ftp（文件传输协议）、http（超文本传输协议）、https（http的安全版）、mailto（电子邮件协议）和smb（通信协议）。不需要对所有协议了如指掌，前三中协议是我们日常用的最多的，http和https是我们访问网站web服务所必须的，爬虫也可以通过这两种协议伪装成浏览器访问，从而抓取我们需要的页面。 HTTP（Hyper Text Transfer Protocol, 超文本传输协议）就是一个简单的请求-响应协议，运行在TCP之上，指定客户端发送什么样的消息以及得到什么响应，服务器端实现程序有httpd（本站就是用的这个）和nginx。 HTTPs（Hyper Text Transfer Protocol over Secure Socket Layer）以安全为目标的HTTP通道，说白了就是安全版HTTP，在HTTP下加入SSL层，传输内容经过SSL加密。 本站建站之初，我当时绕了一大圈才签下来SSL证书……HTTPS的安全基础是SSL，主要作用是建立一个信息安全通道，保证数据传输的安全；确认网站的真实性，使用https的网站可以通过浏览器地址栏的锁头标志，查看网站认证的真实信息。 有些网站使用了HTTPs协议但还是会被浏览器提示不安全，那有可能是证书过期了，或者颁发CA证书的机构不是被信任的，这样就会提示”您的连接不是私密连接“。而要用爬虫爬取这种页面的话，需要设置忽略证书，否则会提示SSL证书连接错误。 4. HTTP请求过程我们在浏览器中输入一个 URL，回车之后便会在浏览器中观察到页面内容。这个过程是浏览器向网站所在的服务器发送了一个请求，网站服务器接收到这个请求后进行处理和解析，然后返回对应的响应，接着传回给浏览器。响应里包含了页面的源代码等内容，浏览器再对其进行解析，将网页呈现出来。 以本站作为演示，打开浏览器，按下F12进入开发者工具，点击网络（Network）选项；搜索框输入https://www.shelven.com，回车。观察整个过程中发生了怎样的网络请求。 看下第一个网络请求www.shelven.com，各列的含义如下： 名称name：请求的名称，返回的每一条都是对应的数据包 状态status：响应的状态码，通过状态码判断发送请求之后是否得到正常的响应 类型type：请求的文档类型，这里是返回document，内容就是一些html代码 发起程序initiator：请求源，标记是哪个对象或者进程发起的请求 大小size：从服务器下载的文件和请求资源的大小 时间time：发起请求到获取响应的总时间 时间线waterfall：网络请求的可视化瀑布流 点击具体条目可以看到更详细的信息。 主要看三个部分，常规（general）、响应头（Response Headers）和请求头（Request Headers）。常规部分是总的数据包概括。请求头带有请求信息，例如Cookies、user-agent等信息，服务器会根据请求头内的信息判断请求是否合法，进而作出对应的响应。响应头就是响应的一部分，包含了服务器的类型、文档类型、日期等信息，浏览器接受到响应后，会解析响应内容，进而呈现网页内容。 5. 请求请求指的是从客户端到服务器端的请求消息，发给服务器的请求称为请求报文，可以分为请求行（request line），请求头（request header）和请求体（request body）。 5.1 请求行请求行中包括了请求方法，请求协议和版本。 以百度首页为例： 小框框起来的地方为请求行，可以看到百度首页的请求方法为get，请求协议为HTTP版本1.1 常见的请求方法有两种：GET和POST GET 请求中的参数包含在URL里面，数据可以在URL中看到，而POST请求的URL不会包含这些数据，数据是通过表单形式传输的，会包含在请求体中。 GET 请求提交的数据最多只有1024字节，而POST方式没有限制。 因为GET请求方式不涉及和数据库的交换，所以我们浏览网页用的都是GET请求；如果要在一个网站登录，就需要提交用户名和密码的表单，这个时候用的就是POST请求。还有一个重要的因素，GET方式请求的数据是在URL中完全暴露的，所以也不会用GET方式发送请求，不然容易造成密码泄露。 其他请求方法在前面一篇爬虫博客有提到，这里列个表格： 方法 描述 GET 请求页面，并返回页面内容 POST 大多用于提交表单或上传文件，数据包含在请求体中 HEAD 类似于 GET 请求，只不过返回的响应中没有具体的内容，用于获取报头 PUT 从客户端向服务器传送的数据取代指定文档中的内容 DELETE 请求服务器删除指定的页面 CONNECT 把服务器当作跳板，让服务器代替客户端访问其他网页 OPTIONS 允许客户端查看服务器的性能 TRACE 回显服务器收到的请求，主要用于测试或诊断 表格参考：HTTP 请求方法 | 菜鸟教程 (runoob.com) 5.2 请求头请求头是用来说明服务器使用的附加信息的，上面那个百度首页例子的大框框住部分就是请求头的信息。 同样列个表格记录下常用的头信息。 头信息 描述 Accept 请求报头域，用于指定客户端可接受哪些类型的信息 Accept-Language 指定客户端可接受的语言类型 Accept-Encoding 指定客户端可接受的内容编码 Host 指定请求资源的主机IP和端口号 Cookie 而存储在用户本地的数据，主要功能是维持当前访问会话 Referer 标识请求是从哪个页面发过来的，服务器可以拿来做来源统计、防盗链处理 User-Agent 服务器识别客户使用的操作系统及版本、浏览器及版本等信息，爬虫伪装浏览器必备 Content-Type 请求的数据类型信息HTTP Content-type 对照表 (oschina.net) 5.3 请求体请求体承载POST请求中的表单数据，GET请求的请求体为空。 这里以登录github捕获的请求体为例： 登录的时候填写的用户名和密码信息，提交的时候就会以表单形式提交给服务器，这个时候可以看到请求头中的Cotent-Type为application&#x2F;x-www-form-urlencoded，表示以表单数据的形式提交给服务器。可以设置不同的Cotent-Type，以不同的方式提交数据，如果在做爬虫的时候要构造POST请求，需要注意一下使用正确的Cotent-Type（类型&#x2F;子类型），不然可能会提交后无法正常响应。 Cotent-Type 数据提交的方式 application&#x2F;x-www-form-urlencoded 表单数据 multipart&#x2F;form-data 表单文件上传 application&#x2F;json 序列化JSON数据 text&#x2F;xml XML数据 application&#x2F;pdf pdf格式 application&#x2F;octet-stream 二进制流数据（如常见的文件下载） 6. 响应和请求类似的，服务器进行HTTP响应也是分为三个部分：响应状态行，响应头和响应体 6.1 响应状态行回到之前百度首页的例子，我们点开百度首页审查元素，这次点开响应那一栏查看源。 小框框起来的地方是响应状态行，我们可以看到响应的协议版本是HTTP&#x2F;1.1，响应状态码是200，说明返回正常。 响应状态码其实并不陌生，顾名思义表示服务器的响应状态。200说明服务器正常响应返回正常数据，经常能看到404报错，代表的是页面未找到，403表示服务器拒绝执行请求，503代表服务器不可用，301代表网页被永久转移到其他URL。 因为状态码非常多，这里就记录一下状态码的分类，详细状态码列表可以参考HTTP 状态码 | 菜鸟教程 (runoob.com) 分类 分类描述 100-199 信息响应，服务器收到请求，需要请求者继续执行操作 200-299 成功响应，操作被成功接收并处理 300-399 重定向，需要进一步的操作以完成请求 400-499 客户端错误，请求包含语法错误或无法完成请求 500-599 服务器错误，服务器在处理请求的过程中发生了错误 6.2 响应头上面例子中红色大框框住的部分就是响应头，包含服务器对请求的应答信息。 响应头主要有如下的信息： 头信息 描述 Date 标识响应产生的时间 Last-Modified 指定资源的最后修改时间 Content-Encoding 指定响应内容的编码 Server 服务器的信息，比如名称、版本号 Content-Type 返回的数据类型信息 Set-Cookie 设置 Cookies，下次请求会携带这个cookies Expires 指定响应的过期时间 6.3 响应体响应体就是响应的内容，请求网页的时候响应体就是对应的HTML源代码，请求一张图片，响应体就是返回的二进制数据。爬虫就是通过请求到网页后，解析响应体中的内容（有的时候是HTML代码，有的时候是JSON数据等等，这两者比较常见），然后从中提取我们要的信息。 在edge浏览器中，进入开发者工具，点击network选项，选中需要解析的项目名称，点击响应就可以看到返回的响应体数据了。 以上暂时总结这么多HTTP的基础，参考了相当多的内容，后面做爬虫练习自然会用到。","categories":[{"name":"网络相关","slug":"网络相关","permalink":"http://www.shelven.com/categories/%E7%BD%91%E7%BB%9C%E7%9B%B8%E5%85%B3/"}],"tags":[{"name":"爬虫","slug":"爬虫","permalink":"http://www.shelven.com/tags/%E7%88%AC%E8%99%AB/"},{"name":"HTTP","slug":"HTTP","permalink":"http://www.shelven.com/tags/HTTP/"}]},{"title":"python自学笔记（7）——模块、包和库","slug":"python自学笔记（7）——模块、包和库","date":"2022-11-29T14:30:03.000Z","updated":"2022-12-03T15:51:32.000Z","comments":true,"path":"2022/11/29/b.html","link":"","permalink":"http://www.shelven.com/2022/11/29/b.html","excerpt":"前面介绍递归函数的时候用到了sys模块，介绍文件操作函数的时候用到了os模块，之前只是简单说了这两个模块下部分函数的用法，这里详细介绍一下对于模块、包和库的概念，以及一些常见的模块用法。","text":"前面介绍递归函数的时候用到了sys模块，介绍文件操作函数的时候用到了os模块，之前只是简单说了这两个模块下部分函数的用法，这里详细介绍一下对于模块、包和库的概念，以及一些常见的模块用法。 不需要记住每个模块下所有函数用法，但是平常看到python文件导入模块操作的时候，要大概知道这几个模块有什么作用。 1. 概念1.1 模块（module）函数可以理解为完成特定功能的一段程序，类是包含一组数据及操作这些数据或传递消息的函数的集合，而模块（module）是在函数和类的基础上，将一系列相关代码组织到一起的集合体。 在python中，扩展名为.py的源程序文件就是一个模块，这个和C语言的头文件以及JAVA的包是类似的。 python官方网站上可以查看当前标准库中的所有模块，点击这里。 1.2 包（package）为了方便调用将一些功能相近的模块组织在一起，或是将一个较为复杂的模块拆分为多个组成部分，可以将 .py 源程序文件放在同一个文件夹下，按照 Python 的规则进行管理，这样的文件夹和其中的文件就称为包（package）。 包的目录下需要创建__init__.py 模块，可以是一个空文件，可以写一些初始化代码，其作用就是告诉 Python 要将该目录当成包来处理，让python认为你这是一个包而不是单纯的一个目录（否则会显示找不到包）。有的博客说python3.3版本之后不需要空的__init__.py 模块来声明这是一个包了，但是我在vscode和jupyter运行python3.10的时候发现还是需要__init__.py 模块声明的，这里先存疑，我保留自己的观点。 2022.12.3更新：准确来说，从包里导入模块需要__init__.py 声明；直接导入同目录下的模块不需要（3.3版本以后） 简单来说，包就是有层次地文件目录结构，里面装着各种扩展名.py的python源程序文件，包中也可以含有包。 1.3 库库顾名思义则是功能相关联的包的集合。python的三大特色之一：强大的标准库，第三方库以及自定义模块。 2. 常用模块&#x2F;库python的三大特色对应三种类型的模块，标准库的内置模块，第三方库开源模块和自定义的模块，这里简单记录一下常用的模块&#x2F;库。 模块名称 介绍 内置模块 os 普遍的操作系统功能接口，包括前面介绍的文件操作函数 sys 提供了一系列有关Python运行环境的变量和函数，sys.path.append() random 生成随机数，random() 返回0&lt;n&lt;&#x3D;1 time 各种提供日期、时间功能的类和函数，time.time() 时间戳 datetime 对time模块的一个高级封装 logging 日志打印到了标准输出中 re 可以直接调用来实现正则匹配，re.split() 分割字符串，格式化列表 pymysql 连接数据库,并实现简单的增删改查 threading 提供了更强大的多线程管理方案 json 用于字符串和数据类型间进行转换json subprocess 像linux一样创建运行子进程 shutil 对压缩包的处理、对文件和文件夹的高级处理，os的补充 tkinter Python的标准Tk GUI工具包的接口 第三方模块&#x2F;库 Requsests python最有名的第三方HTTP客户端库 Scrapy 屏幕抓取和web抓取框架，编写爬虫用到（上面的也可以） Pillow 常用的图像处理库 Matplotlib 绘制二维数据图的库，使用方式对标matlab NumPy 提供大型矩阵计算公式，在很多领域都用到 Pandas 基于Numpy 和 Matplotlib，和上面两个组成数据分析三剑客 Django 开源的web开发框架 PyTorch 开源的深度学习框架，各种张量操作、梯度计算，方便构建各种动态神经网络 TensorFlow 也是机器学习库，张量的操作和运算，tensorboard可视化数据很强大 第三方库实在太多，这里只列举了我知道的比较常见的库；内置模块可以见1.1章节的官网链接，里面有所有内置模块的具体用法。接下来说说怎么导入模块和制作模块。 3. 导入包和模块3.1 导入模块制作模块要注意，自定义的模块名不能和系统内置的模块重名，否则被重名的系统模块无法被导入。 python中用关键字import引入某个模块，在调用模块中的函数时，需要以 模块名.函数名 的方式进行引用。自定义模块名中的函数是可以重名的，因为模块名不会相同（同一层目录下文件名不同），调用的时候可以进行区分，这很好理解。 3.2 导入包有的时候我们只需要包里的某个模块或者模块里的某个函数，而不需要包或者模块里的全部内容，这个时候我们可以用关键词 from 包名&#x2F;模块名 import 模块名&#x2F;函数名 来进行调用。 举个例子，在如下的文件结构中，main.py作为主程序入口，test文件夹相当于一个包，里面有4个.py后缀的模块，分别定义了四则运算的函数，__init__.py 是个空文件（暂时不做处理），声明test文件夹是个python包而不是普通的目录。 123456789101112131415# add.py文件内容——定义加法运算def add(a, b): return a + b# sub.py文件内容——定义减法运算def sub(a, b): return a - b# mul.py文件内容——定义乘法运算def mul(a, b): return a * b# dev.py文件内容——定义除法运算def dev(a, b): return a / b 我现在要做的是，在main.py文件里，导入test包里四个模块，调用各自模块中对应的函数，有以下几种调用方式： 123456789101112131415161718192021222324252627282930# main.py的文件内容import test.add # 导入test包下的add模块import test.sub as sb # 导入test包下的sub模块，并重命名为sbfrom test import mul # 从test包中导入mul模块from test.dev import dev # 从test包的dev模块导入dev函数，注意这里导入的是函数def calculate(x, y, operate): result = 0 if operate == &#x27;+&#x27;: result = test.add.add(x, y) # 调用test.add模块中的add函数 elif operate == &#x27;-&#x27;: result = sb.sub(x, y) # test.sub被重命名为sb，调用sb中的sub函数 elif operate == &#x27;*&#x27;: result = mul.mul(x, y) # 调用mul模块中的mul函数 else: result = dev(x, y) # dev函数已经被导入，可以直接调用函数名 return resultprint(calculate(100, 100, &#x27;+&#x27;))print(calculate(100, 100, &#x27;-&#x27;))print(calculate(100, 100, &#x27;*&#x27;))print(calculate(100, 100, &#x27;/&#x27;))&#x27;&#x27;&#x27;运行结果：2000100001.0&#x27;&#x27;&#x27; 4. 包和模块导入的思考4.1 __init__.py的作用在上面的例子中__init__.py 是个空文件，是声明test文件夹是python包所必须的（主程序和包的位置在同一个目录下）。然而我们在编写main.py的主程序文件的时候，仍然要在开头导入相当多的模块，比较繁琐，这个时候可以在__init__.py中批量导入我们所需要的模块（导入包其实就是导入__init__.py文件）。 12345678910# 在__init__.py中添加如下内容import test.addimport test.subimport test.mulimport test.devadd = test.add.addsub = test.sub.submul = test.mul.muldev = test.dev.dev 123456789101112131415161718192021222324252627# main.py相应的改为如下内容from test import * # 导入包相当于执行包下的__init__.py，这个文件已经将包里的四个模块分别导入了def calculate(x, y, operate): result = 0 if operate == &#x27;+&#x27;: result = add(x, y) elif operate == &#x27;-&#x27;: result = sub(x, y) elif operate == &#x27;*&#x27;: result = mul(x, y) else: result = dev(x, y) return resultprint(calculate(100, 100, &#x27;+&#x27;))print(calculate(100, 100, &#x27;-&#x27;))print(calculate(100, 100, &#x27;*&#x27;))print(calculate(100, 100, &#x27;/&#x27;))&#x27;&#x27;&#x27;运行结果：2000100001.0&#x27;&#x27;&#x27; 可以看到上面的主程序代码量少了很多，起到简化代码的作用。 4.2 if __name__ &#x3D;&#x3D; ‘__main__‘首先来看一个现象，如果在add.py文件中不仅仅有定义函数的代码，还有编写代码时做的测试内容，如下: 12345# add.py文件中最后一行对这个函数做了测试def add(a, b): return a + bprint(add(3, 4)) 其他文件全都不变，再次运行main.py，会发现输出结果为： 123457 # add.py中测试内容也被输出2000100001.0 这显然不是我们想看到的，我们在导入add模块调用add函数的时候，并不想要其他无关的输出结果。 稍稍改变一下add.py内容 123456# add.py文件内容def add(a, b): return a + bif __name__ == &#x27;__main__&#x27;: print(add(3, 4)) 此时再次运行main.py则不会输出add.py中的测试内容。 首先要了解一个概念，在每个python文件创建的时候都有一个记录名称的变量__name__，当这个python文件作为脚本直接运行，那么__name__的值为‘”__main__“；当这个文件作为模块被导入其他文件中运行的时候，这个__name__的值为模块的名字，也就是说 当.py文件被直接运行时，if __name__ &#x3D;&#x3D; ‘__main__‘ 之下的代码块将被运行 当.py文件以模块形式被导入时，if __name__ &#x3D;&#x3D; ‘__main__‘ 之下的代码块不被运行 在导入的模块中有选择性地执行代码，这在实际开发应用中非常普遍。 4.3 导入模块在主程序的父目录下前面的导入模块操作，导入模块要么在主程序的子目录下（加入__init__.py 声明这是一个包），要么和主程序在同一个目录（直接import），如果导入模块在主程序的父目录下，应该怎么导入呢？ 首先，按照一般流程直接import导入和加入__init__.py声明都会报错找不到这个包，这里就不演示了。 其实这个问题在前面的笔记中有记录，点击这里。 当时是刚用vscode搭建python环境，对python调用一知半解都算不上，现在才有了初步的理解。 12345678910# 两种解决办法# 1.在主程序内部临时添加python运行环境路径import syssys.path.append(&#x27;父目录绝对路径或者相对路径&#x27;)import module# 缺点：只能调用一次（临时加入的环境变量路径），且每个想要导入的自定义模块都要写一次，比较麻烦# 2.在python安装目录下Libsite-packages中创建扩展名为.pth的文件，添加想要加入的路径。# python在遍历已知的库文件目录过程中，如果见到一个.pth 文件，就会将文件中所记录的路径加入到sys.path设置中，于是.pth文件指向的地址也就可以被Python运行环境找到了。# 这个已知的库文件目录可以通过sys.path查看。 4.4 相对导入前面3.2的例子中，包和模块的导入都是用的绝对导入（absolute import），导入时写明了工作环境中包的具体位置。 还有一种导入方式称为相对导入（relative import），还是用3.2的例子理解一下，在如下的文件结构中，主程序入口main.py和test包在同一层目录下，test包中有__init__.py（空文件），add.py和dev.py两个模块的内容如下： 123456789101112# add.py内容def add(a, b): return a + b# dev.py内容from .add import add # 相对导入，从当前导入包的目录中找到add模块def dev(a, b): return a / bdef func1(a, b): a = dev(a, b) + add(a, b) return a 上面的例子意思是，我现在要在test包的dev.py模块中用add.py模块的函数方法（同一个包中的模块相互引用，这在实际工程中很常见）。如果dev.py是主程序，我们可以直接import add；但是我们这里main是主程序，代码如下： 1234# main.py内容from test import devprint(dev.func1(1, 2)) 主程序main.py功能是导入test包dev模块，打印dev模块的函数func1(1, 2)执行结果。 如果我们在dev.py中直接导入from add import add（没有点，也就是不加当前目录），这个时候再运行main.py会报错找不到模块（因为main.py同目录下没有add.py模块）。这个时候就有两种导入方式，要么完善包名字，使用绝对导入from test.add import add；要么使用相对导入from .add import add。 这个相对导入就像是linux的文件操作方式，一个点代表当前目录，两个点代表父目录，还能用三个点表示linux无法做到的祖父目录，依此类推。 相对导入的优点就一目了然：就算改变了包的名字，这个时候调用也不会出错，也就是简化代码，方便迁移。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"编程自学","slug":"编程自学","permalink":"http://www.shelven.com/categories/%E7%BC%96%E7%A8%8B%E8%87%AA%E5%AD%A6/"}],"tags":[{"name":"python","slug":"python","permalink":"http://www.shelven.com/tags/python/"}]},{"title":"python自学笔记（6）——函数的变量和高级用法","slug":"python自学笔记（6）——函数的变量和高级用法","date":"2022-11-28T18:37:37.000Z","updated":"2022-12-03T15:54:38.000Z","comments":true,"path":"2022/11/29/a.html","link":"","permalink":"http://www.shelven.com/2022/11/29/a.html","excerpt":"前面在通过讲什么是高阶函数（能够接受函数作为参数传入的函数，或者可以返回函数对象的函数）引出了装饰器的由来和存在的意义。这里对python函数的其他基础概念做个补充和记录。","text":"前面在通过讲什么是高阶函数（能够接受函数作为参数传入的函数，或者可以返回函数对象的函数）引出了装饰器的由来和存在的意义。这里对python函数的其他基础概念做个补充和记录。 1. 函数的变量之前笔记中的例子已经对函数参数传递过程做了总结，提到了怎么调用函数的返回值，怎么实现函数的嵌套，基本概念用法都已经提过，这里只是做个思考和补充。 1.1 局部变量 函数内部的定义的变量 局部变量只在函数内部生效，不同函数可以拥有同名的局部变量，互不影响（作用域为本函数） 局部变量的作用，为了临时保存数据需要在函数中定义变量来进行存储 局部变量在函数执行时被创建，函数执行完成后，局部变量会被系统回收 1234567891011121314151617# 局部变量重名互不影响，只作用在当前函数中def added(a, b): c = a + b return cdef connect(a, b): c = str(a) + str(b) return cprint(added(4, 5))print(connect(&#x27;Phantom&#x27;, &#x27;Aria&#x27;))&#x27;&#x27;&#x27;运行结果：9PhantomAria&#x27;&#x27;&#x27; 1.2 全局变量 函数外部定义的变量 全局变量可以在多个函数中使用（作用域为所有函数） 全局变量如果和局部变量重名，只会使用局部变量（就近原则） 如果在函数中修改不可变类型全局变量，需要使用global声明 这里有一个很有意思的现象，前面在数据类型里说过，数据可以分为可变数据类型（列表，字典，集合）和不可变数据类型（数字，元组，字符串），而python的所有参数传递都是引用传递而非值传递。因此，对于可变类型的全局变量，在函数中可以被修改；而对于不可变全局对象则无法在函数中直接修改，其本质是修改不可变数据系统会创建一个新的对象（分配一个新的内存地址），然而这个对象名已经被占用了（也就是变量名无法被指向，原来的变量名也没有被收回）。下面举个栗子。 1234567891011121314151617181920212223# 不可变类型全局变量在函数内部可以传递使用但是无法直接修改x = 100def added(): x = x + 1 # 不可变数据修改，系统会创建新的对象，而变量名x已经是全局变量的变量名，无法成为新的对象的变量名 return xadded()&#x27;&#x27;&#x27;---------------------------------------------------------------------------UnboundLocalError Traceback (most recent call last)d:\\zhuomian\\python\\test.ipynb Cell 47 in &lt;cell line: 6&gt;() 3 x = x + 1 4 return x----&gt; 6 added(4)d:\\zhuomian\\python\\test.ipynb Cell 47 in added(a) 2 def added(a):----&gt; 3 x = x + 1 4 return xUnboundLocalError: local variable &#x27;x&#x27; referenced before assignment&#x27;&#x27;&#x27; 对于global是如何运作，使得python解释器可以将不可变全局变量进行修改的？这点以我的功底还无法解释……暂时只能知道是这么个用法。 顺带一提，还有个嵌套函数对外围函数的不可变变量进行修改，需要用到类似的nonlocal进行声明。 1234567891011121314151617181920212223242526x = 100def added(): global x # global声明x为全局变量 x = x + 1 print(x)added()added()def A(): y = 200 def B(): nonlocal y # nonlocal声明y为外围函数的变量（不是全局变量！） y = y + 1 return y return Btest = A()print(test())print(test())&#x27;&#x27;&#x27;运行结果：101102201202&#x27;&#x27;&#x27; 上面的例子本质上是一样的，对于嵌套函数来说，要修改外围函数的不可变类型的变量（看起来似乎矛盾，不可变的怎么能叫变量呢？前面已经说过，重新赋值造成数字和字符串看起来是“可变的”假象，这里分清两个变分别指什么意思），相当于是上面例子的在函数内修改不可变类型的全局变量（作用域不同，只能说相当于），只不过二者声明的方式不同。 1.3 修改可变全局变量引起的思考一个很有意思的现象： 123456789101112131415161718a = [1, 2, 3]def add1(ls): ls = ls + lsb = [1, 2, 3]def add2(ls): ls += lsadd1(a)print(a)add2(b)print(b)&#x27;&#x27;&#x27;运行结果：[1, 2, 3][1, 2, 3, 1, 2, 3]&#x27;&#x27;&#x27; a列表和b列表都是可变全局变量，同一个算法，为什么a在传入函数执行之后没有发生改变呢？ 这里需要对可变数据类型做个回顾，可变对象可以对自身内容进行原地修改而不改变存储地址。原地修改画个重点，意思是利用方法比如reverse、sort、append等在原有对象上直接修改。 ‘&#x3D;’ 是赋值语句，将右边的表达式的结果对象，引用绑定到等号左边的变量名上。赋值是创建一个新对象，赋值给目标，返回的也是新对象，引用地址会发生改变。 ‘+&#x3D;’ 是增强赋值语句，对左边的对象进行原地修改，返回值为None，引用地址不变。 看到这里就能明白上面两个看似“同样”的操作为什么会返回不一样的结果，也加深了“可变”与“不可变”的理解。 2. 函数的高级用法前一篇笔记写的装饰器就是函数的高级用法之一，这里做个完善补充。 2.1 匿名函数除了用def关键字命名函数这种基础方法之外，还可以使用lambda表达式创建匿名函数。 lambda语法格式如下： 1lambda param1,...paramN:expression 匿名函数的语法比较简洁，能接受任何数量的参数但只能返回一个表达式的值。因为匿名函数比较简洁小巧，也常用在作为参数进行传递。 12345678910111213141516# 定义匿名函数func1 = lambda x, y : x + yresult = func1(1, 2)print(&quot;匿名函数func1执行结果：&quot;,result)# 匿名函数作为参数传递def func2(x, y, opt): print(&#x27;函数func2执行结果为：&#x27;, opt(x, y))func2(4, 5, lambda x, y : x + y)&#x27;&#x27;&#x27;运行结果：匿名函数func1执行结果： 3函数func2执行结果为： 9&#x27;&#x27;&#x27; 2.2 嵌套调用相比来说函数嵌套调用可能算不上是高级用法，不过这里还是补充一下。嵌套调用指一个函数里调用另一个函数，注意和嵌套函数区分。 一个简单的例子： 1234567891011121314def func1(): # 定义一个函数 print(&#x27;第一个函数输出Phantom&#x27;)def func2(): # 定义第二个函数 func1() # 在第二个函数里调用第一个函数功能 print(&#x27;第二个函数输出Aria&#x27;)func2() # 执行一个函数，实际上两个函数都执行了一遍&#x27;&#x27;&#x27;运行结果：第一个函数输出Phantom第二个函数输出Aria&#x27;&#x27;&#x27; 2.3 递归函数递归函数就是在一个函数内部调用自身的函数，本质上是一个循环，循环结束的点就是递归出口。 用阶乘举个最简单的例子： 1234567891011121314151617181920212223# 使用迭代实现阶乘算法def factorial(n): result = 1 for i in range(2, n +1): result *= i i += 1 return result# 使用递归实现阶乘算法def factorial_1(n): if n == 1: return 1 else: return n * factorial_1(n - 1)print(factorial(10))print(factorial_1(10))&#x27;&#x27;&#x27;运行结果：36288003628800&#x27;&#x27;&#x27; 迭代的方法，从1开始，进入for循环对之前的结果累积乘以 i，直至 n（上例函数被调用了1次）。 递归的方式更为直观，每次通过递减数字的方式递归调用自己（上例函数被调用了10次）。 整体上看递归更简洁明了，但是相比迭代会占用更多内存，运行时间会更长。 递归有最大深度限制，在计算机中，函数名、参数、值类型等，都是存放在栈上的。每进行一次函数调用，就会在栈上加一层，函数返回就减一层，由于栈的大小是有限的，递归次数过多就会导致堆栈溢出。 可以调用sys模块，sys.setrecursionlimit(2000)将栈的大小调整为2000，sys.getrecursionlimit()查看当前设置的最大递归深度。这种调整递归深度的方式不是无限大的，我的jupyter在调用递归函数3000次的时候就会直接退出……模块定义和调用方式后一篇笔记再说。 3. 文件操作函数3.1 open() &amp; close()函数open()可以打开一个文件，或者创建一个新文件，函数close()可以关闭文件。两者语法如下： 12345f = open(&#x27;文件名&#x27;, &#x27;访问模式&#x27;)f.close() # 注意最后一定要有close()with open(&#x27;文件名&#x27;, &#x27;访问模式&#x27;) as f: # 自动调用close() f.方法() 访问模式 说明 r 只读方式打开文件，默认模式，打开文件必须存在。 w 写入方式打开文件，已存在的文件会覆盖内容（相当于linux重定向操作符&gt;）。 a 追加方式打开文件，已存在的文件会将内容写到最后（相当于linux重定向操作符&gt;&gt;）。 x 只写方式打开文件，新建一个文件，若文件存在则报错。 r+ 读写方式打开文件，打开文件必须存在。 w+ 读写方式打开文件，已存在的文件会覆盖内容。 a+ 读写方式打开文件，已存在的文件会将内容写到最后。 一般用 with open() as 的方式打开文件，这种方式会自动帮我们调用f.close() 3.2 write() &amp; read()write()向文件写入数据，以w方式访问，如果文件名存在会先清空文件内容，文件名不存在则新建；以a方式访问，如果文件名存在则续写，文件名不存在则新建；以r方式访问则报错。 read()从文件中读取数据，括号里面的参数代表读取的数据长度（字节数），如果不传入参数则读取所有数据。 readline()读取一行，同时会读取一行最后的换行符\\n，所以打印出来的时候会多一行空行。 readlines()按照行的方式读取整个文件数据，返回的是一个列表，每行数据是一个元素，同样会读到换行符\\n并且显示出来。 需要注意一点，在多次读取的操作中，后一次读取会从上一次读完的位置开始。 123456789101112131415161718192021222324252627with open(&#x27;test.txt&#x27;, &#x27;w&#x27;) as f: # 只写模式创建一个新文件 f.write(&#x27;My name is Phantom. \\nI am Aria.&#x27;)with open(&#x27;test.txt&#x27;, &#x27;a&#x27;) as f: # 追加模式进行续写 f.write(&#x27;\\nWell, it\\&#x27;s been so long.&#x27;)&#x27;&#x27;&#x27;生成的test.txt内容： # 实际前面两行末尾都有换行符My name is Phantom.I am Aria.Well, it&#x27;s been so long.&#x27;&#x27;&#x27; with open(&#x27;test.txt&#x27;, &#x27;r&#x27;) as f: # 只读方式打开文件 line = f.read(1) # read读取第一个字节 print(line) line = f.readline() # readline读取第一个字节后的第一行，因为读取了换行符，所以运行结果多一行空行 print(line) line = f.readlines() # readlines读取接下来的两行，每行数据为一个元素，返回一个列表 print(line) &#x27;&#x27;&#x27;运行结果：My name is Phantom. [&#x27;I am Aria.\\n&#x27;, &quot;Well, it&#x27;s been so long.&quot;]&#x27;&#x27;&#x27; 3.3 os模块的文件操作函数os模块和上面递归函数最后提到的sys模块用的非常多，下篇笔记再详细说明，这里就记一下用法。 这几个函数也非常直观，举个例子就知道分别有什么作用： 1234567import osos.rename(&#x27;test.txt&#x27;, &#x27;TEST.txt&#x27;) # 文件重命名os.remove(&#x27;TEST.txt&#x27;) # 文件删除os.mkdir(&#x27;./test&#x27;) # 创建文件夹，文件夹存在的话会报错,且只能创建一级目录os.rmdir(&#x27;./test&#x27;) # 删除文件夹os.makedirs(&#x27;./TEST/TEST1/TEST2&#x27;) #递归的方式创建多级目录","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"编程自学","slug":"编程自学","permalink":"http://www.shelven.com/categories/%E7%BC%96%E7%A8%8B%E8%87%AA%E5%AD%A6/"}],"tags":[{"name":"python","slug":"python","permalink":"http://www.shelven.com/tags/python/"}]},{"title":"python自学笔记（5）——装饰器","slug":"python自学笔记（5）——装饰器","date":"2022-11-27T19:03:55.000Z","updated":"2022-12-03T15:55:01.000Z","comments":true,"path":"2022/11/28/a.html","link":"","permalink":"http://www.shelven.com/2022/11/28/a.html","excerpt":"这里讲一讲前面提到的python装饰器，@classmethod和@staticmethod是python内置装饰器，在了解什么是装饰器之前首先要了解函数的几个特征。","text":"这里讲一讲前面提到的python装饰器，@classmethod和@staticmethod是python内置装饰器，在了解什么是装饰器之前首先要了解函数的几个特征。 1. 有关函数的几个概念1.1 函数可以接收另一个函数作为参数传入高阶函数可以接收另一个函数作为传入的参数： 12345678910111213def func1(a, b): return a + b# 高阶函数，函数func2接收函数作为参数传入def func2(func, m, n): return func(m, n)func2(func1, 1, 2) &#x27;&#x27;&#x27;运行结果：3&#x27;&#x27;&#x27; 从上面例子可以看到，在执行 func2函数的时候，函数对象func1作为参数被传入func2，返回func1(1, 2)的执行结果也就是3. 1.2 函数可以把另一个函数作为结果返回高阶函数也可以将函数作为结果返回： 123456789101112131415161718# 高阶函数，把函数作为结果返回def func1(): pass def func2(): # 内层函数（嵌套函数） print(&#x27;执行func2函数&#x27;) return func2 # 返回内层函数的引用a = func1() # 返回的函数对象func2的引用赋值给aprint(a) # 打印函数对象，获得存储地址a() # 执行内层函数func2()的功能&#x27;&#x27;&#x27;运行结果：&lt;function func1.&lt;locals&gt;.func2 at 0x00000288D3701750&gt;执行func2函数&#x27;&#x27;&#x27; 上面的例子可以看到，外围函数 func1将内层函数 func2的引用赋值给a，此时a就有了内层函数func2 的方法，此时打印的a是函数的存储地址，执行a() 就可以执行func2 函数的功能。 1.3 嵌套函数可以引用外层函数的变量稍稍修改1.2的例子，在外层函数添加局部变量msg： 123456789101112131415def func1(): # 外围函数 msg = &#x27;I am Phantom&#x27; def func2(): # 内层函数（嵌套函数） print(msg) return func2a = func1() # 实际上这里获得的就是一个闭包a() # 引用外层函数的变量，执行内层函数func2()的功能&#x27;&#x27;&#x27;运行结果：I am Phantom&#x27;&#x27;&#x27; 这里先引用闭包的概念： 闭包：指延伸了作用域的函数，其中包含函数定义体中引用、但是不在定义体中定义的非全局变量。概念比较晦涩，简单来说就是嵌套函数引用了外层函数的变量。 这个例子和上个例子唯一的区别是，msg是一个在外围函数中的局部变量，在print_msg()函数执行之后应该就不会存在了。但是嵌套函数引用了这个变量，将这个局部变量封闭在了嵌套函数中，这样就形成了一个闭包。 有了以上关于高阶函数和闭包的概念后，就可以开始理解什么是装饰器以及装饰器的作用了。 2. 装饰器decorator装饰器的本质就是一个闭包，把一个函数当做参数然后返回一个替代版函数（函数的引用）。 2.1 @标识符将装饰器应用到函数下面将用代码方式简单演示装饰器是怎么应用的。 1234567891011121314151617181920def func1(func3): def func2(): print(f&#x27;被装饰的函数&#123;func3.__name__&#125;即将执行&#x27;) func3() # 被装饰的函数 print(f&#x27;被装饰的函数&#123;func3.__name__&#125;执行结束&#x27;) return func2def funcx(): print(&#x27;函数正在运行&#x27;)a = func1(funcx) # 1a() # 2&#x27;&#x27;&#x27;运行结果：被装饰的函数funcx即将执行函数正在运行被装饰的函数funcx执行结束&#x27;&#x27;&#x27; 上面这个例子就是不用@标识符的装饰器，首先我定义了一个函数func1，它只有一个func3参数，这个函数里面定义了一个嵌套函数func2。func2的作用是调用func3前打印一串字符，然后执行被装饰的函数func3，结束之后再打印一串字符。 我们再定义一个测试函数funcx，功能是打印一段“函数正在运行”的字符串。 在1处，函数func1中传入函数funcx，返回函数func2的引用赋值给变量a，此时并没有执行函数，也不会有打印结果。在2处执行了func2函数，前面传入的函数funcx作为参数在原先的func3处执行，这个时候就会依次输出三行字符串。 将@标识符应用到函数上，只需要在函数定义前加上@和装饰器的名称即可。 1234567891011121314151617181920def func1(func3): def func2(): print(f&#x27;被装饰的函数&#123;func3.__name__&#125;即将执行&#x27;) func3() # 被装饰函数 print(f&#x27;被装饰的函数&#123;func3.__name__&#125;执行结束&#x27;) return func2@func1def funcx(): print(&#x27;函数正在运行&#x27;)funcx()&#x27;&#x27;&#x27;运行结果：被装饰的函数funcx即将执行函数正在运行被装饰的函数funcx执行结束&#x27;&#x27;&#x27; 这里@func1就是装饰器，它接受被装饰的函数作为参数传入，返回内部嵌套函数的引用（注意这个时候并没有执行函数），内部嵌套函数func2持有被装饰函数func3的引用。 可以看到@语法只是将函数传入装饰器函数，并不是什么特别难理解的概念，主要作用就是节省代码量（避免了再一次的赋值操作）。 2.2 带参数的装饰器前面示范的是不带参数的装饰器，带参数的装饰器也是类似的，我们只要知道装饰器最终返回的一定是嵌套函数的引用。在前面的参数传递博文中，我们说过*args和**kargs可以以包裹传递的方式传递不定长参数，这里也是一样的。 12345678910111213141516171819202122232425262728def func1(func3): def func2(*args, **kargs): print(f&#x27;被装饰的函数&#123;func3.__name__&#125;即将执行&#x27;) func3(*args, **kargs) print(f&#x27;被装饰的函数&#123;func3.__name__&#125;执行结束&#x27;) return func2@func1def funcx(a, b): print(a + b)@func1def funcy(a, b, c): print(str(a) + str(b) + str(c))funcx(1, 2)print(&#x27;*************************&#x27;)funcy(&#x27;Phan&#x27;, &#x27;t&#x27;, &#x27;om&#x27;)&#x27;&#x27;&#x27;被装饰的函数funcx即将执行3被装饰的函数funcx执行结束*************************被装饰的函数funcy即将执行Phantom被装饰的函数funcy执行结束&#x27;&#x27;&#x27; 上面的装饰器带的参数都是我们后面自定义函数里的参数，装饰器的语法允许我们在调用时提供其他参数。 1234567891011121314151617181920212223242526272829303132#import functoolsdef func1(text): def decorator(func): # @functools.wraps(func) def func2(*args, **kwargs): if text == &#x27;Phantom&#x27;: print(&#x27;%s 正在运行&#x27; % func.__name__) print(*args) print(text) return func(*args, **kwargs) return func2 return decorator @func1(text = &quot;Phantom&quot;)def funcx(a): print(funcx.__name__)funcx(&#x27;test&#x27;)&#x27;&#x27;&#x27;注释的运行结果：funcx 正在运行testPhantomfunc2*************************去掉注释的运行结果：funcx 正在运行testPhantomfuncx&#x27;&#x27;&#x27; 先不看导入的模块，后面再解释。 上面的例子看上去很复杂，可以一层一层剥开理解。func1是允许带参数的装饰器，实际上是原有装饰器decorator的再一次封装，并且返回了这个装饰器，可以理解为含有一个形参text的闭包。当我们使用@func1(text &#x3D; “Phantom”)时，python解释器将我们的实参“Phantom”传入到装饰器的环境。 而嵌套函数func2在检查到传入的text参数与字符串“Phantom”相同时，就会执行后面的打印函数名、funcx传入的实参和func1传入到decorate的实参。 通过特殊属性__name__可以看到，funcx函数指向了装饰器内部定义的func2函数，也就是经过装饰器装饰后丢失了原函数的元信息，我们真正调用的是装饰后生成的新函数。那么是不是每次都要使用func2.__name__ = func.__name__这样的代码来保留原函数信息呢？并不是，我们可以使用functools库中的@functools.wraps()来保留原函数的属性，其实这种保留只是将原始被装饰的函数的属性拷贝给了装饰函数，如果不干这件事，有些依赖函数签名的代码执行就会出错，感兴趣的小伙伴可以继续探究~ 2.3 内置装饰器上面说的@functools.wraps()其实也是内置装饰器，下面介绍其他几个常用的内置装饰器。 2.3.1 @property这个内置装饰器用来装饰类函数，被装饰的类函数不可以在类被实例化后调用，只能通过访问与函数同名的属性进行调用（也就是把类的方法伪装成属性）。 12345678910111213141516171819class A(): def func1(self): print(&#x27;Phantom&#x27;) @property def func2(self): print(&#x27;Aria&#x27;) a = A() # 实例化一个对象a.func1() # 通过实例化对象访问类方法a.func2 # 通过实例化对象将类方法伪装成属性调用&#x27;&#x27;&#x27;运行结果：PhantomAria&#x27;&#x27;&#x27; 我们知道属性是可以被赋值的，但是经过property装饰的方法不可以像普通属性那样被赋值。 这个特性很有意思，我们可以实现对python类私有属性的安全访问（再次强调不存在严格意义的私有属性）。 1234567891011121314151617181920212223242526272829class A: __number = &#x27;Phantom&#x27; # 类内的私有属性 @property def number(self): return self.__numbera = A()try: print(a.__number) # 尝试直接访问类内的私有属性失败except: print(&quot;访问私有属性失败&quot;)try: print(a.number) # 通过类方法伪装的属性访问私有属性成功 print(&quot;访问私有属性成功&quot;)except: passtry: a.number = 1 # 类方法伪装的属性无法被赋值except: print(&quot;修改私有属性失败&quot;)&#x27;&#x27;&#x27;运行结果：访问私有属性失败Phantom访问私有属性成功修改私有属性失败&#x27;&#x27;&#x27; 2.3.2 @classmethod直接翻译，这个装饰器就是用来定义类方法的，被装饰的函数必须有一个cls参数用来绑定类本身，隐式地将类作为对象，传递给方法，调用地时候不需要进行实例化。 如果不加这个装饰器，必须要使用self参数，隐式地将类实例传递给方法，也就是说必须要实例化。 强调一点，这里地cls和self只是为了方便编程的时候一眼看出来绑定的是类还是对象，都可以用别的xxx名字代替（但是不建议）。 12345678910111213141516class A(): def func1(self,x,y): # 实例方法 return x * y @classmethod def func2(cls,x,y): # 类方法 return x * y print(A().func1(5,5)) # 必须实例化A()之后通过实例化对象才可以调用方法print(A.func2(5,5)) # 不需要实例化，直接通过类对象调用&#x27;&#x27;&#x27;运行结果：2525&#x27;&#x27;&#x27; 由于被classmethod装饰的函数强制暴露了类自身，所以我们可以通过被classmethod装饰的函数对类的静态变量进行一定操作，在实例化之前和类进行交互。还有类方法可以通过实例对象或者类对象去访问，所以有一个用途就是通过实例调用类方法实现对类属性的修改（点击见第三篇博客例子）。 2.3.3 @staticmethod前面博客介绍过，这个装饰器是声明静态方法的，静态方法和上面的类方法一样，不需要实例化就可以直接调用，但是这个方法不强制要求传递参数，无法直接使用任何类变量、类方法或者实例方法、实例变量（这里要注意，只有主动传参才可以调用，因为主动传参是可以按照逻辑去找需要的参数的）。 1234567891011121314151617class People(): name = &#x27;Phantom&#x27; def __init__(self, name = &#x27;Aria&#x27;): self.name = name @staticmethod def getName(): print(&#x27;静态方法调用类属性&#x27;, People.name) #print(self.name) #不能调用实例的属性，会报错，名义上是类方法，实际已经和类无关p = People()p.getName() # 可以通过 类.方法名 或者 实例.方法名 进行调用 &#x27;&#x27;&#x27;运行结果：静态方法调用类属性 Phantom&#x27;&#x27;&#x27; staticmethod更像是与实例无关但与类封装功能有关的函数，如果有一个功能实现的方法比较独立，可以考虑用静态方法来实现。 在继承类中，staticmethod和classmethod有以下区别 子类的实例继承了父类的@staticmethod静态方法，调用该方法，还是调用的父类的方法和类属性。 子类的实例继承了父类的@classmethod类方法，调用该方法，调用的是子类的方法和子类的类属性。 1234567891011121314151617181920212223242526272829class A(): name = &#x27;Phantom&#x27; @staticmethod def func1(): return print(A.name) @classmethod def func2(cls): return print(cls.name) class B(A): name = &#x27;Aria&#x27;a = A()a.func1()a.func2()print(&#x27;***********************&#x27;)b = B()b.func1()b.func2()&#x27;&#x27;&#x27;运行结果：PhantomPhantom***********************PhantomAria&#x27;&#x27;&#x27; 上面这个例子可以看出来，@classmethod装饰后的func1函数实际上已经和父类没什么关系了，尽管在父类方法里但也可以当作是个独立的函数，不管子类的实例化还是父类的实例化都是调用同一个函数，输出结果一致。而@classmethod装饰后的func2函数，cls参数绑定了类本身，子类在实例化后继承了父类@classmethod类方法，但是调用的是子类的方法和类属性。 所有装饰器存在的意义都是为函数扩展功能，总结以下几点： 装饰器通过高级函数、嵌套函数和闭包实现 装饰器返回闭包函数的引用，这个闭包函数引用中有被装饰函数的引用 装饰器通过语法糖 @ 修饰 装饰器不修改原函数和调用方式（调用的是装饰后的新函数）","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"编程自学","slug":"编程自学","permalink":"http://www.shelven.com/categories/%E7%BC%96%E7%A8%8B%E8%87%AA%E5%AD%A6/"}],"tags":[{"name":"python","slug":"python","permalink":"http://www.shelven.com/tags/python/"}]},{"title":"python自学笔记（4）——面向对象编程（下）","slug":"python自学笔记（4）——面向对象编程（下）","date":"2022-11-26T15:59:03.000Z","updated":"2022-12-03T15:55:35.000Z","comments":true,"path":"2022/11/26/a.html","link":"","permalink":"http://www.shelven.com/2022/11/26/a.html","excerpt":"前面说到python中一切皆为对象，面向对象是python的核心，也通过代码方式了解了什么是类和对象、属性和方法以及具体的分类。这篇笔记主要记录下前面没讲完的面向对象编程具体的三个特征。","text":"前面说到python中一切皆为对象，面向对象是python的核心，也通过代码方式了解了什么是类和对象、属性和方法以及具体的分类。这篇笔记主要记录下前面没讲完的面向对象编程具体的三个特征。 面向对象编程的特征python是面向对象的语言，支持面向对象的三大特征：封装（隐藏），继承和多态。 1. 封装（隐藏）1.1 封装概念隐藏对象的属性和实现细节，只对外提供必要的方法。相当于将“细节封装起来”，只对外暴露“相关调用方法”。 通过私有属性、私有方法（都是在属性或者方法前加上__来实现私有化，类外部不能直接访问）的方式，实现封装(Encapsulation)。封装的概念类似权限控制，有些属性或方法只想于类别内部使用，而不想公开于外部，除了减少代码因来源端不适当的使用发生问题外，也可保护其中重要的商业逻辑。 当然，前面说过python没有严格意义上的访问控制限制，更多还是靠编程人员的自觉&#x3D; &#x3D; 2 继承2.1 继承概念继承是创建新类的方式，是实现代码复用的重要手段（比如一个新类继承自设计好的类，就直接具备已有类的特征，减少代码重复编写）。对于已有的类，我们称为父类或基类，而要创建的新类，我们称为子类或派生类。python支持多继承，也就是新建的类可以有一个或者多个父类。 python3中默认继承object类，object是根类，是所有类的父亲。编写过程中object可以省略。 12345678910111213141516171819202122232425262728# 定义一个父类(object可省)class Animal(object): def __init__(self, name, color): self.name = name self.color = color def eat(self): print(&#x27;%s在进食&#x27; % self.name)# 定义一个子类，括号中为父类的名字class Pig(Animal): def setName(self, newname): self.name = newname return self.namePeggy = Pig(&#x27;猪&#x27;, &#x27;粉色&#x27;) # 实例化对象print(&#x27;Peggy是%s,颜色是%s&#x27; % (Peggy.name, Peggy.color)) # 查看对象属性Peggy.eat() # 调用父类方法print(&#x27;现在Peggy的名字叫做%s&#x27; % Peggy.setName(&#x27;George&#x27;)) # 调用子类方法print(Pig.__mro__) # 查看类的继承层次结构，可以用类属性__mro__或者类方法mro()&#x27;&#x27;&#x27;运行结果：Peggy是猪,颜色是粉色猪在进食现在Peggy的名字叫做George(&lt;class &#x27;__main__.Pig&#x27;&gt;, &lt;class &#x27;__main__.Animal&#x27;&gt;, &lt;class &#x27;object&#x27;&gt;)&#x27;&#x27;&#x27; 从上面的例子可以看到，子类Pig从父类Animal中继承了__init__()方法，从子类中实例化对象Peggy是可以调用父类的方法的。 需要注意： 私有的属性和方法（前面带有__）不能被子类继承，也不能被访问！ 2.2 多继承顾名思义一个子类继承自多个直接父类，这样也就有了多个父类的特点。 123456789101112131415161718192021# 定义一个父类马class Horse: def output(self): print(&#x27;骡子的一半基因来自马&#x27;)# 定义一个父类驴class Donkey: def output(self): print(&#x27;骡子的一半基因来自驴&#x27;)# 定义一个子类骡子，继承自马和驴class Mule(Horse, Donkey): passa = Mule() # 实例化一个对象骡子a.output() # 调用同名父类方法print(Mule.__mro__)&#x27;&#x27;&#x27;运行结果：骡子的一半基因来自马(&lt;class &#x27;__main__.Mule&#x27;&gt;, &lt;class &#x27;__main__.Horse&#x27;&gt;, &lt;class &#x27;__main__.Donkey&#x27;&gt;, &lt;class &#x27;object&#x27;&gt;)&#x27;&#x27;&#x27; 上面的例子可以看到，子类骡子(Mule)继承自父类马(Horse)和驴(Donkey)，这样可以拥有两个父类各自的特征。但是，如果父类中如果有同名的方法(这里的output(self))，那么子类只会从左到右的顺序，调用先继承的父类(Horse)中的方法。 同样可以通过类属性__mro__来查看继承结构，显示结果也是从左到右的顺序，从子类开始一层层往上到父类，这就是继承的顺序。 一般情况下不建议用多继承（一个人不可能有两个爹），代码可读性会变差。 2.3 重写父类方法重写的意思是，当子类中有一个和父类相同的名字的方法，子类中的方法会重新定义覆盖掉父类中的方法。 123456789101112131415class Animal: def eat(self): print(&#x27;是个动物都会进食&#x27;)class Pig(Animal): def eat(self): print(&#x27;只有猪才会吃了睡睡了吃&#x27;)Peggy = Pig()Peggy.eat() # 调用父类同名方法，子类的方法会覆盖&#x27;&#x27;&#x27;运行结果：只有猪才会吃了睡睡了吃&#x27;&#x27;&#x27; 如果想要在子类方法中调用父类的同名方法，最简单的实现方式是在子类方法中进行类调用，但是父类名如果修改过，在多继承时子类的方法也要重复改很多次，python为了解决这个问题引入了super()函数，需要注意super()代表父类的定义，而不是父类对象。 123456789101112131415class Animal: def eat(self): print(&#x27;是个动物都会进食&#x27;)class Pig(Animal): def eat(self): super().eat() # super()代表父类名，即使父类名改变这里也不需要改Peggy = Pig()Peggy.eat()&#x27;&#x27;&#x27;运行结果：是个动物都会进食&#x27;&#x27;&#x27; 一般而言，super在继承中经常用来继承父类的初始化方法，例如 super().__init__() 3 多态3.1 多态概念多态指不同对象对同一个方法调用，可能会产生不同的行为。举个栗子，对于同样一个吃饭的方法，不同对象比如中国人用筷子吃饭，印度三哥用手抓饭，欧美人用刀叉吃饭。 需要注意以下几点： 多态是方法的多态，属性没有多态 多态存在的必要条件：继承和方法重写 3.2 代码演示多态和“鸭子类型”12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152class People: passclass Chinese(People): def eat(self): print(&#x27;中国人用筷子吃饭&#x27;)class Indian(People): def eat(self): print(&#x27;印度人用手抓饭&#x27;)class American(People): def eat(self): print(&#x27;欧美人用刀叉吃饭&#x27;)# 分别实例化，并定义一个统一的接口来使用XiaoMing = Chinese()ASan = Indian()George = American()def Eatting(self): self.eat()Eatting(XiaoMing) # 相当于调用了XiaoMing.eat，以下同理Eatting(ASan)Eatting(George)print(&#x27;*******************************************&#x27;)# “鸭子类型”# 定义三个不同的类（实际上也都继承自根类object）class Chinese: def eat(self): print(&#x27;中国人用筷子吃饭&#x27;)class Indian: def eat(self): print(&#x27;印度人用手抓饭&#x27;)class American: def eat(self): print(&#x27;欧美人用刀叉吃饭&#x27;) People_list = [Chinese, Indian, American] # 封装好的类作为People_list的元素for person in People_list: person().eat() # person()是实例化对象的过程，分别调用不同类的同名方法 &#x27;&#x27;&#x27;运行结果：中国人用筷子吃饭印度人用手抓饭欧美人用刀叉吃饭*******************************************中国人用筷子吃饭印度人用手抓饭欧美人用刀叉吃饭&#x27;&#x27;&#x27; 不同对象调用同名方法，产生不同结果，这就体现了多态性，好处在于增强了程序的灵活性和可扩展性。 Python崇尚的“鸭子类型”就是动态类型的风格：“当看到一直鸟走起来像鸭子、游泳起来像鸭子、叫起来也像鸭子，那么这只鸟就可以称为鸭子。”这种动态风格中，一个对象的有效语义，不是由继承自特定的类或实现特定的接口，而是由当前方法和属性的集合决定，也就是说，我们并不关心对象是什么类型，而是关心对象是怎么使用的。 总而言之，这种动态类型使得编程非常灵活，可以避免一些重写和继承，省去复制大量重复代码的操作。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"编程自学","slug":"编程自学","permalink":"http://www.shelven.com/categories/%E7%BC%96%E7%A8%8B%E8%87%AA%E5%AD%A6/"}],"tags":[{"name":"python","slug":"python","permalink":"http://www.shelven.com/tags/python/"}]},{"title":"python自学笔记（3）——面向对象编程（上）","slug":"python自学笔记（3）——面向对象编程（上）","date":"2022-11-25T15:31:53.000Z","updated":"2022-12-03T15:55:58.000Z","comments":true,"path":"2022/11/25/a.html","link":"","permalink":"http://www.shelven.com/2022/11/25/a.html","excerpt":"面向对象是Python的核心概念，一开始在这些概念问题上一直绕不清，这里做个简单记录。","text":"面向对象是Python的核心概念，一开始在这些概念问题上一直绕不清，这里做个简单记录。 1. 面向对象编程使用计算机语言编写代码时，有两种思路分别是面向过程编程和面向对象编程 面向过程：根据业务逻辑从上到下，直接分析解决问题的步骤，调用函数实现。强调怎么去做 面向对象：将问题分解成若干“对象”，建立对象是为了描述某个事物在解决问题过程中的行为。强调谁去做 面向过程注重步骤和过程，所有步骤从到到尾逐步实现，将功能独立的代码封装成函数，最后完成代码就是按照顺序地调用不同函数。 面向对象注重对象和职责，确认职责，根据职责确定不同对象，对象内部封装不同的方法，最后完成代码是按照顺序让不同对象调用不同方法。 python是面向对象编程思想的一门语言，包括做机器学习或者深度学习用的PyTorch、TensorFlow都是面向对象的思想，里面封装了非常多的方法，我们甚至可以不知道方法具体实现的过程和原理，直接调用函数就可以（初学的我就是一开始依葫芦画瓢，程序能跑通但是不能解释实现的原理），对于小白的入门学习确实提供了极大便利（然后一出问题就开始恶补基础了）。 2. 概念性名词先要了解概念性的专业名词，再通过代码的方式加深自己的理解。 面向对象有三个特性，封装性、继承性和多态性（下一篇博客再细说）。 封装性：把属性和方法放在一个类里面，可以通过访问类的权限属性区分开，不想释放的功能搞成私有机制 继承性：把实现好的代码和方法通过继承的方法拿过来用，节省代码量 多态性：同一个方法用不同的方式去实现，体现的多态性 先解释一下上面提到的几个专有名词： 对象(object)：python中一切皆对象，对应现实生活中，任何事物都可以称为对象，有自己独特的特征。对象是通过类创建出的真实的个体（对象是类的实例化），对象由属性和方法组成。 类(class)：具有同种属性的对象，现实世界中具有共同特征的事物为一类，比如人类，植物类等，描述的是所有对象的共有特征。拥有相似属性和行为的对象都可以抽象出一个类。 属性(attribute)：属于对象静态的一面，描述对象的一些静态特征，比如小明的身高、体重、年龄等。 方法(method)：属于对象动态的一面，描述对象的动态特征，比如小明会说话，会码代码等。 实例化：对象由一个别名叫“实例”，通过类创建对象的过程为“实例化”。 抽象：由相同特征的对象抽取共同特征的过程为“抽象”。 3. 代码方式理解类和对象开头的class来创建一个新的类，class之后为类的名称（通常首字母大写）并以冒号结尾。 12345678910111213141516171819# 定义类class People: # 定义方法 def getPeopleInfo(self): print(&#x27;名字:%s, 年龄:%d&#x27; %(self.name, self.age))# 实例化一个对象 Phantom = People()Phantom.name = &#x27;Phantom&#x27; # 使用 . 的方法添加类属性Phantom.age = 26Phantom.getPeopleInfo() # 使用 .函数名() 的方法调用类中创建的函数print(Phantom.age) # 打印实例Phantom的年龄属性&#x27;&#x27;&#x27;运行结果：名字:Phantom, 年龄:2626&#x27;&#x27;&#x27; 在创建的类中定义方法，而类中的方法和普通的函数有一个区别——必须有一个额外的第一个参数名称, 按照惯例是 self。self指的是实例的本身，指向当前创建对象的内存地址。某个对象调用其方法时，python解释器会把这个对象作为第一个参数传递给self，所以我们只需要传递后面的参数。 python是没有方法的重载的，如果定义了多个重名的方法，只会生效最后一个！ 在上面的例子里我给Phantom添加了两个对象属性：name和age，但是如果再实例化一个其他对象，能否在创建时就给予属性而不用重新添加呢？答案是肯定的，这个时候我们可以用__init__()函数来定义属性的默认值。 1234567891011121314151617181920212223242526class People: # 初始化函数，使对象的属性具有默认值 def __init__(self, sex = &#x27;male&#x27;, age = 26): self.sex = sex self.age = age # 定义类方法 def getPeopleInfo(self): print(&#x27;性别:%s, 年龄:%d&#x27; %(self.sex, self.age)) # 创建对象Phantom，不传参，属性使用默认值Phantom = People()print(Phantom.sex, Phantom.age)Phantom.getPeopleInfo()# 创建第二个对象Aria，传参，新的参数代替默认值Aria = People(&#x27;Female&#x27;, 24)print(Aria.sex, Aria.age)Aria.getPeopleInfo()&#x27;&#x27;&#x27;运行结果：male 26性别:male, 年龄:26Female 24性别:Female, 年龄:24&#x27;&#x27;&#x27; 可以看到上面创建对象Phantom后，我没有传入参数，python解释器立刻调用了__init__()函数给与了两个属性sex和age，这个时候再调用类内的方法getPeopleInfo()，就会将属性的默认值作为实参传入。 __init__(self)中只有一个默认参数self，如果创建对象传入了两个实参，那么除了self以外还需要两个形参，比如__init__(self, sex, age)这个和自定义创建的类方法不一样，一定要做区分，后面会说到。这里的self是不需要我们传递的，python解释器会自动把当前对象的引用传递进去。 4. 代码方式理解属性和方法4.1 类属性类拥有的属性分为公有属性（public）和私有属性（private），python对于类的属性没有严格的访问控制限制，这与其他面向对象语言有所区别。 _xxx 保护属性，python编辑器不会做任何处理，是给程序员看的，不希望被外部访问 xxx 自己定义的公有属性 __xxx 类中的私有属性，不能从外部直接访问，但是可以通过 实例._类名__私有属性 的方式访问 再次强调，python不存在严格意义上的私有属性。 12345678910111213141516171819# 创建类，object是对象，可以省略class People(object): name = &#x27;Phantom&#x27; # 公有的类属性 __age = 26 # 私有的类属性 _sex = &#x27;male&#x27; # 保护的类属性 def __init__(self): pass # 空语句，占位用，不会执行任何操作p = People()print(p.name) # 通过实例对象访问公有类属性print(p._People__age) # 通过实例访问私有类属性print(p._sex) # 访问保护的类属性（可以访问但是不推荐）&#x27;&#x27;&#x27;运行结果：Phantom26male&#x27;&#x27;&#x27; 4.2 实例属性实例属性是从属于实例对象的属性。 实例属性可以在__init__()方法中通过 self.实例属性名 &#x3D; 初始值 的方式进行定义 实例属性可以修改、新增和删除，不会影响到类属性 123456789101112131415class People(object): name = &#x27;Phantom&#x27;p = People()print(p.name, People.name) # 通过实例查看实例属性，通过类对象查看类属性p.name = &#x27;Aria&#x27; # 修改实例属性print(p.name, People.name)People.name = &#x27;Aria&#x27; # 修改类属性print(p.name, People.name)&#x27;&#x27;&#x27;Phantom PhantomAria PhantomAria Aria&#x27;&#x27;&#x27; 可以看到通过一个实例对象去引用修改，只是修改了实例属性而不会影响到类属性。 4.3 特殊属性Python 对象中包含了很多双下划线开始和结束的属性，这些是特殊属性，有特殊的用法。 特殊方法 含义 obj.__dict__ 对象的属性字典 obj.__class__ 对象所属的类 class.__bases__ 类的基类元组(多继承) class.__base__ 类的基类 class.__mro__ 类层次结构 class.__subclasses__ 子类列表 实际操作运行几个简单的例子： 12345678910111213141516171819202122class People: name = &#x27;Phantom&#x27; # 类属性 def __init__(self, sex, age): # 实例属性 self.sex = sex self.age = agep = People(&#x27;male&#x27;, 26)# dict 生成类属性信息的字典和实例对象属性信息的字典print(&#x27;People类属性为：&#x27; + str(People.__dict__))print(&#x27;实例对象p属性为：&#x27; + str(p.__dict__))# class 对实例对象查询所属类信息print(&#x27;实例对象p所属类信息：&#x27; + str(p.__class__))&#x27;&#x27;&#x27;运行结果：People类属性为：&#123;&#x27;__module__&#x27;: &#x27;__main__&#x27;, &#x27;name&#x27;: &#x27;Phantom&#x27;, &#x27;__init__&#x27;: &lt;function People.__init__ at 0x000001A7D212AB00&gt;, &#x27;__dict__&#x27;: &lt;attribute &#x27;__dict__&#x27; of &#x27;People&#x27; objects&gt;, &#x27;__weakref__&#x27;: &lt;attribute &#x27;__weakref__&#x27; of &#x27;People&#x27; objects&gt;, &#x27;__doc__&#x27;: None&#125;实例对象p属性为：&#123;&#x27;sex&#x27;: &#x27;male&#x27;, &#x27;age&#x27;: 26&#125;实例对象p所属类信息：&lt;class &#x27;__main__.People&#x27;&gt;&#x27;&#x27;&#x27; 4.4 实例方法和类方法在类中以def开头定义的方法都是实例方法，实例方法的特点是必须有一个以上的参数（self），用于指定这个方法的实例对象。 类方法也是最少需要一个参数（cls），是类对象有的方法，需要使用装饰器@classmethod来标识其为类方法，关于装饰器的概念我后面再写一篇博客，这里简单按照字面意思理解一下。类方法可以通过实例对象或者类对象去访问，有一个用途就是通过实例调用类方法实现对类属性的修改。 1234567891011121314151617181920class People(): name = &#x27;Phantm&#x27; @classmethod def getName(cls): return cls.name @classmethod def setName(cls, name): cls.name = namep = People()print(p.getName(), People.getName()) # 通过实例和类对象调用类方法，先查看一下类属性p.setName(&#x27;Aria&#x27;) # 通过实例调用类方法改变类属性print(p.getName(), People.getName())&#x27;&#x27;&#x27;运行结果：Phantm PhantmAria Aria&#x27;&#x27;&#x27; 4.5 静态方法python是动态的语言，我们可以动态地为类添加新的方法，或者动态地修改已有的方法。静态方法可以理解为不变的方法，不依赖于实例对象也不依赖于类对象，因此无论是实例对象还是类对象都可以调用。如果有一个功能实现的方法比较独立，可以考虑用静态方法来实现，静态方法需要使用装饰器@staticmethod来标识。 需要注意的是，静态方法无法使用实例的属性和方法。 1234567891011121314151617class People(): name = &#x27;Phantom&#x27; def __init__(self, name = &#x27;Aria&#x27;): self.name = name @staticmethod def getName(): print(&#x27;静态方法调用类属性&#x27;, People.name) #print(self.name) #不能调用实例的属性，会报错p = People()p.getName()&#x27;&#x27;&#x27;运行结果：静态方法调用类属性 Phantom&#x27;&#x27;&#x27; 4.6 特殊方法前面的普通方法都是通过 对象名.方法名() 的方式调用，和前面有特殊属性一样，python也有一些特殊方法（或者叫魔术方法），这些特殊方法在符合条件的时候自动触发，不需要调用。 因为特殊方法非常多，这里只简单记录一些常用的。 特殊方法 含义 构造类 __new__(cls, […]) 对象实例化时调用的第一个方法，第一个参数时类，其他参数传递给__init__()，决定是否使用 __init__(self, […]) 构造器，当一个实例被创建时调用的初始化方法 __del__(self) 构造器，当实例对象被销毁时调用的方法 表示类 __str__(self) 描述类或对象信息，比如打印实例化对象，返回定义内容（给人看） __repr__(self) 描述类或对象信息，比如打印实例化对象，返回定义内容（给解释器看） 访问控制类 __setattr__(self, key, value) 定义当一个属性被设置时的行为 __getattr__(self, key) 定义用户试图获取一个不存在的属性时的行为 __delattr__(self, key) 定义当一个属性被删除时的行为 __getattribute__(self, key) 定义当该类属性被访问时的行为（所有属性&#x2F;方法调用都要经过这里） __dir__(self) 定义当dir()被调用时的行为 比较操作类 __eq__(self, other) 判断两个对象是否相等 __ne__(self,other) 判断两个对象是否不相等 __lt__(self, other) 定义小于号的行为：x &lt; y 调用 x.__lt__(y) __gt__(self, other) 定义大于号的行为：x &gt; y 调用 x.__gt__(y) 容器类 __setitem__(self, key, value) 定义设置容器中指定元素的操作，相当于 self[key] &#x3D; value __getitem__(self, key) 定义获取容器中指定元素的操作 ，相当于 self[key] __delitem__(self, key) 定义删除容器中指定元素的操作 ，相当于 del self[key] __len__(self) 定义当被 len() 调用时的操作，即返回容器中元素个数 __iter__(self) 定义迭代容器中的元素的操作 __contains__(self, item) 定义当使用成员测试运算符（in 或 not in）时的操作 __reversed__(self) 定义当被 reversed() 调用时的操作 可调用对象类 __call__(self, [args…]) 使实例对象以 对象名() 的形式使用 这些特殊方法比较常用，看到知道是怎么一回事就好。容器类的特殊方法稍微解释一下，python中常用字典、元组、列表和字符串作为容器，它们都实现了容器协议，可迭代。最后一个调用对象类特殊方法写个代码描述一下 1234567891011121314151617181920class Calculate(): def __init__(self, x, y): self.x = x self.y = y def __call__(self, m, n): self.m = m self.n = n SUM = m + n return SUMa = Calculate(100, 200) print(a(111, 222)) # __call__() 将实例化对象a当作一个方法来执行print(a.x, a.y) # 实例属性并没有改变&#x27;&#x27;&#x27;运行结果：333100 200&#x27;&#x27;&#x27; 在上面这个例子中，首先初始化了一个Calculate实例a，调用 __init__() 方法，给与了实例属性x和y以及对应的值。但是对于实例对象a又做了调用 a(111, 222) ，实际上调用的是 __call__() 方法，传入自定义参数实现自己的逻辑，这在类实现一个装饰器的场景中比较常见。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"编程自学","slug":"编程自学","permalink":"http://www.shelven.com/categories/%E7%BC%96%E7%A8%8B%E8%87%AA%E5%AD%A6/"}],"tags":[{"name":"python","slug":"python","permalink":"http://www.shelven.com/tags/python/"}]},{"title":"python自学笔记（2）——运算符和参数传递","slug":"python自学笔记（2）——运算符和参数传递","date":"2022-11-24T09:05:33.000Z","updated":"2022-12-03T15:57:53.000Z","comments":true,"path":"2022/11/24/a.html","link":"","permalink":"http://www.shelven.com/2022/11/24/a.html","excerpt":"本篇笔记主要记录python基础的运算符和函数参数传递，以及自己学习过程的一些思考。","text":"本篇笔记主要记录python基础的运算符和函数参数传递，以及自己学习过程的一些思考。 1. 运算符1.1 比较运算符python中常见的比较运算符如下： &#x3D;&#x3D; 检查左右两个值是否相等，相等则返回True !&#x3D; 检查左右两个值是否相等，不相等则返回True &lt;&gt; 和 !&#x3D; 一样，检查两个值是否相等，不相等返回True &gt;&#x3D; 字面意思，字面意思的还有&lt;&#x3D;、 &lt; 和 &gt; 1.2 算数运算符python常见的算数运算符： &#x2F; 两个数相除，结果为浮点型 &#x2F;&#x2F; 两个数相除，结果为向下取整的整数 % 取模，也就是两个整数相除的余数 ** 幂运算，返回乘方的结果 + 两个数相加，或者字符串相连 * 两个数相乘，或者返回重复若干次的字符串 - 字面意思，两个数相减 1.3 赋值运算符顾名思义都是在赋值的时候用到的运算符 &#x3D; 常规赋值运算，运算结果赋值给变量 +&#x3D; 加法赋值运算，a +&#x3D; b等效于a &#x3D; a+b 其他算数运算符都可以后面跟上&#x3D;，进行运算后赋值 1.4 位运算符按位运算就是将数字转换为二进制来运算的运算形式，数值是用补码来表示和存储的，计算机用位运算符进行四则运算速度快。但是我们平常可能用不到，这里稍微记录一下。 &amp; 按位“与”：两个值如果相应位都为1，则结果为1，否则0 | 按位“或”：两个值相应位有一个位1，结果就为1 ^ 按位“异或”：两个值相应位相异，结果为1 ~ 按位“取反”：对数据的每个二进制位取反 &lt;&lt; 左移运算符：运算数的二进制全部座椅若干位，高位丢弃，低位补0；&gt;&gt;右移同理 1.5 逻辑运算符 and 逻辑“与”，两个都为True则返回True，否则False or 逻辑“或”，两个至少有一个True则返回True，否则False not 逻辑“非”，字面意思 1.6 成员和身份运算符python的成员运算符用来判断一个数据是否在指定的序列或者集合中，而身份运算符是用来判断两个变量是否引用自同一个对象。 in 成员运算符，在指定序列中找到值则返回True，否则False not in 成员运算符，在指定序列中没有找到值则返回True，否则False is 身份运算符，两个标识符是否引自同一个对象，是则返回True，否则False is not 身份运算符，两个标识符是否引用同一个对象，不是则返回True，否则False 是否引自同一个对象，简单理解就是看存储的内存位置是否一样，通过函数id()可以查看变量在内存中的存储位置。 2. 参数传递要理解参数传递的过程，首先要明白关于函数参数的两个具体概念：形参和实参 定义时小括号中的参数，是用来接收参数的，称为“形参”，可以是缺省参数、不定长参数 调用时小括号中的参数，是用来传递参数给函数的，称为“实参” 向函数传递实参的方式很多，确定传递参数个数可以使用位置实参或者关键字实参，不确定传递参数个数可以使用包裹（packing）传递的方式，来包裹位置或者关键字实参，进行参数传递。 2.1 位置实参函数调用时每个实参都要关联到函数定义中的一个形参，最简单的是按照形参的位置从左到右按照顺序传递，位置参数必须一一对应，缺一不可。 比如上面创建了一个describe_me()函数，形参定义了需要name和age两个参数，因此在调用这个函数的时候要按照顺序提供这两个参数。在上例中，从左到右实参‘Phantom’储存在形参name中，实参26储存在形参age中，参数传递本质上就是实参到形参的赋值操作。 2.2 关键字实参关键字实参顾名思义是传递函数的key-Value对，在实参中将关键字和值关联，因为这种对应关系是唯一的，在调用函数的时候就不需要考虑实参的顺序。 这种参数传递方式比较直观，能一眼看出函数调用时各个值对应的用途。 关键字实参和位置实参时可以一起使用，需要注意： 关键字实参必须在位置实参右边（写的时候位置实参优先） 对同一个形参不可重复传值 2.3 形参的缺省创建函数的时候可以给形参指定默认值（缺省）。 对于缺省形参，需要注意： 缺省参数要在非缺省参数之后（缺省形参放右边） 缺省参数是可选参数，可以不传；如果传入则按照传入的值进行运算 2.4 形参的不定长参数（包裹传递）当传入的参数个数不确定时，可以使用包裹位置参数和包裹关键字参数进行参数传递。 *+形参的方式传递参数，传入后根据参数的位置以元组形式保存 **+形参的方式传递参数，需要使用关键字，传入后以字典形式保存，形参名字是传入字典的键 上面例子形参中的args表示arguments位置参数，kargs表示key arguments关键字参数，这个是可以自定义的。 不同的参数传递方式可以混用，原则上要遵循位置参数，默认参数，包裹位置，包裹关键字的顺序。 1def func(name, age = 26, *args, **kargs) # 定义和调用都遵循这样的顺序 2.5 对传参的思考在CSDN上看到一个总结写的很好，函数的参数传递本质上是从实参到形参的赋值操作，而所有的赋值操作都是“引用的赋值”，因此Python中参数的传递都是“引用传递”，不是“值传递”。这句话初看有点难以理解，首先看看什么是引用传递和值传递： 值传递（pass by value）：调用函数时将实际参数复制一份传递到函数中，这样在函数中如果对参数进行修改，将不会影响到实际参数。 引用传递（pass by reference）：调用函数时将实际参数的地址直接传递到函数中，那么在函数中对参数所进行的修改，将影响到实际参数。 根本区别在于引用传递不创建副本，最直接的理解方式就是通过查看对象的地址，看看传参前后对象在内存的位置是否改变。 2.5.1 可变对象的传递复习一下，可变对象有列表、字典和集合，我们这里以列表为例。 可以看到，如果传递的对象是可变对象，实际上传递的是对象的引用（不创建副本，传递前后在内存中存储位置不变），在函数中修改对象后，直接在原始对象上做了相应的修改。 2.5.2 不可变对象的传递如果传递的对象是不可变类型，比如元组，字符和数字，这里以数字为例。 可以看到，如果传递的对象是不可变对象，传进函数的时候同样是对象的引用，但是不可变对象无法修改，因此在赋值操作时，系统新创建了一个对象（和原来a的存储地址不同）进行赋值，而原始对象并没有改变。 也就是说，不可变对象的传递起到类似值传递的效果，但是实际上依然是引用传递的方式进行传参。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"编程自学","slug":"编程自学","permalink":"http://www.shelven.com/categories/%E7%BC%96%E7%A8%8B%E8%87%AA%E5%AD%A6/"}],"tags":[{"name":"python","slug":"python","permalink":"http://www.shelven.com/tags/python/"}]},{"title":"python自学笔记（1）——数据类型","slug":"python自学笔记（1）——数据类型","date":"2022-11-23T14:09:49.000Z","updated":"2022-12-03T16:03:26.000Z","comments":true,"path":"2022/11/23/a.html","link":"","permalink":"http://www.shelven.com/2022/11/23/a.html","excerpt":"这两个月经历了突然的疫情隔离，研究生开题，学术论坛，研究生创新项目等等……终于在这一周尘埃落定了，得以静下心来整理整理自己的一些学习笔记。之前我用过一些python编写的项目，我也只是依葫芦画瓢或者在demo上直接改，还没有系统性地学习过这门编程语言。这里就再记录下自己自学python的一些入门时的笔记，以及记录下几个机器学习方面的python库的使用方法。","text":"这两个月经历了突然的疫情隔离，研究生开题，学术论坛，研究生创新项目等等……终于在这一周尘埃落定了，得以静下心来整理整理自己的一些学习笔记。之前我用过一些python编写的项目，我也只是依葫芦画瓢或者在demo上直接改，还没有系统性地学习过这门编程语言。这里就再记录下自己自学python的一些入门时的笔记，以及记录下几个机器学习方面的python库的使用方法。 1. 六大数据类型很多编程语言的数据类型是相通或者有类似之处的，学习一门编程语言最基础的就是熟悉它的数据类型，python有6种标准数据类型。 1.1 Numbers(数字类型)数字类型简单来说就是数值，在python中是不可变数据类型。python的Numbers数据类型又可以分为以下几个子类型 整型(int): 通常称为整型或整数，是正或负整数，不带小数点。python3整型没有大小限制，可以当作python2的Long类型使用，不像其他编程语言有 int，smallint，short，long，longint，long 等。 浮点型(float): 浮点型由整数和小数两个部分组成，只能以十进制表示或者科学计数法表示，有长度限制。 布尔型(bool): 布尔型就是逻辑，使用True和False表示。注意一下在上下文环境中，True当做1，False被当作0。 复数型(complex): 复数型由实数和虚数部分构成，可以用a + bj或者complex(a, b)表示，a和b都是浮点型。 1.2 String(字符串)String是python中最常用的数据类型，说白了就是字符组成的一串内容。可以使用成对的单引号或者双引号(“或‘)创建字符串，用三个单引号或者双引号使字符串内容保持原样输出，可以包含特殊字符。在python中字符串是不可变变量。 1.2.1 字符串索引索引就是字符的位置序号，使用[]进行字符串索引，python有两种索引方式，下标索引越界均会报错。 正向索引：字符串长度为n，从0开始，索引值范围0 ~ n-1 反向索引：字符串长度为n，从-1开始，索引值范围-1 ~ -n 1.2.2 字符串切片切片意思就是取出字符串中你想要的内容。切片的标准写法是两个冒号加三个数字，如a[1:2:3]，需要注意切片是左闭右开的取值，切片越界是不会报错的。 第一个数字表示切片的起始位置（省略就是从第 1 个字符开始，也就是0号位） 第二个数字表示切片的终止位置（不包括这个位置的字符，右开表现在这里；可省略，省略是最后一个字符结尾且包含） 第三个数字表示步长（缺省值为1，此时可以不写第二个冒号） 1.2.3 转义如果使用带有特殊字符的字符串，则需要进行转义，使用反斜杠 \\ 进行字符转义。 转义字符 描述 \\‘ 表示单引号 \\“ 表示双引号 \\n 换行 \\t 制表符（即四个空格） \\b 退格（删除前面一个字符） \\\\ 表示反斜杠 在字符串前加 ’r‘ 可以使整个字符串原样输出，不会被转义。 1.2.4 格式化输出和占位符格式化输出意思是按照格式说明所描述的文字规则进行输出，占位符的使用是格式化输出的表现形式。占位符的意思是替后面的变量占住这个位置，因此所有占位符最后都需要格式化定义占位符的映射（也就是解释占位符代表的东西）。 这里记录一下最常用的占位符 占位符 描述 %s 针对所有数据类型 %d 针对整型数据类型 %f 只针对浮点数 %.xf 浮点数精确到小数点后x位，注意有个点 可以看到两种输出方式得到的结果是一样的，使用占位符进行格式化输出更简介，且更常用。 1.2.5 常用函数python还有很多数据操作的函数，这里记录最常用的几个，以后继续补充 type(): 查看数据类型 len(): 查看字符串长度 int(): 将数据类型转换为整数，如int(“1234”)得到结果整型1234 float(): 转换为浮点数，如float(“12.34”)得到结果浮点型12.34 str(): 转换为字符串，如str(123456)得到结果“123456” 1.3 List(列表)列表数据可以存储任意一种数据类型，是python特有的数据类型，列表用来存储由多个值构成的序列，可以嵌套其他列表，是一种可变数据类型。 不同数据项之间由逗号分开，整体放在一个方括号[]里，就可以创建列表，如ls &#x3D; [1, 2, 3, 4]就是一个列表。 1.3.1 修改列表元素因为列表是可变数据类型，因此可以用索引或者切片的方法修改列表中的元素。 可以使用del删除列表或者列表中索引为某个数的元素。 1.3.2 列表生成式除了直接创建列表，还可以使用列表生成式直接生成列表。 1.3.3 列表的方法函数记录一下操作列表的常用方法，这里就不演示了。 方法 描述 list.append(obj) 列表末尾添加新的对象 list.count(obj) 返回某个元素在列表中出现的次数 list.extend(seq) 在列表末尾添加另一个列表的所有元素 list.index(obj) 返回第一个匹配的的索引值 list.insert(index, obj) 在指定索引插入对象 list.pop(index) 移除指定索引的值，并返回该值 list.sort() 对原列表进行升序排序（纯数字才可以），降序需要添加reverse&#x3D;True list.reverse() 反转列表元素 list.remove(obj) 移除第一个匹配的某对象 1.4 Tuple(元组)元组也是python的一种特殊数据类型，和列表很相似，但是是不可变对象。如果想创建一个全局都不变的变量，可以考虑创建元组。 元组中的元素用逗号分隔，一般要使用小括号（小括号不是必须的，只是为了方便理解和美观）。 元组中如果只有一个元素，需要在元素后加逗号。否则无法判断这是一个元组还是一个整型数据。 同样元组数据也可以进行索引和切片，这里不赘述。 1.4.1 元组和列表的互相转化元组转化列表使用list()函数，列表转化元组使用tuple()函数。 1.4.2 结合元组的列表生成式元组不能通过和列表一样的生成式来创建，但是列表生成式中可以加入元组。 1.5 Set(集合)集合是一个无序的不重复元素序列，可以使用大括号{}或者set()函数创建集合，但是创建一个空集合必须要用set()而不是{}，因为{}是用来创建一个空字典的。 因为用的不多，简单记录一下，集合有三个特点 集合的元素是无序的。 如：{1, 2, 3}和{1, 3, 2}是完全相等的。 集合的元素是不重复的。 如：{1, 1, 1}只会保留一个值，打印结果为{1}。 集合的元素必须是不可变数据类型（数字、字符串和元组）。 如：{1, [1, 2]}打印结果会报错，因为列表是可变数据类型。 1.6 Dictionary(字典)字典用的比较多，其存储特点是键值对的形式出现（Key-Value），一个键对应一个值，每个键值对用冒号隔开，每对键值对用逗号隔开。字典也可以存储任意类型数据。 需要注意的一点，在字典数据类型中，键必须是唯一的，但是值可以不唯一，值可以取任何数据类型，但是键必须是不可变数据类型。 1.6.1 字典创建和修改字典数据可以通过花括号直接创建，或者通过dict()函数创建（非空）。 通过访问键来访问对应的值，添加、删除和修改的方法均类似。 1.6.2 字典的方法函数记录一下常用的字典方法函数，就不演示了，具体用到的时候可以查。 方法 描述 dict.keys() 返回所有键的列表dict_key对象，可以转换成列表、元组和集合 dict.values() 返回所有值的列表dict_values对象，也可以转换成列表、元组和集合 dict.items() 返回所有键值对的列表dict_items对象，同样可以转换成列表、元组和集合 dict.clear() 清空字典，无返回值，只剩下空字典 dict.get(key, default&#x3D;None) 返回字典中指定key的value值，如果key不存在，则返回default值 dict.pop(key, default&#x3D;None) 删除指定的key并返回对应的value值，如果key不存在，则返回default值 简单小结一下关于python数据类型的注意点： 1.可变数据类型：List、Dictionary、Set 2.不可变数据类型：Tuple、Numbers、String。不可变体现在索引这些变量名的元素不可被重新赋值 3.下标索引：String、List、Tuple支持下标索引，Dictionary是通过Key值索引 4.切片：String、List、Tuple支持切片操作","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"编程自学","slug":"编程自学","permalink":"http://www.shelven.com/categories/%E7%BC%96%E7%A8%8B%E8%87%AA%E5%AD%A6/"}],"tags":[{"name":"python","slug":"python","permalink":"http://www.shelven.com/tags/python/"}]},{"title":"深度学习笔记","slug":"深度学习笔记","date":"2022-09-19T16:58:05.000Z","updated":"2022-12-03T16:21:13.000Z","comments":true,"path":"2022/09/20/a.html","link":"","permalink":"http://www.shelven.com/2022/09/20/a.html","excerpt":"开坑记录一下学习人工智能(深度学习为主)的笔记，方便以后回顾学习~整理自点头教育","text":"开坑记录一下学习人工智能(深度学习为主)的笔记，方便以后回顾学习~整理自点头教育 人工智能的趋势展望1. 前沿技术Transformer模型基于自注意力机制，有效提高模型训练效率 由Google的Ashish Vaswani等人和多伦多大学的Aidan N.Gomez于2017年首次提出，是一种基于自注意力机制（在Transformer模型中起基础作用，可减少对外部信息的依赖,更擅长捕捉数据或特征的内部关系，优化模型训练结果）的深度学习模型，该模型主要由编码器和解码器构成，模型本身并行度较高，在精度和性能上均要优于传统的循环神经网络（RNN）和卷积神经网络（CNN）。Transformer模型在简单语言问答和语言建模任务上有着较好表现。 BERT模型基于Transformer Encoder构建的预测模型 由Google于2018年提出，是基于Transformer Encoder构建的一种模型。模型基本思想：给定上下文来预测下一个词。BERT模型架构是由多接口组成的Transformer编码器层，即全连接神经网络增加自注意力机制。对于序列中的每个输入标记，每个接口计算键值和查询向量，相关向量用于创建加权表示，合并同一层中所有接口输出并通过全连接层运行。每个层使用跳跃连接进行包装，之后将层归一化处理。 自监督学习将无监督问题转化为有监督问题的方法 旨在对于无标签数据，通过设计辅助任务来挖掘数据自身的表征特性作为监督信息，来提升模型的特征提取能力，将无监督问题转化为有监督问题的方法。 说到自监督就顺便说下有监督学习和无监督学习，有监督给定的结果是确定的；无监督是实际应用场景中最多的，结果不确定，根据类别未知(没有被标记)的训练样本解决模式识别中的各种问题。 类脑计算模拟大脑结构和信息加工过程，提高机器认知能力、降低运行功耗 类脑计算(Brain-Inspired Computing): 又称神经形态计算，是借鉴生物神经系统信息处理模式和结构的计算理论、体系结构、芯片设计以及应用模型与算法的总称。类脑计算可模拟人类大脑信息处理方式，以极低的功耗对信息进行异步、并行、高速和分布式处理，并具备自主感知、识别和学习等多种能力，是实现通用人工智能的途径之一。 AI大模型包含万亿量级参数的预训练模型，显著降低模型训练成本 AI大模型(Foundation Models):是指经过大规模数据训练且在经微调后即可适应广泛下游任务的模型。随着参数规模不断扩大，AI大模型在语言、视觉、推理、人机交互等领域涌现出新能力。 2. 人工智能的产业融合人工智能与元宇宙元宇宙（Metaverse）：本质上是对现实世界的虚拟化、数字化过程，其主要包括基础设施、人机交互、空间计算等七层架构，其中计算机视觉、AI芯片和嵌入式AI等人工智能技术及基础设施共同助力元宇宙加速落地。元宇宙涵盖芯片、云计算、技术平台、通信、智能设备、内容服务等庞大生态系统。 人工智能与生命科学AlphaFold是由谷歌旗下DeepMind团队基于深度学习算法的蛋白质结构预测的人工智能系统，其被视作人工智能深入到生物领域的一大突破。目前AlphaFold已对98.5%的人类蛋白质结构做出预测，此外还对于大肠杆菌、果蝇、斑马鱼、小鼠等研究时常用生物的蛋白质结构进行预测。（这块比较感兴趣，有空继续了解一下） 人工智能与新冠疫情Eva是用于检测入境旅客新冠病毒的强化学习系统，其由美国南加州大学、美国宾夕法尼亚学、AgentRisk以及希腊相关专家合作开发。 2020年，Eva系统被部署到希腊所有入境口岸（机场、港口、车站等），用于识别限制新冠无症状旅客入境。（这里存疑，用算法确定新冠受检者，虽然在一定程度上能缓解新冠检测用品有限的不利情况，但是无疑会漏掉部分入境的可能感染者，一旦感染爆发得不偿失） 人工智能与半导体AI与EDA紧密融合，促使芯片PPA结果更加稳定 为使PPA优化结果更佳，同时为应对芯片安全性需求提升、设计规模攀升及工艺节点微缩等趋势，EDA厂商开始利用AI技术解决半导体芯片设计问题。在EDA中，数据快速提取模型、布局和布线、电路仿真模型、 PPA优化决策等环节均有AI技术参与。 人工智能与碳中和人工智能在预测、监测、优化三大环节赋能碳中和 当前，碳中和已获得全球超过40个国家和地区承诺，其中大部分国家宣布将于2050年左右实现碳中和目标。从整体来看，人工智能将从预测、监测、优化三大环节助力碳中和，如预测未来碳排放量、实时监测碳足迹、优化工作流程等。 人工智能与冬奥会2022年2月，第24届冬季奥林匹克运动会成功在北京举办。人工智能技术在冬奥会开幕式、比赛项目、运动员训练等多个场景实现应用，助力科技冬奥目标实现。 3. 人工智能产业发展的路径探究人工智能在“科研成果—商业化落地”过程中依然存在诸多挑战 伦理与安全人工智能发展面临隐私保护与算法合规使用等方面挑战 随着人工智能技术的高速发展与普及应用，由其产生的伦理与安全问题日益受到关注。人工智能不但延续信息技术的伦理问题，又因深度学习算法具有不透明、难解释、自适应、运用广泛等特征而在基本人权、社会秩序、国家安全等方面产生新问题。 国家间技术限制国家间技术限制阻碍人工智能技术进步 当前，开源深度学习框架、开源工具集、开源应用软件快速发展，国际间AI技术交流不断深入，但部分国家和政府间组织为保持自身AI 技术优势，限制AI技术交流。如美国在2021年6月发布《创新与竞争法案》，在AI、无人机、芯片等多个领域限制与中国合作；美国商务部于2019年10月和2020年5月将商汤科技、科大讯飞等多家中国AI公司加入其实体清单，实施投资限制；2022年白宫修订“关键和新兴技术（CET）清单”，对AI技术具体分类并实行技术封锁。欧盟则于2021年9月通过最新出口管制法规，内容涵盖人脸识别等AI技术。 上述相关政策与未来人工智能发展趋势背道而驰，不利于各国开展技术合作。 深度学习算法部分内容迁移学习将知识由源域迁移至目标域，提高机器学习效率 迁移学习（Transfer Learning,TL）：是一种机器学习方法,是把已训练好的模型参数迁移到新的模型来帮助新模型训练，其核心目标是将知识从源域迁移到目标域，让机器也可以做到“触类旁通”。 迁移学习的主要优点是节省模型训练时间，且在目标域训练数据不足时，模型仍能取得较好的性能。 迁移学习的训练框架可以概括为：1）选择源模型，从可用模型中挑选出预训练模型；2）重用模型，在目标域中使用源模型进行训练；3）调整模型。模型可以在目标数据集中对输入-输出进行选择性微调，以让其适应目标任务。 实现迁移学习的方式主要包括样本迁移、特征迁移、模型迁移。目前，迁移学习主要应用在计算机视觉、自然语言处理等领域。 神经网络与卷积神经网络神经网络具有适应性简单单元组成的广泛并行互联网络 神经网络（Neural Network）：由数千甚至数百万个紧密互连的简单处理节点组成，其主要包括输入层（输入数据）、中间层&#x2F;隐藏层（学习复杂决策边界）和输出层（输出结果）。 神经网络可以用于回归，但主要应用于分类问题。如下图所示：输入层表示输入图像（64维向量），中间层使用Sigmoid等非线性函数对于输入层数据进行计算，输出层使用非线性函数对于中间层数据进行计算。 神经网络通过采取设置中间层的方式，利用单一算法学习各种决策边界，调节中间层数量以及层的深度，神经网络可学习更复杂的边界特征，而得出更加准确的结果。 卷积神经网络以图像识别为核心的深度学习算法 卷积神经网络（Convolutional Neural Network,CNN）：由数千甚至数百万个紧密互连的简单处理节点组成，其主要包括输入层、卷积层、池化层、全连接层和输出层，适合处理图片、视频等类型数据。 1980年，日本科学家福岛邦彦提出一个包含卷积层、池化层的神经网络结构。在此基础上，Yann Lecun将BP算法应用到该神经网络结构的训练上，形成当代卷积神经网络的雏形；1988年，Wei Zhang提出第一个二维卷积神经网络：平移不变人工神经网络（SIANN），并将其应用于检测医学影像；1998年Yann LeCun及其合作者构建了更加完备的卷积神经网络LeNet-5并在手写数字的识别问题中取得成功。 卷积层：图片输入转化成RGB对应的数字，然后通过卷积核做卷积，目的是提取输入中的主要特征，卷积层中使用同一卷积核对每个输入样本进行卷积操作； 池化层：作用在于减小卷积层产生的特征图尺寸（压缩特征映射图尺寸有助于降低后续网络处理的负载）； 全连接层：计算激活值然后通过激活函数计算各单元输出值（激活函数包括Sigmoid、tanh、ReLU等） 输出层：使用似然函数计算各类别似然概率。 循环神经网络与图神经网络循环神经网络用于处理序列数据的神经网络 循环神经网络（Recurrent Neural Network,RNN）：是一类以序列数据（指相互依赖的数据流，比如时间序列数据、信息性的字符串、对话等）为输入，在序列的演进方向进行递归且所有节点（循环单元）按链式连接的神经网络。目前，语言建模和文本生成、机器翻译、语音识别、生成图像描述、视频标记是RNN应用最多的领域。 图神经网络用于处理图结构数据的神经网络 图神经网络（Graph Neural Networks，GNN）：将图数据和神经网络进行结合，在图数据上面进行端对端的计算，具备端对端学习、擅长推理、可解释性强的特点。 图神经网络发展出多个分支，主要包括图卷积网络、图注意力网络、图自编码器、图生成网络和图时空网络等。 图神经网络的训练框架如下：首先，每个节点获取其相邻节点的所有特征信息，将聚合函数（如求和或取平均）应用于这些信息。 聚合函数的选择必须不受节点顺序和排列的影响。之后，将前一步得到的向量传入一个神经网络层（通常是乘以某个矩阵），然后使用非线性激活函数（如ReLU）来获得新的向量表示。 目前，图神经网络在许多领域的实际应用中都展现出强大的表达能力和预测能力，如物理仿真、科学研究、生物医药、金融风控等。 长短期记忆神经网络在RNN中加入门控机制，解决梯度消失问题 长短期记忆神经网络（Long Short-Term Memory,LSTM）：LSTM是一种特殊的循环神经网络（RNN）。传统RNN在训练中，随着训练时间的加长和层数的增多，很容易出现梯度爆炸或梯度消失问题，导致无法处理长序列数据，LSTM可有效解决传统RNN“长期依赖”问题。 LSTM由状态单元、输入门（决定当前时刻网络的输入数据有多少需要保存到单元状态）、遗忘门（决定上一时刻的单元状态有多少需要保留到当前时刻）、输出门（控制当前单元状态有多少需要输出到当前输出值）组成，以此令长期记忆与短期记忆相结合，达到序列学习的目的 LSTM应用领域主要包括文本生成、机器翻译、语音识别、生成图像描述和视频标记等。（我前一篇博客做的tts用了Tacotron2，其编码器模块中就引入了一个双向LSTM层） 自编码器通过期望输出等同于输入样本的过程，实现对输入样本抽象特征学习 典型深度无监督学习模型包括自编码器、受限波尔兹曼机与生成对抗网络。 自编码器（Autoencoder,AE）：包括编码器和解码器两部分，其中编码器将高维输入样本映射到低维抽象表示，实现样本压缩与降维；解码器将抽象表示转换为期望输出，实现输入样本的复现。自码器的输入与期望输出均为无标签样本，隐藏层输出则作为样本的抽象特征表示。 自编码器仅通过最小化输入样本与重构样本之间的误差来获取输入样本的抽象特征表示，无法保证自编码器提取到样本的本质特征。为避免上述问题，需要对自编码器添加约束或修改网络结构，进而产生稀疏自编码器、去噪自编码器、收缩自编码器等改进算法。 自编码器凭借其优异的特征提取能力，主要应用于目标识别、文本分类、图像重建等诸多领域。 生成对抗网络生成对抗网络（Generative Adversarial Network,GAN）：通过使用对抗训练机制对两个神经网络进行训练，避免反复应用马尔可夫链学习机制带来的配分函数计算，明显提高应用效率。 生成对抗网络包含一组相互对抗模型—判别器和生成器，判别器目的是正确区分真实数据和生成数据，使得判别准确率最大化，生成器是尽可能逼近真实数据的潜在分布。生成器类似于造假钞的人，其制造出以假乱真的假钞，判别器类似于警察，尽可能鉴别出假钞，最终造假钞的人和警察双方在博弈中不断提升各自能力。（同样是我前面一篇博客语音合成tts中，应用的HiFiGAN就是基于GAN的声码器）","categories":[{"name":"深度学习","slug":"深度学习","permalink":"http://www.shelven.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"人工智能","slug":"人工智能","permalink":"http://www.shelven.com/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"}]},{"title":"go-cqhttp扫码登录异常的解决方法","slug":"go-cqhttp扫码登录异常的解决方法","date":"2022-09-09T11:43:05.000Z","updated":"2023-08-04T15:08:20.000Z","comments":true,"path":"2022/09/09/b.html","link":"","permalink":"http://www.shelven.com/2022/09/09/b.html","excerpt":"假期用自己的服务器搭建了一个基于 Nonebot2 和 go-cqhttp 框架的QQ聊天机器人，使用的开源项目是绪山真寻bot（项目地址点击这里）。因为项目提供了一键安装包，这里就不详细说安装过程了，简单说下首次运行或者切换bot QQ号会碰到的go-cqhttp扫码登陆异常的问题。","text":"假期用自己的服务器搭建了一个基于 Nonebot2 和 go-cqhttp 框架的QQ聊天机器人，使用的开源项目是绪山真寻bot（项目地址点击这里）。因为项目提供了一键安装包，这里就不详细说安装过程了，简单说下首次运行或者切换bot QQ号会碰到的go-cqhttp扫码登陆异常的问题。 注：写这篇博客的时候go-cqhttp版本为1.0.0，往后的版本已适配签名服务器，本方法已不再适用，详情请看[go-cqhttp登录异常（错误码45）的解决办法](https://www.shelven.com/2023/08/04/a.html） 问题描述：首次运行或者切换bot QQ号后，go-cqhttp会要求需要登录验证，由于纯linux系统无法使用浏览器抓取滑条，因此会自动跳转到手机QQ扫码验证。 但是扫码会提示两个设备不在一个网络，无法登录。（很明显我的云端linux服务器不可能和手机能在一个网络中） 这个问题是腾讯QQ安全机制引起的，很明显是限制QQ机器人的手段，也就是你扫码的网络环境要和服务器的网络环境一致才可以登录。 解决方法：第一步 下载和运行win版go-cqhttp项目下载地址Releases · Mrs4s&#x2F;go-cqhttp (github.com) 选择下载最新版本的go-cqhttp_windows_amd64，解压后有三个文件 双击exe文件，提示要在power shell中运行，确认，自动生成go-cqhttp.bat的批处理文件 双击运行go-cqhttp.bat，选择013，回车 修改生成的config.yml配置文件（主要就是改bot QQ号和密码） 修改之后再次运行go-cqhttp.bat，看到连接成功，网络没有问题即可 前面的反向代理失败统统不用管（因为我没有设置），我们只需要win版go-cqhttp提供设备登录信息文件（device.json）和密钥信息文件（session.token）即可。这两个文件特别重要，尤其是device.json，缺一个都将会导致登陆失败。 第二步 替换文件替换linux服务器go-cqhttp文件夹下的device.json和session.token（有的话替换，无的话直接加进去）文件，config文件最好不要替换，你只要改一下qq号和密码就行，防止底下设置的反向连接端口出错（很重要！！）。 重新在linux上启动go-cqhttp，问题解决。","categories":[{"name":"QQ机器人","slug":"QQ机器人","permalink":"http://www.shelven.com/categories/QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/"}],"tags":[{"name":"qq bot","slug":"qq-bot","permalink":"http://www.shelven.com/tags/qq-bot/"},{"name":"go-cqhttp","slug":"go-cqhttp","permalink":"http://www.shelven.com/tags/go-cqhttp/"}]},{"title":"深度学习——语音合成tts笔记（下）","slug":"深度学习——语音合成tts笔记（下）","date":"2022-09-08T19:32:17.000Z","updated":"2022-12-03T16:20:43.000Z","comments":true,"path":"2022/09/09/a.html","link":"","permalink":"http://www.shelven.com/2022/09/09/a.html","excerpt":"（接上篇博客）做完数据集，我们手里现在有训练集（train set）和测试集（test set）音频文件，以及对应的拼音文本，接下来就可以跑Tacotron2来训练模型了。","text":"（接上篇博客）做完数据集，我们手里现在有训练集（train set）和测试集（test set）音频文件，以及对应的拼音文本，接下来就可以跑Tacotron2来训练模型了。 2. 训练模型 &amp; 合成语音Tacotron2项目地址点击这里 HiFi-GAN项目地址点击这里 本篇博客训练模型&amp;合成语音基于以上两个开源项目，再次感谢原作者！ 2.1 Tacotron2简介简单讲一讲Tacotron2，它是由google推出的从文本中合成语音的神经网络结构，也就是一个语音合成（Text To Speech，TTS）框架，可以实现端到端的语音合成。Tacotron2与其前代Tacotron类似，比较重要的一个区别是在编码器模块中引入了一个双向LSTM层和卷积层，相比原来的CBHG堆叠结构和GRU循环层更为简洁。 模型主要由两部分组成： 声谱预测网络：特征预测网络，包含一个编码器和一个引入注意力机制（attention）的解码器，作用是将输入字符序列预测为梅尔频谱的帧序列。 声码器（vocoder）：将预测的梅尔频谱帧序列转换产生时域波形样本，算是WaveNet的修订版。 原项目中的声码器我们暂时不用（上面地址提供的Tacotron 2就是没有wavenet的版本），因为有更好的工具HiFi-GAN。 代码实现详解有很多博客可以参考（(16条消息) Tacotron2 论文 + 代码详解_HJ_彼岸的博客-CSDN博客_tacotron2），这里只要知道我们是用Tacotron2生成梅尔频谱，在此基础上结合我们输入的字符序列（也就是对应的拼音文本）训练模型。 特别注意一点：Tacotron 2是基于tensorflow1.5版本运行的，如果是自己电脑上配置环境的话，务必将python版本降到3.7以下！否则将会无法安装tensorflow1.5，除了tensorflow有硬性版本要求之外，其他依赖都可以安装最新版本——反复配置环境治好了我的精神内耗 如果你不想和我一样配置好几天环境的话，我推荐最好使用google colab，一键解决环境问题，下面会说到。 2.2 HiFi-GAN简介简单说下，声码器的作用就是将梅尔频谱转换成语音信号，和上面是对应的。 为什么我们没有用上面Tacotron2的声码器呢，主要原因就是现在有很多更优秀的声码器供我们选择。 早期比较有名的声码器WaveNet，它是一种自回归卷积神经网络，合成的效果非常好可以说和人类发声非常相似，但有个致命的缺点——合成速度太慢。直到2020年项目作者开发了这套基于GAN（生成式对抗网络）的神经网络声码器，从作者的论文里可以找到，HiFi-GAN在GPU上可以以比实时速度快167.9倍的速度生成22.05 kHz的语音，在CPU上可以以比自回归模型快13.4倍的速度生成语音，这就是它的牛逼之处。 HiFi-GAN主要有一个生成器和两个判别器，具体结构就不说了，知道一下生成器和两个判别器是通过对抗学习的方法训练的，新增加了两个损失函数来提高训练的稳定性和提高模型的性能。有能力的小伙伴可以看原论文（HiFi-GAN: Generative Adversarial Networks for Efficient and High Fidelity Speech Synthesis）了解详情。 需要注意一下作者使用VCTK数据集进行实验，测试了3个模型（V1、V2和V3），简单来说V1是最优模型，作者发布的预训练模型以及相应的配置文件都是以V1模型为基础的。我在这篇博客使用的HiFi-GAN模型g_02500000就是作者的预训练模型，配置文件为config.json。 HiFi-GAN预训练模型与配置文件下载地址： UNIVERSAL_V1 - Google 云端硬盘 2.2 注册谷歌colab和谷歌云盘训练模型是一件非常消耗算力的过程，因为涉及到图形处理，我们要用GPU进行加速。我的笔记本GPU非常拉跨，跑模型立马爆显存，因此我个人比较推荐白嫖谷歌colab上面的免费专业级GPU（Nvidia K80），免费用户只能用这一种GPU，至少比我的笔记本好多了。 需要注意下colab最大连接时长是12小时，12小时后会强行关闭GPU连接，因此需要注意下你是什么时候开始用GPU跑模型的，并且及时保存数据。关闭后要等待24小时才可以继续使用GPU，所以理论上可以用三个号不间断白嫖GPU资源（我特地申请了4个谷歌号），你只需要偶尔切换屏幕看下是否有谷歌的人机验证就行。 这里为什么还推荐谷歌云盘呢，是因为谷歌云盘可以挂载到colab上，这样调用文件就非常方便，及时保存不用担心数据丢失。谷歌云盘提供15GB的免费空间，如果保存模型比较频繁的话可能不够用，但是我们可以申请无限量的团队盘（共享云端硬盘）薅羊毛必备。 2.3 使用colab训练模型 &amp; 合成语音我使用的colab笔记文件因为时间久远已经找不到出处了（后续如果找到会标注出来，向原作者致谢！），为了跑中文语音模型，自己也修改了很多参数和步骤，一一解释过于麻烦了….感兴趣的小伙伴可以看笔记文件。具体操作流程在底下的视频（或者点击此处看我的B站视频）。 Your browser does not support the video tag. 所有工程文件和资源如下： Tacotron2+HiFiGAN打包 链接：https://pan.baidu.com/s/1ngCUvifQM6ETwuG-NFQeGA 提取码：z6h3 400条派蒙语音测试集 链接：https://pan.baidu.com/s/1g0C0Ck4P_BxdTgMirKRc-g 提取码：5ew1 1800条派蒙语音训练集 链接：https://pan.baidu.com/s/1IDA4lppAJGHnophQAwkxNg 提取码：f2xk 需要提及一点，colab在2022年8月1号之后不再支持tensorflow1.5，请教大佬之后我将Tacotron2项目下超参数配置hparams.py改成如下即可正常运行： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788import tensorflow as tffrom text import symbolsclass hparams: def __init__(self) -&gt; None: super().__init__() ################################ # Experiment Parameters # ################################ epochs = 3 #500 iters_per_checkpoint = 1000 seed = 1234 dynamic_loss_scaling = True fp16_run = False distributed_run = False dist_backend = &quot;nccl&quot; dist_url = &quot;tcp://localhost:54321&quot; cudnn_enabled = True cudnn_benchmark = True ignore_layers = [&#x27;embedding.weight&#x27;] ################################ # Data Parameters # ################################ load_mel_from_disk = False #实际上是区别用 numpy读wav ，还是用scipy读wav training_files = &#x27;filelists/zh_audio_text_train_filelist.txt&#x27; validation_files = &#x27;filelists/zh_audio_text_val_filelist.txt&#x27; text_cleaners = [&#x27;english_cleaners&#x27;] ################################ # Audio Parameters # ################################ max_wav_value = 32768.0 sampling_rate = 22050 #22050 filter_length = 1024 hop_length = 256 win_length = 1024 n_mel_channels = 80 mel_fmin = 0.0 mel_fmax = 8000.0 ################################ # Model Parameters # ################################ n_symbols = len(symbols) symbols_embedding_dim = 512 # Encoder parameters encoder_kernel_size = 5 encoder_n_convolutions = 3 encoder_embedding_dim = 512 # Decoder parameters n_frames_per_step = 1 # currently only 1 is supported decoder_rnn_dim = 1024 prenet_dim = 256 max_decoder_steps = 1000 gate_threshold = 0.5 p_attention_dropout = 0.1 p_decoder_dropout = 0.1 # Attention parameters attention_rnn_dim = 1024 attention_dim = 128 # Location Layer parameters attention_location_n_filters = 32 attention_location_kernel_size = 31 # Mel-post processing network parameters postnet_embedding_dim = 512 postnet_kernel_size = 5 postnet_n_convolutions = 5 ################################ # Optimization Hyperparameters # ################################ use_saved_learning_rate = False learning_rate = 1e-3 weight_decay = 1e-6 grad_clip_thresh = 1.0 batch_size = 2 #64 mask_padding = True # set model&#x27;s padded outputs to padded valuesdef create_hparams(hparams_string=None, verbose=False): return hparams 2.4 注意事项 训练的epoch不是越多越好，我个人经验epoch 超过400会发生过拟合，测试集loss会越来越大，当然这和数据集有着密切的关系。过拟合具体表现为合成语音有部分字无法发音。 每个epoch自动保存模型且会覆盖谷歌云盘的原文件，因此务必要隔一段时间保存到本地，以免错过最佳模型（或者你改代码，比如50 epoch保存一次）。 对于文本的处理，需要参考Tacotron 2项目下的text文件夹中的四个文件cleaners.py、cmudict.py、numbers.py和symbols.py，我是进行了最简单的设置，可以根据自己需要更改。 如果你原封不动用的我的工程文件，想在本地运行合成语音的推理程序，务必将cleaners选择english_cleaner（否则会出现古神的低语）。 如果你是自己训练模型，个人认为筛选数据集非常重要，尽量把语气词和背景噪音去掉，否则效果会很差。 训练模型的参数可以根据GPU自行调整，batch_size是影响训练速度最大的因素，当你不确定显卡性能如何，请务必确保运行一段时间后显存没有炸（我就是运行以后直接睡觉了，醒来发现显存在运行半小时的时候炸了，我心态也炸了） 其实这个模型效果仍然不是很让我满意，有电音的问题可以用HiFi-GAN再训练过滤一下，我是直接用的官方预训练模型，因此效果会差一点。由于现在开学了要忙着搞开题，最近也没时间再优化模型了，以后有想法会继续补充。 我自己有考虑过将模型传到服务器，用服务器cpu运行推理，摆脱colab的限制，但是服务器不堪重负…一运行推理运存就炸…github上有不少前人做过纯cpu推理的GUI（比如MoeTTS），亲测可行。 哦对了，我在做这个项目的时候，发现已经有人基于VITS做了同个游戏的端到端语音合成，甚至开发公布了API…不得不感慨这些大佬真的用心了，有API就意味着有更多的使用方式。我搭了个顺风车，通过搭建QQ机器人，写了个原神语音合成插件，效果是可以指定原神任何角色合成任意想说的语音并且发在QQ群里（没有什么技术含量，内行看个笑话），有空尽量更新出来吧！ 2022&#x2F;9&#x2F;10更新 已将插件更新至我的github仓库，地址Phantom-Aria&#x2F;zhenxun_plugin_tts: 真寻bot插件，原神角色语音合成tts (github.com) 由于代码写的比较幼稚，就不申请官方插件索引了 适配绪山真寻bot 功能：指定某原神角色合成想要说的话 指令：[角色名]说&#x2F;说过[文本] 2022&#x2F;10&#x2F;7更新由于原API已下线，此插件不再生效，后续再更新","categories":[{"name":"深度学习","slug":"深度学习","permalink":"http://www.shelven.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"google colab","slug":"google-colab","permalink":"http://www.shelven.com/tags/google-colab/"},{"name":"Tacotron2","slug":"Tacotron2","permalink":"http://www.shelven.com/tags/Tacotron2/"},{"name":"HiFiGAN","slug":"HiFiGAN","permalink":"http://www.shelven.com/tags/HiFiGAN/"}]},{"title":"深度学习——语音合成tts笔记（上）","slug":"深度学习——语音合成tts笔记（上）","date":"2022-09-07T19:15:04.000Z","updated":"2022-12-03T16:20:24.000Z","comments":true,"path":"2022/09/08/a.html","link":"","permalink":"http://www.shelven.com/2022/09/08/a.html","excerpt":"两个月的暑假已经结束了，假期里自学了一点深度学习的内容，很多地方还是一知半解的，这里稍微记录一下。之前刷到一个很有意思的语音合成视频，抱着试试看的心态想自己做一个模型，于是给自己挖了一个大坑……涉及到深度学习的知识我还需要慢慢学，因此本篇博客重点还是记录下自己的踩坑操作原理部分以后搞明白了再更新","text":"两个月的暑假已经结束了，假期里自学了一点深度学习的内容，很多地方还是一知半解的，这里稍微记录一下。之前刷到一个很有意思的语音合成视频，抱着试试看的心态想自己做一个模型，于是给自己挖了一个大坑……涉及到深度学习的知识我还需要慢慢学，因此本篇博客重点还是记录下自己的踩坑操作原理部分以后搞明白了再更新 总的来说，我通过拆包游戏客户端获得5.6万条语音文件，通过github上的一个声纹识别项目分离其中一个角色的语音文件。接着用百度的语音识别API将语音识别为文本后，人工校正一遍文本，然后转换为拼音+音标，以此制作语音数据训练集和测试集。基于开源项目Tacotron2训练角色语音模型，经历400 epoch后初步训练成型，最后基于HiFiGAN合成语音。整个后半段流程是在google colab上完成的，为了完成模型训练我申请了4个谷歌账号…不得不说白嫖的GPU真香~ 1. 制作数据集可以说整个项目大部分时间花费在整理数据集上，根据我自己的经验，数据集的语音长度在2秒-10秒之间效果最好，数量大约在2000条左右（为了涵盖尽可能多的汉字发音）。需要注意一点，不管拆包的原语音采样率如何，都要统一重采样到22050 hz，这是Tacotron2训练模型的要求。 1.1 Extractor2.5 + vgmstream-win拆包首先是这款国内游戏的拆包，所有角色的语音文件都在目录D:\\Genshin Impact\\Genshin Impact Game\\YuanShen_Data\\StreamingAssets\\Audio\\GeneratedSoundBanks\\Windows\\Chinese下，我们使用软件Extractor2.5进行音频文件拆包。 Extractor2.5是个非常好用的游戏解包工具，我们将所有pck源文件所在目录输进去（可以批量选中文件），确定输出目录，点击开始即可。 运行结束之后可以看到这个游戏拆包有56958条语音文件…点击左下角反选，全部解压到自己的文件夹中。 但是你会发现解压出来的wav文件无法打开，需要使用vgmstream进行解密和转码（项目地址戳这里）。 可以看到vgmstream-win文件夹只有一个可执行程序test.exe，其他都是dll库文件。 这个test.exe是不能直接运行的，需要把程序拖到刚才拆包的语音文件上，但是几万条语音我们不可能一个个拖过去，因此我们在语音的文件夹下，写一个如下的批处理文件（命名为批处理.bat），运行批处理就可以了。 12345@echo offfor /r %%i in (*.wav) do ( &quot;D:\\zhuomian\\vgmstream-win\\test.exe&quot; &quot;%%~nxi&quot; #路径改成你自己的，注意路径不能有中文)pause 运行后生成的wav.wav文件就可以正常播放了，所有音频采样率均为48000Hz（采样率很重要，贯穿整个项目）。 1.2 基于Tensorflow的声纹识别这部分内容来源于github（项目地址戳这里），作者基于tensorflow做了个声纹识别模型，通过把语音数据转换短时傅里叶变换的幅度谱，使用librosa计算音频的特征，以此来训练、评估模型。因为我只用到了对比部分，因此我下载了作者预训练的模型，以及对声纹对比文件infer_contrast.py做了修改。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162import argparseimport functoolsimport numpy as npimport tensorflow as tffrom utils.reader import load_audiofrom utils.utility import add_arguments, print_argumentsimport os,shutilimport gcos.environ[&#x27;TF_CPP_MIN_LOG_LEVEL&#x27;]=&#x27;2&#x27;parser = argparse.ArgumentParser(description=__doc__)add_arg = functools.partial(add_arguments, argparser=parser)add_arg(&#x27;audio_path1&#x27;, str, &#x27;audio_db/Paimon.wav&#x27;, &#x27;标准的派蒙音频&#x27;) # 自己准备的标准音频，下面两个也是add_arg(&#x27;audio_path2&#x27;, str, &#x27;audio_db/Klee.wav&#x27;, &#x27;标准的可莉音频&#x27;)add_arg(&#x27;audio_path3&#x27;, str, &#x27;audio_db/Kokomi.wav&#x27;, &#x27;标准的心海音频&#x27;)add_arg(&#x27;input_shape&#x27;, str, &#x27;(257, 257, 1)&#x27;, &#x27;数据输入的形状&#x27;)add_arg(&#x27;threshold&#x27;, float, 0.8, &#x27;判断是否为同一个人的阈值&#x27;)add_arg(&#x27;model_path&#x27;, str, &#x27;models1/infer_model.h5&#x27;, &#x27;预测模型的路径&#x27;) # 作者的预训练模型args = parser.parse_args()# 加载模型model = tf.keras.models.load_model(args.model_path,compile=False)model = tf.keras.models.Model(inputs=model.input, outputs=model.get_layer(&#x27;batch_normalization&#x27;).output)# 数据输入的形状input_shape = eval(args.input_shape)# 预测音频def infer(audio_path): data = load_audio(audio_path, mode=&#x27;test&#x27;, spec_len=input_shape[1]) data = data[np.newaxis, :] feature = model.predict(data) return featureif __name__ == &#x27;__main__&#x27;: # 预测的两个音频文件 feature1 = infer(args.audio_path1)[0] feature2 = infer(args.audio_path2)[0] feature3 = infer(args.audio_path3)[0] datapath = &quot;./test2&quot; #上传到集群的解包音频文件位置 dirs = os.listdir(datapath) for audio in dirs: personx = &#x27;test2/%s&#x27; % (audio) featurex = infer(personx)[0] # 对角余弦值 dist1 = np.dot(feature1, featurex) / (np.linalg.norm(feature1) * np.linalg.norm(featurex)) if dist1 &gt; args.threshold: print(&quot;%s 符合派蒙模型，相似度为：%f&quot; % (personx, dist1)) shutil.move(&quot;./test2/%s&quot; % (audio),&quot;./dataset/Paimon&quot;) # 移动音频文件，路径自选 else: dist2 = np.dot(feature2, featurex) / (np.linalg.norm(feature2) * np.linalg.norm(featurex)) if dist2 &gt; args.threshold: print(&quot;%s 符合可莉模型，相似度为：%f&quot; % (personx, dist2)) shutil.move(&quot;./test2/%s&quot; % (audio),&quot;./dataset/Klee&quot;) else: dist3 = np.dot(feature3, featurex) / (np.linalg.norm(feature3) * np.linalg.norm(featurex)) if dist3 &gt; args.threshold: print(&quot;%s 符合心海模型，相似度为：%f&quot; % (personx, dist3)) shutil.move(&quot;./test2/%s&quot; % (audio),&quot;./dataset/Kokomi&quot;) gc.collect() 需要注意一点，为了提高识别的准确性，这个项目要求的语音长度不能低于1.7s，因此我用ffmpeg将所有长度低于2s的短音频全部过滤了（这里不赘述实现过程）。 之后将三个角色的标准语音分别放在audio_db文件夹下，识别的原理是通过预测函数提取三个角色的音频特征值，对5.6万条音频分别比对三个角色的标准音频特征，求对角余弦值，在多次试验后选择了对角余弦值0.8，作为判断两条语音是否为同一个人的阈值。 直接在集群上运行infer_contrast.py，相似度高于0.8的音频则会被挑选到对应的dataset文件夹中。 实际上这个声纹识别的结果仅能作为参考，不能保证百分百正确，原因有很多： 1.声优都是怪物，一个人用好多相似的声线配了不同角色，导致无法分辨出不同角色的语音（假阳性）。 2.一句话的语调不同会表现出音频特征值不同，而这个算法下会导致对角余弦值偏小，从而判断成发声的是不同的人（假阴性）。 因此识别的结果需要进行人工校正，也就是需要自己听一遍到底是不是这个角色的语音&#x3D; &#x3D;（最好同下一步一起进行，省时间） 这里我验证并分离出2293条长度2秒以上的派蒙语音，以其中的1820条作为训练集，473条作为测试集。后续训练模型用到的时候会说。 1.3 基于百度语音识别API的语音转文本光有语音还不行，我们要训练模型就要有对应的文本。很多单机游戏（比如柚子社的游戏）有解包脚本，可以完整解出所有资源，其中就包括语音文件和对应的文本。但是解包有客户端的游戏不同，比如这款游戏发布不同版本的客户端，文件结构就会发生很大的改变，导致以前做的文件定位统统失效，而且包括文本在内的很多文件也是加密的，无法解出（也可能是我个人问题）。 因此，我们还是需要借助语音识别的软件将语音转成文本。这里涉及到另一个问题，不管多么强大的语音转文字技术，都是在已有的数据集基础上不断训练模型而产生的，游戏中有相当多新造的词（比如中二台词，游戏人名，地点等等），这在转化文本过程中是肯定无法百分百准确的，甚至会“空耳”产生歧义。 因此转文本这一步结束后需要人工校准，至少保证读音正确。 我是在百度AI开放平台申请了语音识别API，每个账号有200万次免费调用额度，但是限制并发数2（没办法，既然是白嫖就忍忍）。 查看官方放在github上的demo，改一改就可以调用API了（每当问我不会使用的时候都是看demo然后魔改2333）。 我这里以官网提供的asr_raw.py为例，直接下载，并修改成如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112# coding=utf-8import sysimport jsonimport timeimport gcimport osimport timeIS_PY3 = sys.version_info.major == 3 # 判断你用的是python3.x还是2.x版本，推荐还是用3.xif IS_PY3: from urllib.request import urlopen from urllib.request import Request from urllib.error import URLError from urllib.parse import urlencode timer = time.perf_counterelse: import urllib2 from urllib2 import urlopen from urllib2 import Request from urllib2 import URLError from urllib import urlencode if sys.platform == &quot;win32&quot;: timer = time.clock else: # On most other platforms the best timer is time.time() timer = time.timeAPI_KEY = &#x27;XXXXXXXX&#x27; # 改成你自己的，下面一条一样SECRET_KEY = &#x27;XXXXXXXX&#x27; FORMAT = &quot;wav&quot;; # 文件后缀只支持 pcm/wav/amr 格式CUID = &#x27;123456PYTHON&#x27;;RATE = 16000; # 固定值，这里一定一定要注意采样率DEV_PID = 1537; # 1537 表示识别普通话，使用输入法模型。根据文档填写PID，选择语言及识别模型ASR_URL = &#x27;http://vop.baidu.com/server_api&#x27;SCOPE = &#x27;audio_voice_assistant_get&#x27; # 有此scope表示有asr能力，没有请在网页里勾选，非常旧的应用可能没有class DemoError(Exception): pass&quot;&quot;&quot; TOKEN start &quot;&quot;&quot;TOKEN_URL = &#x27;http://aip.baidubce.com/oauth/2.0/token&#x27;# 核对tokendef fetch_token(): params = &#123;&#x27;grant_type&#x27;: &#x27;client_credentials&#x27;, &#x27;client_id&#x27;: API_KEY, &#x27;client_secret&#x27;: SECRET_KEY&#125; post_data = urlencode(params) if (IS_PY3): post_data = post_data.encode(&#x27;utf-8&#x27;) req = Request(TOKEN_URL, post_data) try: f = urlopen(req) result_str = f.read() except URLError as err: print(&#x27;token http response http code : &#x27; + str(err.code)) result_str = err.read() if (IS_PY3): result_str = result_str.decode() result = json.loads(result_str) if (&#x27;access_token&#x27; in result.keys() and &#x27;scope&#x27; in result.keys()): if SCOPE and (not SCOPE in result[&#x27;scope&#x27;].split(&#x27; &#x27;)): # SCOPE = False 忽略检查 raise DemoError(&#x27;scope is not correct&#x27;) return result[&#x27;access_token&#x27;] else: raise DemoError(&#x27;MAYBE API_KEY or SECRET_KEY not correct: access_token or scope not found in token response&#x27;)&quot;&quot;&quot; TOKEN end &quot;&quot;&quot;if __name__ == &#x27;__main__&#x27;: token = fetch_token() &quot;&quot;&quot; httpHandler = urllib2.HTTPHandler(debuglevel=1) opener = urllib2.build_opener(httpHandler) urllib2.install_opener(opener) &quot;&quot;&quot; for audio in range(1,1825): AUDIO_FILE = str(&#x27;/public/home/wlxie/test4voice/baiduyun/training_16K/train&#x27; + str(audio) + &#x27;.wav&#x27;) #路径改成自己的 speech_data = [] with open(AUDIO_FILE, &#x27;rb&#x27;) as speech_file: speech_data = speech_file.read() length = len(speech_data) if length == 0: raise DemoError(&#x27;file %s length read 0 bytes&#x27; % AUDIO_FILE) params = &#123;&#x27;cuid&#x27;: CUID, &#x27;token&#x27;: token, &#x27;dev_pid&#x27;: DEV_PID&#125; params_query = urlencode(params); headers = &#123; &#x27;Content-Type&#x27;: &#x27;audio/&#x27; + FORMAT + &#x27;; rate=&#x27; + str(RATE), &#x27;Content-Length&#x27;: length &#125; url = ASR_URL + &quot;?&quot; + params_query req = Request(ASR_URL + &quot;?&quot; + params_query, speech_data, headers) try: begin = timer() f = urlopen(req) result_str = f.read() except URLError as err: print(&#x27;asr http response http code : &#x27; + str(err.code)) result_str = err.read() #输出转文字结果 result_str = result_str.decode() result = json.loads(result_str) res = result[&#x27;result&#x27;][0] print(&#x27;train&#x27; +str(audio) + &#x27;.wav&#x27; + &#x27;识别结果：&#x27; + res) with open(&quot;training_1800_result.txt&quot;, &quot;a&quot;) as of: of.write(&#x27;train&#x27; + str(audio) + &#x27;.wav&#x27; + &quot;|&quot; + res + &#x27;\\n&#x27;) # 转成“路径|文本”的格式，方便人工校准 gc.collect() 这里也有一个大坑，这个语音转文本API要求音源采样率必须是16000Hz，前面说到我们解包得到的音频是48000Hz，而且后面训练模型要求采样率为22050Hz！也就是说如果我们现在把所有音频转成16000Hz的话，势必会对训练模型产生影响（高频可以转低频，但是低频转高频语音质量不会有一丁点儿的提升），因此我这边用拆包音频做了两个备份，一个是转成16000Hz，放在training_16K文件下，专门用于语音转文本；一个是转成22050Hz，放在training_22K文件下，专门用于后续训练模型。重采样仍然用我们的老朋友ffmpeg，因为就一行命令的事这里也不赘述了。 前面也说到这个API并发数限制为2，经常是用着用着就断开了（也是我比较笨比，不会写限制并发数发送请求的代码），所以我将训练集的1825个语音写了个小脚本，重命名为train1.wav-train1825.wav，所以才用了for循环一句一句调用API转文本，到哪个地方断了也可以迅速找出来并继续。 总之效果如下，训练集1825条语音和测试集473条语音全部转换为文本，且能清晰地看到一一对应关系： 一眼看效果还不错，为了保证准确率，将txt文件传回本地，人工校正吧（语气词部分本来是要去除的，但是工作量会比较大放弃了，起码要保证发音没问题）。 这个数据集因为不是标准的普通话数据集（标准数据集可以找标贝，就有那种纯合成的标准普通话），声优也有特殊的口癖和发音，额，这是无法避免的。 1.4 基于pypinyin的汉字转拼音因为后面训练模型的Tacotron2是基于英文模型开发出来的，我们无法直接用中文文本训练。一个行之有效的方法是将中文转换成拼音+数字声调的方式，这样数据就可以顺利地被载入。 这里推荐一下pypinyin模块，该模块安装比较方便（直接用pip），也是个非常实用和高质量的汉字拼音转换工具！ 我将人工校准后的txt文件传回集群，去掉前面的“|”之前的内容，再写个小脚本将所有标点符号删除，接着汉字转拼音，这里就记录下pypinyin的用法吧。 123456789from pypinyin import lazy_pinyin, Styleimport linecacheoutput_file = open(&quot;/public/home/wlxie/test4voice/baiduyun/training_pinyin.txt&quot;,&quot;w&quot;)readlist = list(range(1,1821)) # 人工校准的时候去掉了4条不是该角色的音频for i in readlist: text = linecache.getline(&quot;/public/home/wlxie/test4voice/baiduyun/cheat_training.txt&quot;,i) text = &quot; &quot;.join(lazy_pinyin(text, style=Style.TONE3)) output_file.write(text) 然后将拼音前按照Tacotron2训练的要求，加上了音频文件对应的colab路径（为什么用这个路径我下一篇博客再说明），以及每句话末尾加个英文的句号，最后输出结果如下： 同样的方法对测试集也转拼音，这样前期的数据集文件就制作完成啦！接下来就是重点——训练模型。下篇博客接着说完。","categories":[{"name":"深度学习","slug":"深度学习","permalink":"http://www.shelven.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"拆包","slug":"拆包","permalink":"http://www.shelven.com/tags/%E6%8B%86%E5%8C%85/"},{"name":"声纹识别","slug":"声纹识别","permalink":"http://www.shelven.com/tags/%E5%A3%B0%E7%BA%B9%E8%AF%86%E5%88%AB/"},{"name":"语音转文本","slug":"语音转文本","permalink":"http://www.shelven.com/tags/%E8%AF%AD%E9%9F%B3%E8%BD%AC%E6%96%87%E6%9C%AC/"}]},{"title":"frp内网穿透配置笔记","slug":"frp内网穿透配置笔记","date":"2022-07-12T19:55:04.000Z","updated":"2022-12-03T16:11:04.000Z","comments":true,"path":"2022/07/13/a.html","link":"","permalink":"http://www.shelven.com/2022/07/13/a.html","excerpt":"过一段时间要到校外学习，而学校的资源只能在校园内网下才能使用（登录集群可以看到登录ip是10开头的A类地址，无法公网ip访问）。为了方便在校外访问校园内网的集群，我手里正好也有一个备案过的服务器和域名，于是自己用frp搭建了一个反向代理服务器，穿透了校园内网，这里记录下自己搭建过程。","text":"过一段时间要到校外学习，而学校的资源只能在校园内网下才能使用（登录集群可以看到登录ip是10开头的A类地址，无法公网ip访问）。为了方便在校外访问校园内网的集群，我手里正好也有一个备案过的服务器和域名，于是自己用frp搭建了一个反向代理服务器，穿透了校园内网，这里记录下自己搭建过程。 其实一开始我打算直接用开发比较成熟的花生壳软件做内网穿透，但是不知道怎么回事，显示连接成功但是ssh远程登陆不上，后来就放弃了，最后决定用自己的服务器和域名穿透（后来我还申请了花生壳学生版，羊毛先薅到以后再说用不用）。 frp是一个go语言写的开源内网穿透和反向代理软件，支持tcp, udp, http, https等协议，支持linux、mac、windows平台，操作也很方便，非常适合我这种小白。 1 下载frp源代码作者发布在github，点击这里。 选择最新的release版本，注意frp在service端和client端有两个不同的程序和配置文件，service端是你想要做反向代理的有公网ip的服务器，client端是处于内网之下的你想要穿透的服务器。 service端和client端一定要同一个版本。这里我的service端和client端都是linux操作系统，所以我直接下载了linux_arm64.tar.gz（我想顺便远程操控实验室电脑，所以也下载了windows版本，默认windows远程桌面端口号是3389，这个以后再说）。 将tar.gz文件传到两台服务器上，tar -zxvf解压就可以使用了（不需要编译，就是这么简单）。 在service端保留frps程序和相应的ini配置文件，在client端保留frpc程序和相应的ini配置文件（主要防止自己搞错）。配置文件有两种，我们可以选择其中一个；ini是最简单的配置文件，full.ini配置文件中记录了全部配置参数和英文解释，需要的时候可以自己根据情况修改。 2 修改配置文件网上的教程很多，full.ini也记载了全部的配置方法，我这里只记录下我自己的配置（敏感信息就不展示了）。 2.1 service端配置frps.ini配置文件修改如下： 123456789101112131415[common]bind_port = 7000 # frp监听的端口，默认7000，可改bind_udp_port = 7400 # UDP通讯端口，可不设置，用于点对点穿透token = xxxxxxxx # 安全考虑需要设置口令，client端需要用到dashboard_port = 7500 # frp管理端口，可改dashboard_user = xxxx # 管理端口认证的用户名，用于身份识别，自己设置dashboard_pwd = xxxx # 管理端口认证的密码，用于身份识别，自己设置enable_prometheus = truesubdomain_host = xxx.xxx.xxx # 设置子域名，主要方便登录管理界面。不用ip地址，用域名+端口的方式直接访问log_file = /usr/local/frp/frps.log # frp日志配置，这里是记录3天的日志信息log_level = infolog_max_days = 3 子域名设置主要是方便登录管理界面，不是必须的，反正我记不住服务器一长串ip地址…这个域名需要DNS解析后才能使用 后台不挂起运行frps： 1nohup ./frps -c frps.ini &amp; 这个时候我们是看不到运行日志的，打开刚刚设置的frps.log文件 几个设置端口都监听成功，最后也显示frps started successfully说明开启成功。 2.2 client端配置frpc.ini配置文件修改如下： 12345678910[common]server_addr = xxx.xxx.xxx.xxx # 填写你的service端服务器公网ip，这里我写我的云服务器ipserver_port = 7000 # 前面设置的frp监听端口，需要保持一致token = xxxxxxxx # 前面设置的口令[ssh] # 这里只演示ssh端口的映射，其他参考frpc_full.initype = tcp # tcp协议local_ip = 127.0.0.1 # 这个地址代表本机local_port = 22 # ssh端口，默认22，由你ssh登录的client服务器决定remote_port = 6000 # 映射的service端服务器的端口，自己定义 注意下remote_port这个设置的是service端也就是云服务器的端口，通过这个端口访问client端的22端口，也就是端口映射。 同样的后台不挂起运行frpc： 1nohup ./frpc -c frpc.ini &amp; 打开nohup的输出文件： 显示login to service success表示和service端连接成功。 全部设置完成后，理论上我就可以通过云服务器的主机地址+6000端口，通过ssh方式访问学校内网中的集群主机地址+22端口了。 但是我的云服务器比较特殊，还需要进行一步开放防火墙端口。 3 开放serviced服务器端口如果在2.2这一步配置之后一直连不上service端，那极有可能是service服务器的端口没有开放。 特别注意一点，如果是买的云服务器（比如我买的腾讯云服务器），不仅要在控制台页面开放端口，还需要在linux云服务器开放端口。举个例子，我们这里用到的云服务器端口是7000，7400，7500和6000，首先要在控制台防火墙页面 开放这几个端口。 然后在云服务器上打开防火墙，开放对应端口： 1234systemctl start firewalld # 打开防火墙firewall-cmd --permanent --add-port=7000/tcp # 永久开放指定的7000端口（其他端口同理）firewall-cmd --reload # 重启防火墙firewall-cmd --list-ports # 查看防火墙开放的所有端口 注意一下防火墙端口设定完成后，需要重载防火墙才会生效。 我们把自己云服务器的防火墙和端口配置好就行（学校集群你不是root用户你也配置不了，一般来说也不会设置防火墙）。 4 frp管理面板有两种方式可以访问： service端服务器 ip地址:端口号 设置子域名后可以用 子域名:端口号 用户名密码认证后，可以看到如下页面： 主要就是看一下连接数量，连接方式，产生的流量等等，具体就不细说了。 开个手机热点，用xshell登陆一下集群，发现显示的登录ip变成了localhost，而不是10开头的A类地址了，说明反向代理成功。 连接速度非常快，而且稳定！以后登录集群就再也不用校园网啦！ 5 写在最后这种用外网服务器做反向代理服务器，通过端口转发的方式访问内网服务器还是有一定安全风险的，该开防火墙开防火墙，小心驶得万年船。 还有，这种方法也有个缺点。打个比方如果你在校外，而学校服务器因为某种不可抗力重启了（比如停电，这在新疆真的太常见了）这就相当于你挂在后台nohup的程序被强制杀掉了。等到管理员重启后，client端的frpc程序就需要再执行一次才能生效，这个时候就只能拜托有学校集群账号的人帮你在后台执行nohup，你才能从外网访问集群。 要应对这种情况，最简单的是你写个开机自启动脚本执行frpc，但是你没有root权限是不可行的…或者你让集群管理员给你su权限，这一般来说也不太可能…如何完美解决这个问题还有待研究","categories":[{"name":"网络相关","slug":"网络相关","permalink":"http://www.shelven.com/categories/%E7%BD%91%E7%BB%9C%E7%9B%B8%E5%85%B3/"}],"tags":[{"name":"内网穿透","slug":"内网穿透","permalink":"http://www.shelven.com/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"},{"name":"反向代理","slug":"反向代理","permalink":"http://www.shelven.com/tags/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/"}]},{"title":"blastn & blastp 寻找同源基因","slug":"blastn-blastp-寻找同源基因","date":"2022-07-05T11:25:26.000Z","updated":"2022-12-03T16:11:26.000Z","comments":true,"path":"2022/07/05/a.html","link":"","permalink":"http://www.shelven.com/2022/07/05/a.html","excerpt":"今天接到一个任务，大致内容是在一个植物的全长转录组数据中找拟南芥的三个同源基因。简简单单的描述，我的想法也很简单，直接找基因的CDS序列做blastn比对就完事了，结果却没有那么顺利…记录一下踩的坑和解决办法。","text":"今天接到一个任务，大致内容是在一个植物的全长转录组数据中找拟南芥的三个同源基因。简简单单的描述，我的想法也很简单，直接找基因的CDS序列做blastn比对就完事了，结果却没有那么顺利…记录一下踩的坑和解决办法。 1 blastn寻找同源基因三个基因TAIR号是AT4G28590、AT2G43010和AT2G34640，从全长转录组测序报告中，我找到了非冗余的转录本序列文件CD-hit-est.fasta，首先第一步就是本地建核酸序列库。 1makeblastdb -in CD-hit-est.fasta -dbtype nucl -input_type fasta -out Kc 因为给的是TAIR号，所以直接去TRIR官网查找相应基因的CDS序列做比对 手动创建query gene的fa序列文件 1234vim RCB_cds.fna# 手动创建fa文件&gt;AT4G28590ATGAGTTTCTTCGCTGTTGCTTGCTCCGCGCCAAGATCTTCTATGCTTCTCACCGGCTTGAATTCGAGCTTCTCTGATATGCATCGCAGCCCACTATTTGTTTTCCCGGTGACTATATCATCCCGGAGCGTGAAACGCTTCGCCGCTGTTTCGTCTGATTCCGTACTAGACCCTGAATCCAAAAATCAAACTCGGTCCCGTCGCAAAAATAAGGAAGCAGTTACGCCAATTGCTGAAACCGAGAACAATGAAAAGTTTCCGACAAAGGTCCCGCGTAAATCGAAGCGTGGGCGGCGGAGTGAAGCAGACGCTGTGGAAGATTACGTGAGAAGCTCCCTCGAGCGTACTTTCTCCACCATAAAGGAGCAGAATCCGGAGGTTTTTGAGAACAAGGAGAAGGCGAATTTCATCAAAGACAGAGGCGTTGATGAAGAAGAGGAAGAAGAAGAAGAGATGGTGGTGGAAGAGGAAGATCCAGATTGGCCAGTAGATACAGACGTTGGATGGGGAATCAAAGCTTCGGAGTATTTCGATACACATCCAATCAAAAACGTGGTTGGAGATGATGGGAGTGAGATTGATTGGGAAGGTGAGATTGATGATAGTTGGGTCAAGGAGATCAATTGTTTGGAATGGGAAAGCTTTGCTTTTCATCCTAGTCCACTCGTTGTCCTTGTATTCGAGCGATACAAAAGAGCTAGTGATAACTGGAAGACATTGAAGGAGCTTGAGAAAGCTATCAAAGTTTATTGGGATGCGAAAGATCGATTACCTCCACGGGCGGTTAAGATTGACCTGAACATCGAGACAGATTTGGCATATGCTCTTAAAGCTAAGGAATGCCCACAGATTCTCTTCTTACGCGGAAACCGGATTCTGTACAGGGAGAAAGACTTTCGCACGGCGGATGAATTGGTTCATATGATTGCGCATTTCTACTATAAAGCGAAGAGGCCTTCGTGTGTCGACAAGGCTAATGTAACCCCGTACTGTTAG blastn比对 1blastn -query RCB_cds.fna -out RCB_blastn_Kc.out -db Kc -outfmt 6 -evalue 1e-5 -num_threads 4 RCB_blastn_Kc.out是blast的m8格式输出文件，找到匹配长度最长的（也就是第一条）subject gene id，回到非冗余转录本，找到subject gene在哪行，最后找出转录本序列。 1234# 找到subject gene所在行（subject gene id中有所在行数，这里验证下）cat CD-hit-est.fasta | grep -n &quot;Kc-zong_1-10k_transcript/10791&quot;# 提取序列awk &#x27;NR&gt;=10719 &amp;&amp; NR&lt;=10720&#x27; CD-hit-est.fasta 紧接着出现一个问题：AT2G43010和AT2G34640这两个基因无法通过blastn比对找到同源序列，evalue值不管放到多宽都比对不上。 因为这个植物在NCBI上没有参考基因组，我们课题组也只测了全长转录组而没有测基因组，所以当一开始没有比对出结果的时候，我一度怀疑是这种植物压根儿就没有这俩基因，或者这个样品叶片（测序的部位）在检测的时间点就没有转录相应的基因。 本地blast找不到同源基因，我又从近缘菊科植物开始折腾，思路是如果菊科有同源基因则寻找保守结构域，设计引物将CDS区域克隆出来。至今已发表的植物基因组可以从网站Plabipd（本站网址导航栏有收录）找到，这个网站很贴心地把物种种属关系也列了出来，可以很方便地找物种学名和近缘关系。 理想很丰满现实很骨感，我从菊科一级一级往上找，直到Eudicotyledoneae（真双子叶植物分支）才用blastn比对上同源基因，而且无一例外比对上的全是十字花科（拟南芥所在科）植物，根本不算近缘物种….无奈之下试了blast的其他功能，用氨基酸序列跑了一遍blastp，然后发现菊科也有序列可以比对上了！这才打开新世界的大门 2 blastp寻找同源基因基于翻译阅读框对去冗余的全长转录本进行CDS预测（TransDecoder软件），结果以fasta格式保存，后续我会对这个文件验证一遍，先建蛋白库做blastp比对。 1makeblastdb -in transdecoder.pep.fa -dbtype prot -input_type fasta -out nr_Kc 可以看到只有25128个编码蛋白基因，对于基因组大小在1G左右的菊科物种来说，这个基因数量过少。因此后续还需要对全长转录组数据再跑一遍验证一下，这个是后话。 通过TAIR号在TAIR官网查找蛋白序列，创建fa文件后进行本地blastp比对 12blastp -query PIF4_pep.fna -out PIF4_blastp_nr_Kc.out -db nr_Kc -outfmt 6 -evalue 1e-5 -num_threads 4blastp -query HMR_pep.fna -out HMR_blastp_nr_Kc.out -db nr_Kc -outfmt 6 -evalue 1e-5 -num_threads 4 注意下结果文件名写清楚什么基因，用的什么方法比对，比对的什么库。这个时候再查看各自的结果文件，发现有比对结果，再回到非冗余转录本文件找对应的cds序列。操作过程都一样，这里不再赘述了。 3 总结找三条同源基因花了一整天的时间，主要原因还是对同源序列了解不够深刻。 同源就是有共同的进化祖先，序列相似性搜索可以通过检测过高的相似性来识别同源蛋白质或基因：当两个序列的相似性超过偶然的预期时，我们推断这两个序列存在同源性。 当观察到过高的相似性时，这两个序列不是独立出现的，它们起源于一个共同的祖先。 通过算法进行序列对库比对的工具，比如blast等，是通过过高相似性来减少假阳性的结果。所以通过算法在统计学上找不到库里显著的匹配项，不代表这个物种中一定没有同源基因。 从这次blastn和blastp比对结果来看，核酸序列比对可能更不容易找到同源序列。其实也好理解，生物在进化的几亿年时间里，很难保证不同物种有高相似性的核酸序列。同个氨基酸有不同密码子（简并性），也能证明蛋白质一级结构才是对生物影响最大的，蛋白质序列相同，就会有相似结构和功能。因此，蛋白质序列也就是氨基酸序列，对相似性的搜索比核酸序列要敏感的多。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"blast","slug":"blast","permalink":"http://www.shelven.com/tags/blast/"}]},{"title":"0基础学习基因组三代测序组装（4）——初步组装二代数据","slug":"0基础学习基因组三代测序组装（4）——初步组装二代数据","date":"2022-07-03T11:28:52.000Z","updated":"2022-12-03T16:12:27.000Z","comments":true,"path":"2022/07/03/a.html","link":"","permalink":"http://www.shelven.com/2022/07/03/a.html","excerpt":"经过前面的全基因组特征调查（survey）后，我们发现这是一个复杂基因组，杂合度较高，可以以二代+三代测序技术相结合的策略进行全基因组组装，还可以以Hi-C（高通量染色体捕获技术，High-through chromosome conformation capture）技术进行辅助组装。这里我用华大开发的二代测序组装工具SOAPdenovo，用二代测序数据对进行初步基因组组装。","text":"经过前面的全基因组特征调查（survey）后，我们发现这是一个复杂基因组，杂合度较高，可以以二代+三代测序技术相结合的策略进行全基因组组装，还可以以Hi-C（高通量染色体捕获技术，High-through chromosome conformation capture）技术进行辅助组装。这里我用华大开发的二代测序组装工具SOAPdenovo，用二代测序数据对进行初步基因组组装。 1 安装SOAPdenovo 2.0github上这个软件的版本是2.0，网址点击这里 软件下载安装过程非常顺利，如果有报错无法解决的话可以在Issue里向作者反馈。 1234# 集群如果无法登录github，下载源码包，通过xftp传到集群tar -zxvf SOAPdenovo2cd SOAPdenovo2-r242make 编译之后可以看到有如下几个文件 SOAPdenovo-127mer和SOAPdenovo-63mer是用于组装的两个程序，分别代表支持的最大k-mer为127和63，用法上是完全相同的。 example.config是配置文件，组装之前我们要设置其中的参数内容；README.md是帮助文件，详细记录了各项参数的作用和设置方法。这个后面会讲到。 2 kmergenie计算最佳k值现在组装基因组的算法主要有三种：De Bruijn graph，Overlap-Layout-Consensus和String Graph。SOAPdenovo软件组装基因组用的是De Bruijn graph算法，简单理解是通过将reads打断成k-mer后，利用k-mer之间的重复部分构建图，得到最优化路径从而拼接contig。要具体了解什么是De Bruijn graph，可以参考这一篇博文。 不同k-mer值构建的De Bruijn graph不一样，会导致组装质量的差异，因此我们需要选择一个最佳的组装k-mer大小（尽管可以用默认值23直接组装，但是效果不一定是最好的）。 kmergenie软件和之前的Jellyfish类似，都可以用于统计k-mer数量，kmergenie最大优点是可以对预设的多个k-mer进行分析，找到最佳的k-mer。点击这里进入Kmergenie官网，下载最新版本的软件。 注意下这个软件安装需要python &gt; 2.7，并且需要安装R和zlib。 12345678tar -zxvf kmergenie-1.7051.tar.gzcd kmergenie-1.7051makepython setup.py install --user # 安装到用户环境中，不报错说明可以使用vim file.txt # 将两个fq文件路径写进去，一行一个/public/home/wlxie/biosoft/kmergenie-1.7051/kmergenie file.txt -o ./kmergenie_res -l 15 -k 65 -s 5 -t 30 --diploid # 运行kmergenie -o # 输出文件位置和名称 -l # 设定的最小k值 -k # 设定的最大k值 -s # 最小k值到最大k值，每次增加的间隔（根据需要设定间隔大小） -t # 运行的线程（CPU核）数 --diploid # 二倍体模式，前面我们已经用jellyfish确认过这是个复杂基因组。默认是单倍体模式 其原理就是设置不同k值进行基因组大小预估，将组装的基因组最大的k值作为最佳k值。 最终会给出kmergenie_res为前缀的一系列报告，生成的.histo文件还可以用来上一篇笔记中的GenomeScope分析，这里我们只需要看总结的html文件。 确定组装的最佳k值为51 3 SOAPdenovo2组装contigs&#x2F;scaffolds复制一份example.config配置文件，重命名为run_config，修改部分参数 123456789101112131415161718192021222324252627282930#maximal read length#全局配置参数，只要高于这个参数的序列都会被截取到这个长度max_rd_len=150#文库配置以[LIB]开头[LIB]#average insert size#文库插入片段的平均长度，在实际设置时，可以参考文库size分布图，取峰值（默认200）avg_ins=200#if sequence needs to be reversed#是否需要将序列反向互补，对于pair-end数据，不需要反向互补，设置为0；对于mate-pair数据，需要反向互补，设置为1reverse_seq=0#in which part(s) the reads are used#1表示只组装contig，2表示只组装scaffold，3表示同时组装contig和scaffold，4表示只补gapasm_flags=3#use only first 100 bps of each read#序列长度阈值，作用和max_rd_len相同，大于该长度的序列会被切除到该长度rd_len_cutoff=150#in which order the reads are used while scaffolding#设置不同文库数据的优先级顺序，取值范围为整数，rank值相同的多个文库，在组装scaffold时，会同时使用。rank=1#cutoff of pair number for a reliable connection (at least 3 for short insert size)#contig或者scaffold之前的最小overlap个数，对于pair-end数据，默认值为3；对于mate-paird数据，默认值为5pair_num_cutoff=3#minimum aligned length to contigs for a reliable read location (at least 32 for short insert size)#比对长度的最小阈值，对于pair-end数据，默认值为32；对于mate-pair数据，默认值为35map_len=32#a pair of fastq file, read 1 file should always be followed by read 2 file#过滤后的双端测序数据文件路径，q为fastq格式，f为fasta格式，b为bam格式q1=/public/home/wlxie/luobuma/luobuma/sample_1_rawdata/Second-generation_sequencing/20211106-BaiYiHuiNeng01/01.rawFq/00.mergeRawFq/1/clean_data/1_r aw_1_val_1.fqq2=/public/home/wlxie/luobuma/luobuma/sample_1_rawdata/Second-generation_sequencing/20211106-BaiYiHuiNeng01/01.rawFq/00.mergeRawFq/1/clean_data/1_r aw_2_val_2.fq SOAPdenovo有6个子命令pregraph、sparse_pregraph、contig、map、scaff和all，前5个命令对应5个组装步骤，第一和第二是两种不同构图方式，all命令一次执行所有步骤，用all命令比较省事儿。 SOAPdenovo命令还有一些参数用于调整，参数参考 123456789101112131415-s # 配置文件-o # 输出文件的前缀-K # 输入的K-mer值大小，默认值23-p # 程序运行时设定的线程数，默认值8-R # 利用read鉴别短的重复序列，默认值不进行此操作-d # 去除频数不大于该值的k-mer，默认值为0-D # 去除频数不大于该值的由k-mer连接的边，默认值为1，即该边上每个点的频数都小于等于1时才去除-M # 连接contig时合并相似序列的等级，默认值为1，最大值3。-F # 利用read对scaffold中的gap进行填补，默认不执行-u # 构建scaffold前不屏蔽高覆盖度的contig，这里高频率覆盖度指平均contig覆盖深度的2倍。默认屏蔽-G # 估计gap的大小和实际补gap的大小的差异，默认值为50bp。-L # 用于构建scaffold的contig的最短长度，默认为：Kmer参数值 ×2-k # map步骤中kmer的大小，默认是和K一样的kmer大小-N # 基因组大小-V # 输出可视化的组装信息 运行组装命令 1/public/home/wlxie/biosoft/SOAPdenovo2-r242/SOAPdenovo-63mer all -s /public/home/wlxie/biosoft/SOAPdenovo2-r242/run_config -K 51 -R -V -o A_venetum -p 30 程序运行了3个小时，结束后生成了以下文件 4 组装结果解读组装结果文件其实只有两个，分别以**.contig结尾和.scafseq结尾**。因为我是在集群上运行的，slurm-11168.out是集群的输出日志文件，记录了详细的组装过程和结果。 最终得到935861个contigs，总长度295302126 bp，平均长度315 bp，最长的长度38673 bp，contig N50是532 bp，contig N90是103 bp；scaffold个数77918，总长度192992858 bp，平均长度2476 bp，最长的长度108587 bp，scaffold N50是3385 bp，scaffold N90是130 bp。（可以做一个统计表） 从组装的contig覆盖深度和数量还可以做一个柱状图，理论上来说是和前面k-mer分布图呈现一样的趋势，也就是一个主峰和一个杂峰，两个图相互印证目标基因组是个复杂基因组。 其他的结果文件在github上有解释，我先直接复制过来，以后用到再翻译翻译…… 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950511. Output files from the command &quot;pregraph&quot;a. *.kmerFreq Each row shows the number of Kmers with a frequency equals the row number. Note that those peaks of frequencies which are the integral multiple of 63 are due to the data structure.b. *.edge Each record gives the information of an edge in the pre-graph: length, Kmers on both ends, average kmer coverage, whether it&#x27;s reverse-complementarily identical and the sequence.c. *.markOnEdge &amp; *.path These two files are for using reads to solve small repeats.e. *.preArc Connections between edges which are established by the read paths.f. *.vertex Kmers at the ends of edges.g. *.preGraphBasic Some basic information about the pre-graph: number of vertex, K value, number of edges, maximum read length etc. 2. Output files from the command &quot;contig&quot;a. *.contig Contig information: corresponding edge index, length, kmer coverage, whether it&#x27;s tip and the sequence. Either a contig or its reverse complementry counterpart is included. Each reverse complementary contig index is indicated in the *.ContigIndex file.b. *.Arc Arcs coming out of each edge and their corresponding coverage by readsc. *.updated.edge Some information for each edge in graph: length, Kmers at both ends, index difference between the reverse-complementary edge and this one.d. *.ContigIndex Each record gives information about each contig in the *.contig: it&#x27;s edge index, length, the index difference between its reverse-complementary counterpart and itself. 3. Output files from the command &quot;map&quot;a. *.peGrads Information for each clone library: insert-size, read index upper bound, rank and pair number cutoff for a reliable link. This file can be revised manually for scaffolding tuning.b. *.readOnContig Reads&#x27; locations on contigs. Here contigs are referred by their edge index. Howerver about half of them are not listed in the *.contig file for their reverse-complementary counterparts are included already.c. *.readInGap This file includes reads that could be located in gaps between contigs. This information will be used to close gaps in scaffolds if &quot;-F&quot; is set. 4. Output files from the command &quot;scaff&quot;a. *.newContigIndex Contigs are sorted according their length before scaffolding. Their new index are listed in this file. This is useful if one wants to corresponds contigs in *.contig with those in *.links.b. *.links Links between contigs which are established by read pairs. New index are used.c. *.scaf_gap Contigs in gaps found by contig graph outputted by the contiging procedure. Here new index are used.d. *.scaf Contigs for each scaffold: contig index (concordant to index in *.contig), approximate start position on scaffold, orientation, contig length, and its links to others contigs.e. *.gapSeq Gap sequences between contigs.f. *.scafSeq Sequences of each scaffolds.g. *.contigPosInscaff Contigs&#x27; positions in each scaffold.h. *.bubbleInScaff Contigs that form bubble structures in scaffolds. Every two contigs form a bubble and the contig with higher coverage will be kept in scaffold.i. *.scafStatistics Statistic information of final scaffold and contig.","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"基因组三代测序分析","slug":"基因组三代测序分析","permalink":"http://www.shelven.com/categories/%E5%9F%BA%E5%9B%A0%E7%BB%84%E4%B8%89%E4%BB%A3%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/"}],"tags":[{"name":"kmergenie","slug":"kmergenie","permalink":"http://www.shelven.com/tags/kmergenie/"},{"name":"SOAPdenovo2","slug":"SOAPdenovo2","permalink":"http://www.shelven.com/tags/SOAPdenovo2/"}]},{"title":"0基础学习基因组三代测序组装（3）——全基因组Survey","slug":"0基础学习基因组三代测序组装（3）——全基因组Survey","date":"2022-07-02T07:08:17.000Z","updated":"2022-12-03T16:13:20.000Z","comments":true,"path":"2022/07/02/a.html","link":"","permalink":"http://www.shelven.com/2022/07/02/a.html","excerpt":"之前说到如何对三代测序数据做污染评估，取随机序列做blastn比对nt库，确定物种分布情况。实际blast比对还要考虑比对的序列长度和ONT本身数据错误率，以及结合GC-depth确定是否有污染。基因组三代测序数据组装之前，我们还要做一个全基因组survey。主要是为了减少盲目性，先做低深度的基因组分析，也是初步了解物种基因组特征的有效方法，比如评估基因组大小和杂合情况，为后续全基因组de novo组装策略指定提供指导。","text":"之前说到如何对三代测序数据做污染评估，取随机序列做blastn比对nt库，确定物种分布情况。实际blast比对还要考虑比对的序列长度和ONT本身数据错误率，以及结合GC-depth确定是否有污染。基因组三代测序数据组装之前，我们还要做一个全基因组survey。主要是为了减少盲目性，先做低深度的基因组分析，也是初步了解物种基因组特征的有效方法，比如评估基因组大小和杂合情况，为后续全基因组de novo组装策略指定提供指导。 基因组复杂程度的经验性标准： 简单基因组: 单倍体；或纯合二倍体；或杂合度低于0.5%, 且重复序列低于50%, 且GC含量在35%-65%的二倍体。 复杂基因组: 杂合度在0.5%~1.2%之间，或重复序列高于50%，或GC含量异常(&lt;35%或&gt;65%)的二倍体，或者多倍体。复杂基因组可以采用“2+3”即二代和三代测序技术相结合，加之Hi-C辅助组装的组装策略。 高复杂基因组: 杂合度&gt;1.2%；或重复序列占比大于65%。 有条件的话，也可以用流式细胞仪对基因组大小做个预估。我这里只有二代基因组测序数据，因此用基因组二代测序数据做全基因组survey。当然，这里要注意一点，做全基因组survey的样本和后续de novo组装的样本要来自同一个个体，避免个体间基因组特征的差异。 1 原始数据质控因为是对二代测序数据进行分析，质控的过程本质上和之前处理转录组二代数据一样，这里只提下过程和结果。 1.1 fastqc生成质控报告1fastqc *.fq.gz -o ./ 二代测序是双端测序结果，我这里只截图了部分qc报告，可以看出GC含量比较稳定，测序质量也比较高。 1.2 trim-galore数据过滤报告中的结果虽然好，但是还是需要过滤一遍，把末端接头adapter序列过滤掉。 1trim_galore -q 25 -phred33 -length 100 -stringency 1 -paired -o clean_data 1_raw_1.fq.gz 1_raw_2.fq.gz 参数在这篇博客 转录组数据分析笔记（1）——如何用fastqc和trim-galore做测序数据质控 有提到，这里不再赘述。 看下report文件，过滤了Q值25以下的reads和adapter序列 2 k-mer分析先说一下k-mer的概念：k-mer在这里指将reads迭代拆分成包含k个碱基的序列（类似blast中的word length，蛋白质是3，核酸是11），我们后面要分析的基因组特征都是基于k-mer分布基础上进行的。 基因组大小可以通过总 （K-mer 数量）&#x2F;（K-mer 期望测序深度）来估计 k-mer分布曲线的主峰所在横坐标可以作为期望的测序深度 测序覆盖均匀、不存在测序误差和基因组重复序列的理论条件下，K-mer分布曲线会符合泊松分布 单倍体或纯合基因组的 K-mer 分布曲线只有一个主峰 杂合二倍体基因组的 K-mer 分布曲线有两个峰， 分别为杂合峰（主峰1&#x2F;2处）和纯合峰（主峰），前者深度只有后者的一半 重复序列含量较高时会在主峰后面形成一个重复峰（主峰的2倍处）或者形成拖尾 一般选择17-mer评估基因组大小，因为ATCG组成长度为17的核酸序列，理论上有4的17次方种可能，足以覆盖一般的正常基因组。为了避免回文序列，K-mer分析选择K长度均为奇数。 2.1 安装jellyfish根据上面说的k-mer概念，可以理解k-mer分析是非常耗计算资源的。我们要自己用脚本实现的话，需要将十几个G的reads分割成不同长度片段，再统计出现的次数，耗时而且麻烦。jellyfish是一款统计DNA序列中Kmer的分布的软件，它运行速度快，内存消耗低，支持并行，也是用的最多的统计k-mer的软件。 重点是可以通过conda直接安装……最好不要用conda安装，我之前运行了1天没出结果也没报错（一度怀疑我的参数设置是不是有问题），百思不得其解。后来从github上重新下载，编译和安装之后，不到10分钟就跑出结果了…我不知道两种安装方式有什么区别，这里就记录下自己踩的坑。 因为jellyfish不支持.gz的压缩文件，所以之前用tram galore过滤后得到的clean reads需要用gunzip命令解压。 1conda install -c bioconda jellyfish # 可以用conda安装，我运行的时候出了问题，暂未解决，不推荐 点击这里进入jellyfish的github下载地址 我们用本地安装的方式，先下载tar.gz的源码包，tar -zxvf解压后进入jellyfish-2.3.0文件夹。 我是集群登录的，下面讲的步骤都是在集群上操作（非root账户） 12345678# 第一步检测。本质上是一个shell脚本，根据系统环境产生合适的makefile文件或者C的头文件（.h结尾的文件），非root账户下--prefix后面接上自己账户的绝对路径。./configure --prefix=/public/home/wlxie# 第二步编译。对源代码包进行编译，如果有错误自己看是否有依赖库的缺失，主要是这个问题。make# 第三步安装。如果前面没有指定自己账户的路径，这一步是会报错没有权限的（用户不能向系统目录写入文件）。make install# 第四步自检。make check make和make check这两步都会因为动态链接库命名不同，导致报错无法找到动态库；以及我在检测通过之后，用集群运行程序仍然出现了动态库的某个模块无法调用的情况。这里统一说下解决方法。 前面configure会在我们的家目录下生成bin、lib和share目录，这里比较重要的是bin和lib目录。我们运行的命令在bin目录里，对应要改环境变量PATH；而需要调用的动态库是在lib目录下，对应要改环境变量LD_LIBRARY_PATH。家目录下的.bashrc文件加入以下内容 12export PATH=&quot;/public/home/wlxie/bin:$PATH&quot;export LD_LIBRARY_PATH=&quot;/public/home/wlxie/lib:$LD_LIBRARY_PATH&quot; 添加之后保存退出，并且source ~&#x2F;.bashrc刷新一下系统环境变量。 我碰到的报错是libcrypto.so.1.0.0和libstdc++.so.6这两个动态库找不到，但是locate命令查看这两个动态库，在系统目录&#x2F;lib64&#x2F;下都能找到文件，因此将这两个动态库文件直接复制到家目录的lib文件夹，问题就全部解决了。 如果libstdc++.so.6报错某版本的文件不存在，可以先到动态库目录下，运行strings命令查看动态库中是否有对应的文件： 1strings /lib64/libstdc++.so.6 | grep CXXABI # 比如找不到GLIBCXX_3.4.26，看看动态库中是否存在这个版本的文件，如果不存在，更新动态库；如果存在但是找不到，建议直接拷贝到自己的lib目录下 make check之后会生成一个日志文件test-suite.log，没有fail的项目说明软件安装成功，没有问题。 2.2 k-mer频数分布123456# k-mer计数jellyfish count -m 17 -s 300M -t 50 -C -o 17-mer.jf ./1_raw_1_val_1.fq ./1_raw_2_val_2.fq# k-mer频数统计jellyfish histo -t 4 17-mer.jf &gt; 17-mer.histo# 统计总k-mer数和特征k-mer数等jellyfish stats 17-mer.jf -o counts_stats.txt 记录一下各个参数的意义： -m # k-mer长度设置为17bp，进行计数 -s # 存储用的hash表大小，说实话我没看懂什么意思，基因组估计有多大就用多大就是了，单位是M或者G -t # 使用的线程数，也就是cpu核数 -C # 大写的C，对正负链reads都进行统计，双端测序一定要加这个参数 -o # 结果文件的前缀名，结果文件是一个二进制文件 正常来说，10分钟就能跑完程序并给出k-mer计数结果文件。我用conda安装的jellyfish同样条件运行了20个小时没有结束……而且还不报错！第一次运行这个软件，没有人参考和交流，百度到的教程都是抄来抄去的也没有人说明时间的问题……以后还是去官网安装生信软件了，虽然麻烦一点但是靠谱…… 这个软件的帮助文档在&#x2F;jellyfish-2.3.0&#x2F;doc目录下，所有功能和参数都有英文详解。 k-mer频数统计是在计数结果文件上进一步统计各个k-mer出现的次数，频数统计结果文件17-mer.histo将k-mer从1统计到10000，最后一行是10001以后对应的总频次。counts_stats.txt是总的统计结果，包括k-mer总数（Total），特异的k-mer数目（Distinct）只出现过一次的k-mer数量（Unique），频数最高的k-mer数量（Max_count）四项。 有了频数统计结果文件17-mer.histo就可以用R作图了，以下R作图代码来自于CSDN博主 生信技工 1234567kmer &lt;- read.table(&#x27;17-mer.histo&#x27;)kmer &lt;- subset(kmer, V1 &gt;=5 &amp; V1 &lt;=500) # 只取5-500bp长度的k-mer统计频次Frequency &lt;- kmer$V1Number &lt;- kmer$V2png(&#x27;kmer_plot.png&#x27;)plot(Frequency, Number, type = &#x27;l&#x27;, col = &#x27;blue&#x27;)dev.off() # 保存png k-mer分布图如下，当然这只是一个简略图，上面R作图代码还有很多细节可以补充 2.3 基因组大小、重复率、杂合率估算横坐标表示k-mer深度，纵坐标为k-mer数量，可以看得出来测序的样本是个杂合二倍体。主峰坐标（116，2584902），杂合峰坐标（57，1188461），也就是说k-mer期望深度为116；k-mer总数为34655456060；主峰2倍深度也就是232之后的k-mer为重复序列k-mer，总数可以通过导出17-mer.histo文件进行统计（改成csv格式直接两步算出），共16361378388 k-mer分布曲线中无异常峰，说明二代测序提取的DNA纯度较高，没有被污染 根据（K-mer 数量）&#x2F;（K-mer 期望测序深度）估算基因组大小为298M。去除深度小于5的错误k-mer，估算基因组大小为292M. 根据（重复序列的k-mer总数）&#x2F;（K-mer 期望测序深度）估计重复序列大小为141M，即重复率48.29% 单拷贝序列大小U&#x3D;292-141&#x3D;151M，要计算杂合率，需要统计非重复k-mer的总数，也就是计算杂合峰面积，建议还是用软件或者在线工具比如genomescope2.0 jellyfish + GenomeScope是一套应用非常广泛的基因组survey方法，GenomeScope2.0适合用于分析二倍体生物。 上面是GenomeScope2.0网页版界面，只要我们提供jellyfish生成的.histo结果文件，设置参数就行 k-mer length # k-mer长度 Ploidy # 染色体倍性 Max k-mer coverage # 默认-1，即不限制最大k-mer深度，我这里限制了10000 Average k-mer coverage for polyploid genome # 默认-1，不进行筛选 提交后几分钟就生成了可用于发表的图和报告 可以看到估计的基因组大小是200M，杂合率0.865%，杂合峰覆盖度（深度）58.3。下面说下这个图如何解读： 蓝色区域是实际观测值 黑色拟合线是去除错误（errors）后剩下的k-mer分布，认为是正确的数据并以此评估基因组大小 黄色拟合线是非重复区域的k-mer分布（理想情况） 橙色拟合线区域是低深度的错误k-mer，认为是测序错误引入的 黑色虚线是k-mer的几个峰值 之所以估计的基因组大小比之前自己估计的要小，是因为去除error的标准不同，我之前只是简单去除了k-mer深度1-4的错误序列，这里是构建模型选择的错误序列，更准确一些。 网页版最后的results里还有总的统计结果，可以很方便地计算重复率，一眼就能看明白这里就不赘述了。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"基因组三代测序分析","slug":"基因组三代测序分析","permalink":"http://www.shelven.com/categories/%E5%9F%BA%E5%9B%A0%E7%BB%84%E4%B8%89%E4%BB%A3%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/"}],"tags":[{"name":"jellyfish","slug":"jellyfish","permalink":"http://www.shelven.com/tags/jellyfish/"},{"name":"GenomeScope2.0","slug":"GenomeScope2-0","permalink":"http://www.shelven.com/tags/GenomeScope2-0/"}]},{"title":"0基础学习基因组三代测序组装（2）——数据污染评估","slug":"0基础学习基因组三代测序组装（2）——数据污染评估","date":"2022-06-19T17:17:30.000Z","updated":"2023-01-13T11:02:00.000Z","comments":true,"path":"2022/06/20/a.html","link":"","permalink":"http://www.shelven.com/2022/06/20/a.html","excerpt":"做完基因组三代测序数据质控之后，我们把所有reads的Q值控制在7以上，每个read的长度在1000bp以上。我们不能明确自己的测序数据是否被其他物种污染，这个时候就要用balst比对的方法确定测序数据是否被污染，以及污染的来源。","text":"做完基因组三代测序数据质控之后，我们把所有reads的Q值控制在7以上，每个read的长度在1000bp以上。我们不能明确自己的测序数据是否被其他物种污染，这个时候就要用balst比对的方法确定测序数据是否被污染，以及污染的来源。 1 下载balst+工具和数据库在之前的一篇博客中，我详细介绍了如何本地安装NCBI的blast+工具，以及下载nr&#x2F;nt库，建立本地的数据库。详情点击这里。 在做数据污染评估的时候，我们还需要知道blast最佳结果对应的物种名，因此还需要下载分类数据库的以下两个子库： 12345678# ascp工具下载大数据，wget命令下载小文件（md5校验文件）ascp -QT -i /public/home/wlxie/miniconda3/envs/biosoft/etc/asperaweb_id_dsa.openssh -k1 -l 500m anonftp@ftp.ncbi.nlm.nih.gov:/pub/taxonomy/accession2taxid/nucl_gb.accession2taxid.gz ./wget https://ftp.ncbi.nlm.nih.gov/pub/taxonomy/accession2taxid/nucl_gb.accession2taxid.gz.md5ascp -QT -i /public/home/wlxie/miniconda3/envs/biosoft/etc/asperaweb_id_dsa.openssh -k1 -l 500m anonftp@ftp.ncbi.nlm.nih.gov:/pub/taxonomy/taxdump.tar.gz ./wget https://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz.md5 md5文件校验完成之后，两个数据库分别解压。注意.gz文件用gunzip，.tar.gz文件用tar -zxvf 看看这两个数据库长什么样： 第一张图片是nucl_gb.accession2taxid，我们需要用到第二列版本信息和第三列的taxid。 第二张图片是names.dmp，我们需要用到有taxid，学名和scientific name字符串的行。 这两个数据库怎么使用后面会详细说明。分析思路来自于CSDN的博主风风是超人，遗憾的是从17年开始，NCBI不再提供gi号与blastn结果的关联，博主的本地数据库可能版本比较早，采用的是gi号分析。 我将后续的代码做了修改，下载的也都是最新的数据库。总的逻辑是利用blast结果的version号，得到nucl_gb.accession2taxid数据库中的taxid号，最后通过names.dmp中的taxid号得到学名。代码方面做了少许优化，对集群服务器可能更友好一点？ 2 fq文件处理和blast质控后的数据fq文件是“@”开头的，我们要改成fa格式也就是“&gt;”开头。取前10000条序列，每个序列有4行，只取第一行标题和第二行序列。 12345# NR表示当前行，判断除以4的余数，余数1为标题行，只输出第一个元素即reads id；余数2则为序列行，输出所有元素也就是整条序列。最后替换@符号，文件名为test.fazcat clean_filter.fq.gz | head -n 40000 | awk &#x27;&#123;if(NR%4==1)&#123;print $1&#125;else if(NR%4==2)&#123;print $0&#125;&#125;&#x27; | sed &#x27;s/@/&gt;/g&#x27; &gt;test.fa# 批量blast程序blastn -query test.fa -out test_blastn_nt.xml -db nt -outfmt 5 -evalue 1e-5 -num_threads 20 -max_target_seqs 1 批量blast程序注意下我们输出的格式为xml格式，也就是- outfmt 5。为什么要用xml格式，因为xml格式能给出的信息最全，我们需要知道输出的版本号 evalue值根据需要设定，这里我设置1e-5 最大匹配数量注意下设置1，我们只需要知道和哪个物种相似度最高，一个输出结果就足够了（虽然设置1会有警告）。 看下blast生成的test_blastn_nt.xml这个结果文件： 虽然是第一次接触xml格式，但是感觉非常熟悉！之前做的一个微博爬虫小程序就是扒了一个类似的html格式的文件……xml格式也挺容易解析的，可以看到比对信息以标签&lt;Iteration&gt;开始，以&lt;&#x2F;Iteration&gt;标签结束，&lt;Hit&gt;标签开始表示的是比对上的结果（因为我设置了最大比对序列数量是1，所以&lt;Hit_num&gt;只有1）；&lt;Hsp&gt;标签表示某一块的比对结果（同一条序列，若干片段比对上），因此&lt;Hsp_num&gt;标签的数量可能不止一个。 当然，这些都可以不用关心，分析需要的信息我用红框标了出来。比较重要的是&lt;Hit_def&gt;标签，里面的字符串是空格隔开的，第一个元素是我们需要的物种版本号。 3 XML文件解析前面说了解析的思路，以下是代码的实现。因为用的python语言写的程序，我的建议是在vscode一类的编程软件中写这些代码，如果有错误可以及时调试。 123456789101112131415161718192021222324252627282930313233import sysimport refrom collections import defaultdict# 可以不写，我是为了确保导入父目录的模块不出错sys.path.append(&quot;./&quot;)xmlfile = open(&quot;/public/home/wlxie/luobuma/luobuma/sample_1_rawdata/Third_generation_sequencing/test_blastn_nt.xml&quot;,&quot;r&quot;)outfile = open(&quot;/public/home/wlxie/luobuma/luobuma/sample_1_rawdata/Third_generation_sequencing/filted_accession_version.txt&quot;,&quot;w&quot;)# 定义一个空的字典，提取有queryID和subjectID的行dict1 = defaultdict(list)for lines in xmlfile: line = lines.strip() read_id = re.match(&#x27;&lt;Iteration_query-def&gt;.*&lt;/Iteration_query-def&gt;&#x27;,line) Hit_def = re.match(&#x27;&lt;Hit_def&gt;.*&lt;/Hit_def&gt;&#x27;,line) # 解析queryID if read_id != None: read_id = read_id.group() read_id = read_id.split(&quot;&lt;&quot;)[1].split(&quot;&gt;&quot;)[1] key=read_id # 字典key值和value值赋值 elif Hit_def !=None: Hit_def = Hit_def.group() Hit_def = Hit_def.split(&quot;&lt;&quot;)[1].split(&quot;&gt;&quot;)[1] dict1[key].append(Hit_def)# 写入文件，制表符分割for key in dict1: outfile.write(key + &quot;\\t&quot; + &quot;\\t&quot;.join(dict1[key])+&quot;\\n&quot;) 看下运行结束后解析得到的文件： 一共是两列，第一列是reads的queryID，第二列subjectID就是比对上的序列信息。可以看到第二列可以以空格为分隔符，提取第一个元素也就是物种版本号，后面会说。 为什么要把物种版本号提出来而不直接用这段内容里的物种名呢？因为不同的物种名字段数量和位置不一样，无法用统一的命令直接提取，精确的版本号可以对应唯一一个taxid，从而被精准地注释上物种学名。 4 匹配物种学名这里需要注意一个问题，blast用的nt库还有物种分类用到的两个数据库，他们的更新时间是不一致的。也就是说，物种版本号不一定能完全匹配上taxid，而taxid也不一定能匹配上学名。 而python语言写的程序，用到字典类型数据的时候，如果没有对应的key值匹配是会报错的，不会继续执行下去。一会儿解释，代码如下： 12345678910111213141516171819202122232425262728293031323334353637383940import sysimport gcsys.path.append(&quot;./&quot;)accession = open(&quot;/public/home/wlxie/luobuma/luobuma/sample_1_rawdata/Third_generation_sequencing/filted_accession_version.txt&quot;,&quot;r&quot;)accession2taxid = open(&quot;/public/home/wlxie/luobuma/luobuma/sample_1_rawdata/Third_generation_sequencing/nucl_gb.accession2taxid&quot;,&quot;r&quot;)taxid2name = open(&quot;/public/home/wlxie/luobuma/luobuma/sample_1_rawdata/Third_generation_sequencing/names.dmp&quot;,&quot;r&quot;)final_res = open(&quot;/public/home/wlxie/luobuma/luobuma/sample_1_rawdata/Third_generation_sequencing/final_res.txt&quot;,&quot;w&quot;)# 从names.dmp提取taxid和学名，匹配有scientific name的行taxid_name_dict = &#123;&#125; for lines in taxid2name: if &quot;scientific name&quot; in lines: line = lines.strip().split(&quot;|&quot;) taxid = line[0].strip() name = line[1].strip() taxid_name_dict[taxid] = name# 从nucl_gb.accession2taxid提取taxid和版本号accession_taxid_dict = &#123;&#125; for lines in accession2taxid: line = lines.strip().split(&quot;\\t&quot;) TAXID = line[2] VERSION = line[1] accession_taxid_dict[VERSION] = TAXID# 添加两个判断条件，版本号匹配不上taxid和taxid匹配不上学名的情况。gc.collect()释放内存。for lines in accession: line = lines.strip().split(&quot;\\t&quot;) version = line[1].split()[0] if version in accession_taxid_dict: taxid = accession_taxid_dict[version] if taxid in taxid_name_dict: final_res.write(&quot;\\t&quot;.join(line)+&quot;\\t&quot;+taxid_name_dict[taxid]+&quot;\\n&quot;) else: final_res.write(&quot;\\t&quot;.join(line)+&quot;\\t&quot;+&quot;INVALID TAXID&quot;+&quot;\\n&quot;) else: final_res.write(&quot;\\t&quot;.join(line)+&quot;\\t&quot;+&quot;INVALID ACCESSION VERSION&quot;+&quot;\\n&quot;) gc.collect() 如果不加最后两个判断条件，程序会在报错的那行read序列终止。 通过比较两个输出结果文件行数是否一致来判断匹配是否完全。 两个文件输出结果一致说明匹配完成，为什么这里是9338而不是我们一开始blast的10000条序列呢？那是因为有662条序列balst结果的E值大于1e-5，没有在nt中比对上合适的序列 5 输出物种注释分布结果到这一步就有很多种处理方法了，可以把结果文件直接用excel打开，统计reads在nt库的分布情况和比对上的物种分布。也可以直接写个python脚本做个数据统计。 统计前我们先检查一下是否存在上一步匹配失败的reads。 123# 统计匹配失败的readscat final_res.txt | grep &quot;INVALID TAXID&quot;cat final_res.txt | grep &quot;INVALID ACCESSION VERSION&quot; 提示有8条reads的物种版本号比对不上taxid，且都是Pyrus x bretschneideri这个物种，说明这个物种还未在nucl_gb.accession2taxid这个NCBI官方数据库中更新。在结果文件中将其替换掉。 12# sed命令在原文件进行全局替换sed -i &#x27;s/INVALID ACCESSION VERSION/Pyrus x bretschneideri/g&#x27; final_res.txt 修改完成，检查无误后，用以下python脚本统计物种注释分布： 123456789101112131415161718192021222324252627from collections import Counter # 引入counter模块import syssys.path.append(&quot;./&quot;)name_file = open(&quot;/public/home/wlxie/luobuma/luobuma/sample_1_rawdata/Third_generation_sequencing/final_res.txt&quot;,&quot;r&quot;)res_stastics = open(&quot;/public/home/wlxie/luobuma/luobuma/sample_1_rawdata/Third_generation_sequencing/stastics.txt&quot;,&quot;w&quot;)name_list = []for lines in name_file: line = lines.strip().split(&quot;\\t&quot;) name = line[-1] # 取最后一列 name_list.append(name)# Counter()函数统计词频count_result = Counter(name_list)count_list = list(count_result.items()) # 注意需要创建一个listcount_list.append((&#x27;Unmap&#x27;,662)) # 注意手动添加blast失败的序列条数到list中count_list.sort(key=lambda x:x[1],reverse=True) # 以第二维数据值，即统计的物种学名出现次数排序res_stastics.write(&quot;Name\\tHit_reads\\tpercentage\\n&quot;)for i in count_list: name = i[0] number = i[1] reads_num = 10000 percentage =&quot;%.2f%%&quot;%(100*float(number)/float(reads_num)) # 浮点两位小数的百分比 res_stastics.write(name+&quot;\\t&quot;+str(number)+&quot;\\t&quot;+str(percentage)+&quot;\\n&quot;) 需要注意手动添加blast失败的序列条数，方便最后一起统计。打开生成的stastics.txt文件： 这个数据是制表符分割的，可以用excel做一个分布统计表，或者用R做一个柱状图，底下展示结果 可以看到，10000条序列比对结果占比最高的前两条序列（橘黄色的）是细菌的核酸序列，总数达到3437条。992条序列比对上罗布麻，662条序列未比对上nt库。可以认为这个序测序数据被细菌污染，可以和测序公司battle要求重新测一遍了…… 6 补充说明2022&#x2F;12&#x2F;4 更新秉着科学严谨的态度，再更新一些内容查漏补缺。 质控过滤后的reads有183万条，而我只取了前1万条。考虑到测序开头的低质量reads可能会对分析结果产生干扰（比如开头的电信号不稳定），我写了个python脚本对过滤后的数据随机取10000条reads，这样就只有随机误差影响分析结果了。 在第2步fq文件处理部分，为了python调用方便，先解压clean_filter.fq.gz文件 1gunzip clean_filter.fq.gz 读取解压后的文件需要49G内存，我只能在集群上处理，接着运行如下python脚本 123456789101112131415import random # 调用random模块产生随机数import linecache # 调用linecache模块读入指定行import gcoutput_file = open(&quot;/public/home/wlxie/luobuma/luobuma/sample_1_rawdata/Third_generation_sequencing/random_test.fa&quot;,&quot;w&quot;)reads_list = list(range(1,1834926)) # 共有1834925条readsline = random.sample(reads_list,10000)for i in line: text1 = linecache.getline(&quot;/public/home/wlxie/luobuma/luobuma/sample_1_rawdata/Third_generation_sequencing/clean_filter.fq&quot;,4*i-3) text2 = linecache.getline(&quot;/public/home/wlxie/luobuma/luobuma/sample_1_rawdata/Third_generation_sequencing/clean_filter.fq&quot;,4*i-2) query_id = text1.split()[0] query_id_fa = query_id.replace(&quot;@&quot;, &quot;&gt;&quot;) output_file.write(query_id_fa + &quot;\\n&quot; + text2) gc.collect() 处理方式比之前多了几步，我运行了两次脚本，发现两次产生的文件大小都在135M左右，也就是随机取10000条reads产生的文件比取前10000条reads产生的文件大了40M。证明三代测序开头测得序列质量不太行（短序列不一定质量不好，但是质量不好的序列一定是短序列），拿到随机产生的10000条reads做blast，后续步骤都一样。 2023&#x2F;1&#x2F;13更新与测序公司技术人员沟通后，纠正一些误区： 三代测序数据是长读长片段，直接使用长读长序列进行blastn比对，能比对上数据库的概率会大很多（总有些区域能比对上一些同源序列，一条reads也可能比对上不同的物种）。 真核生物基因组含有大量的重复序列，对三代测序数据一般要进行随机打断成250-500bp大小，然后随机取一条进行blastn比对，如果这条序列刚好是重复序列片段，就会出现比对不上的结果（重复区域测序准确度也相对较低）。 因此，以上的方法更适合二代测序数据的污染评估，三代数据污染评估需要在代码上考虑实现随机打断成短片段（250-500bp），再进行blastn比对nt数据库。 总的来说，这种随机取测序read进行blastn来确定数据污染的方法，只是简单粗暴的看一下样本污染情况，如果污染比例低（通常小于1%），说明数据可以使用，还需要结合GC-depth做具体分析（只有一个红色区域说明数据无污染）。blastn比对这部分内容一般不会在文章中做展示。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"基因组三代测序分析","slug":"基因组三代测序分析","permalink":"http://www.shelven.com/categories/%E5%9F%BA%E5%9B%A0%E7%BB%84%E4%B8%89%E4%BB%A3%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/"}],"tags":[{"name":"python","slug":"python","permalink":"http://www.shelven.com/tags/python/"},{"name":"blast+","slug":"blast","permalink":"http://www.shelven.com/tags/blast/"}]},{"title":"0基础学习基因组三代测序组装（1）——数据质控","slug":"0基础学习基因组三代测序组装（1）——数据质控","date":"2022-06-17T14:31:19.000Z","updated":"2022-12-03T16:14:50.000Z","comments":true,"path":"2022/06/17/b.html","link":"","permalink":"http://www.shelven.com/2022/06/17/b.html","excerpt":"最近拿到一个植物基因组的三代和二代测序数据，想通过以三代测序数据为主，二代测序数据为辅的方式学习一下如何拼接组装一个基因组。但是三代测序数据刚到手就懵了，与之前学习的转录组分析不一样，三代测序返回的几个文件不是单纯的fq文件，于是我又开始恶补了一些三代测序的基础知识，开坑写个三代基因组测序组装的系列笔记~","text":"最近拿到一个植物基因组的三代和二代测序数据，想通过以三代测序数据为主，二代测序数据为辅的方式学习一下如何拼接组装一个基因组。但是三代测序数据刚到手就懵了，与之前学习的转录组分析不一样，三代测序返回的几个文件不是单纯的fq文件，于是我又开始恶补了一些三代测序的基础知识，开坑写个三代基因组测序组装的系列笔记~ 1 技术背景当第二代高通量测序技术进入成熟阶段后，读长过短、PCR扩增带来的偏向性等问题开始日益凸显；作为基因组学上新的转折点，以PacBio单分子实时测序技术及纳米孔单分子测序技术为首的第三代高通量测序技术（Third-generation Sequencing）开始进入科研应用，从单分子水平上对DNA分子的实时测序，成功解决了二代测序几大困扰：极端 GC含量区域覆盖度低、高度重复区域无法较好地拼装、大片段变异难以准确检测、不能直接检测碱基修饰等问题。 ONT（Oxford Nanopore Technologies）牛津纳米孔测序技术作为第三代单分子实时测序技术，其原理是基于高分子膜两侧电压和其中的蛋白质纳米孔，当单分子DNA从纳米孔通过时，会引起孔两侧电位差来实现信号检测， 而ATCG四种碱基的带电性质不一样，因此利用电信号的差异就能检测出通过的碱基类型，从而实现测序。 Nanopore商业化平台有三个：MinION、GridION及PromethION。本系列笔记的三代测序数据来源于PromethION测序平台测序的一个cell，PromethION测序仪拥有48个流动槽，每个流动槽拥有3000个纳米孔通道（总计144000个），适用于大样本量的高通量快速测序。 2 数据质控basecalling在ONT的测序平台中，将通过纳米孔的DNA或RNA链产生的电位信号转化为相应的碱基序列的过程，称为basecalling。Nanopore测序的下机数据的原始数据格式为包含原始测序电信号的fast5格式，官方有提供工具Guppy进行basecalling，以mean_qscore_template的数值大于等于7为标准（也就是测序质量大于7的reads）得到原始测序数据，这样得到的basecalling数据为fastq格式（.fastq或者.fq结尾），所以我拿到的就是已经basecalling后的结果。 fast5: 原始电信号文件，以.fast5为文件结尾。此文件既有测序得到的序列信息，还有甲基化修饰信息（甲基化位点电信号会不一样）。 fastq: fast5文件转换而来，四行一个单位，序列和碱基质量一一对应。 basecalling的同时还可以一起拆分barcode条码序列，这里我没用到guppy这个软件，了解一下就行。经过basecalling后，文件会分为fail和pass两部分，pass部分就是满足Q值&gt;7的序列（二代测序质控标准是Q20，这里的三代测序质控标准是Q7，准确性不及二代测序）。 还有一个summary.txt文件，这是一个测序汇总文件，结构如下： 第一眼看上去很乱，几个重要的列含义如下： filename_fastq fasq文件名 filename_fast5 fast5文件名 read_id 每条read对应的id号 run_id 这一次运行产生的id号，一个flowcell通常为一个run channel mux 该条read在哪个channel测的 start_time 这条read测序起始时间 duration 这条read测序经过时间 passes_filtering Q值大于7为TRUE否则为FALSE sequence_length_template read长度，三代测序数据过滤的指标之一 mean_qscore_template 非常重要的指标，每一个read的平均Q值 有关barcode的都是标签序列相关参数，因为不同样品接头会添加不同的标签序列，混测的时候根据标签序列与样品的对应关系来区分不同样品。 返回的数据是guppy处理过的，也就是raw reads，接下来质控的过程就需要自己动手了。 nanoplot质控先说明下为什么要用这个工具，三代测序的数据读长比二代测序长很多，而且每条序列的长度都是不一样的。不能用之前转录组数据分析中的fastq工具，会报错，因此使用nanoplot工具来生成质检报告，同样也是会生成各种html文件方便浏览结果。 先创建一个nanoplot专用的环境，下载nanoplot，之后的质控过程都在这个环境下进行。 12345678# 创建环境并下载nanoplotconda create -n nanoplot -y -c bioconda nanoplot# 激活环境. activate nanoplot# 生成质检报告。可以用pass.fq文件，也可以直接用summery.txt文件。-o参数后面是输出文件夹名称。NanoPlot --summary summary.txt --loglength -o summary-plots-log-transformedNanoPlot -t 4 --fastq pass.fq.gz --plots hex dot -o nanoplot_out# 详细参数设置可以在NanoPlot --help中查看 运行结束之后会生成summary-plots-log-transformed这个文件夹，我们可以用xftp工具查看里面的html结果文件，也可以挑取一些数据做数据质量统计表。 放一张原始测序数据读长分布图示意一下： 点击这里查看用summary.txt生成的质控报告 点击这里查看用pass.fq.gz生成的质控报告（推荐用这个） 两种方法生成的质控报告略微有点差别，因为summary.txt文件中记录了所有序列，可以看到有部分序列质量在Q5-Q7之间；而pass.fg.gz生成的质控报告中，所有序列的质量都在Q7及以上。后续以分析pass.fq.gz文件生成的质控报告为准，对这个文件序列的长度进行过滤。 如果不需要图，只需要知道有多少条reads、reads平均长度、N50、N90这些数据做表格的话，还有一个比较实用的perl脚本，怎么使用就不赘述了，源代码放底下参考。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354#/usr/bin/perl -wuse strict;use warnings;### *fastq.gz 数据统计 N50 N90 num_seqs sum_len min_len avg_len max_len ### usage: perl stat.fastq.gz.N50.N90.pl *.fastq.gzmy $fastq_gz = $ARGV[0];open(IN,&quot;gzip -dc $fastq_gz|&quot;) or die (&quot;can not open $fastq_gz\\n&quot;);open(OUT,&quot;&gt;$fastq_gz.stat&quot;);print OUT &quot;name num_seqs sum_len min_len avg_len max_len N50 N90\\n&quot;;print OUT &quot;$fastq_gz\\t&quot;;my ($len,$total,$num_seqs,$min_len,$max_len)=(0,0,0,0,0);my @length_list;while(&lt;IN&gt;)&#123; my $title = $_; my $seq = &lt;IN&gt;; my $add = &lt;IN&gt;; my $quality = &lt;IN&gt;; $seq =~ s/\\r|\\n|\\r\\n//mg; $len = length($seq); if($len&gt;0)&#123; $total += $len; push @length_list,$len; &#125; if($min_len == 0)&#123;$min_len = $len;&#125;elsif($min_len &gt; $len)&#123;$min_len = $len;&#125; if($max_len == 0)&#123;$max_len = $len;&#125;elsif($max_len &lt; $len)&#123;$max_len = $len;&#125; $len=0; $num_seqs++;&#125;my $avg_len = $total/$num_seqs;print OUT &quot;$num_seqs\\t&quot;;print OUT &quot;$total\\t&quot;;print OUT &quot;$min_len\\t&quot;;print OUT &quot;$avg_len\\t&quot;;print OUT &quot;$max_len\\t&quot;;@length_list=sort&#123;$b&lt;=&gt;$a&#125; @length_list;my ($count,$half)=(0,0);for (my $j=0;$j&lt;@length_list;$j++)&#123; $count+=$length_list[$j]; if (($count&gt;=$total/2)&amp;&amp;($half==0))&#123; print OUT &quot;$length_list[$j]\\t&quot;; $half=$length_list[$j] &#125;elsif ($count&gt;=$total*0.9)&#123; print OUT &quot;$length_list[$j]\\t\\n&quot;; exit; &#125;&#125; filtlong过滤数据前面说过，二代测序是双端测序，三代测序是单端测序，两者过滤数据的要求不同。三代测序主要是过滤长度过短的序列和测序质量较低的序列。在basecalling中我们过滤了Q值小于7的序列，现在还要过滤read长度小于1000bp的序列。过滤后的序列可以直接用于后续的组装。 1234# 安装filtlong软件conda install -y filtlong# 设置序列最短为1000bp，压缩结果文件到新文件中filtlong --min_length 1000 pass.fq.gz | gzip &gt; clean_filter.fq.gz 可以看到过滤了一部分数据，用过滤后的数据再跑一次NanoPlot 1NanoPlot -t 4 --fastq clean_filter.fq.gz --plots hex dot -o filt_nanoplot_out 测序数据读长分布如下，可以看到已经没有1kb以下的reads了： 点击这里查看过滤后的质控报告 至此质控过滤流程结束，我们可以做一个下机数据质控统计表： Type Bases(bp) Reads Number Reads mean length(bp) Reads N50 length(bp) Raw Reads 25,584,046,180.0 1,933,526.0 13,231.8 28,127.0 Filtered Reads 25,531,304,191.0 1,834,925.0 13,914.1 28,184.0","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"基因组三代测序分析","slug":"基因组三代测序分析","permalink":"http://www.shelven.com/categories/%E5%9F%BA%E5%9B%A0%E7%BB%84%E4%B8%89%E4%BB%A3%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/"}],"tags":[{"name":"nanoplot","slug":"nanoplot","permalink":"http://www.shelven.com/tags/nanoplot/"},{"name":"filtlong","slug":"filtlong","permalink":"http://www.shelven.com/tags/filtlong/"}]},{"title":"NCBI的BLAST+工具本地安装，本地建库和BLAST比对","slug":"NCBI的BLAST+工具本地安装，本地建库和BLAST比对","date":"2022-06-16T18:33:56.000Z","updated":"2022-12-03T16:10:04.000Z","comments":true,"path":"2022/06/17/a.html","link":"","permalink":"http://www.shelven.com/2022/06/17/a.html","excerpt":"接触过生物学的小伙伴对NCBI在线BLAST网页一定不陌生，简单介绍一下这个网页的5种比对工具：blastn、blastp、blastx、tblastn和tblastx，以及如何进行本地建库和blast比对。","text":"接触过生物学的小伙伴对NCBI在线BLAST网页一定不陌生，简单介绍一下这个网页的5种比对工具：blastn、blastp、blastx、tblastn和tblastx，以及如何进行本地建库和blast比对。 blastn 用核苷酸序列检索核苷酸数据库 blastp 用蛋白质序列检索蛋白质数据库 blastx 核苷酸序列通过6种阅读框翻译不同蛋白序列后，检索蛋白数据库 tblastn 蛋白序列比对核酸库，核酸数据库通过6种开放阅读框翻译不同蛋白质 tblastx 核酸序列和核酸数据库都通过6种开放阅读框翻译后比对 平常我们用的最多的就是blastn和blastp，进入网页，选择blast方式，然后贴上自己的quary序列，选择数据库，选择比对的物种，设置参数如E值，wordlength长度等等。但是NCBI网站的BLAST在线工具有个让人特别无语的缺点：国内访问速度巨慢！不仅仅是比对过程慢，一条序列还好，大批量数据比对就不要想了，有的时候网页都打不开一直转圈圈。因此本地化blast工具还是很有必要的。 好在NCBI很贴心地提供了blast+工具，我们安装好blast+工具和下载好数据库以后，就可以不依赖网页和NCBI地服务器，在本地服务器上运行了。 1 安装blast+最新版blast+工具可以通过ftp方式获得，点击这里 我是在集群账户下安装，集群机器都是linux操作系统的，因此我选择的最新linux版本 别忘了要连md5校验文件一起下载，谁都不知道下载过程中是否会出错，因此大的文件下载完以后都是需要验证文件完整性的！ 将上面的ftp地址拼凑一下，网速好的话可以直接用wget下载，但是我这边服务器连NCBI网速实在太慢了，wget只有10Kb&#x2F;s的速度，甚至还会断开重连。看的我高血压都要犯了，无奈之下挂了个梯子，在自己电脑上下载好这两份文件，通过xftp传到了服务器上。 在服务器上首先校验文件完整性: md5sum -c ncbi-blast-2.13.0+-x64-linux.tar.gz.md5 显示结果OK后，解压： tar -zxvf ncbi-blast-2.13.0+-x64-linux.tar.gz 名字太长了，不方便以后找，顺便改个名就叫blast： mv ncbi-blast-2.13.0+-x64-linux.tar.gz blast 然后是配置环境变量： 123vim ~/.bashrc # 编辑环境变量文件# 在.bashrc文件最后一行加入如下内容（根据自己路径修改）export PATH=&quot;/public/home/wlxie/blast/bin:$PATH&quot; 保存退出后重新source一下.bashrc文件，blast+工具就安装好了。 2 下载nr&#x2F;nt数据库我们比对一般用的是NCBI的非冗余蛋白&#x2F;核酸数据库，有两种方法下载nr&#x2F;nt数据库： 1.通过blast+工具自带的更新程序下载 2.通过aspera工具下载 同样是网速的问题，如果用第一种方法下载，我们可以在~&#x2F;blast&#x2F;bin目录下找到如下的perl程序 直接运行命令 perl update_blastdb.pl nt 但是10几kb&#x2F;s的速度真的让人抓狂，所以我推荐第二种方法：用IBM公司开发的快速下载神器——aspera 安装aspera在我之前写的一篇博客里推荐过sra-tools工具中的prefetch，用来下载SRA数据中存放的高通量测序原始数据。prefetch软件就是默认通过aspera工具进行下载的。 如果之前没有安装过aspera，可以用conda直接安装，命令如下： conda install -c hcc aspera-cli 这里注意下aspera-cli是aspera的命令行版本，各种不同版本的本质上下载都是调用ascp程序，并且需要openssh公钥认证，不同版本的aspera公钥文件存放的位置不同。因为我们是通过conda安装的aspera，aspera-cli公钥文件的位置在你的conda环境目录下的etc文件夹中，比如我的aspera-cli公钥文件在&#x2F;public&#x2F;home&#x2F;wlxie&#x2F;miniconda3&#x2F;envs&#x2F;biosoft&#x2F;etc 而且因为是conda安装的，我们不需要修改什么配置文件和依赖关系，还是挺省事的。 用aspera下载数据库nr&#x2F;ntnr&#x2F;nt数据库也可以通过ftp方式获得，点击这里查看ftp网址 为了方便找到下载到本地的数据库，先在家目录新建db&#x2F;blast文件夹，进入这个文件夹后，在当前目录下运行如下命令： ascp -QT -i /public/home/wlxie/miniconda3/envs/biosoft/etc/asperaweb_id_dsa.openssh -k1 -l 500m anonftp@ftp.ncbi.nlm.nih.gov:/blast/db/FASTA/nt.gz ./ 这里是其中一个nt数据库，nr数据库只要改一个字母就行了，两个数据库都要下载。 稍微解释下各参数的含义： -Q 用于自适应流量控制，磁盘限制所需；-T 是取消加密，否则有时候数据下载不了。两个参数是搭配一起使用的 -i 输入私钥文件，注意下载的ascp版本不一样文件位置也不一样 -k1 这里是加上了断点传续功能 -l 限制最大下载速度 后面一串是账户@ftp地址:路径。注意@和冒号。NCBI公共账号是anonftp，也就是你下载SRA数据库数据也可以用这个账号；EBI公共账号是era-fasp 最后指定下载文件的路径，我用了当前路径 可以看到下载速度杠杠的，提升了不知道多少倍…下载大数据都可以用ascp命令。 下载好之后同样别忘了校验md5文件，校验后gunzip直接解压到当前文件夹。 3 本地建库解压完成以后我们可以看到这两个数据库总大小在980G 现在还不能用这两个数据库，需要对这两个超大的数据文件建索引，也就是本地建库。 使用如下命令： makeblastdb -in nt -dbtype nucl -input_type fasta -out nt makeblastdb -in nr -dbtype prot -input_type fasta -out nr -in: 待格式化的序列文件 -dbtype: 数据类型，prot为蛋白序列，nucl为核酸序列 -input_type: 输入数据的类型，默认为fasta格式 -out: 自定义的数据库名称 这一步需要非常长时间，在目录下能看到有文件生成并且没有报错就行了，同样的操作方法可以用自己的基因组数据建库。 这里有两条核苷酸序列可能有问题，序列录到了开头第一行，不过就只有两条序列应该不影响。nt库录入了0.8亿条序列，nr库录入了4.8亿条序列。 4 创建blast全局配置文件在家目录下创建blast全局配置文件： 123456789101112131415161718192021222324252627282930313233$vim .ncbirc # 家目录下创建一个新文件.ncbirc，输入如下内容; Start the section for BLAST configuration[BLAST]; Specifies the path where BLAST databases are installedBLASTDB=/public/home/wlxie/db/blast; Specifies the data sources to use for automatic resolution; for sequence identifiersDATA_LOADERS=blastdb; Specifies the BLAST database to use resolve protein sequencesBLASTDB_PROT_DATA_LOADER=/public/home/wlxie/db/blast/nr; Specifies the BLAST database to use resolve protein sequencesBLASTDB_NUCL_DATA_LOADER=/public/home/wlxie/db/blast/ntBATCH_SIZE=10G; Windowmasker settings[WINDOW_MASKER]WINDOW_MASKER_PATH=/public/home/wlxie/db/blast/windowmasker; end of file 以上设置中定义了blastn和blastp默认的地址，这样我们在比对数据库的时候可以直接输入数据库的名称而不用给出绝对路径，方便一点（这步不是必须的，可选）。 5 运行blast程序以上准备工作完成后，准备一段query序列试一下，我的query序列名称是gene.fna 运行blastn程序： blastn -query gene.fna -out gene_blastn_nr.out -db nt -outfmt 6 -evalue 1e-5 -num_threads 10 -query: 用来查询的输入序列 -db: 指定的数据库名称 -out: 自定义输出的结果文件，最好统一格式。我是基因名_比对方法_数据库.out，这样比较直观知道比对了什么，怎么比对的 -outfmt: blast结果的呈现形式，一般用6比较多，也就是m8格式，以制表符为分隔符，有部分信息会缺失。5是XML格式比较适合解析，7在6基础上加了表头。 -evalue: 限定E值 -num_threads: 指定多少个核运行blast程序 还有其他参数比如就不一一介绍了，说明一下，一个序列的blast可以用上面的命令，多个序列的blast同样适用，把多个fasta格式的序列放进去即可。 当然，批量blast的结果需要限定匹配的结果数量，毕竟我们不可能几百上千个序列一一查看，可以指定参数-max_target_seqs 5限制每个序列的最大匹配数量，这个数值推荐是在5以上，5以下会有警告信息。 blast结果m8格式如下： 一共12列，分别能获得如下信息： 1、Query id：查询序列ID标识 2、Subject id：比对上的目标序列ID标识 3、% identity：序列比对的一致性百分比 4、alignment length：符合比对的比对区域的长度 5、mismatches：比对区域的错配数 6、gap openings：比对区域的gap数目 7、q. start：比对区域在查询序列(Query id)上的起始位点 8、q. end：比对区域在查询序列(Query id)上的终止位点 9、s. start：比对区域在目标序列(Subject id)上的起始位点 10、s. end：比对区域在目标序列(Subject id)上的终止位点 11、e-value：比对结果的期望值，解释是大概多少次随即比对才能出现一次这个score，Evalue越小，表明这种情况从概率上越不可能发生，那么发生了即说明这更有可能是真实的相似序列 12、bit score：比对结果的bit score值，越高越好","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"基因组三代测序分析","slug":"基因组三代测序分析","permalink":"http://www.shelven.com/categories/%E5%9F%BA%E5%9B%A0%E7%BB%84%E4%B8%89%E4%BB%A3%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/"}],"tags":[{"name":"BLAST+","slug":"BLAST","permalink":"http://www.shelven.com/tags/BLAST/"},{"name":"aspera","slug":"aspera","permalink":"http://www.shelven.com/tags/aspera/"}]},{"title":"perl语言学习笔记（1）","slug":"perl语言学习笔记（1）","date":"2022-06-15T16:07:31.000Z","updated":"2022-12-03T16:06:51.000Z","comments":true,"path":"2022/06/16/a.html","link":"","permalink":"http://www.shelven.com/2022/06/16/a.html","excerpt":"最近在处理三代测序的下机数据，用到了一些挺好用的perl脚本，但是苦于没接触这种类型的编程语言，想根据情况改一些代码却看不懂实现方式&#x3D; &#x3D;","text":"最近在处理三代测序的下机数据，用到了一些挺好用的perl脚本，但是苦于没接触这种类型的编程语言，想根据情况改一些代码却看不懂实现方式&#x3D; &#x3D; 前面说学习perl可以只学怎么调用模块，马上啪啪打脸了，这货和python还是有点不一样的，还是抽空补补基础吧~现在做生信用的最多的就是R、python和perl，多掌握一门编程语言还是挺有必要的。记录一下自学的过程和笔记，自学视频来源是b站up主生信技能树-jimmy 示例首先了解一下perl脚本的结构，以blast结果过滤的perl脚本为例，输入文件blast_m8.out是一个12列，分隔符为空格的文件： 123456789101112131415#!/bin/perl -w # 选择解释器类型为perl，-w是运行错误时提供警告信息open IN,&quot;blast_m8.out&quot;; # 打开文件，m8格式输出的blastout文件。每次只读一行while (&lt;IN&gt;) &#123; # 大括号为程序块，每个程序块是一个独立的部分，执行相对独立的功能 chomp; # 去掉读进来数据结尾的换行符\\n（没有换行符则不起作用） my @line=split /\\s+/,$_; # 以空白分割(\\s是匹配任何空白符，+表示匹配任意多个),存入数组中 if ($line[2] &gt;=50 &amp;&amp; $line[3] &gt;=100) &#123; print &quot;$_\\n&quot;; # 将第三列identity值大于50，第四列序列长度大于100的blast结果输出 &#125; else &#123; next; # 否则进入下一个循环 &#125;&#125;close IN;# 这个脚本第四行的my也要注意下，一般是需要申明use strict;也就是使用严谨的方式，在这种方式下，任何变量都必须先定义，不使用my的话定义第一次出现的$和@运行会报错。初学可以不使用use strict。# $_这个变量是使用非常多的，如果没有定义变量名称，则默认使用$_ OK，格式与python不一样，以分号作为每一行结尾，基础语法类似但不完全一样，先从基础学起。 1 标量数据标量数据特点 perl中最基本的数据类型 可以是数字、字母 无需定义类型（所有perl语言的数据都是双精度浮点型，不需要对数据类型进行定义，代价是消耗内存） “单数为标量” 字符串运算 字符串就是一连串字符组合，可以是字母数字标点等 对DNA序列处理本质上就是处理字符串 字符串可以为空 需要“引号”，尽量使用双引号 字符串连接“.”或者“x” 如 “hello” . “world” 标量变量标量变量用来动态存储标量值，以美元符号$表示（定义数组用@符号），和linux一样不能以数字开头 123456# 一个=表示赋值，两个==表示判断，这里和python是一样的$gene_num=3$gene_num=$gene_num+4$gene_num+=4 # 双目运算符，运算所需变量为两个运算符，这个简写是非常常用的$dna=&quot;ATCGGGTATCG&quot;$dna.=&quot;ATCGGGTCG&quot; # 双目运算符同样可以用于字符串操作，得到标量变量为连接的字符串 2 数组和列表数组构建列表（list）指标量的有序集合，数组（array）则是存储列表的变量 1234567@array=（1,&quot;hello&quot;,undef,$dna,5）; # 左边为数组，右边为列表，构建列表中间用逗号隔开$array[0]=1;$array[1]=&quot;hello&quot; # 注意下标数字从0开始，0表示第一个元素数组的最后一个元素角标$#array，因此数组元素个数=$#array+1@number=(1..100) # 范围操作符(..)每次加一@string=qw (fred barney betty wilma dino) # qw操作符可以省略逗号 split和join函数 split将字符串根据固定的分隔符进行切割，切割后得到一个数组 join与split相反，将数组连接成一个标量 12345678#!/bin/perl$scalar=&quot;a:bcd:123:de&quot;;@array=split /:/,$scalar; # 以冒号作为分隔符分割print &quot;@array\\n&quot;$new_scalar=join &quot;\\t&quot;,@array; # 以制表符作为分割符，好处是excel里打开每个元素在不同单元格print &quot;$new_scalar\\n&quot; pop和push函数12345#!/bin/perl@number=(1,2,3,4,5);$value=pop @number; # pop提取数组的最后一个元素push @number,6; # push添加一个元素到数组的末尾print &quot;$value\\n@number\\n&quot;; shift和unshift函数12345#!/bin/perl@number=(1,2,3,4,5);$value=shift @number; # shift提取数组第一个元素unshift @number,10; # unshift添加一个元素到数组的开头print &quot;$value\\n@number\\n&quot;; 一般来说pop和shift用的比较多，一个提取数组末尾元素，一个提取数组开头元素。 因为我们用perl处理的往往是矩阵文件，第一行是ID信息，我们往往是读入一行数据，去掉换行符，存储为标量，分割数组。这个时候就要用shift函数，将ID提取出来，这样呢后面都是同一种类型的数据，方便我们操作，也就是底下这个框架： 1234567#!/bin/perlwhile (&lt;IN&gt;) &#123; chomp; my @line=split /\\s+/,$_; my @id=shift @line； print &quot;$id\\n&quot;&#125; sort和reverse函数1234#!/bin/perl@number=(1..10);@number_sort=sort @number; # sort函数使数组按照ASCII码大小排序print &quot;@number_sort\\n&quot;; 可以看到10在1的后面，因为sort函数是以ASCII码大小进行排序的。 1234#!/bin/perl$dna=&quot;ATCGCGTAGCATCGATGCTGATCATGC&quot;;$dna_reverse=reverse $dna; # reverse函数可以使数组或者字符串反转print &quot;$dna_reverse\\n&quot;; reverse函数在做DNA反向互补配对的时候能用到。 foreach遍历数组123456789101112#!/bin/perl@number=(1..10);foreach $num (@number) &#123; # 遍历数组中的值依迭代 print &quot;$num\\n&quot;;&#125;# 也可以省略一部分内容#!/bin/perl@number=(1..10);foreach (@number) &#123; # 省略了$num，存储到默认的$_中 print;&#125;","categories":[{"name":"编程自学","slug":"编程自学","permalink":"http://www.shelven.com/categories/%E7%BC%96%E7%A8%8B%E8%87%AA%E5%AD%A6/"}],"tags":[{"name":"perl","slug":"perl","permalink":"http://www.shelven.com/tags/perl/"}]},{"title":"基因组注释文件gbff格式转换gff3格式","slug":"基因组注释文件gbff格式转换gff3格式","date":"2022-06-13T17:09:45.000Z","updated":"2022-12-03T16:19:26.000Z","comments":true,"path":"2022/06/14/a.html","link":"","permalink":"http://www.shelven.com/2022/06/14/a.html","excerpt":"前几天老师布置了一个任务，寻找夹竹桃科Apocynaceae分类下的物种参考基因组，我在plaBiPD网站和NCBI的genome数据库中只找到包括罗布麻在内的5个已发表物种参考基因组，且都是gbff格式的。提交之后被告知需要gff格式的，因为gbf格式中没有基因相关结构的位置信息。找了一个perl脚本完成了任务。","text":"前几天老师布置了一个任务，寻找夹竹桃科Apocynaceae分类下的物种参考基因组，我在plaBiPD网站和NCBI的genome数据库中只找到包括罗布麻在内的5个已发表物种参考基因组，且都是gbff格式的。提交之后被告知需要gff格式的，因为gbf格式中没有基因相关结构的位置信息。找了一个perl脚本完成了任务。 emmmmm….其实不是很理解，因为gbff格式和gff格式是可以相互转换的，如果gbff注释文件中有信息缺失，那么gff格式也同样没有相关信息….不管怎么样先转换个格式交差，网上搜了下有前人写的perl脚本可以用，但是我以前没接触过perl语言，这里做个笔记写一下自己瞎捣鼓的过程。 1. perl语言和CPAN模块库从百度百科中引用对perl语言的一段描述： Perl是一种功能丰富的计算机程序语言，易于使用、高效、完整，而不是美观（小巧，优雅，简约）。同时支持过程和面向对象编程，对文本处理具有强大的内置支持，并且拥有第三方模块集合之一。 Perl借取了C、sed、awk、shell脚本语言以及很多其他程序语言的特性，其中最重要的特性是它内部集成了正则表达式的功能，以及巨大的第三方代码库CPAN。 看到这个简介，个人的理解就是perl语言就像python一样，自己有丰富的第三方库可以调用。同样，我们不需要具体了解每个模块的实现方式和底层代码，只要知道会调用相关的模块实现自己的目标即可。 CPAN是perl的一个第三方源码模块库，里面有上百万的perl模块，用于支撑perl的各种功能。为了方便安装perl的各种模块，前人做了一个CPAN模块，用cpan命令来安装perl的各个模块。也可以通过cpan命令来安装bioperl模块，里面有非常多的有关生信分析的perl脚本。 2. 安装和配置bioperl运行gbff转换gff3的perl脚本需要调用bioperl的一些模块，因此第一步需要安装bioperl，以及配置相应的环境。 登录学校集群，发现系统自带安装了perl程序和CPAN模块，我们可以用CPAN来安装bioperl。 12# 在命令行进入CPAN交互式界面perl -MCPAN -e shell 进入CPAN交互式界面如下： 1234# 在线寻找bioperl安装包cpan&gt;d /bioperl/# 安装对应版本的bioperl，注意目录和版本号根据搜出来的结果不同而不同cpan&gt;install S/SE/SENDU/bioperl-1.5.2_100.tar.gz 之后就是漫长的安装过程了，所有依赖关系也会一并安装，安装的时间较长，大概需要半个小时。 安装完成之后是配置环境变量，不配置的话即使安装了bioperl，也会找不到对应的模块。我的bioperl安装路径是&#x2F;public&#x2F;home&#x2F;wlxie&#x2F;miniconda3&#x2F;envs&#x2F;biosoft&#x2F;lib&#x2F;perl5&#x2F;site_perl&#x2F;5.22.0&#x2F;Bio&#x2F;，可以通过echo $PERL5LIB来查看当前perl模块的调用路径，然后在家目录的.bashrc环境变量文件中将bioperl的模块路径加到perl模块调用的路径当中。 12# 在。bashrc文件最后一行加入bioperl模块调用路径export PERL5LIB=&quot;/public/home/wlxie/miniconda3/envs/biosoft/lib/perl5/site_perl/5.22.0/:$PERL5LIB&quot; 这样所有的配置就完成了。 3. gbff格式转换gff3github上有许多gbff格式转gff3格式的脚本代码，有用biopython做的，也有bioperl做的，可能是我配置的问题，试了几个脚本后只有一个可以顺利转换。本来想研究一下脚本的实现方式，可是源代码2000多行看的我实在不知从何下手，这里只记录一下使用方法和备份脚本文件。 源代码的出处已经找不到了…点击这里查看源代码在本站的备份 使用方法： 将脚本文件bp_genbank2gff3.pl放在要转换格式的gbff文件同一个目录下，运行命令 12# perl bp_genbank2gff3.pl gbff文件名perl bp_genbank2gff3.pl Asclepias_syriaca-GCA_002018285.1_ASM201828v1_genomic.gbff 脚本自动运行，结束后会在当前目录生成同名的gff3文件","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"bioperl","slug":"bioperl","permalink":"http://www.shelven.com/tags/bioperl/"},{"name":"perl","slug":"perl","permalink":"http://www.shelven.com/tags/perl/"}]},{"title":"集群和slurm调度系统使用心得","slug":"集群和slurm调度系统使用心得","date":"2022-05-24T18:05:26.000Z","updated":"2023-02-24T03:53:40.000Z","comments":true,"path":"2022/05/25/a.html","link":"","permalink":"http://www.shelven.com/2022/05/25/a.html","excerpt":"随着各种组学技术和生物信息学技术的发展，高通量测序现在已经广泛应用到生命科学的多个领域，这些测序数据动辄几个G甚至几十上百G（主要看物种和测序深度），个人电脑对这些大量的数据处理时有些力不从心。","text":"随着各种组学技术和生物信息学技术的发展，高通量测序现在已经广泛应用到生命科学的多个领域，这些测序数据动辄几个G甚至几十上百G（主要看物种和测序深度），个人电脑对这些大量的数据处理时有些力不从心。 比如我的小破电脑，4核，2G运行内存，在对16个10X测序深度的拟南芥转录组数据进行回帖参考基因组时，cpu满载的情况下跑了整整一个晚上，拟南芥的参考基因组还是比较小的（只有116M大小）。因此在需要做大量数据处理的时候我们往往都会用到计算机集群。 先放有用的东西：slurm官网快速开始手册 以及武汉大学测绘学院做的中文手册：点击浏览和下载 1. 计算机集群介绍先上一段百度百科的介绍 计算机集群简称集群，是一种计算机系统， 它通过一组松散集成的计算机软件或硬件连接起来高度紧密地协作完成计算工作。在某种意义上，他们可以被看作是一台计算机。 集群系统中的单个计算机通常称为节点，通常通过局域网连接，但也有其它的可能连接方式。集群计算机通常用来改进单个计算机的计算速度和&#x2F;或可靠性。一般情况下集群计算机比单个计算机，比如工作站或超级计算机性能价格比要高得多。 简单来说集群就是一群电脑连接在一起完成同一个工作，自然是比单个电脑工作效率高得多。 塔大有着南疆最大的超算中心，我用测试账号登录大致看了下节点配置信息和存储规模： 可以看到塔大集群有三个分区：debug、normal和operation，其中debug是默认分区。 每个分区下都有admin91、admin92和computer1-6共计8个节点，从状态栏可以看到admin91节点处于down状态，一般来说只有故障节点才会显示状态down，但是我看了下登录节点的hostname就是admin91（admin91是登录节点），可能就是这样设置的，防止用户申请到登录节点资源（学校规定禁止在登录节点运行脚本程序，为了防止用户占用太多登录节点资源）。computer1-6都是计算节点，可以看到状态栏是idle也就是空闲的。admin92是个胖节点，状态却是drain也就是不能分配，这个我不理解，如果要运行并行命令就要用到胖节点。 裸储存容量算个大概450TB左右，不算大不算小，够用就行。 顺便看一下各个节点的性能： 稍微计算一下可以发现，计算节点computer1-6每个节点有128个核，每个核2G运行内存；登录节点admin91有64个核，每个核4G运行内存（不是很理解登录节点为什么要这么豪华……）；胖节点admin92有256个核，每个核4G运行内存。总的来说，放在内地比可能确实不怎么样，但是在新疆可以说是奢华顶配了…… 2. slurm调度系统介绍塔大集群用的是slurm调度系统，简单来说就是借助slurm这个资源管理系统，将超算中心的集群计算机统一管理。slurm是个开源分布式资源管理软件，管理这种大型的计算机集群还是比较高效的，比如天河二号上就使用了 该资源管理系统。集群操作和个人电脑操作不一样的地方是，我们需要申请计算节点然后才能运行计算的命令，需要了解一下slurm的作业调度系统。 了解一下基本概念：一个分区（partition）就是节点的逻辑分组，可以有不同的节点（node）；可以调用几个节点的资源创建作业步（job step），一个作业（job）就是一次资源分配，可以有多个作业步并且可以并发运行。 再来看一下slurm调度系统的组成成分： 主要有控制进程slurmcld，记账存储进程Slurmdbd（有的集群是收费的），节点监控进程slurmd，作业管理进程slurmstepd和用户命令工具组成，我们可以不用了解这些进程之间的相互关系，熟悉用户命令比如创建作业，提交作业和查看作业状态即可。 2.1 创建和提交作业slurm作业调度系统有三种模式创建和提交作业：交互模式——srun，批处理模式——sbatch和分配模式——salloc，分别介绍一下~还是再次强调一下，学校集群禁止在登录界面直接运行计算命令，第一次发现会强制终止进程，第二次管理员会注销用户账号。 2.1.1 交互模式——srun交互模式说白了就是我们通过命令行与集群产生可以互动的“交流”，具体过程如下： 通过终端提交资源分配请求，指定资源数目和限制 等待资源分配 获得资源后，自动加载计算任务 运行中，任务I&#x2F;O传递终端，可与任务进行交互 任务结束后，资源被释放 一次执行srun生成一个作业步，也就是一次任务加载，执行一次最简单的hostname命令如下： -n 参数指定核数，-w参数指定节点，因此显示的hostname就是computer3。运行结束后直接释放资源。 上面的例子可能没有体现出交互的意义，因为程序比较简单。有些程序在运行的过程中需要人为调整，srun才能体现出优势。 2.1.2 批处理模式——sbatch批处理模式顾名思义特点在于需要自己写批处理脚本，具体过程如下： 编写作业脚本，指定资源数目和限制 sbatch提交作业 作业排队等待资源分配 分配到资源后在首节点加载执行作业脚本 任务结束释放资源 运行结果定向到指定文件夹 这个模式也是用的最多的，登录塔大集群可以在用户家目录下找到job_example文件夹，里面有不同的slurm脚本提供参考，举个最简单的例子sleep.slurm，我们cat一下看看脚本内容： 第一行#! 指定解释器类型，和其他脚本都一样； 第二行开始后面几行的#SBATCH都被识别为sbatch命令，因此后面都加上了对应参数，这里只有sbatch这一行会被识别成命令，注意不是被注释了。如果脚本里写了对应参数内容，命令运行脚本的时候就可以不用加入这些参数。 第六行开始也就是#以后的部分，才是我们编写脚本要运行的命令。 参考这个格式，我写了如下一个建立拟南芥参考基因组索引文件的hisat2.slurm脚本： 申请了job名为job1，一个节点，一个核，显示队列，显示程序运行开始时间，运行程序，显示结束时间。 提交直接用sbatch hisat2.slurm，很快就获得资源跑完了程序，当前目录下生成了索引文件和默认输出文件slurm-job号.out 因为输出结果在结果文件里，所以我们屏幕上是看不到运行过程的，要想监控运行过程只能在运行时输入squeue查看，后面会说。运行结束后同样会自动释放资源。 2.1.3 分配模式——salloc分配模式相比前面两个模式更灵活一些，简单来说就是申请资源，执行运算任务后手动释放资源，可以用来在正式提交sbatch前做程序测试，检查代码正确后再写成脚本提交（不过也可以直接提交，不用sbatch）。流程如下： 提交资源分配请求 排队等待资源分配 命令行执行指定的命令 命令执行结束，exit手动释放资源 这个比较简单，直接salloc后面接参数申请指定的资源就行，最后一定要exit手动释放资源。 申请后可以用hostname命令看看申请的是哪个节点，确认是计算节点后再运行计算命令。 2.1.4 作业提交参数知道了三个模式的具体用法，只需要添加对应的参数就行了。没有人会具体记住所有参数，上面只有常用的几个需要记一下。这里记录一下其他常用提交参数： 参数 含义 类型 示例 -J 作业名，squeue看到的作业名 字符串 -J wrf；表示作业名称为“wrf” -n 作业申请的总cpu核心数 数值 -n 4；表示作业申请4个cpu核心 -N 作业申请的节点数 数值 -N 1 表示作业申请1个计算节点 -p 指定作业提交的分区 字符串 -psilicon表示将作业提交到silicon分区 -t 指定作业的执行时间 数值 -t 30 表示作业的执行时间不超过30分钟 -o 指定作业标准输出文件的名称 字符串 -o %j，表示使用作业号作为作业标准输出文件的名称 -e 指定作业标准错误输出文件名称 字符串 -e %j，表示使用作业号作为作业标准错误输出文件名 -w 指定分配特定的计算节点 字符串 -w computer3 表示使用computer3节点 -d 作业依赖关系设置 字符串 -d after:123 表示本作业须待作业123开始以后再执行 顺便最后再提一下交互模式和批处理模式是可以相互结合的，脚本中可以加入srun命令，可以自行尝试。 如上，可以用sbatch一次性创建100个job，每个job运行一次srun后面的内容，也就是提交并行的100个计算作业。也可以不加–array这个参数，srun最后加上符号&amp;在后台挂起，下一行继续用srun命令，以此来实现并行计算，不过要注意最后一行命令用wait等待所有命令运行结束后一起结束，否则读完sbatch就结束了。 2.2 其他用户命令这里再简单列举记录一些常用的用户命令和参数，方便自己后续用到时查阅~ 2.2.1 sinfo 查询信息 参数 含义 -a 查看所有分区信息（含隐藏分区） -d 查看dead状态（通信异常）的节点和分区的信息，与-r参数对应 -l 打印分区（或节点）的详细信息 -n 查看指定节点的信息 -p 查看指定分区的状态 -r 查看计算节点（内部通信）正常的节点和分区的状态，与-d参数对应 -R 查看节点不可用的原因，包括管理操作设置的异常 -t 查询指定节点状态的分区或节点的信息 –federation 显示所有集群的分区（或节点）的信息 –local 仅显示当前集群的分区（或节点）的信息 2.2.2 squeue 查询作业 参数 含义 -A 查看指定账号的作业 -a 显示所有分区（包含隐藏）下的作业和作业步 -r 按行显示作业组的每一个作业 –hide 不显示隐藏分区或者无权访问的分区中的作业 -j 根据指定的作业号查询作业信息 -l 长格式显示作业信息 –federation 显示所有集群下的作业 –local 仅仅查看当前集群的作业 -n 按作业名查询作业或作业步 -p 按分区查询作业 -s 查询作业步 -t 指定要显示的作业的状态 2.2.3 scancel 删除作业 参数 含义 &lt;job id&gt; 删除指定job id作业 –t 删除指定状态的作业 –account&#x3D; 删除指定账号的作业 –name&#x3D; 删除指定名称的作业 –partition&#x3D; 删除指定分区的作业 –reservation&#x3D; 删除指定预约名称的作业 –user&#x3D; 删除指定用户的作业 –nodelist&#x3D; 删除指定节点的作业 2.2.4 scontrol 查询详细信息这个命令和sinfo相比更为详细，主要能获得4个方面的详细信息 命令 含义 scontrol show node &lt;name&gt; 查询指定节点信息 scontrol show partition &lt;name&gt; 查询指定分区信息 scontrol show job 查询job信息，注意是所有的 scontrol show config 查询配置信息，也是所有的 2023&#x2F;02&#x2F;23 补充因为经常要用到scontrol show job来查看当前作业得运行情况、占用资源情况等等，因此更新一下该命令主要输出项： 参数名 解释 JobId 作业号 UserId 用户名（用户ID） GroupId 用户组（组ID） Priority 优先级，越大越优先，如果为0则表示被管理员挂起，不允许运行 Nice Nice值，越小越优先，­20到19 Account 记账用户名 JobState 作业状态。– PENDING：排队中；– RUNNING：运行中；– COMPLETED：已完成；– CANCELLED：已取消 Requeue 节点失效时，是否重排队，0为否，1为是 Restarts 失败时，是否重运行，0为否，1为是 BatchFlag 是否为批处理作业，0为否，1为是 Reboot 节点空闲时是否重启节点，0为否，1为是 RunTime 已运行时间 TimeLimit 作业允许的剩余运行时间 TimeMin 最小时间 SubmitTime 提交时间 EligibleTime 获得认可时间 StartTime 开始运行时间 EndTime 预计结束时间 Partition 队列名 AllocNode:Sid 分配的节点:系统ID号 NodeList 实际运行节点列表 BatchHost 批处理节点名 NumNodes 节点数 NumCPUs CPU核数 NumTasks 任务数 Command 作业命令 WorkDir 工作目录 StdErr 标准出错输出文件 StdIn 标准输入文件 StdOut 标准输出文件","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"集群","slug":"集群","permalink":"http://www.shelven.com/tags/%E9%9B%86%E7%BE%A4/"},{"name":"slurm","slug":"slurm","permalink":"http://www.shelven.com/tags/slurm/"}]},{"title":"转录组数据分析笔记（10）——初识GO/KEGG富集分析","slug":"转录组数据分析笔记（10）——初识GO-KEGG富集分析","date":"2022-05-15T19:47:39.000Z","updated":"2022-12-03T16:41:25.000Z","comments":true,"path":"2022/05/16/a.html","link":"","permalink":"http://www.shelven.com/2022/05/16/a.html","excerpt":"前面介绍了如何找到差异基因，我们通过R包DESeq2获得了差异表达基因，在此基础上做了更为直观的火山图和差异表达基因热图。但是仅仅知道差异表达基因的名字还不够，我们还要知道它到底有哪些功能和特征，就比如我看到一个很养眼的动漫角色，我就要去查查出自哪部番，是怎么样的人设和背景故事，一样的道理。这里简单记录下如何使用AnnotationHub，以及怎么进行GO\\KEGG富集分析。","text":"前面介绍了如何找到差异基因，我们通过R包DESeq2获得了差异表达基因，在此基础上做了更为直观的火山图和差异表达基因热图。但是仅仅知道差异表达基因的名字还不够，我们还要知道它到底有哪些功能和特征，就比如我看到一个很养眼的动漫角色，我就要去查查出自哪部番，是怎么样的人设和背景故事，一样的道理。这里简单记录下如何使用AnnotationHub，以及怎么进行GO\\KEGG富集分析。 一个基因没有注释信息，那就只是一段核苷酸序列，有了注释信息我们才能知道这个基因在染色体上的定位，在具体的某个代谢途径上发挥什么功能等等。网上能找到很多注释信息的数据库，比如模式生物拟南芥TAIR，人类基因组hg19等等，Bioconductor有一个专门用来搜集注释信息数据库的工具包——AnnotationHub。 1. AnnotationHub注释数据库搜索工具用bioconductor下载Annotationhub包，载入（注：为演示结果，以下命令均在Rstudio终端输入） 123456789101112131415161718&gt; library(&quot;Annotationhub&quot;)&gt; hub &lt;- AnnotationHub()C:\\Users\\HUAWEI\\AppData\\Local/R/cache/R/AnnotationHub does not exist, create directory? (yes/no): yes |===================================================| 100%snapshotDate(): 2021-10-20&gt; hubAnnotationHub with 62386 records# snapshotDate(): 2021-10-20# $dataprovider: Ensembl, BroadInstitute, UCSC, ftp://ftp...# $species: Homo sapiens, Mus musculus, Drosophila melano...# $rdataclass: GRanges, TwoBitFile, BigWigFile, EnsDb, Rl...# additional mcols(): taxonomyid, genome,# description, coordinate_1_based, maintainer,# rdatadateadded, preparerclass, tags, rdatapath,# sourceurl, sourcetype # retrieve records with, e.g., &#x27;object[[&quot;AH5012&quot;]]&#x27; 第一次使用AnnotationHub需要创建一个AnnotationHub对象。为了更直观地使用，我们将AnnotationHub对象赋值给hub变量。查看这个变量，我们可以得到如下的信息。 数据库版本是2021-10-20，目前有62386条记录 可以用$dataprovider 方式查看数据来源，比如数据来自于Ensembl，UCSC等等 可以用$species 方式查看数据库有哪些物种，比如人类、小鼠等等 可以用$rdataclass 方式查看数据类型 可以通过函数mcols()查看更多信息 获取数据的方式是object[[&quot;AH5012&quot;]] object指你命名的变量名 以上就是AnnotationHub的标准用法，比如我想获得拟南芥的注释数据库，我就输入以下命令查找： 123456789101112131415161718192021222324&gt; query(hub, &quot;Arabidopsis thaliana&quot;)AnnotationHub with 13 records# snapshotDate(): 2021-10-20# $dataprovider: UCSC, PathBank, NCBI,DBCLS, FANTOM5,DLRP...# $species: Arabidopsis thaliana# $rdataclass: SQLiteFile, TxDb, Tibble, list, OrgDb, Inp...# additional mcols(): taxonomyid, genome,# description, coordinate_1_based, maintainer,# rdatadateadded, preparerclass, tags, rdatapath,# sourceurl, sourcetype # retrieve records with, e.g., &#x27;object[[&quot;AH10456&quot;]]&#x27; title AH10456 | hom.Arabidopsis_thaliana.inp8.sqlite AH52245 | TxDb.Athaliana.BioMart.plantsmart22.sqlite AH52246 | TxDb.Athaliana.BioMart.plantsmart25.sqlite AH52247 | TxDb.Athaliana.BioMart.plantsmart28.sqlite AH87070 | pathbank_Arabidopsis_thaliana_metabolites.rda ... ... AH91794 | wikipathways_Arabidopsis_thaliana_metabolites... AH95585 | Alternative Splicing Annotation for Arabidops... AH95951 | org.At.tair.db.sqlite AH97723 | LRBaseDb for Arabidopsis thaliana (Thale cres... AH97844 | MeSHDb for Arabidopsis thaliana (Thale cress,... query()函数查找，输入拟南芥的学名Arabidopsis thaliana我们可以看到一共找出了13个数据库。可以看到AH95951这个编号的数据库来源就是最大的拟南芥数据库TAIR（OrgDb，存储不同数据库基因ID之间对应关系，以及基因与GO等注释的对应关系，后面ID转换和GO分析要用到），我们就用这个数据库的注释资源。 1234&gt; hub[[&quot;AH95951&quot;]]downloading 1 resourcesretrieving 1 resource | | 0% 前面说过object[[&quot;AH5012&quot;]]是获取数据的方式。以上，就可以挂后台自动下载了。我这里因为网速的原因不下了，从前面的基因名也能看出来，我筛选的差异基因都是AT开头的，而且之前的基因组注释文件也是TAIR下载的，我可以直接用bioconductor安装org.At.tair.db包，这里用AnnotationHub只是提供一个找注释数据库的思路。 2. GO&#x2F;KEGG富集分析2.1 基因ID转换找到和下载注释数据库只是第一步，接下来GO&#x2F;KEGG富集分析需要用到R包clusterProfiler和org.At.tair.db 先来看一下我们基因名是什么格式的： 很明显，我们的基因ID是TAIR类型（废话，我从TAIR下的），org.At.tair.db包可以转换基因ID类型 可以用keytypes(org.At.tair.db)或者columns(org.At.tair.db)查看可以转换的基因ID类型 转换基因ID代码如下： 12345678library(&quot;org.At.tair.db&quot;)columns(org.At.tair.db) # 查看能转换基因的ID类型diffgen &lt;- nDEGs[, 1] # 注意只需要基因名diff_gen &lt;- bitr(diffgen, fromType = &quot;TAIR&quot;, toType = &quot;ENTREZID&quot;, # 基因ID类型TAIR转换为ENTREZID OrgDb = &quot;org.At.tair.db&quot;) # 该函数是基于org.At.tair.db包的diff_gen 这一步我的基因ID转换率只有60%左右，有将近一半的TAIR基因ID不能成功转换成ENTREZID，可能是Gene ID的版本问题，同一个基因在不同版本genecode中结果不一样，下载的注释文件原始版本我这里找不到了…暂时无法解决这个问题。只能不转换基因ID先跑一遍GO&#x2F;KEGG富集分析。 看了很多教程都说clusterProfiler需要的ID类型是ENTREZID，这里我持怀疑态度，不转换后续也能得到结果，我看了函数enrichGO()默认的基因ID是ENTREZID并不代表不能改变，有可能是误传。查阅了一些资料，简单来说Entrez ID是来自于NCBI旗下Entrez gene数据库的编号系统，基因编号系统之间是可以相互转换的，这些ID可以在对应的数据库找到基因注释信息，就是说也可以在网页上手动注释。 2.2 GO&#x2F;KEGG分析123456789101112131415161718192021library(&quot;clusterProfiler&quot;)# GO富集分析enrich_GO &lt;- enrichGO(gene = diffgen, # 基因名列表 OrgDb = &#x27;org.At.tair.db&#x27;, # 输入OrgDb数据库（注释对象信息） keyType = &#x27;TAIR&#x27;, # 输入的基因名ID类型 ont = &#x27;ALL&#x27;, # 输出的GO分类 pAdjustMethod = &#x27;fdr&#x27;, pvalueCutoff = 0.05, qvalueCutoff = 0.2, readable = TRUE)GO_result &lt;- enrich_GO@resultwrite.table(GO_result, &#x27;GO_result.csv&#x27;, sep = &#x27;,&#x27;, quote = FALSE, row.names = FALSE)# KEGG富集分析enrich_KEGG &lt;- enrichKEGG(gene = diffgen, keyType = &quot;kegg&quot;, organism = &quot;ath&quot;, # 输入的物种名 pvalueCutoff = 0.05, qvalueCutoff = 0.2)KEGG_result &lt;- enrich_KEGG@resultwrite.table(KEGG_result, &#x27;KEGG_result.csv&#x27;, sep = &#x27;,&#x27;, quote = FALSE, row.names = FALSE) clusterProfiler这个包进行GO和KEGG富集分析就这两个函数 这里我的GO只富集到两条细胞组分的内容： 说一下各列代表的意思： ONTOLOGY GO分类BP（生物学过程）、CC（细胞组分）或MF（分子功能） ID 富集到的GO id号 Description 富集到的GO描述 GeneRatio和BgRatio 分别为富集到该GO条目中的基因数目&#x2F;给定基因的总数目，以及该条目中背景基因总数目&#x2F;该物种所有已知的GO功能基因数目 pvalue、p.adjust和qvalue p值、校正后p值和q值信息 geneID和Count，富集到该GO条目中的基因名称和数目 KEGG富集分析结果表如下： ID和Description 分别代表富集到KEGG的ID和描述，其他和GO富集都类似 KEGG富集分析的时候有一点需要注意，输入的organism名称需要在官网的KEGG Organisms列表中能找到，否则是不能进行分析的！点击这里进入KEGG Organisms: Complete Genomes 还发现一个很奇怪的问题，我在官网的Organisms列表能找到拟南芥Arabidopsis thaliana，但是在上面的函数中对参数赋值organism = &quot;Arabidopsis thaliana&quot;会显示HTTP 400错误，也就是发出的url请求有问题，但是输入organism = &quot;ath&quot;程序可以正常运行，以后注意写缩写吧（应该是只有缩写才行，会通过联网自动获取该物种的pathway注释信息）。 3. 可视化clusterProfiler包还提供了GO&#x2F;KEGG富集结果的可视化方案，此处代码参考CSDN，作者：Tian問 这里因为我的GO结果不好，只简单写一下流程，详细作图函数参数使用方法和效果同样可以参考上面的链接~ 12345678910111213141516171819202122232425## GO富集分析可视化#barplotbarplot(enrich_GO, showCategory = 10)#dotplotdotplot(enrich_GO, showCategory = 10)#DAG有向无环图plotGOgraph(enrich_GO) #矩形代表富集到的top10个GO terms, 颜色从黄色过滤到红色，对应p值从大到小。#igraph布局的DAGgoplot(enrich_GO)#GO terms关系网络图（通过差异基因关联）emapplot(enrich_GO, showCategory = 30)#GO term与差异基因关系网络图cnetplot(enrich_GO, showCategory = 5)## KEGG富集分析可视化#barplotbarplot(enrich_KEGG, showCategory = 10)#dotplotdotplot(enrich_KEGG, showCategory = 10)#pathway关系网络图（通过差异基因关联）emapplot(enrich_KEGG, showCategory = 30)#pathway与差异基因关系网络图cnetplot(enrich_KEGG, showCategory = 5)#pathway映射browseKEGG(enrich_KEGG, &quot;ath03060&quot;) #在pathway通路图上标记富集到的基因，会弹出页面链接到KEGG官网 关于GO&#x2F;KEGG富集分析，还有非常多的操作和应用，我只是简单做个最基础的富集分析的学习，没有涉及到手动注释，构建orgdb等等更多操作。电脑快没电了，这篇笔记先暂时记这些，以后需要用到再补充~","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"转录组数据分析","slug":"转录组数据分析","permalink":"http://www.shelven.com/categories/%E8%BD%AC%E5%BD%95%E7%BB%84%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"}],"tags":[{"name":"AnnotationHub","slug":"AnnotationHub","permalink":"http://www.shelven.com/tags/AnnotationHub/"},{"name":"GO/KEGG","slug":"GO-KEGG","permalink":"http://www.shelven.com/tags/GO-KEGG/"},{"name":"org.At.tair.db","slug":"org-At-tair-db","permalink":"http://www.shelven.com/tags/org-At-tair-db/"}]},{"title":"视频一键转字符动画——python函数封装和调用练习","slug":"视频一键转字符动画——python函数封装和调用练习","date":"2022-05-07T17:43:17.000Z","updated":"2022-12-03T16:25:24.000Z","comments":true,"path":"2022/05/08/a.html","link":"","permalink":"http://www.shelven.com/2022/05/08/a.html","excerpt":"捣鼓了几天python代码，我现在也越来越发现python的魅力所在，它的强大之处在于有非常多的第三方库可以随意调用。我不需要知道这些第三方库各种函数的实现方式，只要知道这些函数有什么作用，能得到什么结果。只要构思好自己的想法，找到对应的库就可以一步步按照我的思路编写程序，实现我想要的结果，整个构思到实现的过程让我非常愉悦~","text":"捣鼓了几天python代码，我现在也越来越发现python的魅力所在，它的强大之处在于有非常多的第三方库可以随意调用。我不需要知道这些第三方库各种函数的实现方式，只要知道这些函数有什么作用，能得到什么结果。只要构思好自己的想法，找到对应的库就可以一步步按照我的思路编写程序，实现我想要的结果，整个构思到实现的过程让我非常愉悦~ 1. 前言写这篇博客纯粹是个人爱好，也是一个巧合~ 前几天刷b站看到有人做了个剪影的字符动画，我就很好奇python是否可以实现。参考了一下github上大佬们的图片转字符画的代码，对这些代码做了点深入研究，总算搞明白了其实现方式，并且自己动手修改代码，在原有基础上改了几个bug，新增几个模块的调用，最后一步封装写成了下面这个脚本。这个脚本的功能是只要输入视频文件和你想要的视频帧率，就可以自动将视频转化为字符动画。 可以先看一下视频效果~ 或者点击这里进入b站观看 Your browser does not support the video tag. 2. 实现思路 调用ffmpeg根据帧率将视频切割成图片 调用pillow库作图，每张图片转换字符画 调用ffmpeg合并字符画并输出动画 3. 脚本代码及详解思路很清晰，接下来是写代码实现的过程，细节方面需要调用其他库 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182from PIL import Image, ImageDraw, ImageFont # pillow库作图import subprocess # 执行命令行命令，为了调用ffmpegimport sysimport os # 操作目录用import shutil # 删除目录用import numpy as np # 转化numpy数组import gc # 优化运行内存用到# 定义输入值，这个脚本需要两个输入值：file_input和FPSfile_input = sys.argv[1]FPS = sys.argv[2]def do_turn(file_input, FPS): # 调用ffmpeg切割视频 os.makedirs(&quot;tempfile/cut/&quot;) # 当前目录新建存放切割图片的临时文件夹 shell_vedio = &quot;ffmpeg -i &quot; + file_input + &quot; -r &quot; + FPS + &quot; -qscale:v 2 ./tempfile/cut/%05d.jpg&quot; # 按照XXXXX序号切割 shell_voice = &quot;ffmpeg -i &quot; + file_input + &quot; ./tempfile/out.mp3&quot; subprocess.call(shell_vedio, shell=True) # 切割视频 subprocess.call(shell_voice, shell=True) # 分离音频 count =0 for file in os.listdir(&quot;./tempfile/cut/&quot;): count += 1 print(&quot;成功分离音频，截图开始转换字符画......&quot; + &quot;共计&quot; + str(count) + &quot;张&quot;) # 统计切割图张数 # 图片转换字符画 list_p = os.listdir(&quot;./tempfile/cut/&quot;) cwd = os.getcwd() os.mkdir(&quot;./tempfile/new/&quot;) # 新建存放字符画的临时文件夹 process = 1 # 统计完成转换的字符画数量 for id in list_p: # 遍历cut文件夹所有切割后的图片做字符画转换 address = str(&quot;&quot;.join(cwd + &#x27;/tempfile/cut/&#x27; + id)) # 拼接文件的绝对路径 im = Image.open(address) # 调用image打开图片 font = ImageFont.truetype(&quot;DejaVuSans-Bold&quot;, size=20) # 字体模式，可更改 rate = 0.1 # 缩放比（不调整的话像素点过多，这里统一调整） aspect_ratio = font.getsize(&quot;x&quot;)[0] / font.getsize(&quot;x&quot;)[1] # 获得字符长宽比 new_im_size = np.array([im.size[0] * rate, im.size[1] * rate * aspect_ratio]).astype(int) # 转换numpy数组，调整大小 im = im.resize(new_im_size) im = np.array(im.convert(&quot;L&quot;)) # 转换灰阶图，生成numpy数组 symbols = np.array(list(&quot; .-vM@&quot;)) # 建立字符索引，注意要按照亮度手动排序 if im.max() == im.min(): # 全黑和全是一种颜色进行区分 if im.max() &gt; 0: # 全是一种颜色，亮度值大于0，则全部用最亮的字符数值 im = (im / im) * (symbols.size - 1) else: im[np.isnan(im)] = 0 # 全黑时亮度值为NaN(非数值)，则全部用最暗字符的字符数值，也就是全黑 else: im = (im - im.min()) / (im.max() - im.min()) * (symbols.size - 1) # 根据索引赋予相应像素点相应的数值 ascii = symbols[im.astype(int)] letter_size = font.getsize(&quot;x&quot;) # 获取字符大小，与前面一定要对应 im_out_size = new_im_size * letter_size # 这里乘以字符长宽，否则字符只有一个像素点大小 im_out = Image.new(&quot;RGB&quot;, tuple(im_out_size), &quot;black&quot;) # 设置输出图片，背景 draw = ImageDraw.Draw(im_out) y = 0 # 两个循环穷举赋值，做字符画图片 for i, m in enumerate(ascii): for j, n in enumerate(m): draw.text((letter_size[0] * j, y), n, font=font) y += letter_size[1] # 注意+=，这里赋值字符宽度给y值 im_out.save(&quot;./tempfile/new/&quot; + id + &quot;.png&quot;) # 定义输出位置和图片格式 print(address + &quot;转换成功！当前进度：&quot; + str(process) + &quot;/&quot; + str(count)) # 显示进度 process += 1 gc.collect() # 重要！每次循环结束释放一次内存，否则容易内存溢出 print(&quot;转换成功！开始生成视频，请稍候......&quot;) # 调用ffmpeg合并字符画为视频，并且合并分离的音频 outvedio = &quot;ffmpeg -r &quot; + FPS + &quot; -i ./tempfile/new/%05d.jpg.png ./tempfile/out.mp4&quot; subprocess.call(outvedio, shell=True) final_vedio = &quot;ffmpeg -i ./tempfile/out.mp4 -i ./tempfile/out.mp3 final.mp4&quot; subprocess.call(final_vedio, shell=True) shutil.rmtree(&quot;./tempfile&quot;) # 删除临时文件夹 print(&quot;字符动画final.mp4已生成!已移除临时文件夹&quot;)# 输入格式错误则显示该条用法def usage(): print(&quot;usage:&quot;, sys.argv[0], &quot;&lt;file_input&gt; &lt;FPS&gt;&quot;) exit(0)if __name__ == &quot;__main__&quot;: # 封装，只有在文件作为脚本直接执行时后面的语句才会被执行，而 import 到其他脚本中后面的语句是不会被执行的 if len(sys.argv) != 3: # 判断输入的值是否为两个，没错，是判断两个 usage() else: do_turn(file_input, FPS) 4. 注意要点调用numpy模块生成数组，是因为python本身虽然可以建立多维度的数组，但是书写起来非常麻烦。numpy可以很好地解决这个问题，可以理解为能构建一个更好用的数组。在对数组进行遍历穷举，要注意两次穷举分别生成两个数组，第二次生成的数组只有一个数，所以下面draw.text第二个参数text可以用n，也可以用n[0]列举第一个数。 12345y = 0 for i, m in enumerate(ascii): # 这里i是用不到的 for j, n in enumerate(m): draw.text((letter_size[0] * j, y), n, font=font) # 第一个参数是确定坐标 y += letter_size[1] 字符大小，字符格式，以什么字符为参照，都是可以调整的。只要注意一点，我们是按照像素点的亮度来赋于这个像素点用什么字符的，所以索引列比较重要，要自己按照字符亮度排序，添加字符注意改值。 1symbols = np.array(list(&quot; .-vM@&quot;)) # 可以改成自己想要用的字符，注意按照亮度升序 还有，在计算亮度和赋予索引值的时候，我们是按照相对亮度来计算的。因此，当图片所有像素点都是一种颜色的时候，im.max() 和 im.min()值是相等的，相对亮度会出现0&#x2F;0的值，导致报错。所以我加了以下判断条件：纯色黑色和其他颜色属于两种不同情况，黑色时numpy数组亮度是非数值NaN，需要将数组全部值进行替换为亮度最小的字符的值；因为是RGB取值，其他颜色值固定在0-255之间，颜色均一，相对亮度就没有意义了，因此全部调整为最亮字符的值。 1234567if im.max() == im.min(): if im.max() &gt; 0: im = (im / im) * (symbols.size - 1) else: im[np.isnan(im)] = 0else: im = (im - im.min()) / (im.max() - im.min()) * (symbols.size - 1) 顺便再说一个很有意思的模块subprocess，subprocess.call()函数可以执行命令行的命令，并且这个命令是在子进程实行的，只有子程序结束才会继续执行其他命令，使用起来真的特别方便！比如有些程序我的python库里没有但是我的linux里有，在python脚本的某一步我需要用到linux里的软件去处理，这个时候就可以调用subprocess.call()函数去执行linux命令行的命令了。 还有一个函数虽然不显眼，但是起着至关重要的作用 gc.collect() 没有这个函数部分运行内存不够的电脑会崩……我在这里踩了个大坑…… 在对程序进行简化以后，我以为优化地差不多了，然后发现有的时候程序会被莫名其妙killed…… vi /var/log/messages 查看运行日志，好家伙，内存溢出了 经过一番度娘，我检查了一下自己也没有用到循环引用的变量啊，那么真相只有一个了：转换字符画部分程序有3个for循环嵌套，可能是for循环引用的对象没有及时回收导致内存不断增长，最后被系统kill掉（个人猜测）。虽然python本身有垃圾回收功能，而在程序运行的时候清理地并不是很及时，引入的gc模块是python的垃圾收集器模块，与默认的回收方式算法不同，gc.collect()函数可以强制进行垃圾回收。因此我在每个转化字符画的for循环执行一次结束后强制回收内存，如下： 效果是立竿见影的，内存占用再也没超过5%了，非常的稳定！ 5. 食用方法缺什么第三方库就装什么，主要是pillow库、numpy库和ffmpeg，用conda可以直接安装。上面那段脚本代码复制粘贴，保存为ascii.py，运行命令： python ascii.py &lt;视频文件&gt; &lt;你想要的视频帧率&gt; 回车，OK，静静等屏幕上的提示就好了。视频文件不在当前文件夹的话自行加上绝对路径，完成以后只会在当前目录生成一个out.mp4的输出文件。 源代码将同步上传我的github。","categories":[{"name":"编程自学","slug":"编程自学","permalink":"http://www.shelven.com/categories/%E7%BC%96%E7%A8%8B%E8%87%AA%E5%AD%A6/"}],"tags":[{"name":"python","slug":"python","permalink":"http://www.shelven.com/tags/python/"},{"name":"ffmpeg","slug":"ffmpeg","permalink":"http://www.shelven.com/tags/ffmpeg/"},{"name":"numpy","slug":"numpy","permalink":"http://www.shelven.com/tags/numpy/"},{"name":"pillow","slug":"pillow","permalink":"http://www.shelven.com/tags/pillow/"}]},{"title":"转录组数据分析笔记（9）——pheatmap绘制差异表达基因热图","slug":"转录组数据分析笔记（9）——pheatmap绘制差异表达基因热图","date":"2022-05-04T17:16:14.000Z","updated":"2022-12-03T16:30:21.000Z","comments":true,"path":"2022/05/05/a.html","link":"","permalink":"http://www.shelven.com/2022/05/05/a.html","excerpt":"前面说到怎么用ggplot做一个火山图来查看各个基因的表达情况，火山图是以log2FC值为横坐标，以-log10（FDR）值作为纵坐标，将所有的基因都做了点状图。虽然能比较直观地看到所有基因表达情况，但我们真正感兴趣的是处理后差异表达的基因。因此，我们也可以通过前面得到的表达矩阵获得差异表达的基因名，对raw count数据进行提取和均一化，然后做一个差异基因的热图，能更直观地看到差异基因在各个样本中的上调下调情况。","text":"前面说到怎么用ggplot做一个火山图来查看各个基因的表达情况，火山图是以log2FC值为横坐标，以-log10（FDR）值作为纵坐标，将所有的基因都做了点状图。虽然能比较直观地看到所有基因表达情况，但我们真正感兴趣的是处理后差异表达的基因。因此，我们也可以通过前面得到的表达矩阵获得差异表达的基因名，对raw count数据进行提取和均一化，然后做一个差异基因的热图，能更直观地看到差异基因在各个样本中的上调下调情况。 做热图我们用的最多的R包是pheatmap，可以直接用biocmanager下载。 后面所有Rstudio操作都是在同一个Rproject中进行，引用的变量如果不理解就翻前面的笔记，最后我会把一整个转录组下游分析的R流程代码写成一个文件上传到github备份。 1. 热图介绍废话不多说，先上一段热图的定义介绍：热图是用来对采集的因子响应强度或其他的一些因素进行均一化，从而利用颜色条的变化来直观地表示不同样本之间的含量变化情况的图。 定义很简单，这里我们的因子响应强度就是每个基因的raw count值，但是raw count值从0到几千上万差别非常之大，作图不方便。所以我们通常会用均一化的方法，使每个基因的raw count值变化程度处于同一个数量级，再通过不同颜色变化得到基因在不同样品的含量变化。 R自带的均一化函数是scale()，注意下scale默认的均一化方式是按列进行的，我们还可以通过函数 t() 进行矩阵的行列转化，只需要将差异基因挑出来按行（也就是基因名）进行均一化，导入pheatmap包即可做成一个最简单的热图。 2. 简化版代码先上一个最最简易版的，比如我要分析前25个最可能发生差异表达的基因，代码如下： 1234567library(&quot;pheatmap&quot;)nDEGs &lt;- gene[which(gene$group != &quot;NOT_CHANGE&quot;),] # 筛选差异基因sort_DEGs &lt;- arrange(nDEGs,padj) # 按照padj值升序排序choose_gene &lt;- head(sort_DEGs[,1],25) # 取padj值最小的前25个基因choose_matrix &lt;- mycounts[choose_gene,] # 从raw count矩阵中挑出这25个基因数据heat_matrix &lt;- t(scale(t(choose_matrix))) # 转换了两次行列并均一化，实际就是按row进行了均一化pheatmap(heat_matrix) # 以默认参数做热图 在plots窗口可以预览生成的热图： 因为没有加任何参数调整，所以不好看（已经比R自带的热图函数做出来的好看了），先解释一下上面代码实现的原理。gene是我们前面做火山图的矩阵，里面已经有了我们差异基因分组的一列group nDEGs &lt;- gene[which(gene$group != &quot;NOT_CHANGE&quot;),] 这个代码是将group列中字符不等于“NOT_CHANGE”的数据挑出来赋值给nDEGs，注意下赋值后的nDEGs也是矩阵，可以直接查看。 sort_DEGs &lt;- arrange(nDEGs,padj) arrange() 函数的功能是升序排列，这里按照padj值升序排列。 choose_gene &lt;- head(sort_DEGs[,1],25) head()函数用法不说了，取了前25个基因。注意下我们取的第一列是基因名，如果你前面已经将基因名作为rownames导入了，那就要用rowname。 choose_matrix &lt;- mycounts[choose_gene,]，返回到我们前面的raw count矩阵，将基因名对应的数据挑出来，可以看下这个时候的choose_matrix矩阵是怎么样的： heat_matrix &lt;- t(scale(t(choose_matrix))) 先进行一次行列转换，对列数据进行均一化，再进行一次行列转换，说白了就是对每行基因的raw count数据进行均一化，得到如下矩阵： pheatmap(heat_matrix)以默认参数做热图，大功告成。 如果要对所有差异表达的基因做热图，只需要修改一下输入的矩阵就行： 123all_matrix &lt;- mycounts[(sort_DEGs[,1]),]heat_matrix_all &lt;- t(scale(t(all_matrix)))pheatmap(heat_matrix_all) 因为这是默认参数作图，所以输出结果非常感人： 你论文敢用这种图？所以还是需要了解一下pheatmap包的各种参数，对热图进行调整和修改。 3. 参数详解此部分内容参考CSDN博客：跳动的喵尾巴 12345678910111213141516171819pheatmap(mat, color = colorRampPalette(rev(brewer.pal(n = 7, name = &quot;RdYlBu&quot;)))(100), kmeans_k = NA, breaks = NA, border_color = &quot;grey60&quot;, cellwidth = NA, cellheight = NA, scale = &quot;none&quot;, cluster_rows = TRUE, cluster_cols = TRUE, clustering_distance_rows = &quot;euclidean&quot;, clustering_distance_cols = &quot;euclidean&quot;, clustering_method = &quot;complete&quot;, clustering_callback = identity2, cutree_rows = NA, cutree_cols = NA, treeheight_row = ifelse((class(cluster_rows) == &quot;hclust&quot;) || cluster_rows, 50, 0), treeheight_col = ifelse((class(cluster_cols) == &quot;hclust&quot;) || cluster_cols, 50, 0), legend = TRUE, legend_breaks = NA, legend_labels = NA, annotation_row = NA, annotation_col = NA, annotation = NA, annotation_colors = NA, annotation_legend = TRUE, annotation_names_row = TRUE, annotation_names_col = TRUE, drop_levels = TRUE, show_rownames = T, show_colnames = T, main = NA, fontsize = 10, fontsize_row = fontsize, fontsize_col = fontsize, angle_col = c(&quot;270&quot;, &quot;0&quot;, &quot;45&quot;, &quot;90&quot;, &quot;315&quot;), display_numbers = F, number_format = &quot;%.2f&quot;, number_color = &quot;grey30&quot;, fontsize_number = 0.8 * fontsize, gaps_row = NULL, gaps_col = NULL, labels_row = NULL, labels_col = NULL, filename = NA, width = NA, height = NA, silent = FALSE, na_col = &quot;#DDDDDD&quot;, ...) 参数内容非常之多，我这里仅挑选一些可能用得上的做个记录： 参数 描述 color 表示热图颜色，colorRampPalette(rev(brewer.pal(n &#x3D; 7, name &#x3D; “RdYlBu”)))(100)表示颜色渐变调色板，“n” 的数量取决于调色板中颜色的数量，“name” 为调色板的名称，(100)表示100个等级；color &#x3D; colorRampPalette(c(“blue”, “white”, “red”))(100)则是通过设置三种不同的颜色进行渐变显示 scale 表示进行均一化的方向，值为 “row”, “column” 或者”none” kmeans_k 默认为NA，即不会对行进行聚类；如果想在进行层次聚类之前，先对行特征(因子)进行 k-means 聚类，则可在此调整热图的行聚类数 cluster_rows 表示仅对行聚类，值为TRUE或FALSE cluster_cols 表示仅对列聚类，值为TRUE或FALSE clustering_distance_cols 表示列聚类使用的度量方法，与行聚类的度量方法一致 clustering_method 表示聚类方法，包括：‘ward’, ‘ward.D’, ‘ward.D2’, ‘single’, ‘complete’, ‘average’, ‘mcquitty’, ‘median’, ‘centroid’ cutree_rows 若进行了行聚类，根据行聚类数量分隔热图行 cutree_cols 若进行了列聚类，根据列聚类数量分隔热图列 treeheight_row 若进行了行聚类，其热图行的聚类树高度，默认为 “50” treeheight_col 若进行了列聚类，其热图列的聚类树高度，默认为 “50” breaks 用来定义数值和颜色的对应关系，默认为 “NA” border_color 表示热图每个小的单元格边框的颜色，默认为 “NA” cellwidth 表示单个单元格的宽度，默认为 “NA”，即根据窗口自动调整 cellheight 表示单个单元格的高度，默认为 “NA”，即根据窗口自动调整 fontsize 表示热图中字体大小 fontsize_row 表示行名字体大小，默认与fontsize一致 fontsize_col 表示列名字体大小，默认与fontsize一致 fontsize_number 表示热图上显示数字的字体大小 angle_col 表示列标签的角度，可选择 “0”，“45”，“90”，“270”，“315” display_numbers 表示是否在单元格上显示原始数值或按照特殊条件进行区分标记 number_format 表示热图单元格上显示的数据格式，如 “%.2f” 表示两位小数； “%.1e” 表示科学计数法 number_color 表示热图单元格上显示的数据字体颜色 legend 表示是否显示图例，值为TRUE或FALSE annotation_row 表示是否对行进行注释 annotation_col 表示是否对列进行注释 annotation_colors 表示行注释及列注释的颜色 annotation_legend 表示是否显示注释的图例信息 annotation_names_row 表示是否显示行注释的名称 annotation_names_col 表示是否显示列注释的名称 show_rownames 表示是否显示行名 show_colnames 表示是否显示列名 main 表示热图的标题名字 gaps_row 仅在未进行行聚类时使用，表示在行方向上热图的隔断位置，如 gaps_row &#x3D; c(２, 4)表示在第２与第4列进行隔断 gaps_col 仅在未进行列聚类时使用，表示在列方向上热图的隔断位置，同 gaps_row labels_row 表示使用行标签代替行名 labels_col 表示使用列标签代替列名 filename 表示保存图片的位置及命名 width 表示输出绘制热图的宽度 height 表示输出绘制热图的高度 margins 表示热图距画布的空白距离 好吧，看上去基本上都能用到。制作热图应用的统计学原理就不多说了，我也没研究明白，我们用上面的这些参数能做出好看点的图就行。所以其实pheatmap中也有对应的参数scale来对行或列进行均一化，在pheatmap中设置参数或者多加一行代码做个均一化转换都是一样的。 4. 最终流程代码知道了简化版代码的各行命令和pheatmap各参数作用，稍加一点点修改得到最终流程代码： 12345678910111213141516library(&quot;pheatmap&quot;)nDEGs &lt;- gene[which(gene$group != &quot;NOT_CHANGE&quot;),]sort_DEGs &lt;- arrange(nDEGs,padj)all_matrix &lt;- mycounts[(sort_DEGs[,1]),]heat_matrix_all &lt;- t(scale(t(all_matrix)))# 要做热图的每列分组，底下两行代码是必须的annotation_col &lt;- data.frame(sample = factor(c(rep(&quot;SD&quot;,4),rep(&quot;LD1&quot;,4)))) # 简单粗暴地写一个分组矩阵row.names(annotation_col) &lt;- colnames(heat_matrix_all)pheatmap(heat_matrix_all, color = colorRampPalette(c(&quot;blue&quot;, &quot;white&quot;, &quot;red&quot;))(100), treeheight_col = 30, treeheight_row = 10, show_rownames = FALSE, angle_col = 45, annotation_col = annotation_col, filename = &quot;test.pdf&quot;) 保存后的差异基因热图如上所示，左边4列是LD长日照1天组，右边4列是SD短日照对照组。数据不是特别好，但是两组还是能区分开的，至少也比第一次做的顺眼一点了。 标题参数main有个小bug，加了参数在plots区域预览是正常的，但是用filename保存到输出文件如果标题是中文会出错，无法显示中文标题。这个小bug倒是无伤大雅，图在plots区也可以直接保存输出，不是非得要用filname参数指定输出文件输出的。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"转录组数据分析","slug":"转录组数据分析","permalink":"http://www.shelven.com/categories/%E8%BD%AC%E5%BD%95%E7%BB%84%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"}],"tags":[{"name":"R语言","slug":"R语言","permalink":"http://www.shelven.com/tags/R%E8%AF%AD%E8%A8%80/"},{"name":"pheatmap","slug":"pheatmap","permalink":"http://www.shelven.com/tags/pheatmap/"}]},{"title":"获得测序原始数据——初探GEO和SRA数据库","slug":"获得测序原始数据——初探GEO和SRA数据库","date":"2022-05-03T20:02:37.000Z","updated":"2022-12-03T16:24:11.000Z","comments":true,"path":"2022/05/04/a.html","link":"","permalink":"http://www.shelven.com/2022/05/04/a.html","excerpt":"最近在看转录组数据分析的文献，想下载一些原始数据自己跑一跑的，发现自己对于几个高通量测序数据库还是有些不太熟悉。以我现在的经验来看，EBI数据库的原始测序数据最容易获得，可以直接在EBI官网下载需要的fastq格式文件，但是NCBI的SRA数据库下载数据还是有些麻烦的，做个学习笔记记录下。","text":"最近在看转录组数据分析的文献，想下载一些原始数据自己跑一跑的，发现自己对于几个高通量测序数据库还是有些不太熟悉。以我现在的经验来看，EBI数据库的原始测序数据最容易获得，可以直接在EBI官网下载需要的fastq格式文件，但是NCBI的SRA数据库下载数据还是有些麻烦的，做个学习笔记记录下。 初探GEO数据库和SRA数据库1. GEO数据库先上数据库链接，点击这里 GEO数据库全称Gene Expression Omnibus database，是由美国国立生物技术信息中心NCBI创建并维护的基因表达数据库。它创建于2000年，收录了世界各国研究机构提交的大多数高通量基因表达数据，GEO除了二代测序数据，还包含芯片测序、单细胞测序数据。 GEO数据库有四种数据存放类型**GSE数据编号(Series)、GPL数据编号(GEO platforms)、GSM数据编号(Samples)和GDS数据编号(Datasets)**。 一篇文章可以有一个或者多个GSE(Series)数据集，一个GSE里面可以有一个或者多个GSM(Samples)样本，如果做的是基因芯片，那每个数据集也会有自己对应的芯片平台，就是GPL(GEO platforms)。GSE编号一般为作者提交时生成的原始数据编号，后续NCBI中的工作人员会根据研究目的、样品类型等信息归纳整合为一个GDS(Datasets)，整理后的数据还会有GEO profile数据，也就是基因在这次实验中的表达数据。我平常文献里看到最多的就是GSE编号，可以直接在GEO数据库的搜索框里输入查看。 我个人比较关注的是tools栏目里的FTP Site功能。ftp是文件传输协议，ftp访问的界面非常干净，如果我只需要下载GEO数据库里的文件，而不关注其他多余信息的话，可以通过这个界面非常快速地找到对应GSE编号下所有作者上传到GEO数据库的文件，目录结构层次一目了然。如下图所示，datasets对应GDS编号；platforms对应GPL编号；samples对应GSM编号；series对应GSE编号，网站还很贴心地给了README.txt里面写了帮助文档，包括怎么用ftp访问等等 在Browse Content这个栏目里，我们也能看到这个数据库的一些概览，比如现在有多少数据集，多少个芯片平台，多少上传的样品等等信息。我翻看了一下两年前jimmy出的教程，那个时候的GEO数据库收录的信息只有现在的一半不到，两年时间这些数据呈井喷式的发展，大数据时代信息发展之快也确实让我挺震惊。 尤其是点开基因芯片的平台，以上传的样品数量对这些芯片平台进行排序，发现两年前独占鳌头的Affymetrix公司的HG-U133（也是最古老的基因芯片）已经被illumina公司高通量测序芯片全面超越了接近两倍，这也意味着高通量测序在这两年发展已经不仅仅是快速发展了，简直是火箭式发展……这也是大势所趋。 GEO数据库的搜索地址也很有规律性，比如只有最后的GSE编号不同，其他网址字段都是一模一样的，这也算是方便搜索的一个没什么用处的小技巧？…… 看点有用的，我们根据文献得到的GSE编号进行搜索，可以看到如下页面，前半部分是作者的一些信息，我们可以获得测序物种、作者的联系方式、发表的文章PMID等等，而我们更需要获取的信息在后半部分： 样本信息这里解释一下，有三种主要的数据类型： SOFT 平台信息芯片中探针与基因的对应关系注释文件，样品单独的表达量，所有信息文件 MINiML XML格式的所有数据，同SOFT文件单格式不同，和HTML格式差不多 TXT 这是样品表达矩阵的数据文件，我的理解是总结类型文件，不如用底下的原始数据 原始数据信息也说一下，这里可能会给原始测序的raw data，也可能不给；有的时候会给raw count表达矩阵，也有的时候不给；样品表达矩阵也是有的时候给的raw count，有的时候给的FPKM（比如上面这种情况）。就…挺离谱的，没有标准，如果我们要跑Deseq2复现作者的结论，通过FPKM得到的表达矩阵还不能用。希望网站能制定点相关标准吧（题外话，不然对于我们这种小白，找不到数据直接痛苦面具） 我个人觉得，这个数据库比较重要的是可以获得样品分组信息和SRA数据库的链接地址，方便我们下载测序原始数据（后面介绍怎么下载）。如果不想跑原始数据，也可以直接拿样品表达矩阵来跑转录组下游分析。直接用表达矩阵就是要当心作者拿漂亮数据坑你。 2. SRA数据库同样的先上数据库链接，点这里 其实从网址上就可以看出端倪，这俩数据库都是NCBI旗下的俩兄弟，都是NCBI一个亲爹亲妈养的。我百度的时候也发现，很多人把这两个数据库混在一起，或者叫GEO&#x2F;SRA数据库，其实两者还是有区别的。 SRA数据库是三大核酸数据库之一，我之前的笔记也有介绍过（点击这里查看）。我个人的理解是，SRA数据库存放的是原始测序文件，而GEO数据库存放的大部分是经过作者处理以后的数据文件（有的也包括了原始测序文件），相对而言SRA数据库更大也更存粹，而NCBI官方也给了下载SRA数据的小工具——SRA Toolkit。 SRA数据类型包含如下四种，看到前缀知道这是SRA数据库，了解一下就行： Studies 研究课题（前缀为ERP或SRP，包含多个Experiment) Experiments 实验设计（前缀为SRS，包含Sample、DNA source、测序平台和测序数据等信息） Samples 样品信息（前缀为SRX，包含一个或多个Runs) Runs 测序结果集（SSR开头的记录，代表测序仪器所产生的reads） 主要说说数据下载方式前几天也有同学问我sra数据库的原始测序数据怎么下载的，找不到下载方式，看的教程都是NCBI上直接下载的。emmmmmm我的第一反应是这不就是NCBI旗下的子数据库嘛……还能从哪儿下载… 废话不多说，直接看官网给的下载工具——SRA Toolkit 这是一个官方给的小工具合集，提供我们各种操作系统下的安装包，我把linux和windows安装包都下了。安装步骤都是一样的，解压，把bin文件夹路径加到系统环境变量，搞定。windows需要打开cmd命令行运行一次prefetch（下载命令），按照提示输入vdb-config --interactive起到类似激活的作用就行了。linux里甚至都不需要编译（也可以conda安装）。可能有的同学对自己的windows系统不熟悉，不知道怎么改自己的系统环境变量，其实这个比linux改环境变量更容易，百度一下吧&#x3D; &#x3D; 我个人更推荐在windows系统安装SRA Toolkit，SRA数据库本身服务器在国外，国内访问下载速度慢到令人发指（个位数Kb&#x2F;s，甚至直接没有），而类似转录组这种数据，细菌可能还好点，动植物做个10X测序动不动就是几个G十几个G，加上分组和生物学重复动辄几十上百G，那点速度下到天荒地老也下不完。纯命令行的linux系统使用代理服务相对windows系统来说要麻烦一点，说白了，windows系统更容易科学上网，为了下载数据没有别的办法。 我们用的就是SRA Toolkit工具包里的prefetch命令下载原始数据，prefetch有个最大的好处是只要知道SRA数据库的数据类型编号，就可以直接下载对应的原始数据。如果要批量下载，可以将数据编号写入txt文件中再运行prefetch命令，或者直接写个循环语句。所以这里的关键是怎么得到数据编号，比如SRR编号等等。 前面GEO数据库提供了SRA数据库的链接，我们可以直接点开（或者点击原始数据底下的SRA Run Selector）： 点击右上角的Send results to Run selector: 我们可以看到，这个项目一共有16个基因组测序数据，难道要16个wget命令一个一个下载麽？不需要，如果要下载的基因组数据数量多肯定不行。我们可以从Accession list里获取不同前缀的各种run数据，后面用prefetch命令结合循环语句，直接一步下载。 把Accession list的编号全部复制下来，以linux为例运行cat &gt; id，回车后粘贴编号，按ctrl+c退出，这样就生成了一个名为id的文件，里面内容是我们要下载的基因组测序数据编号。 写一个循环语句cat id | while read id ;do prefetch $id &amp;;done ，就可以全部下载了，这里没有指定输出目录，最终所有原始测序数据会输出到根目录下。 最后顺便说一句，下载测序原始数据的方法很多，不仅仅是官方给的这个小工具。还可以用aspera遵循一定的下载格式也可以下载原始数据，或者用最原始的wget简单粗暴直接下载，只是说这些方法都或多或少受到网络限制的影响，prefetch也只是相对稳定一点。前面的笔记我也介绍过爬虫的编程方法，分解网页结构，批量抓取我们需要的信息，这也不失为一种方法。人是活的，不要拘泥于一种思路。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"SRA","slug":"SRA","permalink":"http://www.shelven.com/tags/SRA/"},{"name":"SRA Toolkit","slug":"SRA-Toolkit","permalink":"http://www.shelven.com/tags/SRA-Toolkit/"},{"name":"GEO","slug":"GEO","permalink":"http://www.shelven.com/tags/GEO/"}]},{"title":"简易爬虫程序编程记录——以微博热搜为例","slug":"简易爬虫程序编程记录——以微博热搜为例","date":"2022-05-02T16:05:41.000Z","updated":"2022-12-03T16:23:08.000Z","comments":true,"path":"2022/05/03/a.html","link":"","permalink":"http://www.shelven.com/2022/05/03/a.html","excerpt":"写的这个小爬虫程序主要是应用requests库和lxml包的etree库，简单介绍一下。","text":"写的这个小爬虫程序主要是应用requests库和lxml包的etree库，简单介绍一下。 1. 关于爬虫百度百科对于爬虫的定义是，网络爬虫（又被称为网页蜘蛛、网络机器人，在 FOAF 社区中，经常被称为网页追逐者），是一种按照一定的规则，自动抓取互联网信息的程序或者脚本。另外一些不常使用的名字还有蚂蚁、自动索引、模拟程序或者蠕虫。 我们只需要知道爬虫的作用是抓取网页的信息，其实现在互联网上充斥着大量的爬虫，包括不局限于火车票抢票软件，各种实时数据分析网站等等，本质上都是发起大量的http请求获得信息。爬虫技术的滥用会导致目标网站在短时间内收到大量的访问请求，进而导致服务器瘫痪，相当于是ddos攻击了。但是爬虫的便利性是不可否认的，尤其是批量操作数据和获取信息，比如批量下载我们需要的文献等等。犯罪的永远是凶手而不是工具，我们在合法的范围内应用好工具，能为我们生活提供非常大的便利。 知其然知其所以然，了解这个技术的最好方法是自己去学，因此写了这个小爬虫程序。为什么拿微博热搜来练手呢，因为微博热搜网页结构非常简单明了，很容易上手…… 1.1 requestsrequests是最常用的Python HTTP客户端库，编写爬虫和测试服务器响应数据时经常会用到，专门用于发送HTTP请求。说白了requests最大的作用就是发起http请求，返回我们需要的网页数据，所谓爬虫就是从网页上抓取和整理我们需要的公开的信息，对于非公开的信息抓取是违法的。 requests请求方式： 1234567requests.get(url, kwargs)： 发送GET请求requests.post(url, kwargs)： 发送POST请求requests.put(url, kwargs)： 发送PUT请求requests.delete(url, kwargs)： 发送DELETE请求requests.head(url, kwargs)： 发送head请求erquests.options(url, kwargs)： 发送options请求这些请求方法的参数和用法一致，必选参数为url，其他参数为可选参数 1.2 etreelxml的etree是从上面requests返回的html源码中提取信息用的，我们可以通过xpath解析网页的dom树，从中获取我们需要的元素和内容。 主要用的也就是etree.HTML()，可以用来解析字符串格式的html文档对象，更方便对我们需要的元素和对象进行抓取，后面演示会说到。 2. 代码和结果展示123456789101112131415161718192021import requestsfrom lxml import etreeimport timeurl = &#x27;https://s.weibo.com/top/summary/&#x27;header = &#123;&#x27;User-Agent&#x27;: &#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36&#x27;,&#x27;cookie&#x27;: &quot;UOR=www.baidu.com,s.weibo.com,www.baidu.com; SINAGLOBAL=2417808258422.6777.1651037395174; _s_tentry=-; Apache=9947874618898.105.1651493077297; ULV=1651493077318:2:1:1:9947874618898.105.1651493077297:1651037395190; PC_TOKEN=04cd3c070b; login_sid_t=80fe8e3820060c4330191a42b71357dd; cross_origin_proto=SSL; ALF=1683032497; SSOLoginState=1651496497; SUB=_2A25Pa6ZiDeRhGeFL6lAT-CzMyj-IHXVsAJCqrDV8PUNbmtB-LUjdkW9NQm3k0nVgyW6LFmyhR5luy-dtvVNK1VjC; SUBP=0033WrSXqPxfM725Ws9jqgMF55529P9D9WWTcwdUO8qo5ZVwP9-2e8C.5JpX5KzhUgL.FoMfeKzE1hz7eKe2dJLoIp7LxKML1KBLBKnLxKqL1hnLBoMNSK2EeonEeh20&quot;&#125;resp = requests.get(url, headers=header)resp1 = resp.content.decode(encoding=&#x27;utf-8&#x27;)resp2 = etree.HTML(resp1)title = resp2.xpath(&#x27;//*[@id=&quot;pl_top_realtimehot&quot;]/table/tbody/tr/td/a/text()&#x27;)clout = resp2.xpath(&#x27;//*[@id=&quot;pl_top_realtimehot&quot;]/table/tbody/tr/td/span/text()&#x27;)addresses = resp2.xpath(&#x27;//*[@id=&quot;pl_top_realtimehot&quot;]/table/tbody/tr/td/a/@href&#x27;)print(time.strftime(&quot;%F,%R&quot;)+&#x27;\\n50条实时微博热搜\\n&#x27;+&#x27;\\n排列方式：序号+关键词+热度\\n&#x27;)for i in range(51): if i == 0: print(&#x27;&#x27;.join(&#x27;置顶&#x27;+&#x27;\\t&#x27;+title[i]+&#x27;\\n&#x27;+&#x27;https://s.weibo.com&#x27;+addresses[i]), &#x27;\\n&#x27;) else: print(&#x27;&#x27;.join(str(i)+&#x27;\\t&#x27;+title[i]+&#x27;\\t&#x27;+clout[i-1]+&#x27;\\n&#x27;+&#x27;https://s.weibo.com&#x27;+addresses[i]), &#x27;\\n&#x27;) 未对代码进行封装，源代码就这么十几行，实现的结果是，执行一次就在当前终端屏幕上输出实时的50条微博热搜话题，并显示序号和热度，每条热搜话题下一行生成微博超链接。 3. 代码详解建立python脚本，导入模块这步不解释了。 url是我们要抓取信息的网站地址，这个很好理解。header是我们调用requests模块需要的一个重要参数，里面提供了我们访问需要的认证信息cookie，http请求本身是无状态的，网站无法确认前一次发出请求的人和后一次发出请求的人是否为同一人，因此需要让网站记住我们的登录信息cookie以响应我们的请求。没有header可能无法返回网页信息，那这一大堆东西是怎么来的呢？需要我们审查网页元素。 3.1 获得cookie和user-agent打开微博热搜首页，登录微博，随便什么空白的地方右键，点击检查，找到network（网络）。 上面的为网页元素，日志控制台，网络，资源，性能和内存等等标签，下面的就是对应的内容，往往点击第一个总结类的文件可以获得request headers信息，这里面最重要的两个信息：cookie和User-Agent 将cookie和user-agent内容全部写到header变量中，这样每次访问网站就带上了我们唯一的标志信息 resp = requests.get(url, headers=header) 访问目标网址，返回的html源码赋值给resp，然而我们看不到返回的值是怎么样的，什么类型的，这里我就要介绍一下vscode的AREPL插件了。 3.2 AREPL查看变量和审查网站元素前面介绍vscode插件说过，AREPL可以实时打印出当前的变量信息而不需要运行代码，极大地方便了我们查看返回的值和信息，知道每一行代码发挥了什么作用。 我们看一下自定义的resp变量是什么： status_code值为200，很明显成功返回了html源码信息，但是点开来看却得不到我们需要的网页文字信息，因为还没有进行解码。我们可以看到编码方式是UTF-8，自然而然的，我们就要对resp变量值进行对应的UTF-8解码，也就是后面的代码resp1 = resp.content.decode(encoding=&#39;utf-8&#39;)，这里注意一点要用content不能用text 再来点开看看解码后的resp1： 如果有点html基础的话会发现，怎么样，是不是很熟悉！没错！这就是我们在审查网页元素获得的网页的前端结构，这里包括了所有的网页信息，再也不用点开原网站一个一个元素去找啦！（就比如我这小破站的网页元素看地我脑瓜子嗡嗡的）这里可以很轻易地看到各个节点信息，极大方便了我写上面的爬虫代码。 这里我需要三个信息，热搜的标题、热度和网址，我们来展开看一看网页结构： 像洋葱一样一层一层拨开网页结构，我们可以清楚地看到table&#x2F;tbody&#x2F;tr&#x2F;td&#x2F;a节点的内容是微博热搜标题，a这个节点的标签href就是网址，table&#x2F;tbody&#x2F;tr&#x2F;td&#x2F;span节点的内容就是热度，至此，网页结构一清二楚，我们要做的就是把信息提取出来，提取的方式就是etree解析这个字符串格式的html文档，生成对应的元素路径。 3.3 解析html文档resp2 = etree.HTML(resp1)就是用来解析字符串格式的HTML文档对象的，将传进去的字符串转变成元素对象 转换后的resp2如下，我们可以看到每个节点都被转换成了_Element对象： 接下来就是顺理成章地用xpath寻找元素路径，将对应内容提取出来，我的元素路径中应用了正则表达式，这里也不解释了。 最后可以将提取出来的三个信息一一打印出来看看是否有问题（AREPL插件真的立大功），有了信息接下来就是整理和排版，那就是print函数和循环语句的基本用法了。虽然python中的print函数和循环语句与R或者linux中略有不同，这个基础知识这里也不再赘述。 唯一我觉得需要注意的是，range() 函数提供的是0-51的整数；官网置顶的微博没有热度显示，所以我写了一个if判断语句区别；排版的时候注意转义字符，其他都是细节微调部分，怎么美观怎么顺眼怎么来。 4. 总结因为这个网页没有做反爬（或许是我没注意到）手段，至少我获取这些公开信息还是没有遇到阻碍的，这也是最最简单的一个爬虫脚本了，调用第三方模块，解析网页，最后提取信息和整理，就是这么简单也很好理解。 我最近还接触到一个明日方舟抽卡记录汇总的小程序，我看了下小程序的方法，猜测这类程序也是类似的爬虫程序。先登录官方网站，需要你输入一个网址，提供token_by_cookie这个值，这个值在network标签中能找到，并且能发现resquest url就是获取token_by_cookie值的网站。 获得这个token之后，我们可以看到抽卡记录可以通过另一个需要token的网址中直接获取，明日方舟的抽卡记录只能保存10页，因此，只需要输入token，直接更改page值1-10，就能获得详尽的抽卡信息。而做成好看的图表也无非是把爬虫程序和作图程序结合一下，封装，最后在小程序调用，思路就是这样的。 同时也能发现，如果我们提供token值给别人，除了抽卡记录以外，还能提取我们的充值信息和源石消费信息等等这类隐私信息。要掌握隐私信息无非是程序的作者想不想做的问题，毕竟还是把隐私信息握在自己手里比较好。 学习就是学习这些技术的思路并为自己所用。","categories":[{"name":"编程自学","slug":"编程自学","permalink":"http://www.shelven.com/categories/%E7%BC%96%E7%A8%8B%E8%87%AA%E5%AD%A6/"}],"tags":[{"name":"python","slug":"python","permalink":"http://www.shelven.com/tags/python/"},{"name":"爬虫","slug":"爬虫","permalink":"http://www.shelven.com/tags/%E7%88%AC%E8%99%AB/"}]},{"title":"vscode远程连接和快速搭建python环境","slug":"vscode快速搭建python环境","date":"2022-04-29T10:17:01.000Z","updated":"2022-12-03T16:17:35.000Z","comments":true,"path":"2022/04/29/a.html","link":"","permalink":"http://www.shelven.com/2022/04/29/a.html","excerpt":"最近在自学python，刚入门苦于不知道从何下手，也不知道用什么编辑器比较适合。在度娘上搜了十几款编辑器，最终决定用微软的vscode，这个编辑器可以配置Python、Java、C ++等编程环境，而且有非常强大的插件功能，界面看着也挺友好，写个日志记录下自己瞎捣鼓的配置。","text":"最近在自学python，刚入门苦于不知道从何下手，也不知道用什么编辑器比较适合。在度娘上搜了十几款编辑器，最终决定用微软的vscode，这个编辑器可以配置Python、Java、C ++等编程环境，而且有非常强大的插件功能，界面看着也挺友好，写个日志记录下自己瞎捣鼓的配置。 本来是想在我的云服务器上装vscode，但是我的云服务器上没有可视化界面……于是在我的小破笔记本上安装了vscode，后来又发现有一个插件可以ssh连接上服务器，只要能ssh连接就可以直接调用服务器上事先安装好的各种python库，真香~ 从头开始记录下使用方法和自己的设置 1. 下载vscodevscode可以直接上官网下载（速度很慢，建议科学上网），选择自己的操作系统，我用的windows 一直下一步就可以了，唯一需要注意的是把vscode加入系统环境变量中（默认选项），安装以后能够在cmd命令行通过code打开说明就改了环境变量。当然也可以在系统环境变量的path中找到，这里不赘述 2. 插件下载2.1 中文语言包英文界面对于我这种小白太难了，所以打开软件第一件事就是安装中文插件，这个在左边拓展栏输入chinese直接可以找到（我这里已经装好了，只是演示记录一下） 2.2 ssh连接插件因为我要远程调用服务器上的python库，所以我首先下载了SSH连接插件 安装以后点击右侧菜单栏的远程资源管理器，可以新建一个远程连接 按照正上方弹出的窗口提示，我们输入自己的用户账号和host地址，之后选择第一个选项，这样我们要连接的远程主机地址就被记录下来了。连接之后输入密码即可远程登录，每次登录都需要输入密码 连接以后可以选择打开文件夹，把根目录文件夹打开就可以调用远程服务器的所有文件了 看到终端成功显示欢迎界面，说明远程登陆成功，终端可以输入和执行命令了 2.3 python拓展插件远程登录只是第一步，接下来安装插件都是远程登录的窗口，安装在本地的插件一般不能用在远程登录窗口。我要搭建python环境，也是先安装python的拓展插件 2.4 AREPL插件这个插件可以在右上角点开，实时打印出你写的python脚本运行结果，变量的赋值等等，还可以检查你写的脚本哪里出错而不需要直接运行代码。这个插件在写爬虫脚本的时候真的非常方便（后面的笔记再分享，写个简单的爬虫脚本就能体会），再也不需要点开网页审查各个元素了，直接在右边框里找到 举个栗子比如我写了个打印皮卡丘的python脚本（滑稽），我不用运行程序就能在右边看到代码运行的结果 3. 脚本调试下载完插件，写完代码，我们首先要进行的就是代码调试，点击左侧菜单栏的 运行和调试 ，我们直接点击创建 launch.json文件 在弹出的正上方菜单栏选择第一个调试配置打开的python文件 本质上就是生成一个调试的json文件，不用太多了解，调试当前打开的文件就可以。也可以根据自己需要改成只调试指定名称的python脚本，改的就是红框里的部分 在脚本页面直接按F5就可以运行了，可以在代码的行号前设置红色的断点，用来分段测试代码，在写的代码比较多需要一段段检查错误的时候会比较有用。比如我在上面的皮卡丘脚本的第12行设置一个断点，再按F5运行脚本，就会从第一行报错（因为print函数被断点隔开了），右边是AREPL插件的输出结果，不受代码运行与否和断点的影响，所以能正常显示 我们同时也能看到右下角是bug调试区，也就是说我们在调试区运行程序，会自动给我们分配一个debug控制区的终端，我也可以同时在上面的bash区终端运行别的程序。 4. 格式化文档这几天自学过程中我也发现，python代码是有严格的缩进要求的，不像是linux系统中的shell语言，一行写完可以在另一行随便插几个制表符继续写下一个命令。python严格按照冒号和缩进来区分代码块之间的层次，在 Python 中，对于类定义、函数定义、流程控制语句、异常处理语句等，行尾的冒号和下一行的缩进，表示下一个代码块的开始，而缩进的结束则表示此代码块的结束。哪怕有一个多余的缩进量，就会系统报错 在赋值前后，运算符前后，#号注释之后等一些不用区分代码块层次的地方，python对空格要求却不是那么严格。虽然要求不严格，但是不小心手滑多打了或者少打了空格总归影响美观（我真的有强迫症），这个时候可以用右键的格式化文档功能，一键自动改成标准格式 比如上面这个丑不拉几的程序虽然能跑出来结果，但是强迫症看完会当场去世。这个时候可以用右键的格式化文档功能一键对齐，如下 如果点格式化文档显示的是要装autopep8拓展，那就点确认安装。这个功能就是靠autopep8这个软件实现的，但是这个拓展软件是靠pip安装的，有的人没有安装pip，或者有的人（比如我）pip有问题，一直显示ssl证书不能获取拒绝安装，改pip源也无法解决问题（又是套娃解决问题的一天），就要去github下载autopep8本地安装，更改环境变量才可以使用。也可以用conda直接一步安装，不得不说conda管理python环境变量是真的香 格式化文档也不是万能的，比方说我在父目录下封装了一个函数，我想在子目录下调用，vscode有一个缺点就是需要把当前目录加到环境变量里，然后才能调用我封装好的函数，但是！添加环境变量之后再调用，这个时候运行格式化文档的功能，系统会自动把调用模块排在添加环境变量步骤之前，因为软件的设计就是把调用模块一定放在第一位。 打个比方，我在父目录demo下封装了printpikaqiu()这个函数，这个函数作用是打印皮卡丘。文件目录如下 然后我在子目录test下调用，就需要先拓展环境变量再调用，代码如下图，f5运行没毛病，打印出一只皮卡丘： 但是右键格式化文档之后，代码直接变了，再运行直接红色的报错跳脸上 因为代码顺序改了，没有添加环境变量，找不到父目录demo怎么可能调用pikaqiu模块呢？这就非常尴尬了 因此在调用自己封装的函数和模块的时候，不要用格式化文档。现在暂时还没找到可靠的解决方法 5. 其他设置vscode主菜单栏 文件—首选项 底下有非常多非常详细的设置选项，而且可以不同设备进行同步，这个是其优点之一。并且可以通过ctrl + shift + p 快速打开设置，支持直接修改配置的json文件，这个暂时还没用到，我只是改了个字体大小，以后有重要修改的时候再做记录，方便后续查看。 顺便提一嘴，我的云服务器是安装了anaconda管理python环境的，用vscode远程ssh登录云服务器后，仍然可以在右下角选择我用anaconda安装的各个版本python，依然是一键切换环境，真的太方便了。之前没用编辑器码代码，每次都要在linux里通过vim码好保存退出，再运行。。。各种意义上的身心折磨。。。 现在就一个字，香！","categories":[{"name":"编程自学","slug":"编程自学","permalink":"http://www.shelven.com/categories/%E7%BC%96%E7%A8%8B%E8%87%AA%E5%AD%A6/"}],"tags":[{"name":"vscode","slug":"vscode","permalink":"http://www.shelven.com/tags/vscode/"},{"name":"python","slug":"python","permalink":"http://www.shelven.com/tags/python/"}]},{"title":"转录组数据分析笔记（8）——ggplot2和ggrepel绘制火山图","slug":"转录组数据分析笔记（8）——ggplot2和ggrepel绘制火山图","date":"2022-04-24T20:53:27.000Z","updated":"2022-12-03T16:32:02.000Z","comments":true,"path":"2022/04/25/a.html","link":"","permalink":"http://www.shelven.com/2022/04/25/a.html","excerpt":"主要介绍下在用DESeq2得到我们想要的差异表达基因后，如何在R中用ggplot和ggrepel绘制火山图。","text":"主要介绍下在用DESeq2得到我们想要的差异表达基因后，如何在R中用ggplot和ggrepel绘制火山图。 1. 前言前面介绍了怎么用DESeq2做两组样本的差异基因表达分析，以及怎么用dplyr包给DESeq2运行结果增加一列分组信息，我们先看下两个R包运行结束后生成的gene_0_1.csv文件是怎么样的： A-G列结果是DESeq2跑的，我们用到的只有基因名，log2FoldChange和padj这三列，通过log2FoldChange绝对值大于1，调整后的pvalue也就是padj（即FDR值）小于0.05筛选除差异表达基因，最后加上group列方便查看。 到这里已经可以通过排序找到我们感兴趣的基因了，但是这样的数据不够直观，我们还可以用最著名的绘图R包ggplot2做个火山图。这里需要准备的绘图R包是ggplot2，还有添加标签的R包ggrepel。 1.2 两个注意点什么是火山图就不多bb了，重要的是知道我们可以从火山图获得两个信息：差异表达倍数（FoldChange值）和统计学显著性的标志p值。为了更方便比较和作图，我们一般用log2FC代替Fold Change值并作为X轴数据，表示两样品（组）间表达量的比值，对其取以2为底的对数即为log2FC，一般默认取log2FC绝对值大于1为差异基因的筛选标准；用FDR（也就是padj值）代替pvalue，并取-log10（FDR）值作为Y轴，FDR是错误发现率，是pvalue值进行校正得到的。 log2FC有正有负很好理解，可能有同学发现，有的基因明明有pvalue值，但是校正之后的FDR值却是NA，如下： 查阅了一些资料，当基因的在所有样本中表达量为0，则两个值都为NA；当read count数较低时，DESeq2进行Independent Filtering过滤了一部分可能造成假阳性的结果，此时padj值为NA。因此，这部分数据在做火山图的时候因为没有对应的Y值也会被过滤掉。 2. 流程代码这部分需要一点R语言基础，需要知道怎么改自己的参数。假设前面没有用dplyr包做差异筛选（做了也不影响，只是多一列数据而已）只用DESeq2跑了个结果，我们同样可以用ggplot2包做筛选，用ggrepel包美化做标签。继续用前面DESeq2生成的csv文件，流程代码如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748library(&quot;ggplot2&quot;)gene &lt;- read.csv(&quot;gene_0_1.csv&quot;, stringsAsFactors = FALSE)gene[which(gene$log2FoldChange &lt;= -1 &amp; gene$padj &lt; 0.05), &quot;GROUP&quot;] &lt;- &quot;DOWN&quot;gene[which(gene$log2FoldChange &gt;= 1 &amp; gene$padj &lt; 0.05), &quot;GROUP&quot;] &lt;- &quot;UP&quot;gene[which(abs(gene$log2FoldChange) &lt; 1 | gene$padj &gt;= 0.05), &quot;GROUP&quot;] &lt;- &quot;NOT CHANGE&quot; # |代表或，和linux里的管道是完全不一样的。以上三步新建了一列GROUP，筛选并赋予了三个值。res &lt;- ggplot(gene, # ggplot数据来源，这里省略了data = 和mapping = aes(x = log2FoldChange, # 表示映射关系，就是定义xy y = -log10(padj), col = GROUP)) + # 注意这里定义颜色用col，以GROUP值区分 geom_point(alpha = 0.5, # ggplot做散点图，设置点透明度和大小 size = 1) + scale_color_manual(values = c(&quot;red&quot;,&quot;blue&quot;,&quot;grey&quot;), limits = c(&quot;UP&quot;,&quot;DOWN&quot;,&quot;NOT CHANGE&quot;)) + # 自定义颜色 theme(panel.grid = element_blank(), # 去网格线 panel.background = element_rect(color = &quot;black&quot;, fill = &quot;transparent&quot;), # 去背景色，透明 plot.title = element_text(hjust = 0.5), # 调整图标标题位置为中间 legend.key = element_rect(fill = &quot;transparent&quot;), legend.background = element_rect(fill = &quot;transparent&quot;), legend.position = &quot;right&quot;) + # 设置legend图标 geom_vline(xintercept = c(-1, 1), color = &quot;gray&quot;, size = 0.3) + # 设置x轴辅助线 geom_hline(yintercept = -log10(0.05), color = &quot;gray&quot;, size = 0.3) + # 设置y轴辅助线 labs(x = &quot;log2 Fold Change&quot;, y = &quot;-log10(FDR) &quot;, title = &quot;LD 1 day vs LD 0 day&quot;) # 设置坐标轴标题和火山图标题res # 查看结果，plots中可以查看library(&quot;ggrepel&quot;)up &lt;- subset(gene, GROUP == &quot;UP&quot;) # subset从数据框中筛选符合条件的数据up &lt;- up[order(up$padj), ][1:5, ] # order升序排序，取前5个down &lt;- subset(gene, GROUP == &quot;DOWN&quot;)down &lt;- down[order(down$padj), ][1:5, ]resdata &lt;- res + geom_text_repel(data = rbind(up, down), # ggrepel特有的函数 aes(x = log2FoldChange, y = -log10(padj), label = X ), # label值指定哪列做标签 size = 3, box.padding = unit(0.5, &quot;lines&quot;), segment.color = &quot;#cccccc&quot;, show.legend = FALSE) # 以上都是特有参数resdata # 查看结果ggsave(&quot;gene_0_1.png&quot;, resdata, width = 10, height = 10) # 输出结果文件 3. 代码详解3.1 ggplot2123gene[which(gene$log2FoldChange &lt;= -1 &amp; gene$padj &lt; 0.05), &quot;GROUP&quot;] &lt;- &quot;DOWN&quot;gene[which(gene$log2FoldChange &gt;= 1 &amp; gene$padj &lt; 0.05), &quot;GROUP&quot;] &lt;- &quot;UP&quot;gene[which(abs(gene$log2FoldChange) &lt; 1 | gene$padj &gt;= 0.05), &quot;GROUP&quot;] &lt;- &quot;NOT CHANGE&quot; 之前这里稍微解释一下，即使前面没有用dplyr包，用别的方法同样可以筛选差异基因并且新增一列分组数据，万变不离其宗，核心的判断方式是一样的。如果前面学了linux，注意最后 | 这个符号在R里表示或，不要和管道混淆。 123456ggplot(data = 输入的数据, mapping = aes(x = 定义值, y = 定义值, 其他参数)) + genom_point(参数) + # 选择作图方法和参数 其他设置函数和参数 # 可有可无，美观相关的东西 我总结了一下ggplot最基本的结构，data和mapping是缺省值，可以不写。 输入的数据可以是表格，可以是数据框等等；aes自定义点的映射范围，大小，颜色等等；作图方法有很多，比如点状图是genom_point。自由度很高，能设置的东西也非常之多，只有两点需要注意，同一个函数不同参数用 , 隔开；不同函数用 + 隔开。 中间的设置函数也稍微解释一下： scale_color_manual() 该函数是R中的一种自定义配色方法，手动把颜色赋值给参数value。我这里将UP的点赋予了红色，DOWN的点赋予蓝色，其他点赋予灰色。 theme() 该函数与主题配置有关，参数非常多，可以选取需要的比如背景色、网格线等等进行设置。这里举个例子，legend是图标，在ggplot中legend有四部分： legend.tittle, legend.text, legend.key和legend.backgroud，而每一个部分都有四种函数可以嵌套（也是是对应4种处理方式）：element_text()绘制标题相关；element_rect()绘制背景相关；element_blank()空主题，对元素不分配绘图空间；element_get()得到当前主题的设置。每个函数还有相应的参数，说起来就没完没了了。。。常用的设置知道就行。 geom_vline() 和 geom_hline() 这两个函数分别设置x轴y轴辅助线，目的是使我的火山图更直观，从图上可以直接看到我的分类依据。 labs() 该函数自定义x轴y轴标签和图标标题。这里提一嘴，火山图标题也是一个注意点，一般是 处理组vs对照组 ，因此前面也说到DESeq2处理数据要注意顺序问题，不然会得出完全相反的结论，在火山图上的表现为与实际火山图呈镜像对称，这也很好理解。 这里看一下res结果，我们可以在plots中看到缩略的预览图： 3.3 ggrepel在过滤掉4000多个FDR值为NA的点，我们获得了一个不怎么像火山的火山图 （简直丑爆了） ，但是数据还是挺美丽的，上调区域和下调区域都有前后对比差异非常大的基因：log2FC绝对值越大，差异越明显；-log10（FDR）值越大，可信度越高。 但是这个图还有个缺点，我不知道这些代表性的差异点对应什么基因名，我还要回到excel里去筛选排序。因此，我推荐用ggrepel包对火山图进一步美化，加上基因标签，能一眼看到我感兴趣的基因。 这个包的原理和发展咱就不说了，已经是半夜4点了。。。简单介绍下中间用到的函数的结构。 subset() 从数据框中筛选符合条件的数据，我将UP的点和DOWN的点都提取出来。 order() order是升序排序，因为上调和下调的基因都比较多，全部打上基因名标签是不现实也没有意义的。我按照padj列也就是FDR值进行升序排序，取前5个可信度最高的基因打上基因名标签。当基因较少的时候是可以全部打上标签的。 在前面ggplot2作图的基础上，我们加上geom_text_repel()这个特殊的ggreple包函数，这个函数是基于函数geom_label()做的改良，它将标签置于一个方框中，并且每个标签有算法优化不会重叠。该函数的结构与前面的ggplot前半部分类似： 12345geom_text_repel(data = 输入数据, aes(x = 定义值, y = 定义值, label = X ), 其他参数 这里所有参数设置都是平行的，所以只需要 , 隔开。 我之前说到提取了up和down的数据，这里我把它们rbind一下合在一起，就形成了新的数据框数据，也就是我只对前面排序筛选的上调下调各5个基因打标签。这里注意下aes()这里的 label 是指定标签的，也就是我们这里的基因名，应该用的行名才能和数据一一对应，这里我用X是偶然发现的一个很有趣的事： 前面导入gene数据框的时候，自动把行名加到了第一列成了单独的一列，且该列列名系统定义为X，我们可以进入environment找到gene点开看看这个数据框结构，如下所示： 因此这里直接用label = X就能完美解决问题。反而我回头用row.names = 1用第一列做行名修改了gene数据框的读取方式，再在这里用label = rowname(gene)会提示长度错误或者不匹配，个中原因我暂时还没想明白。 其他特有参数就解释一下我用到的几个： size: 标签大小 box.padding: 标签连接方式，我用了线 segment.color: 线段颜色，可以用RGB颜色代码 show.legend: 是否显示标签的标签 &#x3D;_&#x3D;好像有点绕，说白了就是要不要再图标上再打标签… 同样放一张plots里的缩略图，是不是要直观一点了呢？ 3.4 结果输出ggsave()是ggplot2包里的输出结果的函数，自定义输出的文件类型，比如pdf、png等等，还可以自定义输出图片大小，这里不赘述，主要放一个完成图看看和plots里的缩略图做个比较。完成图如下： 可能还是有些不美观，但是这些数据很不错，极端点偏离X轴和Y轴较远，都是我们需要重点关注的基因。 如果我们记下了这几个极端点，我们还可以通过在ggplot中限制X轴和Y轴范围比如xlim(-10, 10) + ylim(0, 14)，再次缩小范围，得到一个更像火山的火山图 (没有意义，纯粹吃饱了撑的) 如下：","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"转录组数据分析","slug":"转录组数据分析","permalink":"http://www.shelven.com/categories/%E8%BD%AC%E5%BD%95%E7%BB%84%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"}],"tags":[{"name":"R语言","slug":"R语言","permalink":"http://www.shelven.com/tags/R%E8%AF%AD%E8%A8%80/"},{"name":"ggplot2","slug":"ggplot2","permalink":"http://www.shelven.com/tags/ggplot2/"},{"name":"ggrepel","slug":"ggrepel","permalink":"http://www.shelven.com/tags/ggrepel/"}]},{"title":"linux操作指令总结整理","slug":"linux操作指令总结整理","date":"2022-04-20T15:44:49.000Z","updated":"2022-12-03T16:10:22.000Z","comments":true,"path":"2022/04/20/b.html","link":"","permalink":"http://www.shelven.com/2022/04/20/b.html","excerpt":"该篇内容非常之多，主要记录自己能用的上的linux操作指令和自己的一些理解，想要用的时候方便站内搜索直接查找。","text":"该篇内容非常之多，主要记录自己能用的上的linux操作指令和自己的一些理解，想要用的时候方便站内搜索直接查找。 1. linux常用命令cdcd：Change directory修改（进入）工作目录，只对目录文件有效 12345cd / 进入根(root)目录cd - 返回上次的目录cd 返回家(home)目录cd ~ 返回家目录cd .. 返回上一级目录 ls ls：List filesls计算不了目录内文件大小，所以显示的目录大小不是实际的，要看目录实际大小用du命令 123456-a 列出包括.a开头的隐藏文件的所有文件-A 通-a，但不列出&quot;.&quot;和&quot;..&quot;-l 列出文件的详细信息-c 根据ctime排序显示-t 根据文件修改时间排序-h 将文件大小按照易于读懂的方式显示（多少M，多少G） ll和ls-l是同样的用法，linux可用，mac中不能用，可以改环境变量文件自定义ll用法 pwdpwd：print working directory，打印当前所在目录 cpcp: Copy file拷贝并粘贴文件，并且可以重命名 12345-b 覆盖前做备份-f 如存在不询问而强制覆盖-i 如存在则询问是否覆盖-u 较新才覆盖-t 将多个源文件移动到统一目录下，目录参数在前，文件参数在后 $ cp ../data/xist.fa xist_seq.fa # 复制上一个目录data目录下的xist.fa到当前目录，并重命名为xist_seq.fa$ cp -r 003/ 007 # 递归的方式，复制003目录到007目录，目录复制到目录要用递归 mvmv: Move file移动文件，相当于windows下的剪切粘贴，如果剪切粘贴到同一目录下，则为重命名 12345-b 覆盖前做备份-f 如存在不询问而强制覆盖-i 如存在则询问是否覆盖-u 较新才覆盖-t 将多个源文件移动到统一目录下，目录参数在前，文件参数在后 $ mv a1.index.sh ../ # 移动到上一目录$ mv a1.index.sh a2.index.sh # 重命名为a2.index.sh$ rename txt doc * # 把所有txt改成doc，批量文件重命名可以用rename rmrm: Remove file删除文件 1234-r 删除文件夹（就是删除目录）-f 删除不提示-i 删除提示-v 详细显示进行步骤 一定要慎重使用，命令行模式下删除文件不可恢复$ rm -rf *.fna #删除目录下所有以.fna结尾的文件 lnln: Link files创建连接文件，包括软连接和硬链接，一般软连接比较常用，相当于windows下的快捷方式；硬链接相当于重要文件的备份，默认硬链接删除原文件，硬链接文件不受影响，软连接文件则无效 12-s 建立软连接 -v 显示详细的处理过程 mkdirmkdir：Make directory创建文件夹(目录) 123-p 递归创建目录，若父目录不存在则依次创建-m 自定义创建目录的权限-v 显示创建目录的详细信息 $ mkdir rnaseq #创建一个名为rnaseq的目录 touch建新的空文件(可写入的文件)$ touch 1.txt 2.txt 3.txt # 同时新建三个文件，一个文件可以直接vim建立 catcat: concatenate 连接cat的一个作用是查看文件，一般是比较小的文件，行数小于一个屏幕，最多不要超过两个屏幕，否则会刷屏（屏幕输出的方式）cat另一个作用是合并多个文件，一般配合重定向合并为一个新文件或者将一个文件内容追加到另一个文件结尾$ cat a1.txt a2.txt &gt;all.txt # 合并文件，并不会删除原文件，覆盖新文件内容，新文件为all.txt$ cat a1.txt &gt;&gt;a2.txt # 同样是合并，a1重定向到a2结尾$ cat &gt;id.txt # 回车输入内容，可新建id.txt文件，ctrl+c退出 echo不可以这样新建，只能echo &quot;内容&quot;&gt;id.txt 1-A 显示文件内的空白信息 linux系统下是换行\\n；mac系统下是回车\\r；windows系统下回车加换行两个字符\\r\\n 三者都是空白，用less无法看出区别，只能在cat -A下看到不同操作系统的换行符信息 less &#x2F; moreless和more都是文件查看工具，但是less功能更多一些，在windows系统下打开一个10G的文件比较困难，但是在Linux下非常方便，less可以打开非常大的文件，压缩格式也可以直接打开。注意后面接文件，不能接目录。 12-m 显示类似于more命令的百分比-N 显示行号 more：q退出，space向下翻一页，enter向下滚动一行，b往前翻一页，会加载全部显示浏览到百分之几，退出后会加载显示的所有内容less：类似，还可以用pageup和pagedown，不会加载全部，退出后不会加载文件内容显示到当前界面less下按h进入帮助界面；按&#x2F;向下搜索字符串，按？向上搜索字符串，搜索状态下n和p前后跳转；按v进入编辑 head &#x2F; tail这两个命令比较简单，只是取一个文件的头部和尾部多少行，默认10行，可以加-n进行设置，利用管道可以取文件中间行$ head -40 a.txt | tail -20 #取文件第21~40行$ tail -n +20 notes.log #取文件的第20行到文件末尾 g(un)zip&#x2F; b(un)zip2gzip和bzip2是文件压缩工具，默认直接对源文件进行处理，压缩比率在2&#x2F;3左右，都可以进行设置加上un，为unpack的意思，表示解压缩linux压缩文件格式是.gz和.bz2windows压缩文件有.rar文件，可以下载rarlinux工具解压缩；.zip文件可以通过unzip命令解压bzip2压缩比更高（尽量下载bz2压缩文件），但是占用更多CPU$ gzip a.txt # 压缩a.txt文件$ gunzip a.txt.gz # 解压a.txt.gz文件压缩的文件可以用less或者zcat打开文件 tar（很多生物软件是打包并压缩的）tar：Tape archive （磁带档案）tar主要用于打包，由于tar能调用gzip或者bzip2进行压缩，而打包和压缩经常如windows系统一样合并为一个过程 123-c 建立打包档案，可搭配 -v 来察看过程中被打包的档名(filename)-t 察看打包档案的内容含有哪些档名，重点在察看文档名就是了（同less功能）-x 解打包或解压缩的功能，可以搭配 -C (大写) 在特定目录解开 以上三个命令不能同时使用，只能三选一辅选项： 1234-j 透过 bzip2 的支持进行压缩/解压缩：此时档名最好为 *.tar.bz2-z 透过 gzip 的支持进行压缩/解压缩：此时档名最好为 *.tar.gz-v 在压缩/解压缩的过程中，将正在处理的文件名显示出来！-f filename -f 后面要立刻接要被处理的档名！f很重要，每次执行tar命令都要加上 对于初学者，记住c是creat，创建，x是解包，z对应gzip，j对应bzip2即可，所以常用的命令如下：$ tar -jcvf filename.tar.bz2 A B C #打包压缩为bz2结尾文件$ tar -jxvf filename.tar.bz2 # 解压缩.tar.bz2结尾文件$ tar -zcvf filename.tar.gz A B C #打包压缩为gz结尾文件$ tar -zxvf filename.tar.gz # 解压缩.tar.gz 结尾文件$ tar -jxvf filename.tar.bz2 -C 目录名 #解压缩到指定目录，注意是大写Cless命令可以不解压只查看（真的强大），tar -tf filename同样如果只需解压其中一个文档，可以先通过-t查看文档名并复制，再在前面解压缩的命令基础上加空格和文档名 wcwc &#x3D; Word Count统计一个文件中，行数，单词数（有空格或者换行符的字符串），字符数 1234-l filename 报告行数-c filename 报告字节数-m filename 报告字符数-w filename 报告单词数 统计当前目录下有多少文件$ ll | wc # 注意显示行数比实际多两行，因为还有隐藏的当前目录.和上一层目录.. 可通过ls -a查看 sort排序，默认按第一列排序，可以通过-k进行设置；默认排序规则为按ASCII码排序，可以通过-n进行修改；-r取相反方向； 12345-n 依照数值的大小排序。-o 将排序后的结果存入指定的文件。-r 以相反的顺序来排序。-t 指定排序时所用的栏位分隔字符。-k 选择以哪个区间进行排序。 $ sort -nk2 -k1 01.txt | less # 在01.txt文件中，根据第二列数字大小进行排序，数字一样的比较第一列并排序 uniq用于检查及删除文本文件中重复出现的行列，一般与 sort 命令结合使用，排序之后使用uniq 1234-u 显示未重复的行-c 统计重复行的数量（在行首标注）-ci 忽略大小写统计重复行-d 显示重复出现的行 # cut -f 1 blast.out | sort -t &quot;|&quot; -nk2 | uniq | wc -l #从blast.out文件中提取第一列（f代表字段），第一列字段以“|”分割并比较第二段的数字大小进行排序，去除重复行，并记录行数 即记录有多少条比对上的基因 dfdf: disk freedf用于查看磁盘消耗，显示磁盘可用空间数目信息及空间结点信息。一般加一个-h选项，然后接要查看的磁盘，默认所有磁盘。 12345-a 显示全部文件系统-h 文件大小友好显示-l 只显示本地文件系统-i 显示inode信息-T 显示文件系统类型 dudu: Disk usagedf用于查看磁盘使用情况，du用于查看目录所占磁盘大小，一般也加-h选项 12-h 方便阅读的方式（显示带单位）-s 只显示总和的大小 findfind顾名思义，主要用于查找文件。因为当文件越来越多的时候，由于Linux是文本界面，不方便可视化文件，这个时候就可以利用find快速找到需要的文件。find支持多种搜索方式主要用的搜索方式：find 目录 Expression 条件$ find /media/ -name *.fna #查找media目录下所有.fna结尾的文件$ find /media/ -size 100M #查找media目录下所有大于100M的文件 which$ which filename # 查看可执行文件的位置，在PATH变量指定的路径中查看系统命令是否存在及其位置 whereis该指令只能用于查找二进制文件、源代码文件和man手册页，一般文件的定位需使用locate命令 locate是find -name的另一种写法，但是要比后者快得多，原因在于它不搜索具体目录，而是搜索一个数据库&#x2F;var&#x2F;lib&#x2F;locatedb，这个数据库中含有本地所有文件信息。Linux系统自动创建这个数据库，并且每天自动更新一次，所以使用locate命令查不到最新变动过的文件。为了避免这种情况，可以在使用locate之前，先使用updatedb命令，手动更新数据库 toptop可以动态显示（3s一次）系统进程使用情况，类似于windows系统的任务管理器。可以显示当前系统正在执行的进程的相关信息，包括进程ID、内存占用率、CPU占用率等。 psps: process statusps也是系统进程管理工具，与top不同的是，top可以动态显示，而ps则是静态显示，是某一时刻的快照，静态显示的好处是便于其他程序捕获结果，进行处理。 killkill的作用是杀死进程，给定一个任务的PID号，可以通过top或者ps命令获得，例如当前有一个sleep进程，pid号为12000；通过kill -9可以强制杀死$ kill -9 12000 12345671 终端断线2 中断，相当于ctrl+c2 退出，同ctrl+\\9 强制终止15 终止进程，默认为1518 继续，与STOP相反，fg/bg命令19 暂停，同ctrl+z chmodchmod: Change mode用于修改文件权限，Linux基础权限可以包括ugo模式（文字设定法）以及421模式（数字设定法），可以用通配符一次修改所有类型的文件文字设定法：u表示属主(user)，g表示同组群用户(group)，o表示其他用户(other)，a表示所有用户(all) 123456+ 添加权限- 删除权限= 赋予给定权限，并取消其他所有权限r 可读(read)w 可写(write)x 可执行(execute) 数字设定法： 12340表示没有权限，1表示可执行权限，2表示可写权限，4表示可读权限7：可读可写可执行 4+2+16：可读可写 4+25：可读可执行4+1 $ chmod 721 a1.index.sh # 421模式修改与之类似的还有chown与chgrp，这两个权限更大，需要root权限；chown: Change owner$ chown 用户名 目录名/ # 修改目录的属主chgrp: Change group$ chgrp 组名 目录名/ # 修改目录的组名 exit退出登录，exit是正确退出，最好不要直接点windows关闭窗口按钮退出，也不要使用ctrl+D给定退出信号退出。 man详细解释命令，系统命令可以用这个找，下载的程序往往是–help wget后面接下载网址，可以直接由地址获取下载文件 su：super user获得超级管理员权限，root权限，需要输入密码sudo：super user do暂时取得root权限，配置系统经常能看到sudo yum echo在标准输出（屏幕）上显示文字 12-n 输出之后不换行，去除结尾的换行符。注意默认一行后有一个换行符-e 转义字符按照对应方式处理 yum（centos是yum，ubuntu是apt） Yellow dog Updater Modified是一个软件包管理器，能够从指定的服务器自动下载rpm包进行安装并且自动处理依赖性关系，yum优点提供了查找、安装、删除某一个、一组甚至全部软件包的命令，并且命令简洁便于使用。 1234567891011121314151617181920yum clean all # 清除原有yum缓存yum repolist # 列出仓库信息yum install software # 安装yum update # 更新yum list software # 查看软件yum list all # 查看所有软件yum list installed # 列出已安装软件yum list available # 列出可安装软件yum reinstall software # 重新安装yum remove software # 卸载yum info software # 查看软件信息yum search software # 根据软件信息查找软件yum whatprovides file # 根据文件找出包含此文件的软件yum history # 查看系统中软件管理信息yum history info 数字 # 对该数字为id的信息进行显示yum groups list # 列出软件组 yum groups info # 查看软件组的信息yum groups install sfgroup # 安装软甲组yum groups remove sfgroup # 卸载软件组yum repolist # 查看yum源信息 cut命令从文件的每一行剪切字节、字符和字段并将这些字节、字符和字段写至标准输出如果不指定 File 参数，cut 命令将读取标准输入。必须指定 -b、-c 或 -f 标志之一 1234-b 以字节为单位进行分割。这些字节位置将忽略多字节字符边界，除非也指定了 -n 标志-c 以字符为单位进行分割-d 自定义分隔符，默认为制表符-f 与-d一起使用，指定显示哪个区域 xargs与管道不同，xargs可以给下个命令传递参数。$ ls *.gz | head #只可以输出前10个文件名$ ls *.gz | xargs head #输出.gz结尾的所有文件前10行这里要注意下其实命令是有省略的，完整应该是ls *.gz | xargs -i head&#123;&#125; #传递参数到head的花括号中 jobs查看当前在后台执行的命令，可查看命令进程号码 &amp;运行命令时，在命令末尾加上&amp;可让命令在后台执行 顺便说一下 | ; &amp;&amp; ||区别 1234&amp;&amp; 左边命令成功运行了，右边命令才会运行，就是逻辑与的功能; 不管左边命令有没有成功运行，右边命令都会运行，两者之间独立| 左边命令的结果作为右边命令的参数，注意与xargs区分|| 左边运行的命令失败，右边的命令才会运行，否则只显示左边命令运行结果 nohup命令可以使命令永久的执行下去，和终端没有关系，退出终端也不会影响程序的运行； &amp; 是后台运行的意思，但当用户退出的时候，命令自动也跟着退出。 那么，把两个结合起来nohup 命令 &amp;这样就能使命令永久的在后台执行 fg N将命令进程号码为N的命令进程放到前台执行，同%N #注意是进程号不是PID！kill程序需要PID bg N将命令进程号码为N的命令进程放到后台执行 cal 显示日历 date 显示时间 2. 基本操作源码编译安装软件都有Readme文件或者install文件说明安装方式，一般是以下步骤：1、运行configue脚本 #检查系统环境配置情况，缺少哪些东西，缺少的可以yum下载安装2、运行make check命令（可选）3、敲make命令进行编译4、make install命令安装，出现可执行程序 文件校验下载大的文件会附带.md5文件任意长度信息逐位计算，产生128位hash值，不可逆。也就是说MD5算法可以位任何文件产生一个独一无二的数据指纹，通过校验下载前后的MD5值是否发生改变，就可以知道源文件是否被改动$ md5sum filename &gt; data.md5 # 对文件（可多个文件）生成md5校验码（32位，16进制），并命名为data.md5$ md5sum -c data.md5 # 校验文件，如果校验码相同则显示OK 重定向本质是将输出到屏幕的内容重定向到一个新的文件夹中，大于号和小于号都是代表数据的流向$ echo “想要的内容”&gt; 文件名 #覆盖原文件的内容$ echo “想要的内容”&gt;&gt; 文件名 #想要的内容追加到文件后，原文件内容不修改一个&gt;是覆盖，两个&gt;&gt;是追加 Ctrl+C终止并退出前台命令的执行，回到SHELL Ctrl+Z暂停前台命令的执行，将该进程放入后台，回到SHELL 3. vimvim（主要用来写脚本，编辑文件）vim是Linux系统自带的文本编辑器，可以理解成为windows系统下的word软件，适合编辑小文件，会一次加载全部内容到内存 123:w filename 将文件以指定的文件名保存起来 :wq 保存并退出:q! 不保存而强制退出 注意vim是vi的拓展，有些自定义设置要在vim下生效，最好是用vim用户设置优先级高于全局设置，设置文件都在家目录~下设置，且均为点开头的隐藏文件，如下~&#x2F;.vimrc~&#x2F;.bashrc 3.1 命令行模式功能键：1）插入模式 123i 切换进入插入模式 insert mode ，按&quot;i&quot;进入插入模式后是从光标当前位置开始输入文件a 进入插入模式后，是从目前光标所在位置的下一个位置开始输入文字o 进入插入模式后，是插入新的一行，从行首开始输入文字 2）从插入模式切换为命令行模式按 ESC 键3）移动光标直接用键盘上的光标来上下左右移动，也可以用小写英文字母h、j、k、l，分别控制光标左、下、上、右移一格。 1234567G 移动到文件末尾，15G移动光标至文章的第15行行首gg 移动到文件开头$ 移动到光标所在行的行尾^ 移动到光标所在行的行首H 光标移动到这个屏幕的最上方那一行的第一个字符M 光标移动到这个屏幕的中央那一行的第一个字符L 光标移动到这个屏幕的最下方那一行的第一个字符 4）删除文字 123x 每按一次，删除光标所在位置的后面一个字符X 大写的X，每按一次，删除光标所在位置的前面一个字符dd 删除光标所在行 1,6d删除1到6行 5）回复上一次操作 1u 如果误执行一个命令，可以回到上一个操作。按多次u可以执行多次回复 6）继续下一个操作 12n或. 比如查找一个字符串以后，继续寻找下一个字符串，按多次n执行多次操作N 与 n 刚好相反，为反向进行前一个搜寻动作 3.2 底线命令模式1234567:/word # 查找word字符串:%s/x/y/gc # 所有x被y替换 g代表全局，c代表交互模式（每次替代会提示）:!命令 # 命令先执行，vim被挂起。执行后按enter回到vim:split # 横屏分屏显示 ctrl+ww切换上下屏:vsplit # 纵向分屏:only # 取消分屏:n1,n2s/word1/word2/g # 在第n1与n2行之间寻找word1这个字符串，并将该字符串取代为word2 vim还有专门的键盘图。。。放一个简略版的 4. 基础命令三剑客三剑客的命令非常之多，完全可以出一本书，这里只放一些简单的和我能用得到的 4.1 三剑客之grepgrep（找基因信息比较方便）Global Regular Expression Print，全局正则表达式版本文本搜索工具，类似于正则表达式搜索，可以在一个大的文件中快速搜索到满足一定规则的内容。 $ grep &quot;&gt;&quot; gene.fna | wc -l # 统计gene.fna文件中序列的条数$ grep -A 2 &quot;3 gi 29732 34486&quot; lastz.axt #将满足条件的行和下面两行显示出来 12grep -E # grep的拓展模式grep -P # 适应perl语言的正则表达式 区分一下：find是搜索目录下满足条件的文件，grep是搜索文件内满足条件的内容 4.2 三剑客之sedsedsed &#x3D; Stream Editor流处理器，数据流过这个工具，格式化成固定的格式sed + 选项参数 + &#39;模式&#39; + 文本或文件 选项参数： 12345-e 替换，并输出到屏幕（搭配重定向）-i 原文件修改-f 根据模式替换-r 拓展的正则表达式-n 输出 模式： 1234g 全局s 替换，一个字符替换另一个d 删除p 打印 输出固定的行$ sed -n &#39;1307p&#39; seq.fna # 输出文件第1307行；$ sed -n &#39;100,200p&#39; seq.fna # 输出文件第100到200行； 替换操作$ sed -e &#39;s/gi/GI/&#39; seq.fna # 将文件中gi全部替换为大写GI；s为替换$ sed -i &#39;s/gi/GI/g&#39; seq.fna # 在原文件上进行替换，并且进行全部替换，g为全局（默认只进行一次替换） 删除操作$ sed -e &#39;/^\\s$/d&#39; seq.fna # 删除文件中的空白行，命令d为删除符合条件的行。\\s为空白；^行首，$行尾$ sed -e &#39;/&gt;/d&#39; seq.fna # 删除包含ref的行，每个ref行都有&gt;$ sed -e &#39;s/:.*//g&#39; seq.fna # 删除冒号之后的所有内容 4.3 三剑客之awkawk也是非常强大的文本处理工具，awk本身也是一门编程语言输出一个列表任意列$ awk &#39;&#123;print $1,$NF&#125;&#39; 1.txt # 输出1.txt的第一列和最后一列 过滤文件结果$ awk &#39;&#123;if ($3&gt;=80 &amp;&amp; $4&gt;=100) print $0&#125;&#39; blast_m8.out # 过滤文件比对结果，将第三列值大于80，并且第四列值大于100的所有结果输出 比较$ awk &#39;$8&gt;$10&#39; input.txt # 输出第8列数值大于第10列数值的行 输出固定行内容$ awk &#39;NR&gt;=20&amp;&amp;NR&lt;=80&#39; input.txt #输出第20到第80行内容 5. 正则表达式正则表达式是对字符串操作的一种逻辑公式，就是用事先定义好的一些特定字符、及这些特定字符的组合，组成一个“规则字符串”，这个“规则字符串”用来表达对字符串的一种过滤逻辑 123456789101112131415161718^ 匹配输入字行首 ^eat,识别eat开头的字符串$ 匹配输入行尾 eat$,识别eat结尾的字符串 \\b 单词锚定符 \\beat\\b ,只识别eat字符串. 匹配除“\\n”和&quot;\\r&quot;之外的任何单个字符\\ 转译字符 比如匹配. 则\\.* 匹配前面的子表达式任意次+ 匹配前面的子表达式一次或多次(大于等于1次，例如“zo+”能匹配“zo”以及“zoo”，但不能匹配“z”）# 需要grep -E支持（拓展）? 匹配前面的子表达式零次或一次 # 需要grep -E支持（拓展）[xyz] 字符集合。匹配所包含的任意一个字符x|y 匹配x或y。“z|food”能匹配“z”或“food”。“[z|f]ood”则匹配“zood”或“food”，择译匹配[a-z] 字符范围\\d 匹配所有数字，等同[0-9]\\s 空白，是字符集换页、制表、换行、回车以及空格的简写[\\f\\t\\n\\r]\\w [A-Za-z0-9_]单词包括大小写字母、数字和下划线^ 负值字符范围。匹配任何不在指定范围内的任意字符。（倒三角）\\D 非数字\\W 非字符\\S 非空白字符","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"linux指令","slug":"linux指令","permalink":"http://www.shelven.com/tags/linux%E6%8C%87%E4%BB%A4/"}]},{"title":"shell脚本基本语法总结","slug":"shell脚本基本语法总结","date":"2022-04-19T19:55:58.000Z","updated":"2022-12-03T16:17:05.000Z","comments":true,"path":"2022/04/20/a.html","link":"","permalink":"http://www.shelven.com/2022/04/20/a.html","excerpt":"简单记录下shell脚本语言的学习。","text":"简单记录下shell脚本语言的学习。 shell脚本运行方式首先要了解什么是脚本，脚本本质上是一个可运行的文件，使用特定格式的指令让系统通过脚本解析器解析并执行你的指令。系统提供的shell命令解析器有sh、bash和ash。可以通过echo $SHELL查看自己linux系统的默认解析方式 shell脚本文件的开头：#!/bin/bash #! 是特殊的用来声明脚本由什么shell解释，否则使用默认shell sh文件有三种执行方式./xxx.sh bash xxx.sh . xxx.sh ./xxx.sh 先按照 文件中#!指定的解析器解析，如果#！指定指定的解析器不存在才会使用系统默认的解析器 bash xxx.sh 指明先用bash解析器解析，如果bash不存在才会使用默认解析器 . xxx.sh 直接使用默认解析器解析 各种引号的区别vim创建脚本文件1111.sh： 123456789#!/bin/bashecho &quot;Phantom的SHELL练习&quot;num=123echo &quot;预设数字=$num&quot;read -p &quot;输入数字&quot; sum # read可以识别标准输入（键盘输入），-p参数设置提示语echo &quot;输出结果=$sum+$num&quot;echo &quot;$sum&quot; # &quot;&quot;解析变量值echo &#x27;$sum&#x27; # &#x27;&#x27;不能解析变量值echo &quot;今天日期`date`&quot; # ``识别为系统命令 变量名不能以数字开头 在变量赋值的过程中，等号两边不能接空格，若要接空格，则整个字符串都要用引号括起来 各种引号区别双引号“”可以解析变量的值单引号‘’不能解析变量的值，包含的变量会被当做字符串反引号`` 反引号的内容作为系统命令并执行 如`date` 各种括号的区别vim创建脚本文件xxx.sh： 1234567#!/bin/bashNum=1000&#123; # 花括号表示在当前shell完成，会影响当前变量 Num=1234 echo &quot;()里面的数字是=$Num&quot;&#125;echo &quot;显示当前shell数字=$Num&quot; vim创建脚本文件xxxx.sh： 1234567#!/bin/bashNum=1000( # 小括号表示在当前shell完成，不会影响当前变量 Num=1234 echo &quot;()里面的数字是=$Num&quot;)echo &quot;显示当前shell数字=$Num&quot; {命令序列} 在当前shell中执行，直接影响当前变量(命令序列) 由子shell完成，不影响当前shell的变量[判断条件]中括号是判断条件，进行数值判断。下面会说明 数值判断vim建立脚本文件xxxxx.sh： 12345678910#!/bin/bashread -p &quot;请输入第一个数字&quot; mread -p &quot;请输入第二个数字&quot; nif [ $m -eq $n ]; then # -eq 判断两个参数是否相等 echo &quot;输入的两个数字相等&quot;elif [ $m -lt $n ]; then # -lt 判断左边参数是否小于右边参数 echo &quot;第一个数字小于第二个数字&quot;elif [ $m -gt $n ]; then # -gt 判断左边参数是否大于右边参数 echo &quot;第一个数字大于第二个数字&quot;fi # if控制语句格式：if elif else fi 数值判断参数详解-eq 比较两个参数是否相等-ne 比较两个参数是否不相等-lt 左边参数是否小于右边参数-le 左边参数是否小于等于右边参数-gt 左边参数是否大于右边参数-ge 左边参数是否大于等于右边参数 字符串提取和替换vim新建脚本文件1234.sh： 1234567#!/bin/bashll=&quot;Phantom Aria f r u i t l e s s l o v e&quot; # 定义字符串变量echo &quot;长度为:$&#123;#ll&#125;&quot; # 字符串长度(包括空格)echo &quot;$&#123;ll:3&#125;&quot; # 从第3个字符往后提取echo &quot;$&#123;ll:3:11&#125;&quot; # 从第3个字符往后提取11个字符echo &quot;$&#123;ll/ /&#125;&quot; # 字符串从左往右删除第一个空格（相当于替换的方式）echo &quot;$&#123;ll// /&#125;&quot; # 删除字符串中所有空格（相当于全局替换的方式） 字符串匹配和删除vim新建脚本文件match.sh： 123456#!/bin/bashll=&quot;Phantom Aria fruitless love&quot;echo $&#123;ll% *&#125; # 从右往左匹配第一个空格，删除右边所有字符串echo $&#123;ll%% *&#125; # 从右往左匹配所有空格，删除右边所有字符串echo $&#123;ll#* &#125; # 从左往右匹配第一个空格，删除左边所有字符串echo $&#123;ll##* &#125; # 从左往右匹配所有空格，删除左边所有字符串 *号是通配符，可以是匹配的任意长度任意字符串%和%%匹配原则：都是从右到左匹配，删除右边，%%称为贪婪匹配#和##匹配原则：都是从左往右匹配，删除左边，##同样称为贪婪匹配，注意通配符位置 for循环语句for循环语句两种写法如下： 123456789for （(初始值；限制值；执行步阶)） #注意两个小括号，少一个都不行do 程序段done或for 变量 in 1 2 3 4 5 6 7 8 9 10 #等价于`seq 1 10`do 程序段done vim建立脚本文件for_example.sh： 12345678#!/bin/bashdeclare -i sum=0 # 强制定义sum为整数型变量（不定义会变成一串字符串）read -p &quot;请输入整数&quot; n # 标准输入定义变量nfor (( i=0; i&lt;=$n; i++ )) # 等同于for i in `seq 0 $n`，不赘述do sum=$sum+$i # 计算0到n之和doneecho &quot;0到这个数的整数之和=$sum&quot; 自定义函数vim建立脚本文件12345.sh： 12345678910111213#!/bin/bashfunction formax()&#123; if [ $n -gt $m ]; then return $n else return $m fi&#125;read -p &quot;输入数值1：&quot; nread -p &quot;输入数值2：&quot; mformax $n $mecho &quot;输入的最大值为$?&quot; # $?表示上个指令的返回值 自定义了一个formax函数判断输入的两个数值大小，可以看出shell脚本中是一行一行读取指令的。自定义函数可以被引用，保存上述{}内的指令至原文件名12345.sh，在下一个脚本文件中，将函数放在脚本开始处， shell解释器发现它才可以进行调用（如下所示） vim建立脚本文件test.sh： 123456#!/bin/bashsource 12345.shread -p &quot;输入数值1：&quot; nread -p &quot;输入数值2：&quot; mformax $n $mecho &quot;输入的最大值为$?&quot; 自定义函数被成功调用","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"shell脚本","slug":"shell脚本","permalink":"http://www.shelven.com/tags/shell%E8%84%9A%E6%9C%AC/"}]},{"title":"转录组数据分析笔记（7）——DESeq2差异分析","slug":"转录组数据分析笔记（7）——R包DESeq2基因差异表达分析","date":"2022-04-18T07:49:20.000Z","updated":"2022-12-03T16:33:19.000Z","comments":true,"path":"2022/04/18/a.html","link":"","permalink":"http://www.shelven.com/2022/04/18/a.html","excerpt":"前面说到DESeq2包需要准备两个输入文件，一个是样本列表矩阵，一个是row count定量表达矩阵，接下来我们要对样本进行两两比对，找到两组之间有多少个基因上调和下调，不进行两两比对直接把4组数据4个重复全部导进去得到的结果是没有意义的，这里用DESeq2做表达基因的差异分析","text":"前面说到DESeq2包需要准备两个输入文件，一个是样本列表矩阵，一个是row count定量表达矩阵，接下来我们要对样本进行两两比对，找到两组之间有多少个基因上调和下调，不进行两两比对直接把4组数据4个重复全部导进去得到的结果是没有意义的，这里用DESeq2做表达基因的差异分析 举个栗子，我先进行短日照的“0”组样本和经过“1”天长日照的1组样本之间进行差异基因分析，从前面整理的样本列表矩阵我们可以看到，0组样本四个重复分别是ERR1698194、ERR1698202、ERR1698203和ERR1698204，同样1组数据4个重复分别为ERR1698205、ERR1698206、ERR1698207和ERR1698208，因此我们需要重新整理我们需要的数据做成csv格式，如下所示： 定量表达矩阵第一行需要和样本列表矩阵的第一列一一对应，顺序需要一模一样下面讲解如何使用DESeq2 1. 代码示范前面处理好raw count定量表达矩阵，建立样本列表矩阵后，我们就可以在rstudio里运行DESeq2包进行差异基因筛选了。代码如下。 1234567891011121314151617181920212223library(&quot;DESeq2&quot;)mycounts &lt;- read.csv(&quot;gene_count_matrix_0_1.csv&quot;,row.names = 1)mycounts_1 &lt;- mycounts[rowSums(mycounts) != 0,] # 重新定义数据集，过滤mapping数为0的基因mymeta &lt;- read.csv(&quot;sample_list_0_1.csv&quot;,stringsAsFactors = T) # 载入样本分组文件，遇到字符串将其转化为因子colnames(mycounts_1) == mymeta$id # 检查导入的两个数据集是否匹配，返回值为F需要重新匹配mymeta$index &lt;- factor(mymeta$index,levels = c(&quot;0&quot;,&quot;1&quot;)) # 把样本分组文件的分组列转换到因子，两两比对把对照组放前面！dds &lt;- DESeqDataSetFromMatrix(countData = mycounts_1, colData = mymeta, design = ~index) #构造用于差异表达分析的数据集dds &lt;- DESeq(dds)res &lt;- results(dds)res_1 &lt;- data.frame(res) # 结果res不是常规的数据，需要转化成数据框library(&quot;dplyr&quot;)res_1 %&gt;% # dplyr给数据集增加新列 mutate(group = case_when( log2FoldChange &gt;=1 &amp; padj &lt;=0.05 ~ &quot;UP&quot;, log2FoldChange &lt;=-1 &amp; padj &lt;=0.05 ~ &quot;DOWN&quot;, TRUE ~ &quot;NOT_CHANGE&quot; )) -&gt; res_2table(res_2$group)write.csv(res_2,file = &quot;gene_0_1.csv&quot;, quote = F) # 输出文件 2. 代码详解详细解释一下过程： 在R里运行程序或者写代码，首先要确定好工作目录在哪里，将之前Stringtie转化的定量表达矩阵和样本列表矩阵全都放在工作目录下，这里我的表达量矩阵是transcript_count_matrix_0_1.csv，分组列表矩阵是sample_list_0_1.csv。getwd()可以查看当前工作目录，在全局设置里可以更改工作目录。 library(&quot;DESeq2&quot;) # 加载DESeq2这个R包 mycounts &lt;- read.csv(&quot;gene_count_matrix_0_1.csv&quot;,row.names = 1) # 载入raw count矩阵，以第一列数据作为行名，读取的矩阵命名为mycounts mycounts_1 &lt;- mycounts[rowSums(mycounts) != 0,] # 过滤每一行mapping总数为0的基因，将数据集整理命名为mycounts_1 mymeta &lt;- read.csv(&quot;sample_list_0_1.csv&quot;,stringsAsFactors = T) # 载入样品列表，遇到字符串将其转化为一个因子 colnames(mycounts_1) == mymeta$id # 检查raw count矩阵第一行是否与样品列表的id列是否一致（如下）。这个很重要，不一致跑DESeq2会报错。如果显示false就要调整 mymeta$index &lt;- factor(mymeta$index,levels = c(&quot;0&quot;,&quot;1&quot;)) # 这一步同样重要，把样本分组文件的分组列转换到因子，不然会报错。我这里对照组是第0天，所以把“1”放在“0”之后，这里顺序需要特别说明！样本和定量矩阵的分组只要一一对应可以不排序，这里一定要分清楚哪个组和哪个组进行比较，否则会得出完全相反的结论！ 123dds &lt;- DESeqDataSetFromMatrix(countData = mycounts_1, colData = mymeta, design = ~index) # 中间那一长串是DESeq2包里的函数，countData是raw count定量矩阵，colData是样品列表，design是分组信息，这步是为了构造用于差异表达分析的数据集，并将数据集命名为dds dds &lt;- DESeq(dds) # 分析的核心DESeq程序 res &lt;- results(dds) # 将结果输出至res数据集 res_1 &lt;- data.frame(res) # res不是常规的数据，我们可以用head和class命令查看一下（如下图），需要转化成常规的数据框格式才可以对其进行加减列等操作，转换格式后的数据集名字为res_1 library(&quot;dplyr&quot;) # 加载这个包是为了对数据框进行操作，我是要增加新的一列统计差异表达情况 123456res_1 %&gt;% mutate(group = case_when( log2FoldChange &gt;=1 &amp; padj &lt;=0.05 ~ &quot;UP&quot;, log2FoldChange &lt;=-1 &amp; padj &lt;=0.05 ~ &quot;DOWN&quot;, TRUE ~ &quot;NOT_CHANGE&quot; )) -&gt; res_2 # 调用dplyr包给数据集增加新的一列group，log2FoldChange &gt;&#x3D;1，padj &lt;&#x3D;0.05，判断这个基因表达为上调，在log2FoldChange &lt;&#x3D;-1，padj &lt;&#x3D;0.05时判断这个基因表达为下调，其余情况为该基因表达情况不变。将结果输出到res_2数据集。 FoldChange表示两样品间表达量比值，是倍数变化，差异表达基因分析里，log2 fold change绝对值大于1为差异基因筛选标准。padj是调整后的p值，在p检验里，p值小于0.05是有显著差异的标志。 table(res_2$group) # 查看差异基因表达的结果，上调基因多少，下调基因有多少，不变的有多少 write.csv(res_2,file = &quot;gene_0_1.csv&quot;, quote = F) # 输出和生成gene_0_1.csv文件，即为结果文件 3. 结果演示我对“0”组样本（对照）和长日照1天，2天和3天这一共4组样本分别进行两两对比，做了基因表达差异分析（0_1表示0组和1组对比，1_2表示1组和2组对比，依次类推不再赘述），同时与原文献补充数据2中的差异分析结果做对比 0组与1组对比，187个基因上调，149个基因下调；原文57个基因上调，79个基因下调 0组与2组对比，51个基因上调，42个基因下调；原文21个基因上调，24个基因下调 0组与3组对比，142个基因上调，143个基因下调；原文107个基因上调，84个基因下调 1组和2组对比，26个基因上调，29个基因下调；原文3个基因上调，0个基因下调 1组和3组对比，46个基因上调，50个基因下调；原文8个基因上调，2个基因下调 2组和3组对比，11个基因上调，13个基因下调；原文2个基因上调，1个基因下调 点击这里下载原文基因表达差异总表（补充数据2） 3.1 分析我做的差异分析总体趋势和文章类似，都是短日照组（SD组，也就是0组）与长日照1、2、3天组（LD组，分别对应123组）相比，有较多基因出现差异性表达；而长日照1、2、3天组之间相比差异表达基因较少，这样才合理，表明拟南芥茎尖分生组织在开花期长日照下，确实有不同的基因参与了光周期诱导的开花过程。如果要对这些差异表达的基因做更深入的分析（下游分析），我们就要比对GO库或者KEGG库进行代谢通路富集分析和注释。以后的笔记会说到。至于为什么我得到的差异基因普遍比原文多，一个是差异分析之前用的分析软件不同，在过滤数据过程中我的条件比较松（只过滤了count数为0的基因），另外不同软件的组装、比对和计数的算法实现也不一样。另外，我们得到这个基因差异表达结果之后，还可以做个更直观的火山图看我们的差异基因分布是否合理，之后也会说。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"转录组数据分析","slug":"转录组数据分析","permalink":"http://www.shelven.com/categories/%E8%BD%AC%E5%BD%95%E7%BB%84%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"}],"tags":[{"name":"DESeq2","slug":"DESeq2","permalink":"http://www.shelven.com/tags/DESeq2/"},{"name":"dplyr","slug":"dplyr","permalink":"http://www.shelven.com/tags/dplyr/"},{"name":"R语言","slug":"R语言","permalink":"http://www.shelven.com/tags/R%E8%AF%AD%E8%A8%80/"}]},{"title":"转录组数据分析笔记（6）——HTseq计数定量","slug":"转录组数据分析笔记（6）——HTseq计数定量","date":"2022-04-17T15:49:37.000Z","updated":"2022-12-03T16:33:39.000Z","comments":true,"path":"2022/04/17/b.html","link":"","permalink":"http://www.shelven.com/2022/04/17/b.html","excerpt":"HTseq也是对有参考基因组转录数据进行表达量分析的，主要用于reads计数。这个软件功能就比较专一，不像stringtie还需要运行prepDE.py脚本进行数据转化，直接一步到位。那为什么我一开始不用HTseq呢？因为我遇到一个bug 主要还是运算速度的问题，我比较了两种定量方式，HTseq定量虽然只有一步，但是速度远不如stringtie，也可能是我的问题，下面会说到。","text":"HTseq也是对有参考基因组转录数据进行表达量分析的，主要用于reads计数。这个软件功能就比较专一，不像stringtie还需要运行prepDE.py脚本进行数据转化，直接一步到位。那为什么我一开始不用HTseq呢？因为我遇到一个bug 主要还是运算速度的问题，我比较了两种定量方式，HTseq定量虽然只有一步，但是速度远不如stringtie，也可能是我的问题，下面会说到。 1. HTseq定量获得raw countvim一个新脚本，输入如下命令： 12345678#!/bin/bashfor i in `seq 194 209`do htseq-count -f bam -s no \\ /media/sf_/data/fastq/bam/ERR1698&quot;$i&quot;.bam \\ # 输入bam文件 /media/sf_/data/ref/Arabidopis_thaliana.gtf # 参考基因组注释文件 &gt; /media/sf_/data/fastq/count/ERR1698&quot;$i&quot;.count # 自定义输出文件done 参数详解-f # 设置输入文件格式，可以是bam或者sam-s # 设置是否是链特异性测序，设置no每一条reads都会和正义链和反义链进行比较 保存运行以后发现这个程序只能分配一个线程（也可能是我没找到分线程的方法），所以可以根据电脑内核数分几个批处理一起运行会快很多（不然就等着干瞪眼&#x3D; &#x3D;）。 还有一点非常重要！bam文件需要提前按照名称排序，不然会出现绝大部分reads mapping不到参考基因组，这种情况会在屏幕上输出提示信息，但是程序还是会继续跑……这时候就别犹豫了赶紧kill这个程序，就算跑完了数据都不能用。可以用samtools sort -n对bam文件进行名称排序，但是排序之后无法再用samtools index建立索引文件，这会导致HTseq运行速度比蜗牛还慢。暂时没找到更好的办法 摊手。 经过漫长长长长长的时间等待，我们可以看看结果文件的head和tail（这里就放一张图吧）： 前面记录了基因名称和mapping上的reads数，最后5行对应不同的mapping情况，在不同的模式下意义不同，官网给出的区别如下图，默认是union模式： 计数结果也可以用multiqc合并，生成在线报告，这里可以直观地看到每个样品比对上的reads数百分比，这里16个样品的比对率都超过80%，说明计数结果都还不错。 2. HTseq结果文件处理HTseq计数定量后得到的是每一个样品的每个基因reads数，我们需要合并每个样品定量数据，手动修改成DESeq2能识别的raw count表达矩阵，还需要再准备一个样本列表矩阵，才能进行后续的DESeq分析。参考一下stringtie最后生成的表达量矩阵文件，我们也需要将HTseq定量结果整理成csv格式（逗号作为分隔符），第一列是基因名，后面是按照样品序列的排序，中间是表达矩阵。 再来看一看HTseq定量生成的文件详情，同样第一列是基因名，后面是raw count数量，^I 表示两列数据是以制表符tab键分隔的，$为换行符。 我的方法比较笨比，除第一个ERR1698194.count文件保留外，其他所有count文件第一列删去并命名为cut.count，然后合并ERR1698194.count和其他所有cut.count文件，再将所有的制表符替换为逗号，最后加上第一行行名和改文件名。 用awk命令删除第一列，写入到新的cut.count文件中： 1234for i in `seq 195 209`do cat ERR1698&quot;$i&quot;.count | awk &#x27;&#123;$1 = &quot;&quot;; print $0&#125;&#x27; &gt; ERR1698&quot;$i&quot;cut.countdone paste组合ERR1698194样品和其他cut.count文件到alldata.count: $ paste ERR1698194.count *cut.count &gt; alldata.count 看看alldata.count的数据格式，列数没有问题，但是awk删除列产生了空格： 用sed命令删除所有空格，替换所有制表符为逗号（两步可以合一步）： $ sed &#39;s/ //g&#39; alldata.count &gt; alldata1.count $ sed &#39;s/\\t/,/g&#39; alldata1.count &gt; alldata2.count 这样就手动生成符合csv格式的文件了，只需加上第一行： 这里样本量比较少，我直接vim复制粘贴的方法加了第一行，重命名一下文件就完成了表达矩阵的制作，可以用于DESeq2分析了！ 因为本人比较小白，上面处理过程就有些啰嗦了，总的思路就是改成csv格式文件的样式就可以。 样本列表矩阵的制作过程和stringtie一模一样，点击这里查看，本篇不再赘述。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"转录组数据分析","slug":"转录组数据分析","permalink":"http://www.shelven.com/categories/%E8%BD%AC%E5%BD%95%E7%BB%84%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"}],"tags":[{"name":"HTseq","slug":"HTseq","permalink":"http://www.shelven.com/tags/HTseq/"}]},{"title":"转录组数据分析笔记（5）——stringtie转录本组装和定量","slug":"转录组数据分析笔记（5）——stringtie转录本组装和定量","date":"2022-04-17T15:14:21.000Z","updated":"2022-12-03T16:35:23.000Z","comments":true,"path":"2022/04/17/a.html","link":"","permalink":"http://www.shelven.com/2022/04/17/a.html","excerpt":"本篇笔记主要记录如何用Stringtie做转录本的组装和定量，以及如何制作样本列表矩阵，为后面DESeq2分析做铺垫。","text":"本篇笔记主要记录如何用Stringtie做转录本的组装和定量，以及如何制作样本列表矩阵，为后面DESeq2分析做铺垫。 stringtie转录本组装和定量1 转录本组装Stringtie是一个基因和转录本组装定量的软件，stringtie的输入文件有两个，一个是经过排序的bam文件，排序可以用前面说到的samtools sort命令完成，还有一个是参考基因组的注释文件（gff或gtf格式）。 在使用Stringtie进行基因或者转录本组装定量的过程中，有一个非常重要的参数 - e，我之前跑了一遍流程没有加参数-e，结果组装的结果非常差，还有大量的未注释的基因。我请教了度娘，网上的教程攻略也都是抄来抄去的没解决什么问题，官网只有这么一句解释： -e this option directs StringTie to operate in expression estimation mode; this limits the processing of read alignments to estimating the coverage of the transcripts given with the -G option (hence this option requires -G). 对于加了参数-e之后如何做的比对和组装处理还是不明了，不知道表达评估模式的原理是什么，只能自己做个大概的总结（不知正确与否）： 如果我们研究的样本没有很好的注释信息，研究的人少，现有的注释信息都不完善，那么我们就需要重建转录本进行注释，这个时候就不需要加参数-e。如果样品的注释信息非常完整，比如拟南芥这种模式生物，我们不需要重建新的转录本进行注释，只对现有的参考基因组注释文件就足够了，那就要用-e参数，不需要预测新的转录本。 -e参数还有个比较重要的地方，只有用了-e参数后，才可以运行prepDE.py3脚本得到read count矩阵（也就是进行定量），这个脚本后面会说。 我们首先创建一个shell脚本进行转录本组装： 12345678#!/bin/bashfor i in `seq 194 209`do stringtie -p 4 -e \\ -G /media/sf_/data/ref/Arabidopis_thaliana.gtf \\ # 参考基因组注释文件 -o /media/sf_/data/fastq/gtf/ERR1698&quot;$i&quot;.gtf \\ # 自定义输出文件 /media/sf_/data/fastq/bam/ERR1698&quot;$i&quot;.bam # 输入的bam文件done 保存，运行，我们可以得到.gtf格式文件，less一下查看里面的内容： 我们这里因为加了参数-e，不会有新的基因和转录本，可以看到每个read比对上的基因的信息。（不加参数-e会组装新基因和转录本，默认采用STRG加数字编号进行区分）。每行数据会给出coverage，FPKM和TPM三个信息，后两者都可以用来定量。FPKM和TPM都是对read counts数目进行的标准化，如果是单端测序数据可以用RPKM进行标准化，不进行数据标准化的比较是没有意义的。 2 合并转录本(重构转录本才需要)这一步要注意下，如果需要重构转录本才需要合并所有的转录本的组装结果，得到一个非冗余的转录本合集，也就是获得跨多个RNA-seq样品的全局的转录本。这里需要分两步： $ ls *.gtf &gt; mergelist.txt # 将所有组装的转录本文件名合并到一个文件 $ stringtie --merge -p 4 -G /media/sf_/data/ref/Arabidopis_thaliana.gtf -o merge.gtf ./mergelist.txt #这一步是用--merge指令将所有转录本合并输出到merge.gtf文件中 我们最后得到的merge.gtf就是全局的转录本。这里只是记录一下这步操作，我们只关注参考基因组的注释结果就不需要merge。 3 获得定量表达矩阵DESeq2要求输入的定量结果为raw count形式，raw count是根据mapping到基因或转录本的reads数计算得到，而stringtie只提供了转录本水平的表达量，定量方式包括TPM和FPKM值两种。为了进行raw count定量，stringtie官方提供了prepDE.py脚本（两个版本，我选择的python 3版本，在我base环境下不会冲突），可以计算出raw count的表达量。 下载这个python脚本，如果你用的是windows浏览器，在官网找到脚本直接右键复制链接，用wget直接下到linux系统里，千万不要在windows上直接复制粘贴代码过去。因为windows的换行符和linux的不一样，两个系统间直接粘贴代码会出现错行和莫名其妙的缩进导致程序报错（可以用cat -A看两个系统换行符的区别，血的教训，排查了老半天才发现）推荐用prepDE.py3，不用再切python 2 的环境了。 官方给出的prepDE.py脚本有两种运行方式（如下图所示），一种是建立Ballgown能识别的目录结构，一种是建立sample_lst文件并指定所有样品数据的路径。两种方法都可行，Ballgown现在用的比较少，比较主流的还是Stringtie+DESeq2的分析方法。演示一下如何创建sample_lst和解释一下这个文件要求的格式。 3.1 sample_lst文件准备简单来说，sample_lst.txt要求第一列为样品编号，第二列为对应编号的样品gtf文件所在路径，中间用制表符tab隔开，如下图（命名不一定要完全一样，注意格式，后面要导入prepDE脚本，能找到就行）： 这个文件准备工作比较简单，不再赘述 3.2 运行prepDE.py3将prepDE.py3脚本放在上面gtf文件的目录下，运行以下命令： $ python prepDE.py3 -i sample_lst.txt -g gene_count_matrix.csv -t transcript_count_matrix.csv 解释一下： 参数含义-i # 输入文件，就是前面做的sample_lst.txt-g # 自定义基因组表达矩阵名字，默认也是gene_count_matrix.csv-t # 自定义转录本表达矩阵名字，默认也是transcript_count_matrix.csv 得到的这两个文件就是基因和转录水平的raw count表达量矩阵，我们都可以用于后面的DESeq2分析。 4. 制作样本列表矩阵这里需要和前面为了运行prepDE.py脚本而制作的sample_lst文件区分开，要做下一步DESeq2差异基因分析，我们需要自己手动创建一个DESeq2能识别的样本列表矩阵，包含两列信息：一列是样本名称，一列是样本分组。样本分组信息我们可以直接从下载样本数据的地方（EBI官网）得到，只需要自己改一下格式。 下载之后发现第一行标题特别长，稍微处理下制表符替换成换行符，将第一行标题拆分成每个字段一行的格式，找一下不同天数处理的分组信息关键字“time”，发现我们要的分组信息在第36行（也就是原来文件的第36列）： $ head -n1 E-MTAB-5130.sdrf.txt | tr &#39;\\t&#39; &#39;\\n&#39; | nl | grep &quot;time&quot; 同样的方法找样本信息所在列是32列： $ head -n1 E-MTAB-5130.sdrf.txt | tr &#39;\\t&#39; &#39;\\n&#39; | nl | grep &quot;ENA&quot; 所以我们需要提取第32列和第36列，用cut命令切割并重定向到新的文件sample_list: $ cut -f 32,36 E-MTAB-5130.sdrf.txt &gt; sample_list.csv 发现相邻数据有重复，uniq删除重复行，再用sed替换制表符为逗号（因为csv文件就是以逗号作为分隔符），将原来的sample_list.csv覆盖，vim手动修改一下第一行名字，完成后就可以用于DESeq2分析了！ $ uniq sample_list.csv &gt; sample_list1.csv # uniq删除重复行 $ sed &#39;s/\\t/,/g&#39; sample_list1.csv &gt; sample_list.csv # 替换制表符为逗号 手动修改sample_list .csv第一行内容，修改之后如下即可 更新2022&#x2F;4&#x2F;22：这里的处理仅仅是做到符合DESeq2输入的格式，在进行两组样本基因表达差异分析的时候，还需要分别建立两两比对的样本列表矩阵和定量矩阵，不然差异分析没有意义，详见DESeq2笔记","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"转录组数据分析","slug":"转录组数据分析","permalink":"http://www.shelven.com/categories/%E8%BD%AC%E5%BD%95%E7%BB%84%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"}],"tags":[{"name":"stringtie","slug":"stringtie","permalink":"http://www.shelven.com/tags/stringtie/"},{"name":"prepDE.py3","slug":"prepDE-py3","permalink":"http://www.shelven.com/tags/prepDE-py3/"}]},{"title":"转录组数据分析笔记（4）——IGV基因组浏览器安装和解读","slug":"转录组数据分析笔记（4）——IGV基因组浏览器安装和解读","date":"2022-04-16T11:32:50.000Z","updated":"2022-12-03T16:36:31.000Z","comments":true,"path":"2022/04/16/b.html","link":"","permalink":"http://www.shelven.com/2022/04/16/b.html","excerpt":"IGV（Integrative Genomics Viewer）是一个非常方便的比对软件，在使用前只需要将参考基因组和bam文件分别建立索引（即建立fai和bai文件）并载入，就可以对转录组测序数据进行可视化浏览。对比samtools tview功能，这个软件有交互式操作界面，对萌新非常友好。","text":"IGV（Integrative Genomics Viewer）是一个非常方便的比对软件，在使用前只需要将参考基因组和bam文件分别建立索引（即建立fai和bai文件）并载入，就可以对转录组测序数据进行可视化浏览。对比samtools tview功能，这个软件有交互式操作界面，对萌新非常友好。 1. IGV软件下载直接上百度搜就能找到IGV官网，选择linux版本或者windows版本都行，这里用linux版本为例，IGV只支持JAVA11版本，不用担心这个问题，下载的安装包里直接有JAVA11，解压就可以用，就是国外网站下载有点慢（科学上网）。 直接在虚拟机里解压打开，运行igv.sh，会自动准备好JAVA11的运行环境，成功弹出交互式界面（终于告别了黑漆漆的命令行 ）。 2. 导入文件Genomes菜单栏上传建立索引的参考基因组.fa和.fai文件： File菜单栏上传排序并建立索引的.bam和.bai文件： 如果有参考基因组注释文件，同样可以导入进去，同样导入前需要sort排序和建立index，可以用菜单栏里的igvtools直接sort和index： 3. 界面解读我导入了5组bam数据，所有文件导入后可以看到如下界面，简单介绍一下各个区域和功能： 主页面获得的信息有限，我们选取第3条染色体为例，将其放大： 中间的界面可以通过左右拖动鼠标，或者按左右方向键来浏览染色体上的比对情况。我们在搜索框中直接搜基因名字进行染色体定位，比如CIPK家族中的CIPK7基因，回车后双击最后一栏基因注释文件中的基因名称CIPK7，可以得到详细的CIPK7基因信息（这里注意下，如果双击弹出来多个可供选择的片段的话，代表这个基因存在可变剪切）: 在基因注释区右键，选择expanded，可以将CIPK7基因的所有转录本显示出来。 放大到一定程度后，我们可以看到基因注释区上方出现了核苷酸序列和氨基酸序列，我们可以点击sequence旁边的箭头，切换到另一条链的序列。 点击核苷酸，会出现三行，分别表示不同起始位点的核苷酸翻译结果，绿色为起始密码子，红色的星号表示终止密码子。 再来看看放大后的tracks区域，bam文件在载入后会默认生成两个tracks，一个显示测序深度（Coverage track，可以对比下samtools depth），一个显示比对情况（Alignment track），我们放大其中一个样本的数据信息。 Coverage track区域灰色代表质量好，如果reads中某核苷酸与参考序列超过20%不一致的时候，IGV会根据四个碱基的计数对coverage的条形图进行着色。这里可以看到该位点处有20个reads覆盖到，8条reads测的是C核苷酸，12条reads测的是T核苷酸。如果某个位置coverage条形图只有一种颜色，即该位点测的核苷酸和参考序列完全不一样，那说明该位点是SNP位点。 Alignment tracks柱形图是和bam文件中的数据一一对应的，举个例子，我在IGV软件的ERR1698206.bam可以看到在第3条染色体位置8173028有3条reads。虚拟机中找到这个bam文件，直接samtools view查看并grep这个位置，可以找到3条定位的reads（还有三条是配对的另一条链）。 如果一条reads中间有缺失，IGV会用黑色横杠表示，中间数字表示缺失几个核苷酸。 IGV还用不同颜色标记异常的插入片段大小的reads，这里做的是RNA-seq数据比对，不用看reads颜色，有些reads还在质控的时候被裁短了，变成蓝色很正常（因为比预期短，个人理解是这样，有待考证？）。以下是官网的默认着色方案：","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"转录组数据分析","slug":"转录组数据分析","permalink":"http://www.shelven.com/categories/%E8%BD%AC%E5%BD%95%E7%BB%84%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"}],"tags":[{"name":"IGV","slug":"IGV","permalink":"http://www.shelven.com/tags/IGV/"}]},{"title":"转录组数据分析笔记（3）——samtools用法小结","slug":"转录组数据分析笔记（3）——samtools用法小结","date":"2022-04-16T10:41:24.000Z","updated":"2022-12-03T16:37:26.000Z","comments":true,"path":"2022/04/16/a.html","link":"","permalink":"http://www.shelven.com/2022/04/16/a.html","excerpt":"本篇笔记主要记录samtools的用法。","text":"本篇笔记主要记录samtools的用法。 1. sam文件转化bambam文件是二进制文件，占用磁盘空间小，运算速度快，samtools操作是针对bam文件的，所以我们要进行数据转化。samtools sort指令可以将bam文件进行排序，这个指令同时也可以将sam文件转化成bam文件： 12345#!/bin/bashls *.sam | while read iddo samtools sort -l 0 -@ 5 -o $(basename $id &quot;.sam&quot;).bam $id # 指定输出文件，改后缀.bamdone 运行脚本，将当前目录的sam文件全转换成bam文件并排序（这里的排序不是按名称，用HTseq还要再按照read名称排序，使用参数-n）。 samtools sort参数samtools sort # 对bam文件进行排序（sam文件排序不会变）-l # 设置输出文件压缩等级，0-9，0是不压缩,9是最高等级压缩-@ # 设置线程数-o # 设置排序后输出的文件名最后接输入的bam或者sam格式文件 2. 构建索引文件2.1 构建bam文件索引在bam文件目录下，排序后的bam文件可以建立索引： $ ls *.bam | xargs -i samtools index &#123;&#125; 注意下xargs -i的用法，和管道不一样，是传递参数给后一个命令的花括号中，后一个命令中不存在歧义的时候可省略参数-i和花括号。 如图生成的bai文件就是索引文件。其实到了这一步，前面的sam文件就可以删除（节省电脑空间），只留下bam文件就行，bam文件无法直接查看，可以通过samtools view命令查看bam文件。 2.2 构建参考基因组fa文件索引在参考基因组文件目录下，对参考基因组的fa文件建立索引： $ samtools faidx Arabidopsis_thaliana.dna.genome.fa 参考基因组文件名注意改成自己的，生成的索引文件是.fai结尾的 3. bam文件qc质控samtools转化生成的bam文件需要进行质控，看看比对情况如何。在bam文件目录下，我们创建一个samtools自带qc质控指令samtools flagstat运行脚本： 12345#!/bin/bashls *.bam | while read iddo samtools flagstat -@ 4 $id &gt; $(basename $id &quot;.bam&quot;).flagstat # 自定义输出文件done $ samtools flagstat bam文件 &gt; 输出文件 # 这种格式，其他参数都一样 运行脚本文件可以获得16个.flagstat质控文件，和fastqc一样，我们还可以做完后用multiqc命令集合成一个html格式的总的qc报告网页。和fastqc不同之处是，fastqc是做下机数据质控，samtools是做比对参考基因组的质控。如下图所示，可以比较直观地看出大部分reads都是map上的。 生成的每一个flagstat文件我们也可以直接点开。 每一行统计数据都是以通过QC的reads数量和未通过QC的reads数量组成，以我点开的这个文件为例，主要信息有以下几个： 13992629个reads都是合格的12328290个reads只比对到参考基因组一个位置上13988737个reads比对到参考基因组（99.97%）12332182个reads是成对的12201338个reads可以正确配对（98.94%）2846条reads成对但只有一条能比对上参考基因组12398个配对的reads可以比对到别的染色体上 可以自己将所有的flagstat运行结束后的文件放在一个目录下，运用paste命令全部按列粘贴在一起，用cut或者awk提取所需的列数据自己做比对情况表格，这里不再赘述。 4. samtools其他指令简单介绍一下： $ samtools view ERR1698194.bam #查看bam文件（不能直接cat查看二进制文件） $ samtools tview ERR1698194.bam #类似于IGV这种基因组浏览器，但是非交互式界面（下图）不直观，我们一般都是用IGV查看基因组 其他还有samtools merge（合并所有bam文件到一个文件），samtools depth（得到每个碱基位点或者区域的测序深度,并输出到标准输出）等等，不是特别常用，这里就不介绍了。 在步骤2中构建的索引文件可以导入IGV中，对转录组每个read mapping情况进行可视化浏览，下个笔记将介绍IGV的用法。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"转录组数据分析","slug":"转录组数据分析","permalink":"http://www.shelven.com/categories/%E8%BD%AC%E5%BD%95%E7%BB%84%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"}],"tags":[{"name":"samtools","slug":"samtools","permalink":"http://www.shelven.com/tags/samtools/"}]},{"title":"转录组数据分析笔记（2）——使用Hisat2比对参考基因组","slug":"转录组数据分析笔记（2）——使用Hisat2比对参考基因组","date":"2022-04-15T08:53:41.000Z","updated":"2022-12-03T16:38:55.000Z","comments":true,"path":"2022/04/15/a.html","link":"","permalink":"http://www.shelven.com/2022/04/15/a.html","excerpt":"本片笔记主要记录Hisat2的用法，以及比较四个常用的比对参考基因组的软件。","text":"本片笔记主要记录Hisat2的用法，以及比较四个常用的比对参考基因组的软件。 1. 建立参考基因组索引在进行clean data与参考基因组比对之前，我们需要先建立参考基因组索引。进入下载好参考基因组的文件目录下，运行命令： $ hisat2-build Arabidopsis_thaliana.dna.genome.fa genome -p # 以几个线程运行，与电脑核数或者分配虚拟机的核数有关genome # 命名的索引文件名，可以改成自己能找到的 就可以在当前目录建立参考基因组索引文件，hisat2固定会生成8个以.ht2做后缀名的索引文件，如下所示： 需要注意的一点，比对软件除了hiasat2以外，还有subjunk、bwa、bowtie2等等，各个比对软件生成的索引文件是不同的，不能相互混用，命名的时候注意区分各种比对工具。 2. clean data与参考基因组比对比对的意思是将每一个read与参考基因组序列进行对比，目的是得到每一个read在参考基因组上的位置信息，有了这个基础的位置信息才可以进行后续基因或者转录本的定量，最终由定量结果做差异表达矩阵，分析上调或者下调的基因数量。 新建一个shell脚本输入下面的代码 12345678#!/bin/bashfor i in `seq 194 209`do hisat2 -p 4 -x /media/sf_example/data/ref/genome \\ #索引文件绝对路径 -1 /media/sf_example/data/clean_data/ERR1698&quot;$i&quot;_1.fq.gz \\ -2 /media/sf_example/data/clean_data/ERR1698&quot;$i&quot;_2.fq.gz \\ -S /media/sf_example/data/hisat2_sam/ERR1698&quot;$i&quot;.sam #注意大写的Sdone 参数解释： -p # 同样是配置线程数-x # 指定索引文件，需要定义索引文件名称，不能加后缀，不能只定义到索引文件所在目录-1 # 第一端测序数据文件-2 # 第二端测序数据文件-S # 指定输出目录和文件，不指定会刷屏，注意是大写的S 输出到屏幕的结果如下，我们选取其中一个进行解读： 共有6166091对测序数据，都是双侧测序数据，其中： read1 和 read2 没有合理比对上参考基因组序列的有65259对，占1.06% read1 和 read2 只有一条比对上参考基因组序列的有5698903对，占92.42%，这部分reads数需要占测序reads的绝大多数才正常 read1 和 read2 可以同时比对到多个地方的有401929对，占6.52% 65259对没有合理比对上的序列中，55871对可以不合理地比对上一次 最后一块是对两条链拆开比对的结果，这个一般用不到，本来测序的两条reads就应该比对到同一个染色体同一个基因附近，拆开比对到不同染色体没有意义。我们要看的是最后一句话，总比对率为99.97%，通常比对率大于90%说明比对情况较好，与参考基因组基本吻合。 3. sam文件解读比对结果除了有屏幕上输出的总体报告外，还有记录详细比对结果的sam文件。双端测序的比对会将两个测序文件进行整合和比较，最后只生成一个sam文件，因此这个sam文件非常大，hisat2比对生成的sam文件可以直接打开。我们可以选取一部分进行解读。 @HD VN:1.0 SO:unsorted （排序类型） VN是格式版本；SO表示比对排序的类型，有unknown，unsorted，queryname和coordinate几种。samtools软件在进行行排序后不能自动更新sam文件的SO值。 @SQ SN:1 LN:30427671 （序列ID及长度） 参考序列名，这些参考序列决定了比对结果sort的顺序，SN是参考序列名；LN是参考序列长度；每个参考序列为一行。这里表示拟南芥有5条染色体，对应长度都在后面，Mt是线粒体基因，Pt是叶绿体基因。 @PG ID:hisat2 PN:hisat2 VN:2.2.1 （比对所使用的软件及版本） 这里包括了路径，方法，以及我质控后的序列长度（50-100）等详细信息。 接下来每行都是一长串，显示的是比对结果部分，11个字段（列） 第一列：QNAME：测序出来的reads序列数据名，ERR1698194.2 第二列：FLAG：表明比对类型：paring，strand，mate strand等 第三列：RNAME：参考基因组的染色体名，我这里是第1条染色体 第四列：POS：比对到这个染色的具体位置，4969 第五列：MAPQ：比对质量，是一个衡量比对好坏的打分结果，60最好 第六列：CIGAR：简要比对信息表达式，1S100M是第1个碱基切除，100个匹配 第七列：RNEXT：另一个序列比对上的参考序列编号，没有另外的片段是*，同一个片段&#x3D; 第八列：MPOS：另一个序列匹配的染色体具体位置，这里一样也是4969 第九列：TLEN：配对片段长度，最左边的为正，最右边的为负 第十列：SEQ：和参考序列在同一个链上比对的序列 第十一列：QUAL：比对序列的质量和reads碱基质量值 后面提供额外的信息，一般不重要，了解一下就行。因为sam文件太大（往往有10G以上），也不适合电脑进行后续处理，所以我们会用到samtools，将sam文件转化为更适合电脑处理的二进制bam文件。这个后面会讲。 4. 其他比对软件以下4种软件均用于序列比对，用法稍有不同，做个记录 $ hisat2 -p 4 -x 索引目录 -1 单端测序数据文件 -2 另一端测序数据文件 -S 输出文件 $ subjunk -T 4 -i 索引目录 -r 单端测序数据文件 -R 另一端测序数据文件 -o 输出文件 $ bowtie2 -p 4 -x 索引目录 -1 单端测序数据文件 -2 另一端测序数据文件 -S 输出文件 $ bwa mem -t 4 -M 索引目录 单端测序数据文件 另一端测序数据文件 &gt; 输出文件","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"转录组数据分析","slug":"转录组数据分析","permalink":"http://www.shelven.com/categories/%E8%BD%AC%E5%BD%95%E7%BB%84%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"}],"tags":[{"name":"hisat2","slug":"hisat2","permalink":"http://www.shelven.com/tags/hisat2/"}]},{"title":"转录组数据分析笔记（1）——如何用fastqc和trim-galore做测序数据质控","slug":"转录组数据分析笔记（1）——如何用fastqc和trim-galore做测序数据质控","date":"2022-04-14T13:13:35.000Z","updated":"2022-12-03T16:39:16.000Z","comments":true,"path":"2022/04/14/a.html","link":"","permalink":"http://www.shelven.com/2022/04/14/a.html","excerpt":"本系列学习笔记数据均来自”Temporal dynamics of gene expression and histone marks at the Arabidopsis shoot meristem during flowering“，原文用RNA-Seq的方式研究开花阶段，芽分生组织不同时期的基因表达量变化，4个时间段（0, 1, 2, 3），4个重复，共有16个样品。点击这里获取文献","text":"本系列学习笔记数据均来自”Temporal dynamics of gene expression and histone marks at the Arabidopsis shoot meristem during flowering“，原文用RNA-Seq的方式研究开花阶段，芽分生组织不同时期的基因表达量变化，4个时间段（0, 1, 2, 3），4个重复，共有16个样品。点击这里获取文献 1. 读文章获得RNA-Seq数据从文章末尾我们可以获得一些测序数据信息： Data availability. ChIP-seq and RNA-seq data have been deposited with ArrayExpress database (www.ebi.ac.uk/arrayexpress), accession numbers E-MTAB-4680, E-MTAB-4684 and E-MTAB-5130. 可以看到作者将CHIP-seq和RNA-seq数据上传到ArrayExpress这个数据库中，这个数据库是欧洲生物信息研究所（European Bioinformatics Institute, EBI）旗下的公共数据库，主要用于存放芯片和高通量测序数据，我们可以直接从该数据库中下载我们需要的RNA-seq数据，自己动手分析。 顺便介绍一下，欧洲EBI旗下的ENA数据库，美国NCBI旗下的GenBank，以及日本的DDBJ三大巨头组成了国际核酸序列数据库合作联盟（INSDC），这三大数据库收录了世界上报道的所有序列数据。 EBI数据库可以直接下载fastq数据，不需要做SRA数据转换（NCBI数据库中下载sra数据则需要转换，需要用工具fastq-dump），这是EBI数据库下载高通量测序数据的优点，但是这个数据库经常网络连接不稳定，用aspera或者prefetch这种高速下载软件也不一定能稳定下载 最好的方法是科学上网。我们可以从ArrayExpress数据库中输入索引号E-MTAB-5130，直接获得样本信息和测序信息。 2. 测序数据质控我们可以看到，下载的数据是双端测序产生的。我们不能直接用下载的raw data做后续分析，必须要进行质控查看测序质量如何。 2.1 使用fastqc对测序数据生成质控报告下载好的fastq文件可以直接用fastqc工具做测序数据质控，输入以下命令一次生成所有qc报告： $ fastqc *.fastq.gz -o ./ #在当前目录下对所有.fastq.gz文件生成qc报告，-o参数定义输出目录 运行结束后我们可以得到.html文件和.zip压缩包，这个就是质控报告。在虚拟机里，我们可以直接点开.html后缀的网页文件查看质控报告（和压缩包的内容是一致的）。 顺便介绍一个非常好用的工具multiqc，可以通过conda install直接安装，这个工具可以将批量生成的qc报告合并为一个，看起来更加直观。在生成qc报告的当前目录下，运行代码： $ multiqc ./ 2.2 质控报告解读2.2.1 基本信息绿色表示通过，黄色表示不太好，红色表示不通过。RNA-seq一般在Sequence Duplication Levels上结果会不好，一个基因可能会大量表达，测到好多遍。 2.2.2 核苷酸测序质量箱式图这里测序质量（纵坐标）用Q值表示，p为出错率，Q值计算式为Q&#x3D;-10*lg（p）。每一个核苷酸的测序质量可以从fastq文件第四行一一对应上，这里只是做了统计和可视化。我们可以看到每个位点的核苷酸测序质量Q值都在30以上，意味着每个位点的测序正确率都在99.9%以上，可以认为测序质量比较好。 箱式图解读：黄色箱子(25%和75%的分数线)，红色线(中位数)，蓝线是平均数，下面和上面的触须分别表示10%和90%的点。 2.2.3 测序泳道质量图纵坐标为tile编号，这张图代表每次荧光扫描的质量。蓝色背景表明测序质量良好，白色和红色的背景表示测序过程中可能有小气泡或者测序泳道上有污染。直接的体现就是部分测序数据中出现连续的N，也就是不能读取，可能是任何一个核苷酸。 2.2.4 reads质量得分可以看到平均质量在38，质量比较高。如果最高峰所对应的横坐标质量值小于27（错误率0.2%） 则会显示“警告”，如果最高峰的质量值小于20（错误率1%）则会显示“不合格”。 2.2.5 每条reads各个测序位点上各碱基出现概率图上看得出比较稳定，测序刚开始的时候波动会大一点，这里的GC含量和AT含量不一致。如果任何一个位置上的A和T之间或者G和C之间的比例相差10%以上则报“警告”，任何一个位置上的A和T之间或者G和C之间的比例相差20%以上则报“不合格”。 2.2.6 GC含量和理论分布可以看出GC含量在43%左右，与理论分布（也就是正态分布）比较吻合，中心峰值与所测转录组的GC含量一致。如果有不正常的尖峰，可能是测序文库有污染，接头的污染还会在过表达序列中体现。 2.2.7 每条reads的含N碱基数不能识别的碱基会被读成N，这里没有N，测序质量非常好。横坐标表示reads的位置，纵坐标表示N的比例。如果任何一个位置N的比例大于5%则报“警告”，大于20%则报“失败”。 2.2.8 测序长度分布这个测序仪一次测量长度是101bp。测序仪出来的原始reads通常是均一长度的，经过质控软件处理过的reads长度则不一样，这里说明测序结果较好。 2.2.9 重复序列水平可以看到重复水平较低。图中横轴代表reads的重复次数，大于10次重复后则按不同的重复次数合并显示。纵坐标表示各重复次数下的reads数占总reads的百分比；蓝线展示所有reads的重复情况，红线表示在去掉重复以后，原重复水平下的reads占去重后reads总数的百分比；如果非unique的reads占总reads数的20%以上则报 ”警告“，占总read数的50%以上则报 ”不合格“。这项变黄是正常的。 2.2.10 过表达序列和接头序列过表达的序列很可能是一些测序的接头序列，这里两种序列都看不到，说明质量良好。过表达序列是显示同一条reads出现次数超过总测序reads数的0.1%的统计情况，超过0.1%则报“警告”，超过1%则报“不合格”，会列出可能的接头序列。接头序列正常情况下含量接近于0。 2.3 trim-galore测序数据质控过滤质控的目的使为了除去下机数据raw data中的接头序列和质量比较差的测序数据，Q&lt;20，正确率小于99%，如果这样的核苷酸超过read长度的20%，则考虑将该read丢弃（只是建议，不是强制，根据需要可以自定义过滤条件）。 trim-galore也可以用conda install安装，非常方便，这是一个自动检测adaptor的软件，可以一个命令自动找出主流的测序接头并去除，还可以设置参数对测序数据质控。简单介绍一下trim-galore的一些参数： -q # 设定Phred quality score阈值，默认为20；-phred33 # 测序平台衡量测序质量的方法，有33和64，不影响；-length # 设定输出reads长度阈值，小于设定值会被抛弃，根据需要设计;-stringency # 设定可以忍受的前后adapter重叠的碱基数，默认为1（非常苛刻）;-paired # 用于分析双端测序数据结果；-o # 输出目录 因为是双端测序，16个样本每个都有_1和_2两个文件，可以写个脚本批量运行： 12345678#!/bin/bashfor i in `seq 194 209` do trim_galore -q 25 -phred33 -length 50 -stringency 3 -paired \\ -o /media/sf_/example/data/clean_data \\ /media/sf_/example/data/raw_data/ERR1698&quot;$i&quot;_1.fastq.gz \\ #一端测序数据 /media/sf_/example/data/raw_data/ERR1698&quot;$i&quot;_2.fastq.gz #另一端测序数据done 保存退出，运行，最后生成的_triming_report.txt文件就是生成的质控报告，_val_1.fq.gz就是过滤后瘦身的clean data，我们可以看到大小比原来小了10M左右，这个clean data才可以用于后续的分析流程 我截取了其中一个数据的质控结果，拉到最底下，可以看到两端测序数据中都有AGATCGGAAGAGC这个序列，在一个样本测序数据中出现240027次经过网上查找，AGATCGGAAGAGC这个序列确实是Illumina公司测序时的接头序列（点击这里查看），可以和上面fastqc质控报告中的测序平台Illumina相互验证。","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"转录组数据分析","slug":"转录组数据分析","permalink":"http://www.shelven.com/categories/%E8%BD%AC%E5%BD%95%E7%BB%84%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"}],"tags":[{"name":"fastqc","slug":"fastqc","permalink":"http://www.shelven.com/tags/fastqc/"},{"name":"multiqc","slug":"multiqc","permalink":"http://www.shelven.com/tags/multiqc/"},{"name":"trim-galore","slug":"trim-galore","permalink":"http://www.shelven.com/tags/trim-galore/"}]},{"title":"小破站正式对外开放啦！","slug":"小破站正式对外开放啦！","date":"2022-04-13T14:29:14.000Z","updated":"2023-07-04T10:13:40.000Z","comments":true,"path":"2022/04/13/a.html","link":"","permalink":"http://www.shelven.com/2022/04/13/a.html","excerpt":"咳咳，经过10天左右紧张地准备，小站今天正式对外开放啦！作为第一次运行个人网站的小白，看着网站从零开始在自己手上慢慢展现一个个页面，实现一个个功能，这种成就感和激动感，让我感觉这几天的熬夜狂肝还是值得的呜呜呜我的头发。","text":"咳咳，经过10天左右紧张地准备，小站今天正式对外开放啦！作为第一次运行个人网站的小白，看着网站从零开始在自己手上慢慢展现一个个页面，实现一个个功能，这种成就感和激动感，让我感觉这几天的熬夜狂肝还是值得的呜呜呜我的头发。 建站过程为什么建站说是从零开始，其实也是站在前人搭建好的框架上才能顺利进行的。我很早之前就萌发了搭建个人网站的想法，自从这个学期开始学习生物信息学，我也慢慢对linux系统有了更深入的理解。一开始只是在虚拟机上跑跑程序，后来就想着不如买一个云服务器装linux玩玩，既然买了服务器了，那就再绑个域名吧，既然两个都有了，不如就再建个网站吧（滑稽）。于是趁着腾讯云的轻量级应用服务器打折的机会，一次性买了3年…然后又在阿里云买了个域名，了解到需要备案后才能解析域名，行，又办理各种手续在工信部备了案。不得不说，在各大云服务器商内卷搞活动的时候，有个学生认证还是相当香的。至于怎么用服务器，那就是后面考虑的事了。 备案和备案期间的学习我在腾讯云买的服务器，通过接入商腾讯云协助，腾讯云先审核我的材料，通过以后再提交工信部备案，备案还是相当快的，3天时间就办下来了。备案期间也没闲着，作为一个前端小白的我，又去恶补了一些前端知识，比如什么是css、js、ejs、html文件，这些文件的格式是怎么样的，java的一些基本语法等等。学习的折磨程度不亚于刚开始学R语言和linux操作系统，不过有了一些shell脚本的语法知识以后，还是能感觉到这些语言之间还是有共同的判断方式和逻辑在里面的（纯小白发言，不知道对不对）。在慢慢摸索的过程中痛并快乐着，先是照着别人给的js文件魔改，再是自己调试遇到的问题和bug，尤其在发现bug最后解决bug的时候，那种成就感能给我带来莫大的快乐。 建站历程建站的过程是痛苦的，踩了非常多的坑，我觉得我甚至可以写好几篇攻略出来。我一开始的想法是在github建库搭建个人网站，从安装nodejs和npm这种最基础的开始，配置环境，用hexo框架搭建一个本地静态博客，然后部署到github空间，这样就可以用github仓库名访问我的网站。但是有一个非常大的问题，github从国内访问会有DNS污染，连接速度那叫一个绝望。我自己是可以科学上网，但是总不能让别人浏览我网页的时候也科学上网吧？我也不太相信有很多人会用改host的办法来访问github，于是我就萌生了将买的云服务器用来搭建网站的想法（我知道这是一种资源浪费），github就可以当做网站的备份，以后即使我的云服务器过期了，我也可以依旧正常访问搭建在github里的静态博客。所以我的部署过程有点绕，就是本地生成静态博客，先部署到github仓库，再同步部署到我的云服务器。这样我就可以用备案后的二级域名解析到云服务器，在通过安装httpd服务来开启外部的访问了。 可以访问我的网站还是第一步，还要做好安全防护，申请SSL安全证书才能开启https连接。免费申请方式也很多，我申请了一年的apache上的SSL安全证书，然后安装到自己服务器上。还想吐槽一下，腾讯云有一键部署SSL安全证书通道，要90块钱，只要有点linux文本操作基础，自己按照教程部署一下半小时左右就能完成，这钱真好赚。SSL证书安装做好以后，就可以上别的云服务商找找免费的CDN加速了，有CDN加速一是可以加快网站的加载速度，二是隐藏自己服务器的ip地址，能起到一定的网站安全防护作用。吹一波又拍云，只要在网站底下加上他们的标志，启用他们的CDN加速，就能申请加入又拍云联盟，有免费一年的CDN加速和云储存服务，还可以查看访问记录等等 学生党薅羊毛的利器23333 。因为我的网页图片比较多，所以就应用了网页图片加速。 后记具体过程比如怎么接入第三方各种网站，用什么主题，怎么美化页面等等，就不详细说了，说多了肝疼，以后有想法再更新如何从零开始搭建自己的博客吧！至少没有服务器和域名也是完全可以实现的。建立这个小破站也主要是为了上传自己的学习笔记，整理生信网站和工具合集（相应的栏目还在建设中 新建文件夹了 ），督促自己学习hhhhh 本人技术实力有限，也不想搞地太花里胡哨，之后可能会有一些简单的小功能接入，还有移动端浏览小破站的优化（现在移动端浏览这个小破站简直是灾难，我都看不下去了），太费心思的东西就暂时放放了，主要专注于内容的创作，这几天会把一些学习笔记陆续上传。本人也是第一次用markdown语法写东西，排版一直搞不定段首的两个空格，先这样吧。 开摆","categories":[{"name":"个人主页","slug":"个人主页","permalink":"http://www.shelven.com/categories/%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5/"}],"tags":[{"name":"建站","slug":"建站","permalink":"http://www.shelven.com/tags/%E5%BB%BA%E7%AB%99/"}]}],"categories":[{"name":"个人主页","slug":"个人主页","permalink":"http://www.shelven.com/categories/%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5/"},{"name":"编程自学","slug":"编程自学","permalink":"http://www.shelven.com/categories/%E7%BC%96%E7%A8%8B%E8%87%AA%E5%AD%A6/"},{"name":"学习笔记","slug":"学习笔记","permalink":"http://www.shelven.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"基因组三代测序分析","slug":"基因组三代测序分析","permalink":"http://www.shelven.com/categories/%E5%9F%BA%E5%9B%A0%E7%BB%84%E4%B8%89%E4%BB%A3%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/"},{"name":"表观遗传学","slug":"表观遗传学","permalink":"http://www.shelven.com/categories/%E8%A1%A8%E8%A7%82%E9%81%97%E4%BC%A0%E5%AD%A6/"},{"name":"QQ机器人","slug":"QQ机器人","permalink":"http://www.shelven.com/categories/QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/"},{"name":"群体基因组学","slug":"群体基因组学","permalink":"http://www.shelven.com/categories/%E7%BE%A4%E4%BD%93%E5%9F%BA%E5%9B%A0%E7%BB%84%E5%AD%A6/"},{"name":"三维基因组学","slug":"三维基因组学","permalink":"http://www.shelven.com/categories/%E4%B8%89%E7%BB%B4%E5%9F%BA%E5%9B%A0%E7%BB%84%E5%AD%A6/"},{"name":"单细胞转录组","slug":"单细胞转录组","permalink":"http://www.shelven.com/categories/%E5%8D%95%E7%BB%86%E8%83%9E%E8%BD%AC%E5%BD%95%E7%BB%84/"},{"name":"比较基因组学","slug":"比较基因组学","permalink":"http://www.shelven.com/categories/%E6%AF%94%E8%BE%83%E5%9F%BA%E5%9B%A0%E7%BB%84%E5%AD%A6/"},{"name":"网络相关","slug":"网络相关","permalink":"http://www.shelven.com/categories/%E7%BD%91%E7%BB%9C%E7%9B%B8%E5%85%B3/"},{"name":"深度学习","slug":"深度学习","permalink":"http://www.shelven.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"},{"name":"转录组数据分析","slug":"转录组数据分析","permalink":"http://www.shelven.com/categories/%E8%BD%AC%E5%BD%95%E7%BB%84%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"}],"tags":[{"name":"CSS","slug":"CSS","permalink":"http://www.shelven.com/tags/CSS/"},{"name":"HTML","slug":"HTML","permalink":"http://www.shelven.com/tags/HTML/"},{"name":"R语言","slug":"R语言","permalink":"http://www.shelven.com/tags/R%E8%AF%AD%E8%A8%80/"},{"name":"BUSCO","slug":"BUSCO","permalink":"http://www.shelven.com/tags/BUSCO/"},{"name":"韦恩图","slug":"韦恩图","permalink":"http://www.shelven.com/tags/%E9%9F%A6%E6%81%A9%E5%9B%BE/"},{"name":"UpSet图","slug":"UpSet图","permalink":"http://www.shelven.com/tags/UpSet%E5%9B%BE/"},{"name":"eggNOG mapper","slug":"eggNOG-mapper","permalink":"http://www.shelven.com/tags/eggNOG-mapper/"},{"name":"tkinter","slug":"tkinter","permalink":"http://www.shelven.com/tags/tkinter/"},{"name":"pyinstaller","slug":"pyinstaller","permalink":"http://www.shelven.com/tags/pyinstaller/"},{"name":"密码子统计工具","slug":"密码子统计工具","permalink":"http://www.shelven.com/tags/%E5%AF%86%E7%A0%81%E5%AD%90%E7%BB%9F%E8%AE%A1%E5%B7%A5%E5%85%B7/"},{"name":"ATAC-seq","slug":"ATAC-seq","permalink":"http://www.shelven.com/tags/ATAC-seq/"},{"name":"CUT&Tag","slug":"CUT-Tag","permalink":"http://www.shelven.com/tags/CUT-Tag/"},{"name":"qq bot","slug":"qq-bot","permalink":"http://www.shelven.com/tags/qq-bot/"},{"name":"go-cqhttp","slug":"go-cqhttp","permalink":"http://www.shelven.com/tags/go-cqhttp/"},{"name":"Hi-C染色体挂载","slug":"Hi-C染色体挂载","permalink":"http://www.shelven.com/tags/Hi-C%E6%9F%93%E8%89%B2%E4%BD%93%E6%8C%82%E8%BD%BD/"},{"name":"3D-DNA","slug":"3D-DNA","permalink":"http://www.shelven.com/tags/3D-DNA/"},{"name":"JBAT","slug":"JBAT","permalink":"http://www.shelven.com/tags/JBAT/"},{"name":"juicer2","slug":"juicer2","permalink":"http://www.shelven.com/tags/juicer2/"},{"name":"python","slug":"python","permalink":"http://www.shelven.com/tags/python/"},{"name":"群体基因组学","slug":"群体基因组学","permalink":"http://www.shelven.com/tags/%E7%BE%A4%E4%BD%93%E5%9F%BA%E5%9B%A0%E7%BB%84%E5%AD%A6/"},{"name":"Tassel5","slug":"Tassel5","permalink":"http://www.shelven.com/tags/Tassel5/"},{"name":"Plink","slug":"Plink","permalink":"http://www.shelven.com/tags/Plink/"},{"name":"HiC-Pro","slug":"HiC-Pro","permalink":"http://www.shelven.com/tags/HiC-Pro/"},{"name":"HiCPlotter","slug":"HiCPlotter","permalink":"http://www.shelven.com/tags/HiCPlotter/"},{"name":"HiTC","slug":"HiTC","permalink":"http://www.shelven.com/tags/HiTC/"},{"name":"Seurat","slug":"Seurat","permalink":"http://www.shelven.com/tags/Seurat/"},{"name":"MCScanX","slug":"MCScanX","permalink":"http://www.shelven.com/tags/MCScanX/"},{"name":"共线性分析","slug":"共线性分析","permalink":"http://www.shelven.com/tags/%E5%85%B1%E7%BA%BF%E6%80%A7%E5%88%86%E6%9E%90/"},{"name":"TEsorter","slug":"TEsorter","permalink":"http://www.shelven.com/tags/TEsorter/"},{"name":"Barker3","slug":"Barker3","permalink":"http://www.shelven.com/tags/Barker3/"},{"name":"容器","slug":"容器","permalink":"http://www.shelven.com/tags/%E5%AE%B9%E5%99%A8/"},{"name":"singularity","slug":"singularity","permalink":"http://www.shelven.com/tags/singularity/"},{"name":"tRNAscan-SE","slug":"tRNAscan-SE","permalink":"http://www.shelven.com/tags/tRNAscan-SE/"},{"name":"Rfam/Infernal","slug":"Rfam-Infernal","permalink":"http://www.shelven.com/tags/Rfam-Infernal/"},{"name":"建站","slug":"建站","permalink":"http://www.shelven.com/tags/%E5%BB%BA%E7%AB%99/"},{"name":"RepeatModeler","slug":"RepeatModeler","permalink":"http://www.shelven.com/tags/RepeatModeler/"},{"name":"RepeatMasker","slug":"RepeatMasker","permalink":"http://www.shelven.com/tags/RepeatMasker/"},{"name":"GMATA","slug":"GMATA","permalink":"http://www.shelven.com/tags/GMATA/"},{"name":"TRF","slug":"TRF","permalink":"http://www.shelven.com/tags/TRF/"},{"name":"ChatGPT","slug":"ChatGPT","permalink":"http://www.shelven.com/tags/ChatGPT/"},{"name":"GATK","slug":"GATK","permalink":"http://www.shelven.com/tags/GATK/"},{"name":"QUAST","slug":"QUAST","permalink":"http://www.shelven.com/tags/QUAST/"},{"name":"LAI","slug":"LAI","permalink":"http://www.shelven.com/tags/LAI/"},{"name":"NextPolish","slug":"NextPolish","permalink":"http://www.shelven.com/tags/NextPolish/"},{"name":"Racon","slug":"Racon","permalink":"http://www.shelven.com/tags/Racon/"},{"name":"NextDenovo","slug":"NextDenovo","permalink":"http://www.shelven.com/tags/NextDenovo/"},{"name":"Canu","slug":"Canu","permalink":"http://www.shelven.com/tags/Canu/"},{"name":"github","slug":"github","permalink":"http://www.shelven.com/tags/github/"},{"name":"内网穿透","slug":"内网穿透","permalink":"http://www.shelven.com/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"},{"name":"代理服务器","slug":"代理服务器","permalink":"http://www.shelven.com/tags/%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"爬虫","slug":"爬虫","permalink":"http://www.shelven.com/tags/%E7%88%AC%E8%99%AB/"},{"name":"requests","slug":"requests","permalink":"http://www.shelven.com/tags/requests/"},{"name":"Xpath","slug":"Xpath","permalink":"http://www.shelven.com/tags/Xpath/"},{"name":"selenium","slug":"selenium","permalink":"http://www.shelven.com/tags/selenium/"},{"name":"HTTP","slug":"HTTP","permalink":"http://www.shelven.com/tags/HTTP/"},{"name":"人工智能","slug":"人工智能","permalink":"http://www.shelven.com/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"},{"name":"google colab","slug":"google-colab","permalink":"http://www.shelven.com/tags/google-colab/"},{"name":"Tacotron2","slug":"Tacotron2","permalink":"http://www.shelven.com/tags/Tacotron2/"},{"name":"HiFiGAN","slug":"HiFiGAN","permalink":"http://www.shelven.com/tags/HiFiGAN/"},{"name":"拆包","slug":"拆包","permalink":"http://www.shelven.com/tags/%E6%8B%86%E5%8C%85/"},{"name":"声纹识别","slug":"声纹识别","permalink":"http://www.shelven.com/tags/%E5%A3%B0%E7%BA%B9%E8%AF%86%E5%88%AB/"},{"name":"语音转文本","slug":"语音转文本","permalink":"http://www.shelven.com/tags/%E8%AF%AD%E9%9F%B3%E8%BD%AC%E6%96%87%E6%9C%AC/"},{"name":"反向代理","slug":"反向代理","permalink":"http://www.shelven.com/tags/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/"},{"name":"blast","slug":"blast","permalink":"http://www.shelven.com/tags/blast/"},{"name":"kmergenie","slug":"kmergenie","permalink":"http://www.shelven.com/tags/kmergenie/"},{"name":"SOAPdenovo2","slug":"SOAPdenovo2","permalink":"http://www.shelven.com/tags/SOAPdenovo2/"},{"name":"jellyfish","slug":"jellyfish","permalink":"http://www.shelven.com/tags/jellyfish/"},{"name":"GenomeScope2.0","slug":"GenomeScope2-0","permalink":"http://www.shelven.com/tags/GenomeScope2-0/"},{"name":"blast+","slug":"blast","permalink":"http://www.shelven.com/tags/blast/"},{"name":"nanoplot","slug":"nanoplot","permalink":"http://www.shelven.com/tags/nanoplot/"},{"name":"filtlong","slug":"filtlong","permalink":"http://www.shelven.com/tags/filtlong/"},{"name":"BLAST+","slug":"BLAST","permalink":"http://www.shelven.com/tags/BLAST/"},{"name":"aspera","slug":"aspera","permalink":"http://www.shelven.com/tags/aspera/"},{"name":"perl","slug":"perl","permalink":"http://www.shelven.com/tags/perl/"},{"name":"bioperl","slug":"bioperl","permalink":"http://www.shelven.com/tags/bioperl/"},{"name":"集群","slug":"集群","permalink":"http://www.shelven.com/tags/%E9%9B%86%E7%BE%A4/"},{"name":"slurm","slug":"slurm","permalink":"http://www.shelven.com/tags/slurm/"},{"name":"AnnotationHub","slug":"AnnotationHub","permalink":"http://www.shelven.com/tags/AnnotationHub/"},{"name":"GO/KEGG","slug":"GO-KEGG","permalink":"http://www.shelven.com/tags/GO-KEGG/"},{"name":"org.At.tair.db","slug":"org-At-tair-db","permalink":"http://www.shelven.com/tags/org-At-tair-db/"},{"name":"ffmpeg","slug":"ffmpeg","permalink":"http://www.shelven.com/tags/ffmpeg/"},{"name":"numpy","slug":"numpy","permalink":"http://www.shelven.com/tags/numpy/"},{"name":"pillow","slug":"pillow","permalink":"http://www.shelven.com/tags/pillow/"},{"name":"pheatmap","slug":"pheatmap","permalink":"http://www.shelven.com/tags/pheatmap/"},{"name":"SRA","slug":"SRA","permalink":"http://www.shelven.com/tags/SRA/"},{"name":"SRA Toolkit","slug":"SRA-Toolkit","permalink":"http://www.shelven.com/tags/SRA-Toolkit/"},{"name":"GEO","slug":"GEO","permalink":"http://www.shelven.com/tags/GEO/"},{"name":"vscode","slug":"vscode","permalink":"http://www.shelven.com/tags/vscode/"},{"name":"ggplot2","slug":"ggplot2","permalink":"http://www.shelven.com/tags/ggplot2/"},{"name":"ggrepel","slug":"ggrepel","permalink":"http://www.shelven.com/tags/ggrepel/"},{"name":"linux指令","slug":"linux指令","permalink":"http://www.shelven.com/tags/linux%E6%8C%87%E4%BB%A4/"},{"name":"shell脚本","slug":"shell脚本","permalink":"http://www.shelven.com/tags/shell%E8%84%9A%E6%9C%AC/"},{"name":"DESeq2","slug":"DESeq2","permalink":"http://www.shelven.com/tags/DESeq2/"},{"name":"dplyr","slug":"dplyr","permalink":"http://www.shelven.com/tags/dplyr/"},{"name":"HTseq","slug":"HTseq","permalink":"http://www.shelven.com/tags/HTseq/"},{"name":"stringtie","slug":"stringtie","permalink":"http://www.shelven.com/tags/stringtie/"},{"name":"prepDE.py3","slug":"prepDE-py3","permalink":"http://www.shelven.com/tags/prepDE-py3/"},{"name":"IGV","slug":"IGV","permalink":"http://www.shelven.com/tags/IGV/"},{"name":"samtools","slug":"samtools","permalink":"http://www.shelven.com/tags/samtools/"},{"name":"hisat2","slug":"hisat2","permalink":"http://www.shelven.com/tags/hisat2/"},{"name":"fastqc","slug":"fastqc","permalink":"http://www.shelven.com/tags/fastqc/"},{"name":"multiqc","slug":"multiqc","permalink":"http://www.shelven.com/tags/multiqc/"},{"name":"trim-galore","slug":"trim-galore","permalink":"http://www.shelven.com/tags/trim-galore/"}]}